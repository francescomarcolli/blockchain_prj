{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "from_buy",
          "type": "bool"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "payCoin",
      "outputs": [
        {
          "internalType": "contract IT_PayCoin",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setOpenTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IT_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "10": "contracts/BrokerRole.sol",
    "11": "contracts/BurnerRole.sol",
    "12": "contracts/PayCoin.sol",
    "13": "contracts/token_erc20.sol",
    "14": "contracts/token_exchange.sol",
    "15": "interfaces/IT_ERC20.sol",
    "16": "interfaces/IT_PayCoin.sol",
    "2": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/roles/MinterRole.sol",
    "3": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/math/SafeMath.sol",
    "4": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Burnable.sol",
    "6": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
    "7": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Mintable.sol",
    "8": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/IERC20.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_exchange.sol",
    "exportedSymbols": {
      "token_exchange": [
        946
      ]
    },
    "id": 947,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 548,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "contracts/PayCoin.sol",
        "file": "./PayCoin.sol",
        "id": 549,
        "nodeType": "ImportDirective",
        "scope": 947,
        "sourceUnit": 423,
        "src": "26:23:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IT_ERC20.sol",
        "file": "../interfaces/IT_ERC20.sol",
        "id": 550,
        "nodeType": "ImportDirective",
        "scope": 947,
        "sourceUnit": 1219,
        "src": "50:36:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token_erc20.sol",
        "file": "./token_erc20.sol",
        "id": 551,
        "nodeType": "ImportDirective",
        "scope": 947,
        "sourceUnit": 547,
        "src": "87:27:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BrokerRole.sol",
        "file": "./BrokerRole.sol",
        "id": 552,
        "nodeType": "ImportDirective",
        "scope": 947,
        "sourceUnit": 214,
        "src": "115:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AdminRole.sol",
        "file": "./AdminRole.sol",
        "id": 553,
        "nodeType": "ImportDirective",
        "scope": 947,
        "sourceUnit": 107,
        "src": "142:25:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 554,
              "name": "BrokerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 213,
              "src": "196:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BrokerRole_$213",
                "typeString": "contract BrokerRole"
              }
            },
            "id": 555,
            "nodeType": "InheritanceSpecifier",
            "src": "196:10:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 556,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "208:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$106",
                "typeString": "contract AdminRole"
              }
            },
            "id": 557,
            "nodeType": "InheritanceSpecifier",
            "src": "208:9:14"
          }
        ],
        "contractDependencies": [
          106,
          213,
          422,
          546,
          973
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 946,
        "linearizedBaseContracts": [
          946,
          106,
          213,
          973
        ],
        "name": "token_exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 560,
            "libraryName": {
              "contractScope": null,
              "id": 558,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1907,
              "src": "230:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1907",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:27:14",
            "typeName": {
              "id": 559,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 562,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "257:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_ERC20_$1218",
              "typeString": "contract IT_ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 561,
              "name": "IT_ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1218,
              "src": "257:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                "typeString": "contract IT_ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 564,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "284:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$1182",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 563,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1182,
              "src": "284:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$1182",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 566,
            "name": "tk_price",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "315:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 565,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "315:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 568,
            "name": "_openingtime",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "345:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 567,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 570,
            "name": "_closingtime",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "379:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 569,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "379:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 573,
            "name": "priceHistory",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "414:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 571,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "414:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 572,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "414:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 576,
            "name": "_frama",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "522:59:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 574,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307839364537436638394646303936353938353432373735333146413331354146633237313032453337",
              "id": 575,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "539:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x96E7Cf89FF09659854277531FA315AFc27102E37"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 579,
            "name": "_libra",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "588:59:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 577,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307832466266423165373636453646363234343636394534373934666630323261363533463334654666",
              "id": 578,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "605:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x2FbfB1e766E6F6244669E4794ff022a653F34eFf"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 582,
            "name": "_pirot",
            "nodeType": "VariableDeclaration",
            "scope": 946,
            "src": "654:59:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 580,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837343334393161623135313132383734393161663844653443613235623266626337303765423838",
              "id": 581,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "671:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x743491ab1511287491af8De4Ca25b2fbc707eB88"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 590,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "731:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 586,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "754:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 588,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "778:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "730:70:14"
            },
            "src": "721:80:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 598,
            "name": "Sell",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "817:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "840:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 596,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "864:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "816:70:14"
            },
            "src": "806:81:14"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "916:65:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 601,
                          "name": "isOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 896,
                          "src": "934:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "934:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b657420697320636c6f736564",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "944:18:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        },
                        "value": "Market is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2032,
                        2033
                      ],
                      "referencedDeclaration": 2033,
                      "src": "926:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "926:37:14"
                },
                {
                  "id": 606,
                  "nodeType": "PlaceholderStatement",
                  "src": "973:1:14"
                }
              ]
            },
            "documentation": null,
            "id": 608,
            "name": "onlyWhileOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:0:14"
            },
            "src": "893:88:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 700,
              "nodeType": "Block",
              "src": "1008:648:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "1019:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                        "typeString": "contract IT_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1027:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_token_erc20_$546_$",
                          "typeString": "function () returns (contract token_erc20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 612,
                          "name": "token_erc20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 546,
                          "src": "1031:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_erc20_$546",
                            "typeString": "contract token_erc20"
                          }
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1027:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_erc20_$546",
                        "typeString": "contract token_erc20"
                      }
                    },
                    "src": "1019:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                      "typeString": "contract IT_ERC20"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:25:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 617,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1054:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1182",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1064:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PayCoin_$422_$",
                          "typeString": "function () returns (contract PayCoin)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 618,
                          "name": "PayCoin",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 422,
                          "src": "1068:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PayCoin_$422",
                            "typeString": "contract PayCoin"
                          }
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1064:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$422",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "src": "1054:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1182",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 623,
                      "name": "tk_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 566,
                      "src": "1088:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1099:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1088:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "1088:15:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1166:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 627,
                        "name": "priceHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1148:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1148:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1148:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:27:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "1186:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "1201:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1186:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:18:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 637,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "1215:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "1230:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1236:7:14",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        },
                        "value": "1"
                      },
                      "src": "1230:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1215:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:28:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1290:38:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 644,
                                "name": "_frama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "1300:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 643,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "1292:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1292:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 647,
                                "name": "_frama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "1320:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 646,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1311:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1311:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1292:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 650,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1291:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 661,
                  "nodeType": "IfStatement",
                  "src": "1286:115:14",
                  "trueBody": {
                    "id": 660,
                    "nodeType": "Block",
                    "src": "1329:72:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 653,
                              "name": "_frama",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "1352:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 652,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1343:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1343:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1343:16:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 657,
                              "name": "_frama",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "1383:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 656,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1373:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 659,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:17:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1414:38:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 663,
                                "name": "_libra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "1424:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 662,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "1416:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1416:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 666,
                                "name": "_libra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 579,
                                "src": "1444:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 665,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1435:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1435:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1416:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 669,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1415:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 680,
                  "nodeType": "IfStatement",
                  "src": "1410:115:14",
                  "trueBody": {
                    "id": 679,
                    "nodeType": "Block",
                    "src": "1453:72:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 672,
                              "name": "_libra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "1476:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 671,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1467:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 674,
                        "nodeType": "ExpressionStatement",
                        "src": "1467:16:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "_libra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "1507:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 675,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1497:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1497:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 678,
                        "nodeType": "ExpressionStatement",
                        "src": "1497:17:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1538:38:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 682,
                                "name": "_pirot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "1548:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 681,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "1540:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1540:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 685,
                                "name": "_pirot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "1568:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 684,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "1559:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1559:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1540:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 688,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1539:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 699,
                  "nodeType": "IfStatement",
                  "src": "1534:115:14",
                  "trueBody": {
                    "id": 698,
                    "nodeType": "Block",
                    "src": "1577:72:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "_pirot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "1600:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 690,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1591:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 693,
                        "nodeType": "ExpressionStatement",
                        "src": "1591:16:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 695,
                              "name": "_pirot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "1631:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 694,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1621:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1621:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 697,
                        "nodeType": "ExpressionStatement",
                        "src": "1621:17:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 701,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:2:14"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:14"
            },
            "scope": 946,
            "src": "987:669:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "1733:365:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 711,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "2008:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2008:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2038:2:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 717,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 562,
                                      "src": "2050:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1205,
                                    "src": "2050:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2050:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2042:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2042:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2038:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 713,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "2022:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1824,
                          "src": "2022:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2022:46:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 710,
                      "name": "_buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "2003:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:66:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:66:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2087:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 709,
                  "id": 726,
                  "nodeType": "Return",
                  "src": "2080:11:14"
                }
              ]
            },
            "documentation": null,
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 706,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 705,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 608,
                  "src": "1705:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1705:13:14"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "1675:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1674:21:14"
            },
            "returnParameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "1728:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1727:6:14"
            },
            "scope": 946,
            "src": "1662:436:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "2176:366:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 738,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "2452:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2452:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2482:2:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 744,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 562,
                                      "src": "2494:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1205,
                                    "src": "2494:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2494:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2486:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2486:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2482:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 740,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "2466:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1824,
                          "src": "2466:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2466:46:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 737,
                      "name": "_sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "2446:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:67:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:67:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2531:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 736,
                  "id": 753,
                  "nodeType": "Return",
                  "src": "2524:11:14"
                }
              ]
            },
            "documentation": null,
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 733,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 732,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 608,
                  "src": "2148:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2148:13:14"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "2118:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2117:21:14"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "2171:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2170:6:14"
            },
            "scope": 946,
            "src": "2104:438:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "2606:272:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2736:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 767,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2075,
                            "src": "2755:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$946",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$946",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2747:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2747:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "2769:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2777:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 769,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "2762:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2762:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 762,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "2715:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1182",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1352,
                      "src": "2715:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2715:68:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:68:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2805:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 779,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "2816:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "2794:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "2794:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:29:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 783,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2843:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 784,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "2854:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "2862:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 782,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 590,
                      "src": "2839:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2839:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "EmitStatement",
                  "src": "2834:37:14"
                }
              ]
            },
            "documentation": null,
            "id": 789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "2562:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 759,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "2581:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2561:35:14"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2606:0:14"
            },
            "scope": 946,
            "src": "2548:330:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "2940:304:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "3116:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "3124:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "3101:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1217,
                      "src": "3101:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:30:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 806,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "3155:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 808,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "3169:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3177:5:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 807,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "3162:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3162:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "3142:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1182",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1719,
                      "src": "3142:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3142:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "3142:42:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 815,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2075,
                            "src": "3213:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$946",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$946",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3205:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3205:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "3220:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "3228:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 813,
                      "name": "Sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "3200:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "EmitStatement",
                  "src": "3195:42:14"
                }
              ]
            },
            "documentation": null,
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "2899:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "2915:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2915:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2898:32:14"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2940:0:14"
            },
            "scope": 946,
            "src": "2884:360:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "3321:400:14",
              "statements": [
                {
                  "assignments": [
                    832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 832,
                      "name": "exp",
                      "nodeType": "VariableDeclaration",
                      "scope": 881,
                      "src": "3450:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 831,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3450:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 838,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 834,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "3472:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IT_ERC20_$1218",
                              "typeString": "contract IT_ERC20"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1205,
                          "src": "3472:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3472:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3464:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3450:39:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 839,
                    "name": "from_buy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 826,
                    "src": "3504:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 879,
                    "nodeType": "Block",
                    "src": "3620:94:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3697:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3690:1:14",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 870,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 824,
                                      "src": "3679:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 871,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1824,
                                    "src": "3679:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3679:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1840,
                                "src": "3679:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3679:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 867,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 865,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3666:2:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 866,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 832,
                                    "src": "3670:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3666:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 862,
                                      "name": "tk_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 566,
                                      "src": "3652:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 860,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 824,
                                      "src": "3641:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1824,
                                    "src": "3641:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3641:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1840,
                                "src": "3641:24:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3641:33:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1763,
                            "src": "3641:37:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3641:62:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 830,
                        "id": 878,
                        "nodeType": "Return",
                        "src": "3634:69:14"
                      }
                    ]
                  },
                  "id": 880,
                  "nodeType": "IfStatement",
                  "src": "3500:214:14",
                  "trueBody": {
                    "id": 859,
                    "nodeType": "Block",
                    "src": "3513:94:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3590:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 852,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3583:1:14",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 850,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 824,
                                      "src": "3572:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1824,
                                    "src": "3572:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3572:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1840,
                                "src": "3572:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3572:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 847,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3559:2:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 846,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 832,
                                    "src": "3563:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3559:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 842,
                                      "name": "tk_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 566,
                                      "src": "3545:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 840,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 824,
                                      "src": "3534:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1824,
                                    "src": "3534:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3534:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1840,
                                "src": "3534:24:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3534:33:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1747,
                            "src": "3534:37:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3534:62:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 830,
                        "id": 858,
                        "nodeType": "Return",
                        "src": "3527:69:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3266:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "from_buy",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3282:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3265:31:14"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "3313:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3313:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3312:9:14"
            },
            "scope": 946,
            "src": "3250:471:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "3772:66:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 887,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "3789:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 888,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "3796:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3789:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 890,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "3812:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 891,
                        "name": "_closingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "3819:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3812:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3789:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 886,
                  "id": 894,
                  "nodeType": "Return",
                  "src": "3782:49:14"
                }
              ]
            },
            "documentation": null,
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOpen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3742:2:14"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "3766:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3765:6:14"
            },
            "scope": 946,
            "src": "3727:111:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "3886:224:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "3904:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 903,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "3919:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3904:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e",
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3933:66:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        },
                        "value": "Something's wrong, maybe you set the initial _openingtime wrong."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        }
                      ],
                      "id": 901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2032,
                        2033
                      ],
                      "referencedDeclaration": 2033,
                      "src": "3896:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "3896:104:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 908,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "4010:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4042:8:14",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          },
                          "value": "15"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 909,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 570,
                          "src": "4025:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4025:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4025:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4010:41:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:41:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 915,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "4062:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4094:7:14",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 916,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "4077:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "4077:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4077:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4062:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "4062:40:14"
                }
              ]
            },
            "documentation": null,
            "id": 923,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 899,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 898,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39,
                  "src": "3876:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3876:9:14"
              }
            ],
            "name": "setOpenTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:2:14"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3886:0:14"
            },
            "scope": 946,
            "src": "3844:266:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "4440:94:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4482:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 930,
                              "name": "priceHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 573,
                              "src": "4458:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4458:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1763,
                          "src": "4458:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4458:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 935,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "4486:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 941,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4523:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 936,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 573,
                                "src": "4499:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4499:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1763,
                            "src": "4499:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4499:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4486:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 942,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4457:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 929,
                  "id": 943,
                  "nodeType": "Return",
                  "src": "4450:77:14"
                }
              ]
            },
            "documentation": null,
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4397:2:14"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 926,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "4423:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4423:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 928,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "4432:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4432:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4422:18:14"
            },
            "scope": 946,
            "src": "4379:155:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 947,
        "src": "169:4371:14"
      }
    ],
    "src": "0:4541:14"
  },
  "bytecode": "6080604052600880546001600160a01b03199081167396e7cf89ff09659854277531fa315afc27102e3717909155600980548216732fbfb1e766e6f6244669e4794ff022a653f34eff179055600a805490911673743491ab1511287491af8de4ca25b2fbc707eb881790553480156200007757600080fd5b506200009e6200008f6001600160e01b036200034216565b6001600160e01b036200034616565b620000c4620000b56001600160e01b036200034216565b6001600160e01b036200039816565b604051620000d29062000611565b604051809103906000f080158015620000ef573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03929092169190911790556040516200011e906200061f565b604051809103906000f0801580156200013b573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b03928316179055670de0b6b3a76400006004819055600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155426005819055610e1001600655600854620001b59116620003ea565b8015620001dd5750600854620001dd906001600160a01b03166001600160e01b036200040d16565b620002225760085462000202906001600160a01b03166001600160e01b036200042a16565b60085462000222906001600160a01b03166001600160e01b03620004a416565b60095462000242906001600160a01b03166001600160e01b03620003ea16565b80156200026a57506009546200026a906001600160a01b03166001600160e01b036200040d16565b620002af576009546200028f906001600160a01b03166001600160e01b036200042a16565b600954620002af906001600160a01b03166001600160e01b03620004a416565b600a54620002cf906001600160a01b03166001600160e01b03620003ea16565b8015620002f75750600a54620002f7906001600160a01b03166001600160e01b036200040d16565b6200033c57600a546200031c906001600160a01b03166001600160e01b036200042a16565b600a546200033c906001600160a01b03166001600160e01b03620004a416565b6200062d565b3390565b620003618160006200051b60201b62000dd21790919060201c565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b620003b38160016200051b60201b62000dd21790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b600062000407826001620005a860201b620007a81790919060201c565b92915050565b600062000407826000620005a860201b620007a81790919060201c565b62000450620004416001600160e01b036200034216565b6001600160e01b03620003ea16565b6200048d5760405162461bcd60e51b815260040180806020018281038252602e81526020018062004af1602e913960400191505060405180910390fd5b620004a1816001600160e01b036200039816565b50565b620004ca620004bb6001600160e01b036200034216565b6001600160e01b036200040d16565b620005075760405162461bcd60e51b815260040180806020018281038252603081526020018062004a9f6030913960400191505060405180910390fd5b620004a1816001600160e01b036200034616565b6200053082826001600160e01b03620005a816565b1562000583576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620005f15760405162461bcd60e51b815260040180806020018281038252602281526020018062004acf6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611a8f806200162c83390190565b6119e480620030bb83390190565b610fef806200063d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063836cae651161008c578063d96a094a11610066578063d96a094a14610215578063e4849b3214610232578063fc0c546a1461024f578063ffb4e07514610273576100ea565b8063836cae65146101b05780638bad0c0a146101d65780639c9795b2146101de576100ea565b8063431e5c9d116100c8578063431e5c9d1461017057806347535d7b1461017a5780634f15e62e14610182578063704802751461018a576100ea565b8063053f14da146100ef57806322b31d9f1461011057806324d7806c1461014a575b600080fd5b6100f761027b565b6040805192835260208301919091528051918290030190f35b6101366004803603602081101561012657600080fd5b50356001600160a01b03166102c6565b604080519115158252519081900360200190f35b6101366004803603602081101561016057600080fd5b50356001600160a01b03166102de565b6101786102f1565b005b610136610303565b61017861031e565b610178600480360360208110156101a057600080fd5b50356001600160a01b03166103dc565b610178600480360360208110156101c657600080fd5b50356001600160a01b031661042e565b610178610482565b610203600480360360408110156101f457600080fd5b50803590602001351515610492565b60408051918252519081900360200190f35b6101366004803603602081101561022b57600080fd5b50356105b2565b6101366004803603602081101561024857600080fd5b503561069d565b610257610741565b604080516001600160a01b039092168252519081900360200190f35b610257610750565b600754600090819061029490600163ffffffff61075f16565b600780546102a990600163ffffffff61075f16565b815481106102b357fe5b9060005260206000200154915091509091565b60006102d8818363ffffffff6107a816565b92915050565b60006102d860018363ffffffff6107a816565b6103016102fc61080f565b610813565b565b6000600554421015801561031957506006544211155b905090565b61032e61032961080f565b6102de565b6103695760405162461bcd60e51b815260040180806020018281038252602e815260200180610f8d602e913960400191505060405180910390fd5b600654600554106103ab5760405162461bcd60e51b8152600401808060200182810382526040815260200180610f0a6040913960400191505060405180910390fd5b6006546103c09061d2f063ffffffff61085b16565b60058190556103d790617e9063ffffffff61085b16565b600655565b6103e761032961080f565b6104225760405162461bcd60e51b815260040180806020018281038252602e815260200180610f8d602e913960400191505060405180910390fd5b61042b816108b5565b50565b61043e61043961080f565b6102c6565b6104795760405162461bcd60e51b8152600401808060200182810382526030815260200180610eb96030913960400191505060405180910390fd5b61042b816108fd565b61030161048d61080f565b610945565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e357600080fd5b505afa1580156104f7573d6000803e3d6000fd5b505050506040513d602081101561050d57600080fd5b505160ff1690508215610570576105686105406103e861053487600263ffffffff61098d16565b9063ffffffff6109e616565b61055c83600a0a6105346004548961098d90919063ffffffff16565b9063ffffffff61085b16565b9150506102d8565b61056861058a6103e861053487600263ffffffff61098d16565b6105a683600a0a6105346004548961098d90919063ffffffff16565b9063ffffffff61075f16565b60006105bc610303565b610600576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b61069561060b61080f565b6002546040805163313ce56760e01b81529051610690926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d602081101561067b57600080fd5b5051859060ff16600a0a63ffffffff61098d16565b610a28565b506001919050565b60006106a7610303565b6106eb576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6106956106f661080f565b6002546040805163313ce56760e01b8152905161073c926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561065157600080fd5b610b99565b6002546001600160a01b031681565b6003546001600160a01b031681565b60006107a183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610cd4565b9392505050565b60006001600160a01b0382166107ef5760405162461bcd60e51b8152600401808060200182810382526022815260200180610f6b6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b61082460008263ffffffff610d6b16565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b6000828201838110156107a1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6108c660018263ffffffff610dd216565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61090e60008263ffffffff610dd216565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b61095660018263ffffffff610d6b16565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b60008261099c575060006102d8565b828202828482816109a957fe5b04146107a15760405162461bcd60e51b8152600401808060200182810382526021815260200180610f4a6021913960400191505060405180910390fd5b60006107a183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e53565b6003546001600160a01b03166323b872dd8330610a46856001610492565b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b158015610aae57600080fd5b505af1158015610ac2573d6000803e3d6000fd5b505050506040513d6020811015610ad857600080fd5b5050600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b158015610b3057600080fd5b505af1158015610b44573d6000803e3d6000fd5b505050506040513d6020811015610b5a57600080fd5b505060045460405182906001600160a01b038516907f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed90600090a45050565b6002546040805163079cc67960e41b81526001600160a01b03858116600483015260248201859052915191909216916379cc679091604480830192600092919082900301818387803b158015610bee57600080fd5b505af1158015610c02573d6000803e3d6000fd5b50506003546001600160a01b031691506340c10f19905083610c25846000610492565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c7457600080fd5b505af1158015610c88573d6000803e3d6000fd5b505050506040513d6020811015610c9e57600080fd5b5050600454604051829030907fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a90600090a45050565b60008184841115610d635760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d28578181015183820152602001610d10565b50505050905090810190601f168015610d555780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b610d7582826107a8565b610db05760405162461bcd60e51b8152600401808060200182810382526021815260200180610ee96021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610ddc82826107a8565b15610e2e576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60008183610ea25760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d28578181015183820152602001610d10565b506000838581610eae57fe5b049594505050505056fe42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a72315820b4c97d6d706e2770a9db4e592358f3a882084c8ab912fb9522dc630a5b4bcd5c64736f6c634300051100326080604052600880546001600160a01b03199081167396e7cf89ff09659854277531fa315afc27102e3717909155600980548216732fbfb1e766e6f6244669e4794ff022a653f34eff179055600a805490911673743491ab1511287491af8de4ca25b2fbc707eb881790553480156200007757600080fd5b50604051806040016040528060078152602001662329a9a1b7b4b760c91b8152506040518060400160405280600381526020016246535360e81b8152506012620000d9620000ca620002e660201b60201c565b6001600160e01b03620002eb16565b8251620000ee906004906020860190620005b6565b50815162000104906005906020850190620005b6565b506006805460ff191660ff92909216919091179055506200013990506200012a620002e6565b6001600160e01b036200033d16565b60085462000159906001600160a01b03166001600160e01b036200038f16565b801562000181575060085462000181906001600160a01b03166001600160e01b03620003b216565b620001c657600854620001a6906001600160a01b03166001600160e01b03620003cf16565b600854620001c6906001600160a01b03166001600160e01b036200044916565b600954620001e6906001600160a01b03166001600160e01b036200038f16565b80156200020e57506009546200020e906001600160a01b03166001600160e01b03620003b216565b620002535760095462000233906001600160a01b03166001600160e01b03620003cf16565b60095462000253906001600160a01b03166001600160e01b036200044916565b600a5462000273906001600160a01b03166001600160e01b036200038f16565b80156200029b5750600a546200029b906001600160a01b03166001600160e01b03620003b216565b620002e057600a54620002c0906001600160a01b03166001600160e01b03620003cf16565b600a54620002e0906001600160a01b03166001600160e01b036200044916565b62000658565b335b90565b62000306816003620004c060201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b62000358816007620004c060201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6000620003ac8260036200054d60201b62000d5a1790919060201c565b92915050565b6000620003ac8260076200054d60201b62000d5a1790919060201c565b620003f5620003e66001600160e01b03620002e616565b6001600160e01b036200038f16565b620004325760405162461bcd60e51b815260040180806020018281038252603081526020018062001a3d6030913960400191505060405180910390fd5b62000446816001600160e01b03620002eb16565b50565b6200046f620004606001600160e01b03620002e616565b6001600160e01b03620003b216565b620004ac5760405162461bcd60e51b815260040180806020018281038252603081526020018062001a0d6030913960400191505060405180910390fd5b62000446816001600160e01b036200033d16565b620004d582826001600160e01b036200054d16565b1562000528576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620005965760405162461bcd60e51b815260040180806020018281038252602281526020018062001a6d6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005f957805160ff191683800117855562000629565b8280016001018555821562000629579182015b82811115620006295782518255916020019190600101906200060c565b50620006379291506200063b565b5090565b620002e891905b8082111562000637576000815560010162000642565b6113a580620006686000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208ba7d46c491cdd608d1a94d557fffcc6b0ab6419e9eb37c338417e0b175c324f64736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573736080604052600880546001600160a01b031990811673743491ab1511287491af8de4ca25b2fbc707eb881790915560098054909116735831de8826c01cc7fb165b30d59356d9ba27886f1790553480156200005957600080fd5b50604051806040016040528060078152602001662830bca1b7b4b760c91b8152506040518060400160405280600381526020016250614360e81b8152506012620000bb620000ac6200023b60201b60201c565b6001600160e01b036200024016565b8251620000d09060049060208601906200050b565b508151620000e69060059060208501906200050b565b506006805460ff191660ff92909216919091179055506200011b90506200010c6200023b565b6001600160e01b036200029216565b6008546200013b906001600160a01b03166001600160e01b03620002e416565b801562000163575060085462000163906001600160a01b03166001600160e01b036200030716565b620001a85760085462000188906001600160a01b03166001600160e01b036200032416565b600854620001a8906001600160a01b03166001600160e01b036200039e16565b600954620001c8906001600160a01b03166001600160e01b03620002e416565b8015620001f05750600954620001f0906001600160a01b03166001600160e01b036200030716565b620002355760095462000215906001600160a01b03166001600160e01b036200032416565b60095462000235906001600160a01b03166001600160e01b036200039e16565b620005ad565b335b90565b6200025b8160036200041560201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620002ad8160076200041560201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b600062000301826003620004a260201b62000d5a1790919060201c565b92915050565b600062000301826007620004a260201b62000d5a1790919060201c565b6200034a6200033b6001600160e01b036200023b16565b6001600160e01b03620002e416565b620003875760405162461bcd60e51b8152600401808060200182810382526030815260200180620019926030913960400191505060405180910390fd5b6200039b816001600160e01b036200024016565b50565b620003c4620003b56001600160e01b036200023b16565b6001600160e01b036200030716565b620004015760405162461bcd60e51b8152600401808060200182810382526030815260200180620019626030913960400191505060405180910390fd5b6200039b816001600160e01b036200029216565b6200042a82826001600160e01b03620004a216565b156200047d576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620004eb5760405162461bcd60e51b8152600401808060200182810382526022815260200180620019c26022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200054e57805160ff19168380011785556200057e565b828001600101855582156200057e579182015b828111156200057e57825182559160200191906001019062000561565b506200058c92915062000590565b5090565b6200023d91905b808211156200058c576000815560010162000597565b6113a580620005bd6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158201078b81f9364c8f77def3b1da6fd5fa1d9f338c9980748656694a6a84732a68c64736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737342726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_exchange",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "49": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "47": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "48": [
            589,
            607,
            true
          ]
        }
      },
      "10": {
        "BrokerRole.addBroker": {
          "46": [
            497,
            519,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "token_exchange.sell": {
          "45": [
            934,
            942,
            true
          ]
        },
        "token_exchange.setOpenTime": {
          "44": [
            3904,
            3931,
            true
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "50": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "54": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "51": [
            2458,
            2464,
            false
          ],
          "52": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "53": [
            1845,
            1851,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "19": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "41": [
            328,
            391
          ],
          "42": [
            401,
            428
          ]
        },
        "Roles.has": {
          "17": [
            867,
            935
          ],
          "18": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "39": [
            581,
            645
          ],
          "40": [
            655,
            683
          ]
        }
      },
      "10": {
        "BrokerRole._addBroker": {
          "25": [
            944,
            965
          ],
          "26": [
            975,
            1000
          ]
        },
        "BrokerRole._removeBroker": {
          "20": [
            1072,
            1096
          ],
          "21": [
            1106,
            1133
          ]
        },
        "BrokerRole.addBroker": {
          "9": [
            773,
            792
          ]
        },
        "BrokerRole.isBroker": {
          "1": [
            668,
            696
          ]
        },
        "BrokerRole.renounceBroker": {
          "3": [
            848,
            875
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "token_exchange._buy": {
          "32": [
            2715,
            2783
          ],
          "33": [
            2794,
            2823
          ],
          "34": [
            2834,
            2871
          ]
        },
        "token_exchange._sell": {
          "35": [
            3101,
            3131
          ],
          "36": [
            3142,
            3184
          ],
          "37": [
            3195,
            3237
          ]
        },
        "token_exchange.buy": {
          "13": [
            2003,
            2069
          ],
          "14": [
            2080,
            2091
          ]
        },
        "token_exchange.getFee": {
          "11": [
            3527,
            3596
          ],
          "12": [
            3634,
            3703
          ]
        },
        "token_exchange.isOpen": {
          "4": [
            3782,
            3831
          ]
        },
        "token_exchange.lastPrice": {
          "0": [
            4450,
            4527
          ]
        },
        "token_exchange.sell": {
          "15": [
            2446,
            2513
          ]
        },
        "token_exchange.setOpenTime": {
          "5": [
            3896,
            4000
          ],
          "6": [
            4010,
            4051
          ],
          "7": [
            4062,
            4102
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "22": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "31": [
            3150,
            3196
          ],
          "43": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "29": [
            2480,
            2488
          ],
          "30": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "16": [
            1351,
            1401
          ],
          "38": [
            1837,
            1866
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "AdminRole._addAdmin": {
          "23": [
            927,
            947
          ],
          "24": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "27": [
            1052,
            1075
          ],
          "28": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "8": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "2": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "10": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "BrokerRole",
    "BurnerRole",
    "Context",
    "ERC20",
    "ERC20Burnable",
    "ERC20Detailed",
    "ERC20Mintable",
    "IERC20",
    "IT_ERC20",
    "IT_PayCoin",
    "MinterRole",
    "PayCoin",
    "Roles",
    "SafeMath",
    "token_erc20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "169:4371:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:4371:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4379:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;596:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;596:107:10;-1:-1:-1;;;;;596:107:10;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;805:77:10:-;;;:::i;:::-;;3727:111:14;;;:::i;3844:266::-;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;709:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;709:90:10;-1:-1:-1;;;;;709:90:10;;:::i;791:75:9:-;;;:::i;3250:471:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3250:471:14;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1662:436;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1662:436:14;;:::i;2104:438::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2104:438:14;;:::i;257:21::-;;;:::i;:::-;;;;-1:-1:-1;;;;;257:21:14;;;;;;;;;;;;;;284:25;;;:::i;4379:155::-;4458:12;:19;4423:7;;;;4458:26;;4482:1;4458:26;:23;:26;:::i;:::-;4486:12;4499:19;;:26;;4523:1;4499:26;:23;:26;:::i;:::-;4486:40;;;;;;;;;;;;;;;;4450:77;;;;4379:155;;:::o;596:107:10:-;652:4;675:21;652:4;688:7;675:21;:12;:21;:::i;:::-;668:28;596:107;-1:-1:-1;;596:107:10:o;587:105:9:-;642:4;665:20;:7;677;665:20;:11;:20;:::i;805:77:10:-;848:27;862:12;:10;:12::i;:::-;848:13;:27::i;:::-;805:77::o;3727:111:14:-;3766:4;3796:12;;3789:3;:19;;:42;;;;;3819:12;;3812:3;:19;;3789:42;3782:49;;3727:111;:::o;3844:266::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:12:14;;3904;;:27;3896:104;;;;-1:-1:-1;;;3896:104:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:12;;:26;;4042:8;4025:26;:16;:26;:::i;:::-;4010:12;:41;;;4077:25;;4094:7;4077:25;:16;:25;:::i;:::-;4062:12;:40;3844:266::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;:10;:12::i;:::-;497:8;:22::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;773:10;:19::i;791:75:9:-;833:26;846:12;:10;:12::i;:::-;833;:26::i;3250:471:14:-;3313:7;3450:11;3472:5;;;;;;;;;-1:-1:-1;;;;;3472:5:14;-1:-1:-1;;;;;3472:14:14;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3472:16:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3472:16:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3472:16:14;3464:25;;;-1:-1:-1;3500:214:14;;;;3534:62;3572:23;3590:4;3572:13;:6;3583:1;3572:13;:10;:13;:::i;:::-;:17;:23;:17;:23;:::i;:::-;3534:33;3563:3;3559:2;:7;3534:20;3545:8;;3534:6;:10;;:20;;;;:::i;:33::-;:37;:62;:37;:62;:::i;:::-;3527:69;;;;;3500:214;3641:62;3679:23;3697:4;3679:13;:6;3690:1;3679:13;:10;:13;:::i;:23::-;3641:33;3670:3;3666:2;:7;3641:20;3652:8;;3641:6;:10;;:20;;;;:::i;:33::-;:37;:62;:37;:62;:::i;1662:436::-;1728:4;934:8;:6;:8::i;:::-;926:37;;;;;-1:-1:-1;;;926:37:14;;;;;;;;;;;;-1:-1:-1;;;926:37:14;;;;;;;;;;;;;;;2003:66;2008:12;:10;:12::i;:::-;2050:5;;:16;;;-1:-1:-1;;;2050:16:14;;;;2022:46;;-1:-1:-1;;;;;2050:5:14;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;2050:16:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2050:16:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2050:16:14;2022:11;;2042:25;;2038:2;:29;2022:46;:15;:46;:::i;:::-;2003:4;:66::i;:::-;-1:-1:-1;2087:4:14;1662:436;;;:::o;2104:438::-;2171:4;934:8;:6;:8::i;:::-;926:37;;;;;-1:-1:-1;;;926:37:14;;;;;;;;;;;;-1:-1:-1;;;926:37:14;;;;;;;;;;;;;;;2446:67;2452:12;:10;:12::i;:::-;2494:5;;:16;;;-1:-1:-1;;;2494:16:14;;;;2466:46;;-1:-1:-1;;;;;2494:5:14;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;2466:46:14;2446:5;:67::i;257:21::-;;;-1:-1:-1;;;;;257:21:14;;:::o;284:25::-;;;-1:-1:-1;;;;;284:25:14;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:3:o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;1013:127:10:-;1072:24;:8;1088:7;1072:24;:15;:24;:::i;:::-;1111:22;;-1:-1:-1;;;;;1111:22:10;;;;;;;;1013:127;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;872:116:9;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;888:119:10:-;944:21;:8;957:7;944:21;:12;:21;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;994:124:9:-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;2159:459:3:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;2548:330:14:-;2715:7;;-1:-1:-1;;;;;2715:7:14;:20;2736:9;2755:4;2762:20;2769:6;2715:7;2762:6;:20::i;:::-;2715:68;;;;;;;;;;;;;-1:-1:-1;;;;;2715:68:14;-1:-1:-1;;;;;2715:68:14;;;;;;-1:-1:-1;;;;;2715:68:14;-1:-1:-1;;;;;2715:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2715:68:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2715:68:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2794:5:14;;:29;;;-1:-1:-1;;;2794:29:14;;-1:-1:-1;;;;;2794:29:14;;;;;;;;;;;;;;;:5;;;;;:10;;:29;;;;;2715:68;;2794:29;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;2794:29:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2794:29:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2862:8:14;;2839:32;;2854:6;;-1:-1:-1;;;;;2839:32:14;;;;;;;;2548:330;;:::o;2884:360::-;3101:5;;:30;;;-1:-1:-1;;;3101:30:14;;-1:-1:-1;;;;;3101:30:14;;;;;;;;;;;;;;;:5;;;;;:14;;:30;;;;;:5;;:30;;;;;;;:5;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3101:30:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3142:7:14;;-1:-1:-1;;;;;3142:7:14;;-1:-1:-1;3142:12:14;;-1:-1:-1;3155:6:14;3162:21;3169:6;3142:7;3162:6;:21::i;:::-;3142:42;;;;;;;;;;;;;-1:-1:-1;;;;;3142:42:14;-1:-1:-1;;;;;3142:42:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3142:42:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3142:42:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3228:8:14;;3200:37;;3220:6;;3213:4;;3200:37;;;;;2884:360;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;510:180:1:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;3718:338:3:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:3;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:3:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    169,
    4540
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x836CAE65 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD96A094A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xFFB4E075 EQ PUSH2 0x273 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x836CAE65 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x9C9795B2 EQ PUSH2 0x1DE JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x431E5C9D GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x431E5C9D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x4F15E62E EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x18A JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x22B31D9F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42E JUMP JUMPDEST PUSH2 0x178 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x69D JUMP JUMPDEST PUSH2 0x257 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x294 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x75F AND JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x2A9 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x75F AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7A8 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D8 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7A8 AND JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2FC PUSH2 0x80F JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x319 JUMPI POP PUSH1 0x6 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x32E PUSH2 0x329 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x369 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD LT PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF0A PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x3C0 SWAP1 PUSH2 0xD2F0 PUSH4 0xFFFFFFFF PUSH2 0x85B AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH2 0x3D7 SWAP1 PUSH2 0x7E90 PUSH4 0xFFFFFFFF PUSH2 0x85B AND JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3E7 PUSH2 0x329 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42B DUP2 PUSH2 0x8B5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x43E PUSH2 0x439 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEB9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42B DUP2 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x301 PUSH2 0x48D PUSH2 0x80F JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND SWAP1 POP DUP3 ISZERO PUSH2 0x570 JUMPI PUSH2 0x568 PUSH2 0x540 PUSH2 0x3E8 PUSH2 0x534 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x98D AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x9E6 AND JUMP JUMPDEST PUSH2 0x55C DUP4 PUSH1 0xA EXP PUSH2 0x534 PUSH1 0x4 SLOAD DUP10 PUSH2 0x98D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x85B AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x568 PUSH2 0x58A PUSH2 0x3E8 PUSH2 0x534 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x98D AND JUMP JUMPDEST PUSH2 0x5A6 DUP4 PUSH1 0xA EXP PUSH2 0x534 PUSH1 0x4 SLOAD DUP10 PUSH2 0x98D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x75F AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BC PUSH2 0x303 JUMP JUMPDEST PUSH2 0x600 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x695 PUSH2 0x60B PUSH2 0x80F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x690 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x98D AND JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A7 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x6EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x695 PUSH2 0x6F6 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x73C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A1 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xCD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF6B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x824 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD6B AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8C6 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xDD2 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x90E PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xDD2 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x956 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xD6B AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x99C JUMPI POP PUSH1 0x0 PUSH2 0x2D8 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x9A9 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF4A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7A1 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH2 0xA46 DUP6 PUSH1 0x1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x40C10F19 SWAP1 POP DUP4 PUSH2 0xC25 DUP5 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 ADDRESS SWAP1 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD28 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD10 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD55 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0xD75 DUP3 DUP3 PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEE9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDDC DUP3 DUP3 PUSH2 0x7A8 JUMP JUMPDEST ISZERO PUSH2 0xE2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xD28 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD10 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xEAE JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID TIMESTAMP PUSH19 0x6F6B6572526F6C653A2063616C6C657220646F PUSH6 0x73206E6F7420 PUSH9 0x617665207468652042 PUSH19 0x6F6B657220726F6C65526F6C65733A20616363 PUSH16 0x756E7420646F6573206E6F7420686176 PUSH6 0x20726F6C6553 PUSH16 0x6D657468696E6727732077726F6E672C KECCAK256 PUSH14 0x6179626520796F75207365742074 PUSH9 0x6520696E697469616C KECCAK256 0x5F PUSH16 0x70656E696E6774696D652077726F6E67 0x2E MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77526F6C65733A206163 PUSH4 0x6F756E74 KECCAK256 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737341646D696E526F6C653A2063616C6C65 PUSH19 0x20646F6573206E6F7420686176652074686520 COINBASE PUSH5 0x6D696E2072 PUSH16 0x6C65A265627A7A72315820B4C97D6D70 PUSH15 0x2770A9DB4E592358F3A882084C8AB9 SLT 0xFB SWAP6 0x22 0xDC PUSH4 0xA5B4BCD 0x5C PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        4540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        169,
        4540
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x836CAE65"
    },
    "38": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD96A094A"
    },
    "49": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "GT",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD96A094A"
    },
    "60": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x215"
    },
    "64": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE4849B32"
    },
    "71": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x232"
    },
    "75": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFC0C546A"
    },
    "82": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24F"
    },
    "86": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFB4E075"
    },
    "93": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x273"
    },
    "97": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "101": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "102": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "104": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x836CAE65"
    },
    "109": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B0"
    },
    "113": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8BAD0C0A"
    },
    "120": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D6"
    },
    "124": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9C9795B2"
    },
    "131": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DE"
    },
    "135": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "139": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "140": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "141": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "142": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x431E5C9D"
    },
    "147": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "GT",
      "path": "14"
    },
    "148": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "152": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "153": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x431E5C9D"
    },
    "158": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x170"
    },
    "162": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "163": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "164": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x47535D7B"
    },
    "169": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17A"
    },
    "173": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "175": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4F15E62E"
    },
    "180": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "181": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x182"
    },
    "184": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "185": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "186": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70480275"
    },
    "191": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "192": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18A"
    },
    "195": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "196": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "199": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "200": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "201": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "202": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x53F14DA"
    },
    "207": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "208": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "213": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x22B31D9F"
    },
    "218": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x110"
    },
    "222": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "224": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x24D7806C"
    },
    "229": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "EQ",
      "path": "14"
    },
    "230": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x14A"
    },
    "233": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "235": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        169,
        4540
      ],
      "op": "REVERT",
      "path": "14"
    },
    "239": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "240": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF7"
    },
    "243": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27B"
    },
    "246": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4379,
        4534
      ],
      "op": "JUMP",
      "path": "14"
    },
    "247": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "248": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "250": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "DUP1",
      "path": "14"
    },
    "251": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "252": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "253": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "DUP4",
      "path": "14"
    },
    "254": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "255": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "257": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "DUP4",
      "path": "14"
    },
    "258": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "ADD",
      "path": "14"
    },
    "259": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "260": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "261": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "262": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "263": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "DUP1",
      "path": "14"
    },
    "264": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "265": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "266": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "DUP3",
      "path": "14"
    },
    "267": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "268": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SUB",
      "path": "14"
    },
    "269": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "ADD",
      "path": "14"
    },
    "270": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "271": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "RETURN",
      "path": "14"
    },
    "272": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "273": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x136"
    },
    "276": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "278": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "279": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "280": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "283": {
      "op": "DUP2"
    },
    "284": {
      "op": "LT"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "PUSH2",
      "value": "0x126"
    },
    "289": {
      "op": "JUMPI"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "292": {
      "op": "DUP1"
    },
    "293": {
      "op": "REVERT"
    },
    "294": {
      "op": "JUMPDEST"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "AND",
      "path": "10"
    },
    "306": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C6"
    },
    "309": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "310": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "311": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "313": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "314": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "315": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "316": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "317": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "318": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP3",
      "path": "10"
    },
    "319": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "320": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "321": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "322": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP2",
      "path": "10"
    },
    "323": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "324": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "325": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "327": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ADD",
      "path": "10"
    },
    "328": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "329": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "RETURN",
      "path": "10"
    },
    "330": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "331": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x136"
    },
    "334": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "336": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "337": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "338": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "341": {
      "op": "DUP2"
    },
    "342": {
      "op": "LT"
    },
    "343": {
      "op": "ISZERO"
    },
    "344": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "347": {
      "op": "JUMPI"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "350": {
      "op": "DUP1"
    },
    "351": {
      "op": "REVERT"
    },
    "352": {
      "op": "JUMPDEST"
    },
    "353": {
      "op": "POP"
    },
    "354": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "364": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2DE"
    },
    "367": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "368": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "369": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x178"
    },
    "372": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F1"
    },
    "375": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "376": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "377": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "STOP",
      "path": "10"
    },
    "378": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3727,
        3838
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "379": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3727,
        3838
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x136"
    },
    "382": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3727,
        3838
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x303"
    },
    "385": {
      "fn": "token_exchange.isOpen",
      "jump": "i",
      "offset": [
        3727,
        3838
      ],
      "op": "JUMP",
      "path": "14"
    },
    "386": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3844,
        4110
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "387": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3844,
        4110
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x178"
    },
    "390": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3844,
        4110
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x31E"
    },
    "393": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3844,
        4110
      ],
      "op": "JUMP",
      "path": "14"
    },
    "394": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "395": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x178"
    },
    "398": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "400": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "401": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "402": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "LT"
    },
    "407": {
      "op": "ISZERO"
    },
    "408": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "411": {
      "op": "JUMPI"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "414": {
      "op": "DUP1"
    },
    "415": {
      "op": "REVERT"
    },
    "416": {
      "op": "JUMPDEST"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "425": {
      "op": "SHL"
    },
    "426": {
      "op": "SUB"
    },
    "427": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "428": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DC"
    },
    "431": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "432": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "433": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x178"
    },
    "436": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "438": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "DUP1",
      "path": "10"
    },
    "439": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "440": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "SUB",
      "path": "10"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "443": {
      "op": "DUP2"
    },
    "444": {
      "op": "LT"
    },
    "445": {
      "op": "ISZERO"
    },
    "446": {
      "op": "PUSH2",
      "value": "0x1C6"
    },
    "449": {
      "op": "JUMPI"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "452": {
      "op": "DUP1"
    },
    "453": {
      "op": "REVERT"
    },
    "454": {
      "op": "JUMPDEST"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "463": {
      "op": "SHL"
    },
    "464": {
      "op": "SUB"
    },
    "465": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "AND",
      "path": "10"
    },
    "466": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42E"
    },
    "469": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        709,
        799
      ],
      "op": "JUMP",
      "path": "10"
    },
    "470": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "471": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x178"
    },
    "474": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x482"
    },
    "477": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "478": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "479": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203"
    },
    "482": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "484": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "485": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "486": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SUB",
      "path": "14"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "489": {
      "op": "DUP2"
    },
    "490": {
      "op": "LT"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "PUSH2",
      "value": "0x1F4"
    },
    "495": {
      "op": "JUMPI"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "498": {
      "op": "DUP1"
    },
    "499": {
      "op": "REVERT"
    },
    "500": {
      "op": "JUMPDEST"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "503": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "504": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "505": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "507": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "ADD",
      "path": "14"
    },
    "508": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "509": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "510": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "511": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x492"
    },
    "514": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3250,
        3721
      ],
      "op": "JUMP",
      "path": "14"
    },
    "515": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "516": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "518": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "519": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "520": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "521": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "522": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "523": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "524": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "525": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "526": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "527": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SUB",
      "path": "14"
    },
    "528": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "530": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "ADD",
      "path": "14"
    },
    "531": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "532": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "RETURN",
      "path": "14"
    },
    "533": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "534": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x136"
    },
    "537": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "539": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "DUP1",
      "path": "14"
    },
    "540": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "541": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "SUB",
      "path": "14"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "544": {
      "op": "DUP2"
    },
    "545": {
      "op": "LT"
    },
    "546": {
      "op": "ISZERO"
    },
    "547": {
      "op": "PUSH2",
      "value": "0x22B"
    },
    "550": {
      "op": "JUMPI"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "553": {
      "op": "DUP1"
    },
    "554": {
      "op": "REVERT"
    },
    "555": {
      "op": "JUMPDEST"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "558": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5B2"
    },
    "561": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1662,
        2098
      ],
      "op": "JUMP",
      "path": "14"
    },
    "562": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "563": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x136"
    },
    "566": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "568": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "DUP1",
      "path": "14"
    },
    "569": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "570": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "SUB",
      "path": "14"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "573": {
      "op": "DUP2"
    },
    "574": {
      "op": "LT"
    },
    "575": {
      "op": "ISZERO"
    },
    "576": {
      "op": "PUSH2",
      "value": "0x248"
    },
    "579": {
      "op": "JUMPI"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "582": {
      "op": "DUP1"
    },
    "583": {
      "op": "REVERT"
    },
    "584": {
      "op": "JUMPDEST"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "587": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69D"
    },
    "590": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2104,
        2542
      ],
      "op": "JUMP",
      "path": "14"
    },
    "591": {
      "offset": [
        257,
        278
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "592": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x257"
    },
    "595": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x741"
    },
    "598": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        257,
        278
      ],
      "op": "JUMP",
      "path": "14"
    },
    "599": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "600": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "602": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "DUP1",
      "path": "14"
    },
    "603": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "610": {
      "op": "SHL"
    },
    "611": {
      "op": "SUB"
    },
    "612": {
      "offset": [
        257,
        278
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "613": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "614": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "AND",
      "path": "14"
    },
    "615": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "DUP3",
      "path": "14"
    },
    "616": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "617": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "618": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "619": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "DUP2",
      "path": "14"
    },
    "620": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "621": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "SUB",
      "path": "14"
    },
    "622": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "624": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "ADD",
      "path": "14"
    },
    "625": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "626": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "RETURN",
      "path": "14"
    },
    "627": {
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "628": {
      "fn": "token_exchange.sell",
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x257"
    },
    "631": {
      "fn": "token_exchange.sell",
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x750"
    },
    "634": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        284,
        309
      ],
      "op": "JUMP",
      "path": "14"
    },
    "635": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "636": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4470
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x7"
    },
    "638": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4477
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "639": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4423,
        4430
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "641": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4423,
        4430
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "642": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4423,
        4430
      ],
      "op": "DUP2",
      "path": "14"
    },
    "643": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4423,
        4430
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "644": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4484
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "647": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4484
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "648": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4482,
        4483
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "650": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4484
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "655": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4481
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75F"
    },
    "658": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4484
      ],
      "op": "AND",
      "path": "14"
    },
    "659": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4458,
        4484
      ],
      "op": "JUMP",
      "path": "14"
    },
    "660": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4458,
        4484
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "661": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4498
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "663": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4518
      ],
      "op": "DUP1",
      "path": "14"
    },
    "664": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4518
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "665": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4525
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A9"
    },
    "668": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4525
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "669": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4523,
        4524
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "671": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4525
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "676": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4522
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75F"
    },
    "679": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4525
      ],
      "op": "AND",
      "path": "14"
    },
    "680": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4499,
        4525
      ],
      "op": "JUMP",
      "path": "14"
    },
    "681": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4499,
        4525
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "682": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "DUP2",
      "path": "14"
    },
    "683": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "684": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "DUP2",
      "path": "14"
    },
    "685": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "LT",
      "path": "14"
    },
    "686": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2B3"
    },
    "689": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "690": {
      "dev": "Index out of range",
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "INVALID",
      "path": "14"
    },
    "691": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "692": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "693": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "695": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "696": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "698": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "700": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "701": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "ADD",
      "path": "14"
    },
    "702": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4486,
        4526
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "703": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4450,
        4527
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "704": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4450,
        4527
      ],
      "op": "POP",
      "path": "14"
    },
    "705": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4450,
        4527
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "706": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4450,
        4527
      ],
      "op": "POP",
      "path": "14"
    },
    "707": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "708": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4379,
        4534
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "709": {
      "fn": "token_exchange.lastPrice",
      "jump": "o",
      "offset": [
        4379,
        4534
      ],
      "op": "JUMP",
      "path": "14"
    },
    "710": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "711": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "713": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 1,
      "value": "0x2D8"
    },
    "716": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "717": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        688,
        695
      ],
      "op": "DUP4",
      "path": "10"
    },
    "718": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "723": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        687
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A8"
    },
    "726": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "AND",
      "path": "10"
    },
    "727": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        675,
        696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "728": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "729": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        668,
        696
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "730": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "731": {
      "op": "POP"
    },
    "732": {
      "op": "POP"
    },
    "733": {
      "fn": "BrokerRole.isBroker",
      "jump": "o",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "734": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "735": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "737": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 2,
      "value": "0x2D8"
    },
    "740": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "742": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "743": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "748": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7A8"
    },
    "751": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "752": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "753": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "754": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 3,
      "value": "0x301"
    },
    "757": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FC"
    },
    "760": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x80F"
    },
    "763": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        862,
        874
      ],
      "op": "JUMP",
      "path": "10"
    },
    "764": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "765": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x813"
    },
    "768": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        848,
        875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "769": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "770": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "o",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "771": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3727,
        3838
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "772": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3766,
        3770
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "774": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3796,
        3808
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 4,
      "value": "0x5"
    },
    "776": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3796,
        3808
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "777": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3792
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "778": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3808
      ],
      "op": "LT",
      "path": "14"
    },
    "779": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3808
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "780": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "781": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3831
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "782": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x319"
    },
    "785": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "786": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3831
      ],
      "op": "POP",
      "path": "14"
    },
    "787": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3819,
        3831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "789": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3819,
        3831
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "790": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3812,
        3815
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "791": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3812,
        3831
      ],
      "op": "GT",
      "path": "14"
    },
    "792": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3812,
        3831
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "793": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3789,
        3831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "794": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3782,
        3831
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "795": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3782,
        3831
      ],
      "op": "POP",
      "path": "14"
    },
    "796": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3727,
        3838
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "797": {
      "fn": "token_exchange.isOpen",
      "jump": "o",
      "offset": [
        3727,
        3838
      ],
      "op": "JUMP",
      "path": "14"
    },
    "798": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3844,
        4110
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "799": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x32E"
    },
    "802": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x329"
    },
    "805": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x80F"
    },
    "808": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "809": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "810": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2DE"
    },
    "813": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "814": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "815": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x369"
    },
    "818": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "819": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "821": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "830": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "831": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "833": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "834": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "835": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "836": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "838": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "839": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "840": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "841": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "842": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "843": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "844": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "846": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "847": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "848": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "850": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "851": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "852": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF8D"
    },
    "855": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "857": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "858": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "859": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "861": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "862": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "863": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "864": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "865": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "867": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "868": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "869": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "870": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "871": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "872": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "873": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "874": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3919,
        3931
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 5,
      "value": "0x6"
    },
    "876": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3919,
        3931
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "877": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3904,
        3916
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "879": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3904,
        3916
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "880": {
      "branch": 44,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3904,
        3931
      ],
      "op": "LT",
      "path": "14"
    },
    "881": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3AB"
    },
    "884": {
      "branch": 44,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "885": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "887": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "894": {
      "op": "SHL"
    },
    "895": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "896": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "897": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "899": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "ADD",
      "path": "14"
    },
    "900": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP1",
      "path": "14"
    },
    "901": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP1",
      "path": "14"
    },
    "902": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "904": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "ADD",
      "path": "14"
    },
    "905": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP3",
      "path": "14"
    },
    "906": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "907": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "SUB",
      "path": "14"
    },
    "908": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP3",
      "path": "14"
    },
    "909": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "910": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "912": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "913": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "914": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "916": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "ADD",
      "path": "14"
    },
    "917": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP1",
      "path": "14"
    },
    "918": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF0A"
    },
    "921": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "923": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "924": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "925": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "927": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "ADD",
      "path": "14"
    },
    "928": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "929": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "POP",
      "path": "14"
    },
    "930": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "POP",
      "path": "14"
    },
    "931": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "933": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "934": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "DUP1",
      "path": "14"
    },
    "935": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "936": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "SUB",
      "path": "14"
    },
    "937": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "938": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "REVERT",
      "path": "14"
    },
    "939": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3896,
        4000
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "940": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4037
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0x6"
    },
    "942": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4037
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "943": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4051
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3C0"
    },
    "946": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4051
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "947": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4042,
        4050
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD2F0"
    },
    "950": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4051
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "955": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4041
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x85B"
    },
    "958": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4051
      ],
      "op": "AND",
      "path": "14"
    },
    "959": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4025,
        4051
      ],
      "op": "JUMP",
      "path": "14"
    },
    "960": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4025,
        4051
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "961": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4010,
        4022
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "963": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4010,
        4051
      ],
      "op": "DUP2",
      "path": "14"
    },
    "964": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4010,
        4051
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "965": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4010,
        4051
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "966": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4077,
        4102
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 7,
      "value": "0x3D7"
    },
    "969": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4077,
        4102
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "970": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4094,
        4101
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7E90"
    },
    "973": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4077,
        4102
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "978": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4077,
        4093
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x85B"
    },
    "981": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4077,
        4102
      ],
      "op": "AND",
      "path": "14"
    },
    "982": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4077,
        4102
      ],
      "op": "JUMP",
      "path": "14"
    },
    "983": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4077,
        4102
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "984": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4062,
        4074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "986": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4062,
        4102
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "987": {
      "fn": "token_exchange.setOpenTime",
      "jump": "o",
      "offset": [
        3844,
        4110
      ],
      "op": "JUMP",
      "path": "14"
    },
    "988": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "989": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E7"
    },
    "992": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x329"
    },
    "995": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x80F"
    },
    "998": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "999": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1000": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x422"
    },
    "1003": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1004": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1006": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1013": {
      "op": "SHL"
    },
    "1014": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1015": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1016": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1018": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1019": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1020": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1021": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1023": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1024": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1025": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1026": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1027": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1028": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1029": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1031": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1032": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1033": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1035": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1036": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1037": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF8D"
    },
    "1040": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1042": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1043": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1044": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1046": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1047": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1048": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1049": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1050": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1052": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1053": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1054": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1055": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1056": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1057": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1058": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1059": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 8,
      "value": "0x42B"
    },
    "1062": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1063": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8B5"
    },
    "1066": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1067": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1068": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "1069": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1070": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1071": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43E"
    },
    "1074": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x439"
    },
    "1077": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x80F"
    },
    "1080": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1081": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        506,
        518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1082": {
      "offset": [
        497,
        505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C6"
    },
    "1085": {
      "jump": "i",
      "offset": [
        497,
        519
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1086": {
      "branch": 46,
      "fn": "BrokerRole.addBroker",
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1087": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x479"
    },
    "1090": {
      "branch": 46,
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1091": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1093": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1102": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1103": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1105": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1106": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1107": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1108": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1110": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1111": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1112": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1113": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1114": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1115": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1116": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1118": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1119": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1120": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1122": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1123": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1124": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEB9"
    },
    "1127": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1129": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1130": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1131": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1133": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1134": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1135": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1136": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1137": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1139": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1140": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1141": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1142": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1143": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1144": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1145": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1146": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        792
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 9,
      "value": "0x42B"
    },
    "1149": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        784,
        791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1150": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8FD"
    },
    "1153": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        773,
        792
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1154": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1155": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 10,
      "value": "0x301"
    },
    "1158": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x48D"
    },
    "1161": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x80F"
    },
    "1164": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1165": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1166": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x945"
    },
    "1169": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1170": {
      "fn": "token_exchange.getFee",
      "offset": [
        3250,
        3721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1171": {
      "fn": "token_exchange.getFee",
      "offset": [
        3313,
        3320
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1173": {
      "fn": "token_exchange.getFee",
      "offset": [
        3450,
        3461
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1174": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1176": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1178": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1179": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1180": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1181": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1184": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "EXP",
      "path": "14"
    },
    "1185": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1186": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "DIV",
      "path": "14"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3477
      ],
      "op": "AND",
      "path": "14"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3486
      ],
      "op": "AND",
      "path": "14"
    },
    "1205": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3486
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "1210": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1212": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1213": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1214": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1219": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "AND",
      "path": "14"
    },
    "1220": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1222": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "SHL",
      "path": "14"
    },
    "1223": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1224": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1225": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1227": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "ADD",
      "path": "14"
    },
    "1228": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1230": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1232": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1233": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1234": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1235": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "SUB",
      "path": "14"
    },
    "1236": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1237": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1238": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1239": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1240": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1241": {
      "op": "DUP1"
    },
    "1242": {
      "op": "ISZERO"
    },
    "1243": {
      "op": "PUSH2",
      "value": "0x4E3"
    },
    "1246": {
      "op": "JUMPI"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1249": {
      "op": "DUP1"
    },
    "1250": {
      "op": "REVERT"
    },
    "1251": {
      "op": "JUMPDEST"
    },
    "1252": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "POP",
      "path": "14"
    },
    "1253": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "GAS",
      "path": "14"
    },
    "1254": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1255": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1256": {
      "op": "DUP1"
    },
    "1257": {
      "op": "ISZERO"
    },
    "1258": {
      "op": "PUSH2",
      "value": "0x4F7"
    },
    "1261": {
      "op": "JUMPI"
    },
    "1262": {
      "op": "RETURNDATASIZE"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "DUP1"
    },
    "1266": {
      "op": "RETURNDATACOPY"
    },
    "1267": {
      "op": "RETURNDATASIZE"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1270": {
      "op": "REVERT"
    },
    "1271": {
      "op": "JUMPDEST"
    },
    "1272": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "POP",
      "path": "14"
    },
    "1273": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "POP",
      "path": "14"
    },
    "1274": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "POP",
      "path": "14"
    },
    "1275": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "POP",
      "path": "14"
    },
    "1276": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1278": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1279": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "LT"
    },
    "1284": {
      "op": "ISZERO"
    },
    "1285": {
      "op": "PUSH2",
      "value": "0x50D"
    },
    "1288": {
      "op": "JUMPI"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1291": {
      "op": "DUP1"
    },
    "1292": {
      "op": "REVERT"
    },
    "1293": {
      "op": "JUMPDEST"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3488
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1296": {
      "fn": "token_exchange.getFee",
      "offset": [
        3464,
        3489
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1298": {
      "fn": "token_exchange.getFee",
      "offset": [
        3464,
        3489
      ],
      "op": "AND",
      "path": "14"
    },
    "1299": {
      "fn": "token_exchange.getFee",
      "offset": [
        3464,
        3489
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1300": {
      "op": "POP"
    },
    "1301": {
      "fn": "token_exchange.getFee",
      "offset": [
        3500,
        3714
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1302": {
      "fn": "token_exchange.getFee",
      "offset": [
        3500,
        3714
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1303": {
      "fn": "token_exchange.getFee",
      "offset": [
        3500,
        3714
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x570"
    },
    "1306": {
      "fn": "token_exchange.getFee",
      "offset": [
        3500,
        3714
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1307": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3596
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 11,
      "value": "0x568"
    },
    "1310": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3595
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x540"
    },
    "1313": {
      "fn": "token_exchange.getFee",
      "offset": [
        3590,
        3594
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E8"
    },
    "1316": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3585
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x534"
    },
    "1319": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3578
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1320": {
      "fn": "token_exchange.getFee",
      "offset": [
        3583,
        3584
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1322": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3585
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1327": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3582
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98D"
    },
    "1330": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3585
      ],
      "op": "AND",
      "path": "14"
    },
    "1331": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3572,
        3585
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1332": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3585
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1333": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3589
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1334": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3595
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1339": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9E6"
    },
    "1342": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3595
      ],
      "op": "AND",
      "path": "14"
    },
    "1343": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3572,
        3595
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1344": {
      "fn": "token_exchange.getFee",
      "offset": [
        3572,
        3595
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1345": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x55C"
    },
    "1348": {
      "fn": "token_exchange.getFee",
      "offset": [
        3563,
        3566
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1349": {
      "fn": "token_exchange.getFee",
      "offset": [
        3559,
        3561
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "1351": {
      "fn": "token_exchange.getFee",
      "offset": [
        3559,
        3566
      ],
      "op": "EXP",
      "path": "14"
    },
    "1352": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x534"
    },
    "1355": {
      "fn": "token_exchange.getFee",
      "offset": [
        3545,
        3553
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1357": {
      "fn": "token_exchange.getFee",
      "offset": [
        3545,
        3553
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1358": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3540
      ],
      "op": "DUP10",
      "path": "14"
    },
    "1359": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3544
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98D"
    },
    "1362": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3544
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1363": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1364": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1365": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3554
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1370": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3554
      ],
      "op": "AND",
      "path": "14"
    },
    "1371": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3534,
        3554
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1372": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3567
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1373": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3571
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1374": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3596
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1379": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3571
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x85B"
    },
    "1382": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3596
      ],
      "op": "AND",
      "path": "14"
    },
    "1383": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3534,
        3596
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1384": {
      "fn": "token_exchange.getFee",
      "offset": [
        3534,
        3596
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1385": {
      "fn": "token_exchange.getFee",
      "offset": [
        3527,
        3596
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1386": {
      "fn": "token_exchange.getFee",
      "offset": [
        3527,
        3596
      ],
      "op": "POP",
      "path": "14"
    },
    "1387": {
      "fn": "token_exchange.getFee",
      "offset": [
        3527,
        3596
      ],
      "op": "POP",
      "path": "14"
    },
    "1388": {
      "fn": "token_exchange.getFee",
      "offset": [
        3527,
        3596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2D8"
    },
    "1391": {
      "fn": "token_exchange.getFee",
      "offset": [
        3527,
        3596
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1392": {
      "fn": "token_exchange.getFee",
      "offset": [
        3500,
        3714
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1393": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3703
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 12,
      "value": "0x568"
    },
    "1396": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3702
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58A"
    },
    "1399": {
      "fn": "token_exchange.getFee",
      "offset": [
        3697,
        3701
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E8"
    },
    "1402": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3692
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x534"
    },
    "1405": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3685
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1406": {
      "fn": "token_exchange.getFee",
      "offset": [
        3690,
        3691
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1408": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3692
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1413": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98D"
    },
    "1416": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3692
      ],
      "op": "AND",
      "path": "14"
    },
    "1417": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3679,
        3692
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1418": {
      "fn": "token_exchange.getFee",
      "offset": [
        3679,
        3702
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1419": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3674
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5A6"
    },
    "1422": {
      "fn": "token_exchange.getFee",
      "offset": [
        3670,
        3673
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1423": {
      "fn": "token_exchange.getFee",
      "offset": [
        3666,
        3668
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "1425": {
      "fn": "token_exchange.getFee",
      "offset": [
        3666,
        3673
      ],
      "op": "EXP",
      "path": "14"
    },
    "1426": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3661
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x534"
    },
    "1429": {
      "fn": "token_exchange.getFee",
      "offset": [
        3652,
        3660
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1431": {
      "fn": "token_exchange.getFee",
      "offset": [
        3652,
        3660
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1432": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3647
      ],
      "op": "DUP10",
      "path": "14"
    },
    "1433": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98D"
    },
    "1436": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1437": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3661
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1438": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3661
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1439": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3661
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1444": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3661
      ],
      "op": "AND",
      "path": "14"
    },
    "1445": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3641,
        3661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1446": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3674
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1447": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3678
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1448": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3703
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1453": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75F"
    },
    "1456": {
      "fn": "token_exchange.getFee",
      "offset": [
        3641,
        3703
      ],
      "op": "AND",
      "path": "14"
    },
    "1457": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3641,
        3703
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1458": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1459": {
      "fn": "token_exchange.buy",
      "offset": [
        1728,
        1732
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1461": {
      "offset": [
        934,
        942
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5BC"
    },
    "1464": {
      "offset": [
        934,
        940
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x303"
    },
    "1467": {
      "jump": "i",
      "offset": [
        934,
        942
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1468": {
      "fn": "token_exchange.buy",
      "offset": [
        934,
        942
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1469": {
      "offset": [
        926,
        963
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x600"
    },
    "1472": {
      "offset": [
        926,
        963
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1473": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1475": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1476": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "offset": [
        926,
        963
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1485": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1486": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1488": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1490": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1491": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1492": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1493": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1495": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1497": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1498": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1499": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1500": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1522": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1523": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1524": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1525": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1526": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1527": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1528": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1529": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1530": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "SUB",
      "path": "14"
    },
    "1531": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1533": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1534": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1535": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1536": {
      "fn": "token_exchange.buy",
      "offset": [
        926,
        963
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1537": {
      "fn": "token_exchange.buy",
      "offset": [
        2003,
        2069
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 13,
      "value": "0x695"
    },
    "1540": {
      "fn": "token_exchange.buy",
      "offset": [
        2008,
        2020
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60B"
    },
    "1543": {
      "fn": "token_exchange.buy",
      "offset": [
        2008,
        2018
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x80F"
    },
    "1546": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2008,
        2020
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1547": {
      "fn": "token_exchange.buy",
      "offset": [
        2008,
        2020
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1548": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2055
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1550": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2055
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1551": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1553": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1554": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1555": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1562": {
      "op": "SHL"
    },
    "1563": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1564": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1565": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1566": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1567": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x690"
    },
    "1570": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2068
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2055
      ],
      "op": "AND",
      "path": "14"
    },
    "1580": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2055
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1581": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2064
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "1586": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2064
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1587": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1589": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1590": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1591": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "ADD",
      "path": "14"
    },
    "1592": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1593": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1595": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1596": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1597": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1598": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1599": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1600": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "SUB",
      "path": "14"
    },
    "1601": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "ADD",
      "path": "14"
    },
    "1602": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1603": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2055
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1604": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1605": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1606": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1607": {
      "op": "DUP1"
    },
    "1608": {
      "op": "ISZERO"
    },
    "1609": {
      "op": "PUSH2",
      "value": "0x651"
    },
    "1612": {
      "op": "JUMPI"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1615": {
      "op": "DUP1"
    },
    "1616": {
      "op": "REVERT"
    },
    "1617": {
      "op": "JUMPDEST"
    },
    "1618": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "POP",
      "path": "14"
    },
    "1619": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "GAS",
      "path": "14"
    },
    "1620": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1621": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1622": {
      "op": "DUP1"
    },
    "1623": {
      "op": "ISZERO"
    },
    "1624": {
      "op": "PUSH2",
      "value": "0x665"
    },
    "1627": {
      "op": "JUMPI"
    },
    "1628": {
      "op": "RETURNDATASIZE"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1631": {
      "op": "DUP1"
    },
    "1632": {
      "op": "RETURNDATACOPY"
    },
    "1633": {
      "op": "RETURNDATASIZE"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1636": {
      "op": "REVERT"
    },
    "1637": {
      "op": "JUMPDEST"
    },
    "1638": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "POP",
      "path": "14"
    },
    "1639": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "POP",
      "path": "14"
    },
    "1640": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "POP",
      "path": "14"
    },
    "1641": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "POP",
      "path": "14"
    },
    "1642": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1644": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1645": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1648": {
      "op": "DUP2"
    },
    "1649": {
      "op": "LT"
    },
    "1650": {
      "op": "ISZERO"
    },
    "1651": {
      "op": "PUSH2",
      "value": "0x67B"
    },
    "1654": {
      "op": "JUMPI"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1657": {
      "op": "DUP1"
    },
    "1658": {
      "op": "REVERT"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "POP"
    },
    "1661": {
      "fn": "token_exchange.buy",
      "offset": [
        2050,
        2066
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1662": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2033
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1663": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2033
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1664": {
      "fn": "token_exchange.buy",
      "offset": [
        2042,
        2067
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1666": {
      "fn": "token_exchange.buy",
      "offset": [
        2042,
        2067
      ],
      "op": "AND",
      "path": "14"
    },
    "1667": {
      "fn": "token_exchange.buy",
      "offset": [
        2038,
        2040
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "1669": {
      "fn": "token_exchange.buy",
      "offset": [
        2038,
        2067
      ],
      "op": "EXP",
      "path": "14"
    },
    "1670": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2068
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1675": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2037
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98D"
    },
    "1678": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2068
      ],
      "op": "AND",
      "path": "14"
    },
    "1679": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2022,
        2068
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1680": {
      "fn": "token_exchange.buy",
      "offset": [
        2022,
        2068
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1681": {
      "fn": "token_exchange.buy",
      "offset": [
        2003,
        2007
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA28"
    },
    "1684": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2003,
        2069
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1685": {
      "fn": "token_exchange.buy",
      "offset": [
        2003,
        2069
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "fn": "token_exchange.buy",
      "offset": [
        2087,
        2091
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x1"
    },
    "1689": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1690": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1691": {
      "fn": "token_exchange.buy",
      "offset": [
        1662,
        2098
      ],
      "op": "POP",
      "path": "14"
    },
    "1692": {
      "fn": "token_exchange.buy",
      "jump": "o",
      "offset": [
        1662,
        2098
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1693": {
      "fn": "token_exchange.sell",
      "offset": [
        2104,
        2542
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1694": {
      "fn": "token_exchange.sell",
      "offset": [
        2171,
        2175
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1696": {
      "offset": [
        934,
        942
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6A7"
    },
    "1699": {
      "offset": [
        934,
        940
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x303"
    },
    "1702": {
      "jump": "i",
      "offset": [
        934,
        942
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1703": {
      "branch": 45,
      "fn": "token_exchange.sell",
      "offset": [
        934,
        942
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1704": {
      "offset": [
        926,
        963
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6EB"
    },
    "1707": {
      "branch": 45,
      "offset": [
        926,
        963
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1708": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1710": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1711": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "offset": [
        926,
        963
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1720": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1721": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1723": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1725": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1726": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1727": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1728": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1730": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1732": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1733": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1734": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1735": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1757": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1758": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1759": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1760": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1761": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1762": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1763": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1764": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1765": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "SUB",
      "path": "14"
    },
    "1766": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1768": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "ADD",
      "path": "14"
    },
    "1769": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1770": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1771": {
      "fn": "token_exchange.sell",
      "offset": [
        926,
        963
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1772": {
      "fn": "token_exchange.sell",
      "offset": [
        2446,
        2513
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 15,
      "value": "0x695"
    },
    "1775": {
      "fn": "token_exchange.sell",
      "offset": [
        2452,
        2464
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6F6"
    },
    "1778": {
      "fn": "token_exchange.sell",
      "offset": [
        2452,
        2462
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x80F"
    },
    "1781": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2452,
        2464
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1782": {
      "fn": "token_exchange.sell",
      "offset": [
        2452,
        2464
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1783": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2499
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1785": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2499
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1786": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1788": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1789": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1790": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1799": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1800": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1801": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1802": {
      "fn": "token_exchange.sell",
      "offset": [
        2466,
        2512
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x73C"
    },
    "1805": {
      "fn": "token_exchange.sell",
      "offset": [
        2466,
        2512
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1812": {
      "op": "SHL"
    },
    "1813": {
      "op": "SUB"
    },
    "1814": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2499
      ],
      "op": "AND",
      "path": "14"
    },
    "1815": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2499
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1816": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "1821": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2508
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1822": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1824": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1825": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1826": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "ADD",
      "path": "14"
    },
    "1827": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1828": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1830": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1831": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1832": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1833": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1834": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1835": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "SUB",
      "path": "14"
    },
    "1836": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "ADD",
      "path": "14"
    },
    "1837": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1838": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2499
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1839": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1840": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1841": {
      "fn": "token_exchange.sell",
      "offset": [
        2494,
        2510
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1842": {
      "op": "DUP1"
    },
    "1843": {
      "op": "ISZERO"
    },
    "1844": {
      "op": "PUSH2",
      "value": "0x651"
    },
    "1847": {
      "op": "JUMPI"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1850": {
      "op": "DUP1"
    },
    "1851": {
      "fn": "token_exchange.sell",
      "offset": [
        2466,
        2512
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1852": {
      "fn": "token_exchange.sell",
      "offset": [
        2466,
        2512
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1853": {
      "fn": "token_exchange.sell",
      "offset": [
        2446,
        2451
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB99"
    },
    "1856": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2446,
        2513
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1857": {
      "offset": [
        257,
        278
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1858": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1860": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "op": "SUB"
    },
    "1869": {
      "offset": [
        257,
        278
      ],
      "op": "AND",
      "path": "14"
    },
    "1870": {
      "fn": "token_exchange.sell",
      "offset": [
        257,
        278
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1871": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        257,
        278
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1872": {
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1873": {
      "fn": "token_exchange.sell",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1875": {
      "fn": "token_exchange.sell",
      "offset": [
        284,
        309
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "offset": [
        284,
        309
      ],
      "op": "AND",
      "path": "14"
    },
    "1885": {
      "fn": "token_exchange.sell",
      "offset": [
        284,
        309
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1886": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        284,
        309
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1887": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1888": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1890": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 16,
      "value": "0x7A1"
    },
    "1893": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1894": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1895": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1897": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1898": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1899": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1901": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "1902": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1904": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1905": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1906": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "1908": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1909": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1910": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1912": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "1913": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1946": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1947": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1948": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "3"
    },
    "1949": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD4"
    },
    "1952": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1953": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1954": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1955": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1956": {
      "op": "POP"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1960": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1961": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "SUB"
    },
    "1971": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 17
    },
    "1972": {
      "branch": 47,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "1973": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7EF"
    },
    "1976": {
      "branch": 47,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1977": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1979": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1988": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1989": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1991": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "1992": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1993": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1994": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1996": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "1997": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1998": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1999": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "2000": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2001": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2002": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "2004": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2005": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2006": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2008": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2009": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2010": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6B"
    },
    "2013": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "2015": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2016": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2017": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2019": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2020": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2021": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "2022": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "2023": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2025": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2026": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2027": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2028": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "2029": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2030": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2031": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 18
    },
    "2042": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2044": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2045": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2046": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2047": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2049": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2050": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2051": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2052": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2053": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2055": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2056": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2057": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2058": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2060": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "2061": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2062": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2063": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2064": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "2065": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2066": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2067": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2068": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 20,
      "value": "0x824"
    },
    "2071": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2073": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1088,
        1095
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2074": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2079": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1087
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD6B"
    },
    "2082": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "AND",
      "path": "10"
    },
    "2083": {
      "fn": "BrokerRole._removeBroker",
      "jump": "i",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2084": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2085": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 21,
      "value": "0x40"
    },
    "2087": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "op": "SUB"
    },
    "2096": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2097": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "AND",
      "path": "10"
    },
    "2098": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2099": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0"
    },
    "2132": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2133": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2135": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2136": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2137": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "POP",
      "path": "10"
    },
    "2138": {
      "fn": "BrokerRole._removeBroker",
      "jump": "o",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2139": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2140": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2142": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2143": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2144": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "3"
    },
    "2145": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 22
    },
    "2146": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2147": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "3"
    },
    "2148": {
      "branch": 50,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2149": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A1"
    },
    "2152": {
      "branch": 50,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2153": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2155": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2156": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2163": {
      "op": "SHL"
    },
    "2164": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2165": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2166": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2168": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2170": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2171": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2172": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2173": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "2175": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2177": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2178": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2179": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2180": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2213": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2215": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2216": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2217": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2218": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2219": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2220": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2221": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2222": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2223": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "3"
    },
    "2224": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2226": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2227": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2228": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2229": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2230": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 23,
      "value": "0x8C6"
    },
    "2233": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2235": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2236": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2241": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDD2"
    },
    "2244": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "2245": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2246": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2247": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 24,
      "value": "0x40"
    },
    "2249": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2259": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "2260": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2261": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "2294": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2295": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2297": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2298": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2299": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "2300": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2301": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2302": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 25,
      "value": "0x90E"
    },
    "2305": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2307": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        957,
        964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2308": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2313": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDD2"
    },
    "2316": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "AND",
      "path": "10"
    },
    "2317": {
      "fn": "BrokerRole._addBroker",
      "jump": "i",
      "offset": [
        944,
        965
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2318": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2319": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 26,
      "value": "0x40"
    },
    "2321": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "op": "SUB"
    },
    "2330": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2331": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "AND",
      "path": "10"
    },
    "2332": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2333": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB"
    },
    "2366": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2367": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2369": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2370": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2371": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "POP",
      "path": "10"
    },
    "2372": {
      "fn": "BrokerRole._addBroker",
      "jump": "o",
      "offset": [
        888,
        1007
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2373": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2374": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 27,
      "value": "0x956"
    },
    "2377": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2379": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2380": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2385": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD6B"
    },
    "2388": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "2389": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2390": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2391": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 28,
      "value": "0x40"
    },
    "2393": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2403": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "2404": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2405": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "2438": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2439": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2441": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2442": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2443": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "2444": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2445": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2446": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2448": {
      "branch": 51,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2449": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99C"
    },
    "2452": {
      "branch": 51,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2453": {
      "op": "POP"
    },
    "2454": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x0"
    },
    "2456": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8"
    },
    "2459": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2460": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2461": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2462": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2463": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "3"
    },
    "2464": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2465": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2466": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2467": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2468": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0x9A9"
    },
    "2471": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2472": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2473": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2474": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "3"
    },
    "2475": {
      "branch": 52,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "3"
    },
    "2476": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A1"
    },
    "2479": {
      "branch": 52,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2480": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2482": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2491": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2492": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2494": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2495": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2496": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2497": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2499": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2500": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2501": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2502": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "2503": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2504": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2505": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2507": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2508": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2509": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2511": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2512": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2513": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4A"
    },
    "2516": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2518": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2519": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2520": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2522": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2523": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2524": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "2525": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "2526": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2528": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2529": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2530": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2531": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "2532": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2533": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2534": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2535": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2537": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 31,
      "value": "0x7A1"
    },
    "2540": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2541": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2542": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2544": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2545": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2546": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2548": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "2549": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2551": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2552": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2553": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "2555": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2556": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2557": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2559": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "2560": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "2593": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2594": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2595": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "3"
    },
    "2596": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE53"
    },
    "2599": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2600": {
      "fn": "token_exchange._buy",
      "offset": [
        2548,
        2878
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2601": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2722
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 32,
      "value": "0x3"
    },
    "2603": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2722
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2610": {
      "op": "SHL"
    },
    "2611": {
      "op": "SUB"
    },
    "2612": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2722
      ],
      "op": "AND",
      "path": "14"
    },
    "2613": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2735
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "2618": {
      "fn": "token_exchange._buy",
      "offset": [
        2736,
        2745
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2619": {
      "fn": "token_exchange._buy",
      "offset": [
        2755,
        2759
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "2620": {
      "fn": "token_exchange._buy",
      "offset": [
        2762,
        2782
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA46"
    },
    "2623": {
      "fn": "token_exchange._buy",
      "offset": [
        2769,
        2775
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2624": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2722
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2626": {
      "fn": "token_exchange._buy",
      "offset": [
        2762,
        2768
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x492"
    },
    "2629": {
      "fn": "token_exchange._buy",
      "jump": "i",
      "offset": [
        2762,
        2782
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2630": {
      "fn": "token_exchange._buy",
      "offset": [
        2762,
        2782
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2631": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2633": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2634": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2635": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2640": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "AND",
      "path": "14"
    },
    "2641": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2643": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "SHL",
      "path": "14"
    },
    "2644": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2645": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2646": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2648": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "ADD",
      "path": "14"
    },
    "2649": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2650": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "op": "SUB"
    },
    "2659": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "AND",
      "path": "14"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "op": "SUB"
    },
    "2668": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "AND",
      "path": "14"
    },
    "2669": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2670": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2671": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2673": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "ADD",
      "path": "14"
    },
    "2674": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "AND",
      "path": "14"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "op": "SUB"
    },
    "2692": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "AND",
      "path": "14"
    },
    "2693": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2694": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2695": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2697": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "ADD",
      "path": "14"
    },
    "2698": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2699": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2700": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2701": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2703": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "ADD",
      "path": "14"
    },
    "2704": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2705": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2706": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2707": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2708": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2709": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2711": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2713": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2714": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2715": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2716": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "SUB",
      "path": "14"
    },
    "2717": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2718": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2720": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2721": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2722": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2723": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2724": {
      "op": "DUP1"
    },
    "2725": {
      "op": "ISZERO"
    },
    "2726": {
      "op": "PUSH2",
      "value": "0xAAE"
    },
    "2729": {
      "op": "JUMPI"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2732": {
      "op": "DUP1"
    },
    "2733": {
      "op": "REVERT"
    },
    "2734": {
      "op": "JUMPDEST"
    },
    "2735": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2736": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "GAS",
      "path": "14"
    },
    "2737": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "CALL",
      "path": "14"
    },
    "2738": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2739": {
      "op": "DUP1"
    },
    "2740": {
      "op": "ISZERO"
    },
    "2741": {
      "op": "PUSH2",
      "value": "0xAC2"
    },
    "2744": {
      "op": "JUMPI"
    },
    "2745": {
      "op": "RETURNDATASIZE"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2748": {
      "op": "DUP1"
    },
    "2749": {
      "op": "RETURNDATACOPY"
    },
    "2750": {
      "op": "RETURNDATASIZE"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2753": {
      "op": "REVERT"
    },
    "2754": {
      "op": "JUMPDEST"
    },
    "2755": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2756": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2757": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2758": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "POP",
      "path": "14"
    },
    "2759": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2761": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2762": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2765": {
      "op": "DUP2"
    },
    "2766": {
      "op": "LT"
    },
    "2767": {
      "op": "ISZERO"
    },
    "2768": {
      "op": "PUSH2",
      "value": "0xAD8"
    },
    "2771": {
      "op": "JUMPI"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2774": {
      "op": "DUP1"
    },
    "2775": {
      "op": "REVERT"
    },
    "2776": {
      "op": "JUMPDEST"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "op": "POP"
    },
    "2779": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 33,
      "value": "0x2"
    },
    "2781": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2782": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2784": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2785": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2786": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2793": {
      "op": "SHL"
    },
    "2794": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2795": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2805": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2806": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "AND",
      "path": "14"
    },
    "2807": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2809": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2810": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "ADD",
      "path": "14"
    },
    "2811": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2812": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2814": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2815": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "ADD",
      "path": "14"
    },
    "2816": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2817": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2818": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2819": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2820": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2821": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2822": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2823": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2824": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "AND",
      "path": "14"
    },
    "2825": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2826": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2804
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "2831": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2804
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2832": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2834": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2835": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2836": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "ADD",
      "path": "14"
    },
    "2837": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2838": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2840": {
      "fn": "token_exchange._buy",
      "offset": [
        2715,
        2783
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2841": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2842": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2843": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2844": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2845": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "SUB",
      "path": "14"
    },
    "2846": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "ADD",
      "path": "14"
    },
    "2847": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2848": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2850": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2799
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2851": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2852": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2853": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2854": {
      "op": "DUP1"
    },
    "2855": {
      "op": "ISZERO"
    },
    "2856": {
      "op": "PUSH2",
      "value": "0xB30"
    },
    "2859": {
      "op": "JUMPI"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2862": {
      "op": "DUP1"
    },
    "2863": {
      "op": "REVERT"
    },
    "2864": {
      "op": "JUMPDEST"
    },
    "2865": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "POP",
      "path": "14"
    },
    "2866": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "GAS",
      "path": "14"
    },
    "2867": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "CALL",
      "path": "14"
    },
    "2868": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2869": {
      "op": "DUP1"
    },
    "2870": {
      "op": "ISZERO"
    },
    "2871": {
      "op": "PUSH2",
      "value": "0xB44"
    },
    "2874": {
      "op": "JUMPI"
    },
    "2875": {
      "op": "RETURNDATASIZE"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2878": {
      "op": "DUP1"
    },
    "2879": {
      "op": "RETURNDATACOPY"
    },
    "2880": {
      "op": "RETURNDATASIZE"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2883": {
      "op": "REVERT"
    },
    "2884": {
      "op": "JUMPDEST"
    },
    "2885": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "POP",
      "path": "14"
    },
    "2886": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "POP",
      "path": "14"
    },
    "2887": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "POP",
      "path": "14"
    },
    "2888": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "POP",
      "path": "14"
    },
    "2889": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2891": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2892": {
      "fn": "token_exchange._buy",
      "offset": [
        2794,
        2823
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2895": {
      "op": "DUP2"
    },
    "2896": {
      "op": "LT"
    },
    "2897": {
      "op": "ISZERO"
    },
    "2898": {
      "op": "PUSH2",
      "value": "0xB5A"
    },
    "2901": {
      "op": "JUMPI"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2904": {
      "op": "DUP1"
    },
    "2905": {
      "op": "REVERT"
    },
    "2906": {
      "op": "JUMPDEST"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "fn": "token_exchange._buy",
      "offset": [
        2862,
        2870
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 34,
      "value": "0x4"
    },
    "2911": {
      "fn": "token_exchange._buy",
      "offset": [
        2862,
        2870
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2912": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2914": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2915": {
      "fn": "token_exchange._buy",
      "offset": [
        2854,
        2860
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2916": {
      "fn": "token_exchange._buy",
      "offset": [
        2854,
        2860
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2926": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "AND",
      "path": "14"
    },
    "2927": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2928": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
    },
    "2961": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2962": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2964": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2965": {
      "fn": "token_exchange._buy",
      "offset": [
        2839,
        2871
      ],
      "op": "LOG4",
      "path": "14"
    },
    "2966": {
      "fn": "token_exchange._buy",
      "offset": [
        2548,
        2878
      ],
      "op": "POP",
      "path": "14"
    },
    "2967": {
      "fn": "token_exchange._buy",
      "offset": [
        2548,
        2878
      ],
      "op": "POP",
      "path": "14"
    },
    "2968": {
      "fn": "token_exchange._buy",
      "jump": "o",
      "offset": [
        2548,
        2878
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2969": {
      "fn": "token_exchange._sell",
      "offset": [
        2884,
        3244
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2970": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 35,
      "value": "0x2"
    },
    "2972": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2973": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2975": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2976": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2977": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2986": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "op": "SUB"
    },
    "2995": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2996": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2997": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "AND",
      "path": "14"
    },
    "2998": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3000": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3001": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "ADD",
      "path": "14"
    },
    "3002": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3003": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3005": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3006": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "ADD",
      "path": "14"
    },
    "3007": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3008": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3009": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3010": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3011": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3012": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3013": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3014": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3015": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "AND",
      "path": "14"
    },
    "3016": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3017": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3115
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "3022": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3115
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3023": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3025": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3026": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3027": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "ADD",
      "path": "14"
    },
    "3028": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3029": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3031": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3032": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3033": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3034": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3035": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3036": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "SUB",
      "path": "14"
    },
    "3037": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "ADD",
      "path": "14"
    },
    "3038": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3039": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3040": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3106
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3041": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3042": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3043": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3044": {
      "op": "DUP1"
    },
    "3045": {
      "op": "ISZERO"
    },
    "3046": {
      "op": "PUSH2",
      "value": "0xBEE"
    },
    "3049": {
      "op": "JUMPI"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3052": {
      "op": "DUP1"
    },
    "3053": {
      "op": "REVERT"
    },
    "3054": {
      "op": "JUMPDEST"
    },
    "3055": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "POP",
      "path": "14"
    },
    "3056": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "GAS",
      "path": "14"
    },
    "3057": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "CALL",
      "path": "14"
    },
    "3058": {
      "fn": "token_exchange._sell",
      "offset": [
        3101,
        3131
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3059": {
      "op": "DUP1"
    },
    "3060": {
      "op": "ISZERO"
    },
    "3061": {
      "op": "PUSH2",
      "value": "0xC02"
    },
    "3064": {
      "op": "JUMPI"
    },
    "3065": {
      "op": "RETURNDATASIZE"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3068": {
      "op": "DUP1"
    },
    "3069": {
      "op": "RETURNDATACOPY"
    },
    "3070": {
      "op": "RETURNDATASIZE"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3073": {
      "op": "REVERT"
    },
    "3074": {
      "op": "JUMPDEST"
    },
    "3075": {
      "op": "POP"
    },
    "3076": {
      "op": "POP"
    },
    "3077": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3149
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 36,
      "value": "0x3"
    },
    "3079": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3149
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3149
      ],
      "op": "AND",
      "path": "14"
    },
    "3089": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3149
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3090": {
      "op": "POP"
    },
    "3091": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3154
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "3096": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3154
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "fn": "token_exchange._sell",
      "offset": [
        3155,
        3161
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3099": {
      "fn": "token_exchange._sell",
      "offset": [
        3162,
        3183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC25"
    },
    "3102": {
      "fn": "token_exchange._sell",
      "offset": [
        3169,
        3175
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3103": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3149
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3105": {
      "fn": "token_exchange._sell",
      "offset": [
        3162,
        3168
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x492"
    },
    "3108": {
      "fn": "token_exchange._sell",
      "jump": "i",
      "offset": [
        3162,
        3183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3109": {
      "fn": "token_exchange._sell",
      "offset": [
        3162,
        3183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3110": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3112": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3113": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3114": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "3119": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "AND",
      "path": "14"
    },
    "3120": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3122": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "SHL",
      "path": "14"
    },
    "3123": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3124": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3125": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3127": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "ADD",
      "path": "14"
    },
    "3128": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3129": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "op": "SUB"
    },
    "3138": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "AND",
      "path": "14"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "op": "SUB"
    },
    "3147": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "AND",
      "path": "14"
    },
    "3148": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3149": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3150": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3152": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "ADD",
      "path": "14"
    },
    "3153": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3154": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3155": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3156": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3158": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "ADD",
      "path": "14"
    },
    "3159": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3160": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3161": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3162": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3163": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3165": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3167": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3168": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3169": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3170": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "SUB",
      "path": "14"
    },
    "3171": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3172": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3174": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3175": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3176": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3177": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3178": {
      "op": "DUP1"
    },
    "3179": {
      "op": "ISZERO"
    },
    "3180": {
      "op": "PUSH2",
      "value": "0xC74"
    },
    "3183": {
      "op": "JUMPI"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3186": {
      "op": "DUP1"
    },
    "3187": {
      "op": "REVERT"
    },
    "3188": {
      "op": "JUMPDEST"
    },
    "3189": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3190": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "GAS",
      "path": "14"
    },
    "3191": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "CALL",
      "path": "14"
    },
    "3192": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3193": {
      "op": "DUP1"
    },
    "3194": {
      "op": "ISZERO"
    },
    "3195": {
      "op": "PUSH2",
      "value": "0xC88"
    },
    "3198": {
      "op": "JUMPI"
    },
    "3199": {
      "op": "RETURNDATASIZE"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3202": {
      "op": "DUP1"
    },
    "3203": {
      "op": "RETURNDATACOPY"
    },
    "3204": {
      "op": "RETURNDATASIZE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3207": {
      "op": "REVERT"
    },
    "3208": {
      "op": "JUMPDEST"
    },
    "3209": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3210": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3211": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3212": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "POP",
      "path": "14"
    },
    "3213": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3215": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3216": {
      "fn": "token_exchange._sell",
      "offset": [
        3142,
        3184
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3219": {
      "op": "DUP2"
    },
    "3220": {
      "op": "LT"
    },
    "3221": {
      "op": "ISZERO"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3225": {
      "op": "JUMPI"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3228": {
      "op": "DUP1"
    },
    "3229": {
      "op": "REVERT"
    },
    "3230": {
      "op": "JUMPDEST"
    },
    "3231": {
      "op": "POP"
    },
    "3232": {
      "op": "POP"
    },
    "3233": {
      "fn": "token_exchange._sell",
      "offset": [
        3228,
        3236
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 37,
      "value": "0x4"
    },
    "3235": {
      "fn": "token_exchange._sell",
      "offset": [
        3228,
        3236
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3236": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3238": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3239": {
      "fn": "token_exchange._sell",
      "offset": [
        3220,
        3226
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3240": {
      "fn": "token_exchange._sell",
      "offset": [
        3220,
        3226
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3241": {
      "fn": "token_exchange._sell",
      "offset": [
        3213,
        3217
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3242": {
      "fn": "token_exchange._sell",
      "offset": [
        3213,
        3217
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3243": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
    },
    "3276": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3277": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3279": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3280": {
      "fn": "token_exchange._sell",
      "offset": [
        3200,
        3237
      ],
      "op": "LOG4",
      "path": "14"
    },
    "3281": {
      "fn": "token_exchange._sell",
      "offset": [
        2884,
        3244
      ],
      "op": "POP",
      "path": "14"
    },
    "3282": {
      "fn": "token_exchange._sell",
      "offset": [
        2884,
        3244
      ],
      "op": "POP",
      "path": "14"
    },
    "3283": {
      "fn": "token_exchange._sell",
      "jump": "o",
      "offset": [
        2884,
        3244
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3284": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3285": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3287": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 38
    },
    "3288": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3289": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3290": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "3"
    },
    "3291": {
      "branch": 53,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3292": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD63"
    },
    "3295": {
      "branch": 53,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3296": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3298": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3307": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3308": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3310": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "3311": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3312": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3313": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3315": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "3316": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3317": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3318": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "3319": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3320": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3321": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3322": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3323": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3324": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3325": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3326": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3327": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3329": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "3330": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3331": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3332": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3333": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3334": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3335": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3337": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "3338": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3339": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3340": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3341": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3344": {
      "op": "JUMPDEST"
    },
    "3345": {
      "op": "DUP4"
    },
    "3346": {
      "op": "DUP2"
    },
    "3347": {
      "op": "LT"
    },
    "3348": {
      "op": "ISZERO"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xD28"
    },
    "3352": {
      "op": "JUMPI"
    },
    "3353": {
      "op": "DUP2"
    },
    "3354": {
      "op": "DUP2"
    },
    "3355": {
      "op": "ADD"
    },
    "3356": {
      "op": "MLOAD"
    },
    "3357": {
      "op": "DUP4"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "ADD"
    },
    "3360": {
      "op": "MSTORE"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3363": {
      "op": "ADD"
    },
    "3364": {
      "op": "PUSH2",
      "value": "0xD10"
    },
    "3367": {
      "op": "JUMP"
    },
    "3368": {
      "op": "JUMPDEST"
    },
    "3369": {
      "op": "POP"
    },
    "3370": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3371": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3372": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3373": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3374": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3375": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3376": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3377": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "3378": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3379": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3381": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "3382": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3383": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3384": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD55"
    },
    "3387": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3388": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3389": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3390": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "3391": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3392": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3393": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3395": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3396": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3398": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "3399": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3402": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "3"
    },
    "3403": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "3404": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "3"
    },
    "3405": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "3406": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3407": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3408": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3410": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "3411": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3412": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3413": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3414": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3415": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3416": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3417": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3418": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "3419": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3421": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3422": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3423": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3424": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "3425": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3426": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3427": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "op": "POP"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3432": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "3"
    },
    "3433": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3434": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3435": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3436": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0xD75"
    },
    "3439": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3440": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3441": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A8"
    },
    "3444": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3445": {
      "branch": 48,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3446": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB0"
    },
    "3449": {
      "branch": 48,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3450": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3452": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3461": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3462": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3464": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "3465": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3466": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3467": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3469": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "3470": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3471": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3472": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "3473": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3474": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3475": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "3477": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3478": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3479": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3481": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "3482": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3483": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE9"
    },
    "3486": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "3488": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3489": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "3490": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3492": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "3493": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3494": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "3495": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "3496": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3498": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3499": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3500": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3501": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "3502": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3503": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3504": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3511": {
      "op": "SHL"
    },
    "3512": {
      "op": "SUB"
    },
    "3513": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 40
    },
    "3514": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3516": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3517": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3518": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3519": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3521": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3522": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3523": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3524": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3525": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3527": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3528": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3529": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3530": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3533": {
      "op": "NOT"
    },
    "3534": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "3535": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3536": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3537": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3538": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3539": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 41,
      "value": "0xDDC"
    },
    "3542": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3543": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3544": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A8"
    },
    "3547": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3548": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3549": {
      "branch": 49,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3550": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2E"
    },
    "3553": {
      "branch": 49,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3554": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3556": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3557": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3558": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3564": {
      "op": "SHL"
    },
    "3565": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3566": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3567": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3569": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3571": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3572": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "3573": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3574": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3576": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3578": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3579": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "3580": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3581": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "3614": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3616": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3617": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "3618": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3619": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3620": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3621": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3622": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3623": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3624": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "3625": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3627": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "3628": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3629": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3630": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "op": "SUB"
    },
    "3639": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 42
    },
    "3640": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3642": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3643": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3644": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3645": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3647": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3648": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3649": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3650": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3651": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3653": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3654": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3655": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3656": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3659": {
      "op": "NOT"
    },
    "3660": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "3661": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3663": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "3664": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3665": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3666": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3667": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3668": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3670": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 43
    },
    "3671": {
      "branch": 54,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3672": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA2"
    },
    "3675": {
      "branch": 54,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3676": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3678": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3679": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3685": {
      "op": "SHL"
    },
    "3686": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3687": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3688": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3690": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3692": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3693": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "3694": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3695": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3696": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3697": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3698": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3699": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3701": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3702": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "3703": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3704": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3705": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3706": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3707": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3708": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3709": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3710": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3712": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3713": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3714": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "3715": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3716": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3717": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3718": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "3719": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3720": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3721": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3722": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3723": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3725": {
      "op": "DUP4"
    },
    "3726": {
      "op": "ISZERO"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xD28"
    },
    "3730": {
      "op": "JUMPI"
    },
    "3731": {
      "op": "DUP2"
    },
    "3732": {
      "op": "DUP2"
    },
    "3733": {
      "op": "ADD"
    },
    "3734": {
      "op": "MLOAD"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "DUP3"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "MSTORE"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xD10"
    },
    "3745": {
      "op": "JUMP"
    },
    "3746": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3747": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "3"
    },
    "3748": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3750": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3751": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3752": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3753": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEAE"
    },
    "3756": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3757": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3758": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3759": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "3"
    },
    "3760": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3761": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "POP"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "op": "POP"
    },
    "3767": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "c7673d49960153bc20122ffede6afe0b1e2ee3ec",
  "source": "pragma solidity ^0.5.0;\n\n\nimport \"./PayCoin.sol\";\nimport \"../interfaces/IT_ERC20.sol\";\nimport \"./token_erc20.sol\";\nimport \"./BrokerRole.sol\";\nimport \"./AdminRole.sol\";\n\ncontract token_exchange is BrokerRole, AdminRole {\n    using SafeMath for uint256;\n\n    IT_ERC20 public token;\n    IT_PayCoin public payCoin;\n    uint256 private tk_price;\n    uint256 private _openingtime;\n    uint256 private _closingtime;\n\n    uint256[] priceHistory;\n\n    //address _addressPC ;\n    //= 0xc429620C4451d820B96FD3E5209FADa0F5a89852\n\n    address _frama = 0x96E7Cf89FF09659854277531FA315AFc27102E37 ;\n    address _libra = 0x2FbfB1e766E6F6244669E4794ff022a653F34eFf ;\n    address _pirot = 0x743491ab1511287491af8De4Ca25b2fbc707eB88 ;\n\n    event Buy(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event Sell(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n\n    modifier onlyWhileOpen {\n        require(isOpen(), \"Market is closed\");\n        _;\n    }\n\n    constructor() public {\n\n        token = new token_erc20();\n        payCoin = new PayCoin();\n\n        tk_price = 1e18 ; //accounts for PayCoin's decimals\n        priceHistory.push(tk_price);\n\n        _openingtime = now ;\n        _closingtime = now + 1 hours ; //TODO Remember to modify it!\n\n\n        if (!(isAdmin(_frama) && isBroker(_frama))){\n            addAdmin(_frama);\n            addBroker(_frama);\n        }\n        if (!(isAdmin(_libra) && isBroker(_libra))){\n            addAdmin(_libra);\n            addBroker(_libra);\n        }\n        if (!(isAdmin(_pirot) && isBroker(_pirot))){\n            addAdmin(_pirot);\n            addBroker(_pirot);\n        }\n\n    }\n\n    function buy(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _buy(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function sell(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _sell(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function _buy(address recipient, uint256 amount) internal {\n        // TODO Implement allowances for transferFrom\n        // TODO set real address of the team\n        payCoin.transferFrom(recipient, address(this), getFee(amount, true));\n\n        token.mint(recipient, amount);\n\n        emit Buy(recipient, amount, tk_price);\n    }\n\n    function _sell(address seller, uint256 amount) internal {\n        // TODO: Implement allowances for transferFrom\n        // token_exchange != team, so it can mint paycoin (these doesn't count vs initial 50k)\n\n        token.burnFrom(seller, amount);\n\n        payCoin.mint(seller,getFee(amount, false));\n\n        emit Sell(address(this), amount, tk_price);\n    }\n\n    function getFee(uint256 amount, bool from_buy) public returns (uint256){\n        // TODO: Implement different fees for buying and selling\n        // amount * tk_price / 10^18 +- 2*amount/1000\n        uint256 exp = uint256(token.decimals());\n\n        if (from_buy){\n            return amount.mul(tk_price).div(10**exp).add(amount.mul(2).div(1000));\n        }\n        else{\n            return amount.mul(tk_price).div(10**exp).sub(amount.mul(2).div(1000));\n        }\n\n    }\n\n    function isOpen() public view returns (bool) {\n        return now >= _openingtime && now <= _closingtime;\n    }\n\n    function setOpenTime() external onlyAdmin {\n        require(_openingtime < _closingtime, \"Something's wrong, maybe you set the initial _openingtime wrong.\");\n        _openingtime = _closingtime.add(15 hours) ;\n        _closingtime = _openingtime.add(9 hours) ;\n    }\n    /*\n        TODO What is id_prezzo?\n            ** If integer (1, 2, 3, etc) maybe priceHistory should be an array ( priceHistory[] )\n            If hash/something else, then mapping. So, we need two more global variables (last_price id and last_price)\n    */\n\n    function lastPrice() external view returns (uint256, uint256){\n        return (priceHistory.length.sub(1), priceHistory[priceHistory.length.sub(1)]);\n    }\n\n\n\n\n}\n",
  "sourceMap": "169:4371:14:-;;;522:59;;;-1:-1:-1;;;;;;522:59:14;;;539:42;522:59;;;;588;;;;;605:42;588:59;;;654;;;;;;671:42;654:59;;;987:669;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;420:24:10;431:12;-1:-1:-1;;;;;431:10:10;:12;:::i;:::-;-1:-1:-1;;;;;420:10:10;:24;:::i;:::-;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;1027:17:14;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1019:5:14;:25;;-1:-1:-1;;;;;;1019:25:14;-1:-1:-1;;;;;1019:25:14;;;;;;;;;;1064:13;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1054:7:14;:23;;-1:-1:-1;;;;;;1054:23:14;-1:-1:-1;;;;;1054:23:14;;;;;;1099:4;1088:8;:15;;;1148:12;27:10:-1;;-1:-1;23:18;;45:23;;-1:-1;1148:27:14;;;;;;;1201:3;1186:12;:18;;;1236:7;1230:13;1215:12;:28;1300:6;;1292:15;;1300:6;1292:7;:15::i;:::-;:35;;;;-1:-1:-1;1320:6:14;;1311:16;;-1:-1:-1;;;;;1320:6:14;-1:-1:-1;;;;;1311:8:14;:16;:::i;:::-;1286:115;;1352:6;;1343:16;;-1:-1:-1;;;;;1352:6:14;-1:-1:-1;;;;;1343:8:14;:16;:::i;:::-;1383:6;;1373:17;;-1:-1:-1;;;;;1383:6:14;-1:-1:-1;;;;;1373:9:14;:17;:::i;:::-;1424:6;;1416:15;;-1:-1:-1;;;;;1424:6:14;-1:-1:-1;;;;;1416:7:14;:15;:::i;:::-;:35;;;;-1:-1:-1;1444:6:14;;1435:16;;-1:-1:-1;;;;;1444:6:14;-1:-1:-1;;;;;1435:8:14;:16;:::i;:::-;1410:115;;1476:6;;1467:16;;-1:-1:-1;;;;;1476:6:14;-1:-1:-1;;;;;1467:8:14;:16;:::i;:::-;1507:6;;1497:17;;-1:-1:-1;;;;;1507:6:14;-1:-1:-1;;;;;1497:9:14;:17;:::i;:::-;1548:6;;1540:15;;-1:-1:-1;;;;;1548:6:14;-1:-1:-1;;;;;1540:7:14;:15;:::i;:::-;:35;;;;-1:-1:-1;1568:6:14;;1559:16;;-1:-1:-1;;;;;1568:6:14;-1:-1:-1;;;;;1559:8:14;:16;:::i;:::-;1534:115;;1600:6;;1591:16;;-1:-1:-1;;;;;1600:6:14;-1:-1:-1;;;;;1591:8:14;:16;:::i;:::-;1631:6;;1621:17;;-1:-1:-1;;;;;1631:6:14;-1:-1:-1;;;;;1621:9:14;:17;:::i;:::-;169:4371;;788:96:0;867:10;788:96;:::o;888:119:10:-;944:21;957:7;944:8;:12;;;;;;:21;;;;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;587:105::-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;596:107:10:-;652:4;675:21;688:7;675:8;:12;;;;;;:21;;;;:::i;698:87:9:-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;-1:-1:-1;;;;;506:10:10;:12;:::i;:::-;-1:-1:-1;;;;;497:8:10;:22;:::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;-1:-1:-1;;;;;773:10:10;:19;:::i;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;169:4371:14:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/token_exchange.sol",
  "type": "contract"
}