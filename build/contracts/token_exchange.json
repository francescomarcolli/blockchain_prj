{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "ChangeEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "ChangeStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "changer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_overnightCalls",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "from_buy",
          "type": "bool"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "getHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "payCoin",
      "outputs": [
        {
          "internalType": "contract IT_PayCoin",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setHistory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "delta_price",
          "type": "int256"
        }
      ],
      "name": "setNewPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setOpenTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IT_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "10": "contracts/BrokerRole.sol",
    "11": "contracts/BurnerRole.sol",
    "12": "contracts/PayCoin.sol",
    "14": "contracts/token_erc20.sol",
    "15": "contracts/token_exchange.sol",
    "16": "interfaces/IT_ERC20.sol",
    "17": "interfaces/IT_PayCoin.sol",
    "2": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/roles/MinterRole.sol",
    "3": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/math/SafeMath.sol",
    "4": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Burnable.sol",
    "6": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
    "7": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Mintable.sol",
    "8": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/IERC20.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_exchange.sol",
    "exportedSymbols": {
      "token_exchange": [
        598
      ]
    },
    "id": 599,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 55,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "contracts/PayCoin.sol",
        "file": "./PayCoin.sol",
        "id": 56,
        "nodeType": "ImportDirective",
        "scope": 599,
        "sourceUnit": 915,
        "src": "26:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IT_ERC20.sol",
        "file": "../interfaces/IT_ERC20.sol",
        "id": 57,
        "nodeType": "ImportDirective",
        "scope": 599,
        "sourceUnit": 1031,
        "src": "50:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token_erc20.sol",
        "file": "./token_erc20.sol",
        "id": 58,
        "nodeType": "ImportDirective",
        "scope": 599,
        "sourceUnit": 995,
        "src": "87:27:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BrokerRole.sol",
        "file": "./BrokerRole.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 599,
        "sourceUnit": 813,
        "src": "115:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AdminRole.sol",
        "file": "./AdminRole.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 599,
        "sourceUnit": 706,
        "src": "142:25:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "BrokerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 812,
              "src": "196:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BrokerRole_$812",
                "typeString": "contract BrokerRole"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "196:10:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 705,
              "src": "208:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$705",
                "typeString": "contract AdminRole"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "208:9:15"
          }
        ],
        "contractDependencies": [
          705,
          812,
          914,
          994,
          1057
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 598,
        "linearizedBaseContracts": [
          598,
          705,
          812,
          1057
        ],
        "name": "token_exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 67,
            "libraryName": {
              "contractScope": null,
              "id": 65,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2169,
              "src": "230:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2169",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:27:15",
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 70,
            "libraryName": {
              "contractScope": null,
              "id": 68,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2169,
              "src": "262:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2169",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "256:26:15",
            "typeName": {
              "id": 69,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "275:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "id": 72,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "289:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_ERC20_$1030",
              "typeString": "contract IT_ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 71,
              "name": "IT_ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1030,
              "src": "289:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                "typeString": "contract IT_ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 74,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "316:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$1373",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 73,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1373,
              "src": "316:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$1373",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 76,
            "name": "tk_price",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "348:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 75,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 78,
            "name": "_openingtime",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "378:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 77,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 80,
            "name": "_closingtime",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "412:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 82,
            "name": "_overnightCalls",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "446:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 81,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "446:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 85,
            "name": "priceHistory",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "482:22:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 83,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 84,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "482:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 88,
            "name": "_fss",
            "nodeType": "VariableDeclaration",
            "scope": 598,
            "src": "802:57:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 86,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "802:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838354138643732343146666666656537323930353031343733413942313142466441324165394666",
              "id": 87,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "817:42:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 96,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "878:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "901:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "925:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "877:70:15"
            },
            "src": "868:80:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 104,
            "name": "Sell",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "964:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "987:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1011:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "963:70:15"
            },
            "src": "953:81:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 112,
            "name": "PriceChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "indexed": true,
                  "name": "changer",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1057:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "indexed": true,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1082:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1108:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:74:15"
            },
            "src": "1039:92:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 118,
            "name": "ChangeStart",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1155:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "indexed": true,
                  "name": "when",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1176:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:43:15"
            },
            "src": "1137:61:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 124,
            "name": "ChangeEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1220:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "indexed": true,
                  "name": "when",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1241:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1219:43:15"
            },
            "src": "1204:59:15"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1293:65:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 127,
                          "name": "isOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "1311:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1311:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b657420697320636c6f736564",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1321:18:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        },
                        "value": "Market is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2187,
                        2188
                      ],
                      "referencedDeclaration": 2188,
                      "src": "1303:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:37:15"
                },
                {
                  "id": 132,
                  "nodeType": "PlaceholderStatement",
                  "src": "1350:1:15"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "name": "onlyWhileOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:0:15"
            },
            "src": "1270:88:15",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "1385:931:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1396:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                        "typeString": "contract IT_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1404:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_token_erc20_$994_$",
                          "typeString": "function () returns (contract token_erc20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 138,
                          "name": "token_erc20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 994,
                          "src": "1408:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_erc20_$994",
                            "typeString": "contract token_erc20"
                          }
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1404:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_erc20_$994",
                        "typeString": "contract token_erc20"
                      }
                    },
                    "src": "1396:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                      "typeString": "contract IT_ERC20"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:25:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1431:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1373",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1441:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PayCoin_$914_$",
                          "typeString": "function () returns (contract PayCoin)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 144,
                          "name": "PayCoin",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 914,
                          "src": "1445:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PayCoin_$914",
                            "typeString": "contract PayCoin"
                          }
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1441:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$914",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "src": "1431:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1373",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:23:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "tk_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1465:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1476:4:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1465:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1465:15:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1543:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "priceHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1525:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1525:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:27:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1563:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2186,
                      "src": "1578:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1563:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1592:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "1607:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:7:15",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        },
                        "value": "1"
                      },
                      "src": "1607:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1592:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:28:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "_overnightCalls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "1661:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1679:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1661:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:19:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1696:34:15",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 174,
                                "name": "_fss",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "1706:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 173,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "1698:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1698:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 177,
                                "name": "_fss",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "1724:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 176,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "1715:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1715:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1698:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 180,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1697:33:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 191,
                  "nodeType": "IfStatement",
                  "src": "1692:107:15",
                  "trueBody": {
                    "id": 190,
                    "nodeType": "Block",
                    "src": "1731:68:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1754:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 182,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "1745:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1745:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "1745:14:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 187,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1783:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 186,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "1773:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1773:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "1773:15:15"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 193,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "2219:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2219:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2233:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 192,
                      "name": "ChangeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "2207:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "EmitStatement",
                  "src": "2202:44:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 199,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "2272:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2272:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 201,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "2286:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "37",
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2301:6:15",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "7"
                        },
                        "src": "2286:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 198,
                      "name": "ChangeEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "2262:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:46:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "EmitStatement",
                  "src": "2257:51:15"
                }
              ]
            },
            "documentation": null,
            "id": 207,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1375:2:15"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1385:0:15"
            },
            "scope": 598,
            "src": "1364:952:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2393:365:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 217,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "2668:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2668:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2698:2:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 223,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72,
                                      "src": "2710:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1017,
                                    "src": "2710:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2710:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2702:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2702:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2698:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "2682:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2086,
                          "src": "2682:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2682:46:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 216,
                      "name": "_buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "2663:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:66:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2747:4:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 215,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "2740:11:15"
                }
              ]
            },
            "documentation": null,
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 211,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 134,
                  "src": "2365:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2365:13:15"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2335:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:21:15"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2388:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2387:6:15"
            },
            "scope": 598,
            "src": "2322:436:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2836:366:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 244,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "3112:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3112:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3142:2:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 250,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 72,
                                      "src": "3154:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 251,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1017,
                                    "src": "3154:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3154:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3146:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3146:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3142:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 246,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3126:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2086,
                          "src": "3126:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3126:46:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 243,
                      "name": "_sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "3106:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:67:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3106:67:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3191:4:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 242,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "3184:11:15"
                }
              ]
            },
            "documentation": null,
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 239,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 238,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 134,
                  "src": "2808:13:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2808:13:15"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2778:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2778:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2777:21:15"
            },
            "returnParameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2831:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2830:6:15"
            },
            "scope": 598,
            "src": "2764:438:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "3266:218:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3342:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "3361:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$598",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$598",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3353:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3353:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 276,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "3375:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3383:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 275,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "3368:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3321:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1373",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1604,
                      "src": "3321:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:68:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "3321:68:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3411:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "3422:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3400:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1400,
                      "src": "3400:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3400:29:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:29:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3449:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "3460:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3468:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 288,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "3445:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "EmitStatement",
                  "src": "3440:37:15"
                }
              ]
            },
            "documentation": null,
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3222:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3241:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3221:35:15"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3266:0:15"
            },
            "scope": 598,
            "src": "3208:276:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "3546:249:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 305,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "3667:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3675:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 302,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3652:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1029,
                      "src": "3652:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3652:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3652:30:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "3706:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "3720:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3728:5:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 313,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "3713:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3713:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3693:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1373",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1400,
                      "src": "3693:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:42:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:42:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "3764:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$598",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$598",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3756:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3756:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 323,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3771:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3779:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 319,
                      "name": "Sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "3751:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3751:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "EmitStatement",
                  "src": "3746:42:15"
                }
              ]
            },
            "documentation": null,
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3505:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3505:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3521:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3521:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3504:32:15"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3546:0:15"
            },
            "scope": 598,
            "src": "3490:305:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "3872:335:15",
              "statements": [
                {
                  "assignments": [
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 338,
                      "name": "exp",
                      "nodeType": "VariableDeclaration",
                      "scope": 387,
                      "src": "3936:11:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3936:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 340,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "3958:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IT_ERC20_$1030",
                              "typeString": "contract IT_ERC20"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1017,
                          "src": "3958:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3958:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3950:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3936:39:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 345,
                    "name": "from_buy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "3990:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "4106:94:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4183:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 378,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4176:1:15",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 376,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "4165:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2086,
                                    "src": "4165:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4165:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2102,
                                "src": "4165:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4165:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4152:2:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 372,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 338,
                                    "src": "4156:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4152:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 368,
                                      "name": "tk_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76,
                                      "src": "4138:8:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 366,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "4127:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2086,
                                    "src": "4127:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4127:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2102,
                                "src": "4127:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4127:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2025,
                            "src": "4127:37:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:62:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 336,
                        "id": 384,
                        "nodeType": "Return",
                        "src": "4120:69:15"
                      }
                    ]
                  },
                  "id": 386,
                  "nodeType": "IfStatement",
                  "src": "3986:214:15",
                  "trueBody": {
                    "id": 365,
                    "nodeType": "Block",
                    "src": "3999:94:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4076:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 358,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4069:1:15",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 356,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "4058:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 357,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2086,
                                    "src": "4058:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4058:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2102,
                                "src": "4058:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4058:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4045:2:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 352,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 338,
                                    "src": "4049:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4045:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 348,
                                      "name": "tk_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 76,
                                      "src": "4031:8:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 346,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 330,
                                      "src": "4020:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2086,
                                    "src": "4020:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4020:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2102,
                                "src": "4020:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4020:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2009,
                            "src": "4020:37:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4020:62:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 336,
                        "id": 364,
                        "nodeType": "Return",
                        "src": "4013:69:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3817:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "name": "from_buy",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3833:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3833:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:31:15"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3864:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3864:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3863:9:15"
            },
            "scope": 598,
            "src": "3801:406:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "4258:66:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "4275:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 394,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "4282:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4275:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 396,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "4298:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "_closingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "4305:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4298:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4275:42:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 392,
                  "id": 400,
                  "nodeType": "Return",
                  "src": "4268:49:15"
                }
              ]
            },
            "documentation": null,
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOpen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4228:2:15"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "4252:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4252:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4251:6:15"
            },
            "scope": 598,
            "src": "4213:111:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "4372:224:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 408,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4390:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 409,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "4405:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4390:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4419:66:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        },
                        "value": "Something's wrong, maybe you set the initial _openingtime wrong."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2187,
                        2188
                      ],
                      "referencedDeclaration": 2188,
                      "src": "4382:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4382:104:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4382:104:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 414,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "4496:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4528:8:15",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          },
                          "value": "15"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 415,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "4511:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2009,
                        "src": "4511:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4511:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4496:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "4548:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4580:7:15",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 422,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4563:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2009,
                        "src": "4563:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4563:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4548:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "4548:40:15"
                }
              ]
            },
            "documentation": null,
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 405,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 404,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 638,
                  "src": "4362:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4362:9:15"
              }
            ],
            "name": "setOpenTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4350:2:15"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4372:0:15"
            },
            "scope": 598,
            "src": "4330:266:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "4663:94:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4705:1:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 436,
                              "name": "priceHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "4681:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4681:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2025,
                          "src": "4681:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4681:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 441,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "4709:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 447,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4746:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 442,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "4722:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 443,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4722:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2025,
                            "src": "4722:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4722:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4709:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 448,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4680:70:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "4673:77:15"
                }
              ]
            },
            "documentation": null,
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4620:2:15"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "4646:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "4655:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4655:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4645:18:15"
            },
            "scope": 598,
            "src": "4602:155:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "4832:55:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 458,
                      "name": "priceHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "4849:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 460,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "4862:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4849:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 457,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "4842:29:15"
                }
              ]
            },
            "documentation": null,
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "4783:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4782:18:15"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "4824:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4823:9:15"
            },
            "scope": 598,
            "src": "4763:124:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "4946:42:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 473,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "4974:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 470,
                        "name": "priceHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "4956:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4956:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4956:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "4956:24:15"
                }
              ]
            },
            "documentation": null,
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 467,
                  "name": "onlyBroker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 745,
                  "src": "4928:10:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4928:10:15"
              }
            ],
            "name": "setHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4913:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4913:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4912:15:15"
            },
            "returnParameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4946:0:15"
            },
            "scope": 598,
            "src": "4893:95:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "5071:866:15",
              "statements": [
                {
                  "assignments": [
                    487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 487,
                      "name": "last_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 596,
                      "src": "5081:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5081:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 495,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "priceHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "5102:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 494,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5139:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 489,
                            "name": "priceHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "5115:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5115:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2025,
                        "src": "5115:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5115:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5102:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5081:61:15"
                },
                {
                  "assignments": [
                    497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 497,
                      "name": "new_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 596,
                      "src": "5153:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 496,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5153:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 499,
                          "name": "last_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "5179:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5172:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": "int256"
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5172:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 501,
                      "name": "delta_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "5193:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "5172:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5153:51:15"
                },
                {
                  "assignments": [
                    505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 505,
                      "name": "new_length",
                      "nodeType": "VariableDeclaration",
                      "scope": 596,
                      "src": "5215:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 504,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5215:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 506,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5215:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 508,
                          "name": "new_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "5254:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5266:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5254:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072696365206d75737420626520706f73697469766521",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5269:25:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b727a0f9e51eaa13062016295d601d8fa22a2264ae06c107a759bee2c54dbe6d",
                          "typeString": "literal_string \"Price must be positive!\""
                        },
                        "value": "Price must be positive!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b727a0f9e51eaa13062016295d601d8fa22a2264ae06c107a759bee2c54dbe6d",
                          "typeString": "literal_string \"Price must be positive!\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2187,
                        2188
                      ],
                      "referencedDeclaration": 2188,
                      "src": "5245:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5245:50:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:50:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 515,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "5327:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5327:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 514,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "5319:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5319:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 578,
                    "nodeType": "Block",
                    "src": "5495:316:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 535,
                                "name": "_overnightCalls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "5517:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "34",
                                "id": 536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5535:1:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "src": "5517:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416c72656164792063616c6c7320342074696d65732074686973206e696768742e",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5538:35:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00eccb539501bbae30f67aa01f9323c94f4f92c523121abbda6546675ac2014d",
                                "typeString": "literal_string \"Already calls 4 times this night.\""
                              },
                              "value": "Already calls 4 times this night."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00eccb539501bbae30f67aa01f9323c94f4f92c523121abbda6546675ac2014d",
                                "typeString": "literal_string \"Already calls 4 times this night.\""
                              }
                            ],
                            "id": 534,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2187,
                              2188
                            ],
                            "referencedDeclaration": 2188,
                            "src": "5509:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5509:65:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "5509:65:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 543,
                                      "name": "new_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "5606:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5598:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5598:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 552,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5657:3:15",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3130",
                                              "id": 549,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5649:2:15",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 547,
                                              "name": "last_price",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 487,
                                              "src": "5634:10:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 548,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2086,
                                            "src": "5634:14:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 550,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5634:18:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 551,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2102,
                                        "src": "5634:22:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 553,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5634:27:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 545,
                                      "name": "last_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5619:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 546,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2025,
                                    "src": "5619:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5619:43:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5598:64:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 557,
                                      "name": "new_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "5674:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5666:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5666:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 566,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5725:3:15",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3130",
                                              "id": 563,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5717:2:15",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 561,
                                              "name": "last_price",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 487,
                                              "src": "5702:10:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 562,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2086,
                                            "src": "5702:14:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 564,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5702:18:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2102,
                                        "src": "5702:22:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 567,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5702:27:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 559,
                                      "name": "last_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "5687:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2009,
                                    "src": "5687:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5687:43:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5666:64:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5598:132:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "43616e2774206368616e6765206d6f7265207468616e202d2b313025",
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5732:30:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d60a62876805af97b5dd1c2ff63fb59d00ce26fed0a57cc3216e134b08528804",
                                "typeString": "literal_string \"Can't change more than -+10%\""
                              },
                              "value": "Can't change more than -+10%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d60a62876805af97b5dd1c2ff63fb59d00ce26fed0a57cc3216e134b08528804",
                                "typeString": "literal_string \"Can't change more than -+10%\""
                              }
                            ],
                            "id": 541,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2187,
                              2188
                            ],
                            "referencedDeclaration": 2188,
                            "src": "5589:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5589:175:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "5589:175:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 574,
                            "name": "_overnightCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "5779:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5798:1:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5779:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 577,
                        "nodeType": "ExpressionStatement",
                        "src": "5779:20:15"
                      }
                    ]
                  },
                  "id": 579,
                  "nodeType": "IfStatement",
                  "src": "5315:496:15",
                  "trueBody": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "5342:140:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 519,
                                "name": "isOpen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "5364:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5364:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d61726b657420697320636c6f736564",
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5374:18:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                                "typeString": "literal_string \"Market is closed\""
                              },
                              "value": "Market is closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                                "typeString": "literal_string \"Market is closed\""
                              }
                            ],
                            "id": 518,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2187,
                              2188
                            ],
                            "referencedDeclaration": 2188,
                            "src": "5356:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5356:37:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "5356:37:15"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 525,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "5425:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5425:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 527,
                              "name": "new_length",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 505,
                              "src": "5439:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 529,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "5459:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5451:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5451:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 524,
                            "name": "PriceChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "5413:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5413:57:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 532,
                        "nodeType": "EmitStatement",
                        "src": "5408:62:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 582,
                            "name": "new_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "5840:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5832:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5832:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 580,
                      "name": "setHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "5821:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5821:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "5821:30:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 586,
                      "name": "new_length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "5861:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5898:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 587,
                            "name": "priceHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "5874:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5874:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2025,
                        "src": "5874:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5874:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5861:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "5861:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 594,
                    "name": "new_length",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 505,
                    "src": "5919:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 595,
                  "nodeType": "Return",
                  "src": "5912:17:15"
                }
              ]
            },
            "documentation": null,
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 482,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 481,
                  "name": "onlyBroker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 745,
                  "src": "5035:10:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5035:10:15"
              }
            ],
            "name": "setNewPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "name": "delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "5015:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5015:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5014:20:15"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "5062:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5061:9:15"
            },
            "scope": 598,
            "src": "4994:943:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 599,
        "src": "169:5773:15"
      }
    ],
    "src": "0:5943:15"
  },
  "bytecode": "6080604052600980546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b506200005e6200004f6001600160e01b036200028d16565b6001600160e01b036200029116565b62000084620000756001600160e01b036200028d16565b6001600160e01b03620002e316565b60405162000092906200055c565b604051809103906000f080158015620000af573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b0392909216919091179055604051620000de906200056a565b604051809103906000f080158015620000fb573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b03928316179055670de0b6b3a76400006004819055600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155426005819055610e10016006556007805460ff191690556009546200017f911662000335565b8015620001a75750600954620001a7906001600160a01b03166001600160e01b036200035816565b620001ec57600954620001cc906001600160a01b03166001600160e01b036200037516565b600954620001ec906001600160a01b03166001600160e01b03620003ef16565b600554620002026001600160e01b036200028d16565b6001600160a01b03167f16c752bdf6502cc829c9a81132e2e73aeb12d145e0e3b1cd632a9759485a5f5360405160405180910390a360065462093a8001620002526001600160e01b036200028d16565b6001600160a01b03167f9cd0f0f4c626f6284b893eff5aa9a5f50e76b4fa9811bf3ec86ac52cc6ed782760405160405180910390a362000578565b3390565b620002ac8160006200046660201b620011b41790919060201c565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b620002fe8160016200046660201b620011b41790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b600062000352826001620004f360201b62000b8a1790919060201c565b92915050565b600062000352826000620004f360201b62000b8a1790919060201c565b6200039b6200038c6001600160e01b036200028d16565b6001600160e01b036200033516565b620003d85760405162461bcd60e51b815260040180806020018281038252602e81526020018062004ce5602e913960400191505060405180910390fd5b620003ec816001600160e01b03620002e316565b50565b62000415620004066001600160e01b036200028d16565b6001600160e01b036200035816565b620004525760405162461bcd60e51b815260040180806020018281038252603081526020018062004c936030913960400191505060405180910390fd5b620003ec816001600160e01b036200029116565b6200047b82826001600160e01b03620004f316565b15620004ce576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200053c5760405162461bcd60e51b815260040180806020018281038252602281526020018062004cc36022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611935806200197a83390190565b6119e480620032af83390190565b6113f280620005886000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638bad0c0a116100a2578063c8691b2a11610071578063c8691b2a14610299578063d96a094a146102b6578063e4849b32146102d3578063fc0c546a146102f0578063ffb4e0751461031457610116565b80638bad0c0a1461021f5780639c9795b214610227578063a48ff7821461025e578063a96711931461027c57610116565b806347535d7b116100e957806347535d7b146101a65780634f15e62e146101ae57806370480275146101b6578063761909d0146101dc578063836cae65146101f957610116565b8063053f14da1461011b57806322b31d9f1461013c57806324d7806c14610176578063431e5c9d1461019c575b600080fd5b61012361031c565b6040805192835260208301919091528051918290030190f35b6101626004803603602081101561015257600080fd5b50356001600160a01b0316610367565b604080519115158252519081900360200190f35b6101626004803603602081101561018c57600080fd5b50356001600160a01b031661037f565b6101a4610392565b005b6101626103a4565b6101a46103bf565b6101a4600480360360208110156101cc57600080fd5b50356001600160a01b031661047d565b6101a4600480360360208110156101f257600080fd5b50356104cf565b6101a46004803603602081101561020f57600080fd5b50356001600160a01b031661054f565b6101a461059e565b61024c6004803603604081101561023d57600080fd5b508035906020013515156105ae565b60408051918252519081900360200190f35b6102666106ce565b6040805160ff9092168252519081900360200190f35b61024c6004803603602081101561029257600080fd5b50356106d7565b61024c600480360360208110156102af57600080fd5b5035610973565b610162600480360360208110156102cc57600080fd5b5035610994565b610162600480360360208110156102e957600080fd5b5035610a7f565b6102f8610b23565b604080516001600160a01b039092168252519081900360200190f35b6102f8610b32565b600854600090819061033590600163ffffffff610b4116565b6008805461034a90600163ffffffff610b4116565b8154811061035457fe5b9060005260206000200154915091509091565b6000610379818363ffffffff610b8a16565b92915050565b600061037960018363ffffffff610b8a16565b6103a261039d610bf1565b610bf5565b565b600060055442101580156103ba57506006544211155b905090565b6103cf6103ca610bf1565b61037f565b61040a5760405162461bcd60e51b815260040180806020018281038252602e815260200180611390602e913960400191505060405180910390fd5b6006546005541061044c5760405162461bcd60e51b815260040180806020018281038252604081526020018061130d6040913960400191505060405180910390fd5b6006546104619061d2f063ffffffff610c3d16565b600581905561047890617e9063ffffffff610c3d16565b600655565b6104886103ca610bf1565b6104c35760405162461bcd60e51b815260040180806020018281038252602e815260200180611390602e913960400191505060405180910390fd5b6104cc81610c97565b50565b6104df6104da610bf1565b610367565b61051a5760405162461bcd60e51b81526004018080602001828103825260308152602001806112bc6030913960400191505060405180910390fd5b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61055a6104da610bf1565b6105955760405162461bcd60e51b81526004018080602001828103825260308152602001806112bc6030913960400191505060405180910390fd5b6104cc81610cdf565b6103a26105a9610bf1565b610d27565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d602081101561062957600080fd5b505160ff169050821561068c5761068461065c6103e861065087600263ffffffff610d6f16565b9063ffffffff610dc816565b61067883600a0a61065060045489610d6f90919063ffffffff16565b9063ffffffff610c3d16565b915050610379565b6106846106a66103e861065087600263ffffffff610d6f16565b6106c283600a0a61065060045489610d6f90919063ffffffff16565b9063ffffffff610b4116565b60075460ff1681565b60006106e46104da610bf1565b61071f5760405162461bcd60e51b81526004018080602001828103825260308152602001806112bc6030913960400191505060405180910390fd5b600880546000919061073890600163ffffffff610b4116565b8154811061074257fe5b60009182526020822001549150838201908082136107a7576040805162461bcd60e51b815260206004820152601760248201527f5072696365206d75737420626520706f73697469766521000000000000000000604482015290519081900360640190fd5b6107b26103ca610bf1565b15610847576107bf6103a4565b610803576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b818161080d610bf1565b6001600160a01b03167f024e1c492bc15609a5125924e67e792a203a4f550a353426fad01a2c6d5ff97660405160405180910390a461094d565b600754600460ff9091161061088d5760405162461bcd60e51b815260040180806020018281038252602181526020018061129b6021913960400191505060405180910390fd5b6108b36108a6606461065086600a63ffffffff610d6f16565b849063ffffffff610b4116565b821180156108e557506108e26108d5606461065086600a63ffffffff610d6f16565b849063ffffffff610c3d16565b82105b610936576040805162461bcd60e51b815260206004820152601c60248201527f43616e2774206368616e6765206d6f7265207468616e202d2b31302500000000604482015290519081900360640190fd5b6007805460ff8082166001011660ff199091161790555b610956826104cf565b60085461096a90600163ffffffff610b4116565b95945050505050565b60006008828154811061098257fe5b90600052602060002001549050919050565b600061099e6103a4565b6109e2576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b610a776109ed610bf1565b6002546040805163313ce56760e01b81529051610a72926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015610a3357600080fd5b505afa158015610a47573d6000803e3d6000fd5b505050506040513d6020811015610a5d57600080fd5b5051859060ff16600a0a63ffffffff610d6f16565b610e0a565b506001919050565b6000610a896103a4565b610acd576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b610a77610ad8610bf1565b6002546040805163313ce56760e01b81529051610b1e926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015610a3357600080fd5b610f7b565b6002546001600160a01b031681565b6003546001600160a01b031681565b6000610b8383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110b6565b9392505050565b60006001600160a01b038216610bd15760405162461bcd60e51b815260040180806020018281038252602281526020018061136e6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b610c0660008263ffffffff61114d16565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b600082820183811015610b83576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b610ca860018263ffffffff6111b416565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b610cf060008263ffffffff6111b416565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b610d3860018263ffffffff61114d16565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b600082610d7e57506000610379565b82820282848281610d8b57fe5b0414610b835760405162461bcd60e51b815260040180806020018281038252602181526020018061134d6021913960400191505060405180910390fd5b6000610b8383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611235565b6003546001600160a01b03166323b872dd8330610e288560016105ae565b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d6020811015610eba57600080fd5b5050600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b158015610f1257600080fd5b505af1158015610f26573d6000803e3d6000fd5b505050506040513d6020811015610f3c57600080fd5b505060045460405182906001600160a01b038516907f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed90600090a45050565b6002546040805163079cc67960e41b81526001600160a01b03858116600483015260248201859052915191909216916379cc679091604480830192600092919082900301818387803b158015610fd057600080fd5b505af1158015610fe4573d6000803e3d6000fd5b50506003546001600160a01b031691506340c10f199050836110078460006105ae565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561105657600080fd5b505af115801561106a573d6000803e3d6000fd5b505050506040513d602081101561108057600080fd5b5050600454604051829030907fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a90600090a45050565b600081848411156111455760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561110a5781810151838201526020016110f2565b50505050905090810190601f1680156111375780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6111578282610b8a565b6111925760405162461bcd60e51b81526004018080602001828103825260218152602001806112ec6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6111be8282610b8a565b15611210576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081836112845760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561110a5781810151838201526020016110f2565b50600083858161129057fe5b049594505050505056fe416c72656164792063616c6c7320342074696d65732074686973206e696768742e42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a72315820fdb588c28f36e7e169c0af4793089293643db49afb3c8ef22e535c462934914064736f6c634300051100326080604052600880546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b50604051806040016040528060078152602001662329a9a1b7b4b760c91b8152506040518060400160405280600381526020016246535360e81b8152506012620000996200008a6200018c60201b60201c565b6001600160e01b036200019116565b8251620000ae9060049060208601906200045c565b508151620000c49060059060208501906200045c565b506006805460ff191660ff9290921691909117905550620000f99050620000ea6200018c565b6001600160e01b03620001e316565b60085462000119906001600160a01b03166001600160e01b036200023516565b801562000141575060085462000141906001600160a01b03166001600160e01b036200025816565b620001865760085462000166906001600160a01b03166001600160e01b036200027516565b60085462000186906001600160a01b03166001600160e01b03620002ef16565b620004fe565b335b90565b620001ac8160036200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001fe8160076200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b600062000252826003620003f360201b62000d5a1790919060201c565b92915050565b600062000252826007620003f360201b62000d5a1790919060201c565b6200029b6200028c6001600160e01b036200018c16565b6001600160e01b036200023516565b620002d85760405162461bcd60e51b8152600401808060200182810382526030815260200180620018e36030913960400191505060405180910390fd5b620002ec816001600160e01b036200019116565b50565b62000315620003066001600160e01b036200018c16565b6001600160e01b036200025816565b620003525760405162461bcd60e51b8152600401808060200182810382526030815260200180620018b36030913960400191505060405180910390fd5b620002ec816001600160e01b03620001e316565b6200037b82826001600160e01b03620003f316565b15620003ce576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200043c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620019136022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049f57805160ff1916838001178555620004cf565b82800160010185558215620004cf579182015b82811115620004cf578251825591602001919060010190620004b2565b50620004dd929150620004e1565b5090565b6200018e91905b80821115620004dd5760008155600101620004e8565b6113a5806200050e6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820a9098e46632a4fb5e53c8bdd690b28c5d7db66650e7c11ec47acdb4e872000df64736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573736080604052600880546001600160a01b03199081167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790915560098054909116735831de8826c01cc7fb165b30d59356d9ba27886f1790553480156200005957600080fd5b50604051806040016040528060078152602001662830bca1b7b4b760c91b8152506040518060400160405280600381526020016250614360e81b8152506012620000bb620000ac6200023b60201b60201c565b6001600160e01b036200024016565b8251620000d09060049060208601906200050b565b508151620000e69060059060208501906200050b565b506006805460ff191660ff92909216919091179055506200011b90506200010c6200023b565b6001600160e01b036200029216565b6008546200013b906001600160a01b03166001600160e01b03620002e416565b801562000163575060085462000163906001600160a01b03166001600160e01b036200030716565b620001a85760085462000188906001600160a01b03166001600160e01b036200032416565b600854620001a8906001600160a01b03166001600160e01b036200039e16565b600954620001c8906001600160a01b03166001600160e01b03620002e416565b8015620001f05750600954620001f0906001600160a01b03166001600160e01b036200030716565b620002355760095462000215906001600160a01b03166001600160e01b036200032416565b60095462000235906001600160a01b03166001600160e01b036200039e16565b620005ad565b335b90565b6200025b8160036200041560201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620002ad8160076200041560201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b600062000301826003620004a260201b62000d5a1790919060201c565b92915050565b600062000301826007620004a260201b62000d5a1790919060201c565b6200034a6200033b6001600160e01b036200023b16565b6001600160e01b03620002e416565b620003875760405162461bcd60e51b8152600401808060200182810382526030815260200180620019926030913960400191505060405180910390fd5b6200039b816001600160e01b036200024016565b50565b620003c4620003b56001600160e01b036200023b16565b6001600160e01b036200030716565b620004015760405162461bcd60e51b8152600401808060200182810382526030815260200180620019626030913960400191505060405180910390fd5b6200039b816001600160e01b036200029216565b6200042a82826001600160e01b03620004a216565b156200047d576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620004eb5760405162461bcd60e51b8152600401808060200182810382526022815260200180620019c26022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200054e57805160ff19168380011785556200057e565b828001600101855582156200057e579182015b828111156200057e57825182559160200191906001019062000561565b506200058c92915062000590565b5090565b6200023d91905b808211156200058c576000815560010162000597565b6113a580620005bd6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820832c34285edf446fbccdf04915afe2ef2617f3406a2fc814a8e2ccb85443b47d64736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737342726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_exchange",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "64": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "62": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "63": [
            589,
            607,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "14": {},
      "15": {
        "token_exchange.sell": {
          "61": [
            1311,
            1319,
            true
          ]
        },
        "token_exchange.setNewPrice": {
          "55": [
            5254,
            5267,
            true
          ],
          "56": [
            5319,
            5340,
            false
          ],
          "57": [
            5364,
            5372,
            true
          ],
          "58": [
            5517,
            5536,
            true
          ],
          "59": [
            5598,
            5662,
            false
          ],
          "60": [
            5666,
            5730,
            true
          ]
        },
        "token_exchange.setOpenTime": {
          "54": [
            4390,
            4417,
            true
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "65": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "69": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "66": [
            2458,
            2464,
            false
          ],
          "67": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "68": [
            1845,
            1851,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "29": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "51": [
            328,
            391
          ],
          "52": [
            401,
            428
          ]
        },
        "Roles.has": {
          "27": [
            867,
            935
          ],
          "28": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "49": [
            581,
            645
          ],
          "50": [
            655,
            683
          ]
        }
      },
      "10": {
        "BrokerRole._addBroker": {
          "35": [
            944,
            965
          ],
          "36": [
            975,
            1000
          ]
        },
        "BrokerRole._removeBroker": {
          "30": [
            1072,
            1096
          ],
          "31": [
            1106,
            1133
          ]
        },
        "BrokerRole.addBroker": {
          "10": [
            773,
            792
          ]
        },
        "BrokerRole.isBroker": {
          "1": [
            668,
            696
          ]
        },
        "BrokerRole.renounceBroker": {
          "3": [
            848,
            875
          ]
        }
      },
      "11": {},
      "12": {},
      "14": {},
      "15": {
        "token_exchange._buy": {
          "42": [
            3321,
            3389
          ],
          "43": [
            3400,
            3429
          ],
          "44": [
            3440,
            3477
          ]
        },
        "token_exchange._sell": {
          "45": [
            3652,
            3682
          ],
          "46": [
            3693,
            3735
          ],
          "47": [
            3746,
            3788
          ]
        },
        "token_exchange.buy": {
          "23": [
            2663,
            2729
          ],
          "24": [
            2740,
            2751
          ]
        },
        "token_exchange.getFee": {
          "12": [
            4013,
            4082
          ],
          "13": [
            4120,
            4189
          ]
        },
        "token_exchange.getHistory": {
          "22": [
            4842,
            4871
          ]
        },
        "token_exchange.isOpen": {
          "4": [
            4268,
            4317
          ]
        },
        "token_exchange.lastPrice": {
          "0": [
            4673,
            4750
          ]
        },
        "token_exchange.sell": {
          "25": [
            3106,
            3173
          ]
        },
        "token_exchange.setHistory": {
          "9": [
            4956,
            4980
          ]
        },
        "token_exchange.setNewPrice": {
          "14": [
            5245,
            5295
          ],
          "15": [
            5356,
            5393
          ],
          "16": [
            5408,
            5470
          ],
          "17": [
            5509,
            5574
          ],
          "18": [
            5589,
            5764
          ],
          "19": [
            5779,
            5799
          ],
          "20": [
            5821,
            5851
          ],
          "21": [
            5861,
            5900
          ]
        },
        "token_exchange.setOpenTime": {
          "5": [
            4382,
            4486
          ],
          "6": [
            4496,
            4537
          ],
          "7": [
            4548,
            4588
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "32": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "41": [
            3150,
            3196
          ],
          "53": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "39": [
            2480,
            2488
          ],
          "40": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "26": [
            1351,
            1401
          ],
          "48": [
            1837,
            1866
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "AdminRole._addAdmin": {
          "33": [
            927,
            947
          ],
          "34": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "37": [
            1052,
            1075
          ],
          "38": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "8": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "2": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "11": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "BrokerRole",
    "BurnerRole",
    "Context",
    "ERC20",
    "ERC20Burnable",
    "ERC20Detailed",
    "ERC20Mintable",
    "IERC20",
    "IT_ERC20",
    "IT_PayCoin",
    "MinterRole",
    "PayCoin",
    "Roles",
    "SafeMath",
    "token_erc20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "169:5773:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:5773:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4602:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;596:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;596:107:10;-1:-1:-1;;;;;596:107:10;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;805:77:10:-;;;:::i;:::-;;4213:111:15;;;:::i;4330:266::-;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;4893:95:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4893:95:15;;:::i;709:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;709:90:10;-1:-1:-1;;;;;709:90:10;;:::i;791:75:9:-;;;:::i;3801:406:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3801:406:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;446:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4994:943;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4994:943:15;;:::i;4763:124::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4763:124:15;;:::i;2322:436::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2322:436:15;;:::i;2764:438::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2764:438:15;;:::i;289:21::-;;;:::i;:::-;;;;-1:-1:-1;;;;;289:21:15;;;;;;;;;;;;;;316:25;;;:::i;4602:155::-;4681:12;:19;4646:7;;;;4681:26;;4705:1;4681:26;:23;:26;:::i;:::-;4709:12;4722:19;;:26;;4746:1;4722:26;:23;:26;:::i;:::-;4709:40;;;;;;;;;;;;;;;;4673:77;;;;4602:155;;:::o;596:107:10:-;652:4;675:21;652:4;688:7;675:21;:12;:21;:::i;:::-;668:28;596:107;-1:-1:-1;;596:107:10:o;587:105:9:-;642:4;665:20;:7;677;665:20;:11;:20;:::i;805:77:10:-;848:27;862:12;:10;:12::i;:::-;848:13;:27::i;:::-;805:77::o;4213:111:15:-;4252:4;4282:12;;4275:3;:19;;:42;;;;;4305:12;;4298:3;:19;;4275:42;4268:49;;4213:111;:::o;4330:266::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4405:12:15;;4390;;:27;4382:104;;;;-1:-1:-1;;;4382:104:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4511:12;;:26;;4528:8;4511:26;:16;:26;:::i;:::-;4496:12;:41;;;4563:25;;4580:7;4563:25;:16;:25;:::i;:::-;4548:12;:40;4330:266::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;4893:95:15:-;497:22:10;506:12;:10;:12::i;:::-;497:8;:22::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4956:12:15;27:10:-1;;39:1;23:18;;45:23;;-1:-1;4956:24:15;;;;;;;4893:95::o;709:90:10:-;497:22;506:12;:10;:12::i;497:22::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;773:10;:19::i;791:75:9:-;833:26;846:12;:10;:12::i;:::-;833;:26::i;3801:406:15:-;3864:7;3936:11;3958:5;;;;;;;;;-1:-1:-1;;;;;3958:5:15;-1:-1:-1;;;;;3958:14:15;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3958:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3958:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3958:16:15;3950:25;;;-1:-1:-1;3986:214:15;;;;4020:62;4058:23;4076:4;4058:13;:6;4069:1;4058:13;:10;:13;:::i;:::-;:17;:23;:17;:23;:::i;:::-;4020:33;4049:3;4045:2;:7;4020:20;4031:8;;4020:6;:10;;:20;;;;:::i;:33::-;:37;:62;:37;:62;:::i;:::-;4013:69;;;;;3986:214;4127:62;4165:23;4183:4;4165:13;:6;4176:1;4165:13;:10;:13;:::i;:23::-;4127:33;4156:3;4152:2;:7;4127:20;4138:8;;4127:6;:10;;:20;;;;:::i;:33::-;:37;:62;:37;:62;:::i;446:28::-;;;;;;:::o;4994:943::-;5062:7;497:22:10;506:12;:10;:12::i;497:22::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5102:12:15;5115:19;;5081:18;;5102:12;5115:26;;5139:1;5115:26;:23;:26;:::i;:::-;5102:40;;;;;;;;;;;;;;;;;;-1:-1:-1;5172:32:15;;;;5254:13;;;5245:50;;;;;-1:-1:-1;;;5245:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;5319:21;5327:12;:10;:12::i;5319:21::-;5315:496;;;5364:8;:6;:8::i;:::-;5356:37;;;;;-1:-1:-1;;;5356:37:15;;;;;;;;;;;;-1:-1:-1;;;5356:37:15;;;;;;;;;;;;;;;5459:9;5439:10;5425:12;:10;:12::i;:::-;-1:-1:-1;;;;;5413:57:15;;;;;;;;;;;5315:496;;;5517:15;;5535:1;5517:15;;;;:19;5509:65;;;;-1:-1:-1;;;5509:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5619:43;5634:27;5657:3;5634:18;:10;5649:2;5634:18;:14;:18;:::i;:27::-;5619:10;;:43;:14;:43;:::i;:::-;5606:9;5598:64;:132;;;;-1:-1:-1;5687:43:15;5702:27;5725:3;5702:18;:10;5717:2;5702:18;:14;:18;:::i;:27::-;5687:10;;:43;:14;:43;:::i;:::-;5674:9;5666:64;5598:132;5589:175;;;;;-1:-1:-1;;;5589:175:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;5779:15;:20;;;;;;5798:1;5779:20;;-1:-1:-1;;5779:20:15;;;;;;5315:496;5821:30;5840:9;5821:10;:30::i;:::-;5874:12;:19;:26;;5898:1;5874:26;:23;:26;:::i;:::-;5861:39;4994:943;-1:-1:-1;;;;;4994:943:15:o;4763:124::-;4824:7;4849:12;4862:8;4849:22;;;;;;;;;;;;;;;;4842:29;;4763:124;;;:::o;2322:436::-;2388:4;1311:8;:6;:8::i;:::-;1303:37;;;;;-1:-1:-1;;;1303:37:15;;;;;;;;;;;;-1:-1:-1;;;1303:37:15;;;;;;;;;;;;;;;2663:66;2668:12;:10;:12::i;:::-;2710:5;;:16;;;-1:-1:-1;;;2710:16:15;;;;2682:46;;-1:-1:-1;;;;;2710:5:15;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;2710:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2710:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2710:16:15;2682:11;;2702:25;;2698:2;:29;2682:46;:15;:46;:::i;:::-;2663:4;:66::i;:::-;-1:-1:-1;2747:4:15;2322:436;;;:::o;2764:438::-;2831:4;1311:8;:6;:8::i;:::-;1303:37;;;;;-1:-1:-1;;;1303:37:15;;;;;;;;;;;;-1:-1:-1;;;1303:37:15;;;;;;;;;;;;;;;3106:67;3112:12;:10;:12::i;:::-;3154:5;;:16;;;-1:-1:-1;;;3154:16:15;;;;3126:46;;-1:-1:-1;;;;;3154:5:15;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;3126:46:15;3106:5;:67::i;289:21::-;;;-1:-1:-1;;;;;289:21:15;;:::o;316:25::-;;;-1:-1:-1;;;;;316:25:15;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:3:o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;1013:127:10:-;1072:24;:8;1088:7;1072:24;:15;:24;:::i;:::-;1111:22;;-1:-1:-1;;;;;1111:22:10;;;;;;;;1013:127;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;872:116:9;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;888:119:10:-;944:21;:8;957:7;944:21;:12;:21;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;994:124:9:-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;2159:459:3:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;3208:276:15:-;3321:7;;-1:-1:-1;;;;;3321:7:15;:20;3342:9;3361:4;3368:20;3375:6;3321:7;3368:6;:20::i;:::-;3321:68;;;;;;;;;;;;;-1:-1:-1;;;;;3321:68:15;-1:-1:-1;;;;;3321:68:15;;;;;;-1:-1:-1;;;;;3321:68:15;-1:-1:-1;;;;;3321:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3321:68:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3321:68:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3400:5:15;;:29;;;-1:-1:-1;;;3400:29:15;;-1:-1:-1;;;;;3400:29:15;;;;;;;;;;;;;;;:5;;;;;:10;;:29;;;;;3321:68;;3400:29;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;3400:29:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3400:29:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3468:8:15;;3445:32;;3460:6;;-1:-1:-1;;;;;3445:32:15;;;;;;;;3208:276;;:::o;3490:305::-;3652:5;;:30;;;-1:-1:-1;;;3652:30:15;;-1:-1:-1;;;;;3652:30:15;;;;;;;;;;;;;;;:5;;;;;:14;;:30;;;;;:5;;:30;;;;;;;:5;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3652:30:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3693:7:15;;-1:-1:-1;;;;;3693:7:15;;-1:-1:-1;3693:12:15;;-1:-1:-1;3706:6:15;3713:21;3720:6;3693:7;3713:6;:21::i;:::-;3693:42;;;;;;;;;;;;;-1:-1:-1;;;;;3693:42:15;-1:-1:-1;;;;;3693:42:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3693:42:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3693:42:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3779:8:15;;3751:37;;3771:6;;3764:4;;3751:37;;;;;3490:305;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;510:180:1:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;3718:338:3:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:3;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:3:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    169,
    5942
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BAD0C0A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC8691B2A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC8691B2A EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xFFB4E075 EQ PUSH2 0x314 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x9C9795B2 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA48FF782 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xA9671193 EQ PUSH2 0x27C JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x47535D7B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x4F15E62E EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x761909D0 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x836CAE65 EQ PUSH2 0x1F9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x22B31D9F EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x431E5C9D EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37F JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47D JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x54F JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x973 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x994 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x2F8 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x335 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xB41 AND JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x34A SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xB41 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x354 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xB8A AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xB8A AND JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x39D PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI POP PUSH1 0x6 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x3CA PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1390 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD LT PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130D PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x461 SWAP1 PUSH2 0xD2F0 PUSH4 0xFFFFFFFF PUSH2 0xC3D AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH2 0x478 SWAP1 PUSH2 0x7E90 PUSH4 0xFFFFFFFF PUSH2 0xC3D AND JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x488 PUSH2 0x3CA PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1390 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0xC97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DF PUSH2 0x4DA PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12BC PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x55A PUSH2 0x4DA PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12BC PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x5A9 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND SWAP1 POP DUP3 ISZERO PUSH2 0x68C JUMPI PUSH2 0x684 PUSH2 0x65C PUSH2 0x3E8 PUSH2 0x650 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xD6F AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDC8 AND JUMP JUMPDEST PUSH2 0x678 DUP4 PUSH1 0xA EXP PUSH2 0x650 PUSH1 0x4 SLOAD DUP10 PUSH2 0xD6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC3D AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x379 JUMP JUMPDEST PUSH2 0x684 PUSH2 0x6A6 PUSH2 0x3E8 PUSH2 0x650 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xD6F AND JUMP JUMPDEST PUSH2 0x6C2 DUP4 PUSH1 0xA EXP PUSH2 0x650 PUSH1 0x4 SLOAD DUP10 PUSH2 0xD6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB41 AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E4 PUSH2 0x4DA PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12BC PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x738 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xB41 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x742 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD SWAP2 POP DUP4 DUP3 ADD SWAP1 DUP1 DUP3 SGT PUSH2 0x7A7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520706F73697469766521000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x7B2 PUSH2 0x3CA PUSH2 0xBF1 JUMP JUMPDEST ISZERO PUSH2 0x847 JUMPI PUSH2 0x7BF PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x803 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0x80D PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x24E1C492BC15609A5125924E67E792A203A4F550A353426FAD01A2C6D5FF976 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x129B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B3 PUSH2 0x8A6 PUSH1 0x64 PUSH2 0x650 DUP7 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0xD6F AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB41 AND JUMP JUMPDEST DUP3 GT DUP1 ISZERO PUSH2 0x8E5 JUMPI POP PUSH2 0x8E2 PUSH2 0x8D5 PUSH1 0x64 PUSH2 0x650 DUP7 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0xD6F AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC3D AND JUMP JUMPDEST DUP3 LT JUMPDEST PUSH2 0x936 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206368616E6765206D6F7265207468616E202D2B31302500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x1 ADD AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x956 DUP3 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x96A SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xB41 AND JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x9E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA77 PUSH2 0x9ED PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0xA72 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0xD6F AND JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA89 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0xACD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA77 PUSH2 0xAD8 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0xB1E SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x10B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x136E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0xC06 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x114D AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCA8 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x11B4 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xCF0 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x11B4 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xD38 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x114D AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD7E JUMPI POP PUSH1 0x0 PUSH2 0x379 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xD8B JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x134D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH2 0xE28 DUP6 PUSH1 0x1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x40C10F19 SWAP1 POP DUP4 PUSH2 0x1007 DUP5 PUSH1 0x0 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1056 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 ADDRESS SWAP1 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1137 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x1157 DUP3 DUP3 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12EC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x11BE DUP3 DUP3 PUSH2 0xB8A JUMP JUMPDEST ISZERO PUSH2 0x1210 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x110A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10F2 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1290 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID COINBASE PUSH13 0x72656164792063616C6C732034 KECCAK256 PUSH21 0x696D65732074686973206E696768742E42726F6B65 PUSH19 0x526F6C653A2063616C6C657220646F6573206E PUSH16 0x742068617665207468652042726F6B65 PUSH19 0x20726F6C65526F6C65733A206163636F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65536F6D6574 PUSH9 0x696E6727732077726F PUSH15 0x672C206D6179626520796F75207365 PUSH21 0x2074686520696E697469616C205F6F70656E696E67 PUSH21 0x696D652077726F6E672E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7752 PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F206164647265737341646D696E52 PUSH16 0x6C653A2063616C6C657220646F657320 PUSH15 0x6F742068617665207468652041646D PUSH10 0x6E20726F6C65A265627A PUSH27 0x72315820FDB588C28F36E7E169C0AF4793089293643DB49AFB3C8E CALLCODE 0x2E MSTORE8 0x5C CHAINID 0x29 CALLVALUE SWAP2 BLOCKHASH PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        169,
        5942
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8BAD0C0A"
    },
    "38": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC8691B2A"
    },
    "49": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "GT",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC8691B2A"
    },
    "60": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x299"
    },
    "64": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD96A094A"
    },
    "71": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B6"
    },
    "75": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE4849B32"
    },
    "82": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D3"
    },
    "86": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "94": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F0"
    },
    "97": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "98": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "99": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFB4E075"
    },
    "104": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "105": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x314"
    },
    "108": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "109": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMP",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "114": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "115": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8BAD0C0A"
    },
    "120": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "121": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21F"
    },
    "124": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9C9795B2"
    },
    "131": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x227"
    },
    "135": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA48FF782"
    },
    "142": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "143": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25E"
    },
    "146": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "147": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "148": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9671193"
    },
    "153": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "154": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27C"
    },
    "157": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "158": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMP",
      "path": "15"
    },
    "162": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "163": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "164": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x47535D7B"
    },
    "169": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "GT",
      "path": "15"
    },
    "170": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "174": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "175": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x47535D7B"
    },
    "180": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "181": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A6"
    },
    "184": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "185": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "186": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4F15E62E"
    },
    "191": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "192": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE"
    },
    "195": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "196": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70480275"
    },
    "202": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "203": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B6"
    },
    "206": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "207": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "208": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x761909D0"
    },
    "213": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "214": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DC"
    },
    "217": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "218": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x836CAE65"
    },
    "224": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "225": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F9"
    },
    "228": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "229": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMP",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "234": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "235": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x53F14DA"
    },
    "240": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "241": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "245": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "246": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x22B31D9F"
    },
    "251": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "252": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13C"
    },
    "255": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "256": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "257": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x24D7806C"
    },
    "262": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "263": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x176"
    },
    "266": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "267": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "268": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x431E5C9D"
    },
    "273": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "15"
    },
    "274": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19C"
    },
    "277": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "278": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "279": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "REVERT",
      "path": "15"
    },
    "283": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "284": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x123"
    },
    "287": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31C"
    },
    "290": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4602,
        4757
      ],
      "op": "JUMP",
      "path": "15"
    },
    "291": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "292": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "294": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "295": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "296": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "297": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "DUP4",
      "path": "15"
    },
    "298": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "299": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "301": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "DUP4",
      "path": "15"
    },
    "302": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "ADD",
      "path": "15"
    },
    "303": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "304": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "305": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "306": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "307": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "308": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "309": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "310": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "DUP3",
      "path": "15"
    },
    "311": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "312": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SUB",
      "path": "15"
    },
    "313": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "ADD",
      "path": "15"
    },
    "314": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "315": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "RETURN",
      "path": "15"
    },
    "316": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "317": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x162"
    },
    "320": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "322": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "323": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "324": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "327": {
      "op": "DUP2"
    },
    "328": {
      "op": "LT"
    },
    "329": {
      "op": "ISZERO"
    },
    "330": {
      "op": "PUSH2",
      "value": "0x152"
    },
    "333": {
      "op": "JUMPI"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "336": {
      "op": "DUP1"
    },
    "337": {
      "op": "REVERT"
    },
    "338": {
      "op": "JUMPDEST"
    },
    "339": {
      "op": "POP"
    },
    "340": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "347": {
      "op": "SHL"
    },
    "348": {
      "op": "SUB"
    },
    "349": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "AND",
      "path": "10"
    },
    "350": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x367"
    },
    "353": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "354": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "355": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "357": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "358": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "359": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "360": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "361": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "362": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP3",
      "path": "10"
    },
    "363": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "364": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "365": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "366": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP2",
      "path": "10"
    },
    "367": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "368": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "369": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "371": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ADD",
      "path": "10"
    },
    "372": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "373": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "RETURN",
      "path": "10"
    },
    "374": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "375": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x162"
    },
    "378": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "380": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "381": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "382": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "385": {
      "op": "DUP2"
    },
    "386": {
      "op": "LT"
    },
    "387": {
      "op": "ISZERO"
    },
    "388": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "391": {
      "op": "JUMPI"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "394": {
      "op": "DUP1"
    },
    "395": {
      "op": "REVERT"
    },
    "396": {
      "op": "JUMPDEST"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "408": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37F"
    },
    "411": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "412": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "413": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A4"
    },
    "416": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x392"
    },
    "419": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "420": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "421": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "STOP",
      "path": "10"
    },
    "422": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4213,
        4324
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "423": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4213,
        4324
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x162"
    },
    "426": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4213,
        4324
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A4"
    },
    "429": {
      "fn": "token_exchange.isOpen",
      "jump": "i",
      "offset": [
        4213,
        4324
      ],
      "op": "JUMP",
      "path": "15"
    },
    "430": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4330,
        4596
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "431": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4330,
        4596
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A4"
    },
    "434": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4330,
        4596
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BF"
    },
    "437": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4330,
        4596
      ],
      "op": "JUMP",
      "path": "15"
    },
    "438": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "439": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A4"
    },
    "442": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "444": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "445": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "446": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "DUP2"
    },
    "450": {
      "op": "LT"
    },
    "451": {
      "op": "ISZERO"
    },
    "452": {
      "op": "PUSH2",
      "value": "0x1CC"
    },
    "455": {
      "op": "JUMPI"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "458": {
      "op": "DUP1"
    },
    "459": {
      "op": "REVERT"
    },
    "460": {
      "op": "JUMPDEST"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "472": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x47D"
    },
    "475": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "476": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "477": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A4"
    },
    "480": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "482": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "DUP1",
      "path": "15"
    },
    "483": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "484": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "SUB",
      "path": "15"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "487": {
      "op": "DUP2"
    },
    "488": {
      "op": "LT"
    },
    "489": {
      "op": "ISZERO"
    },
    "490": {
      "op": "PUSH2",
      "value": "0x1F2"
    },
    "493": {
      "op": "JUMPI"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "496": {
      "op": "DUP1"
    },
    "497": {
      "op": "REVERT"
    },
    "498": {
      "op": "JUMPDEST"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "501": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CF"
    },
    "504": {
      "fn": "token_exchange.setHistory",
      "jump": "i",
      "offset": [
        4893,
        4988
      ],
      "op": "JUMP",
      "path": "15"
    },
    "505": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "506": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A4"
    },
    "509": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "511": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "DUP1",
      "path": "10"
    },
    "512": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "513": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "SUB",
      "path": "10"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "LT"
    },
    "518": {
      "op": "ISZERO"
    },
    "519": {
      "op": "PUSH2",
      "value": "0x20F"
    },
    "522": {
      "op": "JUMPI"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "525": {
      "op": "DUP1"
    },
    "526": {
      "op": "REVERT"
    },
    "527": {
      "op": "JUMPDEST"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "AND",
      "path": "10"
    },
    "539": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x54F"
    },
    "542": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        709,
        799
      ],
      "op": "JUMP",
      "path": "10"
    },
    "543": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "544": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A4"
    },
    "547": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x59E"
    },
    "550": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "551": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "552": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24C"
    },
    "555": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "557": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "DUP1",
      "path": "15"
    },
    "558": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "559": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SUB",
      "path": "15"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "562": {
      "op": "DUP2"
    },
    "563": {
      "op": "LT"
    },
    "564": {
      "op": "ISZERO"
    },
    "565": {
      "op": "PUSH2",
      "value": "0x23D"
    },
    "568": {
      "op": "JUMPI"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "571": {
      "op": "DUP1"
    },
    "572": {
      "op": "REVERT"
    },
    "573": {
      "op": "JUMPDEST"
    },
    "574": {
      "op": "POP"
    },
    "575": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "DUP1",
      "path": "15"
    },
    "576": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "577": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "578": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "580": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "ADD",
      "path": "15"
    },
    "581": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "582": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "583": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "584": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5AE"
    },
    "587": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3801,
        4207
      ],
      "op": "JUMP",
      "path": "15"
    },
    "588": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "589": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "591": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "DUP1",
      "path": "15"
    },
    "592": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "593": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "594": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "DUP3",
      "path": "15"
    },
    "595": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "596": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "597": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "598": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "DUP2",
      "path": "15"
    },
    "599": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "600": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SUB",
      "path": "15"
    },
    "601": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "603": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "ADD",
      "path": "15"
    },
    "604": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "605": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "RETURN",
      "path": "15"
    },
    "606": {
      "offset": [
        446,
        474
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "607": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x266"
    },
    "610": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6CE"
    },
    "613": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        446,
        474
      ],
      "op": "JUMP",
      "path": "15"
    },
    "614": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "615": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "617": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "DUP1",
      "path": "15"
    },
    "618": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "619": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "621": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "622": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "623": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "AND",
      "path": "15"
    },
    "624": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "DUP3",
      "path": "15"
    },
    "625": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "626": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "627": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "628": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "DUP2",
      "path": "15"
    },
    "629": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "630": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SUB",
      "path": "15"
    },
    "631": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "633": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "ADD",
      "path": "15"
    },
    "634": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "635": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "RETURN",
      "path": "15"
    },
    "636": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "637": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24C"
    },
    "640": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "642": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "DUP1",
      "path": "15"
    },
    "643": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "644": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "SUB",
      "path": "15"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "op": "DUP2"
    },
    "648": {
      "op": "LT"
    },
    "649": {
      "op": "ISZERO"
    },
    "650": {
      "op": "PUSH2",
      "value": "0x292"
    },
    "653": {
      "op": "JUMPI"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "656": {
      "op": "DUP1"
    },
    "657": {
      "op": "REVERT"
    },
    "658": {
      "op": "JUMPDEST"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "661": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6D7"
    },
    "664": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4994,
        5937
      ],
      "op": "JUMP",
      "path": "15"
    },
    "665": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "666": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24C"
    },
    "669": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "671": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "DUP1",
      "path": "15"
    },
    "672": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "673": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "SUB",
      "path": "15"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "676": {
      "op": "DUP2"
    },
    "677": {
      "op": "LT"
    },
    "678": {
      "op": "ISZERO"
    },
    "679": {
      "op": "PUSH2",
      "value": "0x2AF"
    },
    "682": {
      "op": "JUMPI"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "685": {
      "op": "DUP1"
    },
    "686": {
      "op": "REVERT"
    },
    "687": {
      "op": "JUMPDEST"
    },
    "688": {
      "op": "POP"
    },
    "689": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "690": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x973"
    },
    "693": {
      "fn": "token_exchange.getHistory",
      "jump": "i",
      "offset": [
        4763,
        4887
      ],
      "op": "JUMP",
      "path": "15"
    },
    "694": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "695": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x162"
    },
    "698": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "700": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "DUP1",
      "path": "15"
    },
    "701": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "702": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "SUB",
      "path": "15"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "705": {
      "op": "DUP2"
    },
    "706": {
      "op": "LT"
    },
    "707": {
      "op": "ISZERO"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x2CC"
    },
    "711": {
      "op": "JUMPI"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "REVERT"
    },
    "716": {
      "op": "JUMPDEST"
    },
    "717": {
      "op": "POP"
    },
    "718": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "719": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x994"
    },
    "722": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2322,
        2758
      ],
      "op": "JUMP",
      "path": "15"
    },
    "723": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "724": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x162"
    },
    "727": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "729": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "DUP1",
      "path": "15"
    },
    "730": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "731": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "SUB",
      "path": "15"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "734": {
      "op": "DUP2"
    },
    "735": {
      "op": "LT"
    },
    "736": {
      "op": "ISZERO"
    },
    "737": {
      "op": "PUSH2",
      "value": "0x2E9"
    },
    "740": {
      "op": "JUMPI"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "743": {
      "op": "DUP1"
    },
    "744": {
      "op": "REVERT"
    },
    "745": {
      "op": "JUMPDEST"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "748": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA7F"
    },
    "751": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2764,
        3202
      ],
      "op": "JUMP",
      "path": "15"
    },
    "752": {
      "offset": [
        289,
        310
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "753": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F8"
    },
    "756": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB23"
    },
    "759": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        289,
        310
      ],
      "op": "JUMP",
      "path": "15"
    },
    "760": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "761": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "763": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP1",
      "path": "15"
    },
    "764": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "op": "SUB"
    },
    "773": {
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "774": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "775": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "AND",
      "path": "15"
    },
    "776": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP3",
      "path": "15"
    },
    "777": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "778": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "779": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "780": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP2",
      "path": "15"
    },
    "781": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "782": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SUB",
      "path": "15"
    },
    "783": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "785": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "ADD",
      "path": "15"
    },
    "786": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "787": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "RETURN",
      "path": "15"
    },
    "788": {
      "offset": [
        316,
        341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "789": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F8"
    },
    "792": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB32"
    },
    "795": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        316,
        341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "796": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "797": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4693
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 0,
      "value": "0x8"
    },
    "799": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4700
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "800": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4646,
        4653
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "802": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4646,
        4653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "803": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4646,
        4653
      ],
      "op": "DUP2",
      "path": "15"
    },
    "804": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4646,
        4653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "805": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x335"
    },
    "808": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "809": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4705,
        4706
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "811": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4707
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "816": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4704
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB41"
    },
    "819": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4707
      ],
      "op": "AND",
      "path": "15"
    },
    "820": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4681,
        4707
      ],
      "op": "JUMP",
      "path": "15"
    },
    "821": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4681,
        4707
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "822": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4721
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "824": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4741
      ],
      "op": "DUP1",
      "path": "15"
    },
    "825": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4741
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "826": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4748
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34A"
    },
    "829": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4748
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "830": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4746,
        4747
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "832": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4748
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "837": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4745
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB41"
    },
    "840": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4748
      ],
      "op": "AND",
      "path": "15"
    },
    "841": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4722,
        4748
      ],
      "op": "JUMP",
      "path": "15"
    },
    "842": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4722,
        4748
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "843": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "844": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "845": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "846": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "LT",
      "path": "15"
    },
    "847": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x354"
    },
    "850": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "851": {
      "dev": "Index out of range",
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "INVALID",
      "path": "15"
    },
    "852": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "853": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "854": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "856": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "857": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "859": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "861": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "862": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "ADD",
      "path": "15"
    },
    "863": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4709,
        4749
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "864": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4673,
        4750
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "865": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4673,
        4750
      ],
      "op": "POP",
      "path": "15"
    },
    "866": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4673,
        4750
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "867": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4673,
        4750
      ],
      "op": "POP",
      "path": "15"
    },
    "868": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "869": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4602,
        4757
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "870": {
      "fn": "token_exchange.lastPrice",
      "jump": "o",
      "offset": [
        4602,
        4757
      ],
      "op": "JUMP",
      "path": "15"
    },
    "871": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "872": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "874": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 1,
      "value": "0x379"
    },
    "877": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "878": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        688,
        695
      ],
      "op": "DUP4",
      "path": "10"
    },
    "879": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "884": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        687
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB8A"
    },
    "887": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "AND",
      "path": "10"
    },
    "888": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        675,
        696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "889": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "890": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        668,
        696
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "891": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "fn": "BrokerRole.isBroker",
      "jump": "o",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "895": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "896": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "898": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 2,
      "value": "0x379"
    },
    "901": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "903": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "904": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "909": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB8A"
    },
    "912": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "913": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "914": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "915": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 3,
      "value": "0x3A2"
    },
    "918": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39D"
    },
    "921": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF1"
    },
    "924": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        862,
        874
      ],
      "op": "JUMP",
      "path": "10"
    },
    "925": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "926": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF5"
    },
    "929": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        848,
        875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "930": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "931": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "o",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "932": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4213,
        4324
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "933": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4252,
        4256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "935": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4282,
        4294
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x5"
    },
    "937": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4282,
        4294
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "938": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4278
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "939": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4294
      ],
      "op": "LT",
      "path": "15"
    },
    "940": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "941": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4317
      ],
      "op": "DUP1",
      "path": "15"
    },
    "942": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4317
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "943": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4317
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BA"
    },
    "946": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4317
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "947": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4317
      ],
      "op": "POP",
      "path": "15"
    },
    "948": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4305,
        4317
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "950": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4305,
        4317
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "951": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4298,
        4301
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "952": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4298,
        4317
      ],
      "op": "GT",
      "path": "15"
    },
    "953": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4298,
        4317
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "954": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4275,
        4317
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "955": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4268,
        4317
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "956": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4268,
        4317
      ],
      "op": "POP",
      "path": "15"
    },
    "957": {
      "fn": "token_exchange.isOpen",
      "offset": [
        4213,
        4324
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "958": {
      "fn": "token_exchange.isOpen",
      "jump": "o",
      "offset": [
        4213,
        4324
      ],
      "op": "JUMP",
      "path": "15"
    },
    "959": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4330,
        4596
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "960": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CF"
    },
    "963": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CA"
    },
    "966": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF1"
    },
    "969": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "970": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "971": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37F"
    },
    "974": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "975": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "976": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x40A"
    },
    "979": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "980": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "982": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "991": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "992": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "994": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "995": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "996": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "997": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "999": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1000": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1001": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1002": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1003": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1004": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1005": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1007": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1008": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1009": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1011": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1012": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1013": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1390"
    },
    "1016": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1018": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1019": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1020": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1022": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1023": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1024": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1025": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1026": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1028": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1029": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1030": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1031": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1032": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1033": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1034": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1035": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4405,
        4417
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 5,
      "value": "0x6"
    },
    "1037": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4405,
        4417
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1038": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4390,
        4402
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1040": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4390,
        4402
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1041": {
      "branch": 54,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4390,
        4417
      ],
      "op": "LT",
      "path": "15"
    },
    "1042": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44C"
    },
    "1045": {
      "branch": 54,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1046": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1048": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1057": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1058": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1060": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "ADD",
      "path": "15"
    },
    "1061": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1062": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1063": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1065": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "ADD",
      "path": "15"
    },
    "1066": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1067": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1068": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "SUB",
      "path": "15"
    },
    "1069": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1070": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1071": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1073": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1074": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1075": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1077": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "ADD",
      "path": "15"
    },
    "1078": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1079": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x130D"
    },
    "1082": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1084": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1085": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "1086": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1088": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "ADD",
      "path": "15"
    },
    "1089": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1090": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "POP",
      "path": "15"
    },
    "1091": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "POP",
      "path": "15"
    },
    "1092": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1094": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1095": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1096": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1097": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "SUB",
      "path": "15"
    },
    "1098": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1099": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1100": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4382,
        4486
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1101": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4523
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 6,
      "value": "0x6"
    },
    "1103": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4523
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1104": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x461"
    },
    "1107": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1108": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4528,
        4536
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD2F0"
    },
    "1111": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4537
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1116": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC3D"
    },
    "1119": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4537
      ],
      "op": "AND",
      "path": "15"
    },
    "1120": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4511,
        4537
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1121": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4511,
        4537
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1122": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4496,
        4508
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1124": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4496,
        4537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1125": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4496,
        4537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1126": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4496,
        4537
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1127": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4563,
        4588
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 7,
      "value": "0x478"
    },
    "1130": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4563,
        4588
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1131": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4580,
        4587
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7E90"
    },
    "1134": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4563,
        4588
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1139": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4563,
        4579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC3D"
    },
    "1142": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4563,
        4588
      ],
      "op": "AND",
      "path": "15"
    },
    "1143": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4563,
        4588
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1144": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4563,
        4588
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1145": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4548,
        4560
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1147": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4548,
        4588
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1148": {
      "fn": "token_exchange.setOpenTime",
      "jump": "o",
      "offset": [
        4330,
        4596
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1149": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1150": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x488"
    },
    "1153": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CA"
    },
    "1156": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF1"
    },
    "1159": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1160": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1161": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C3"
    },
    "1164": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1165": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1167": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1174": {
      "op": "SHL"
    },
    "1175": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1176": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1177": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1179": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1180": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1181": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1182": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1184": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1185": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1186": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1187": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1188": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1189": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1190": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1192": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1193": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1194": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1196": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1197": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1198": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1390"
    },
    "1201": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1203": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1204": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1205": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1207": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1208": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1209": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1210": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1211": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1213": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1214": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1215": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1216": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1217": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1218": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1219": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1220": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 8,
      "value": "0x4CC"
    },
    "1223": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1224": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC97"
    },
    "1227": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1228": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1229": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "1230": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1231": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4893,
        4988
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1232": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4DF"
    },
    "1235": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4DA"
    },
    "1238": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF1"
    },
    "1241": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1242": {
      "fn": "token_exchange.setHistory",
      "offset": [
        506,
        518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1243": {
      "offset": [
        497,
        505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x367"
    },
    "1246": {
      "jump": "i",
      "offset": [
        497,
        519
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1247": {
      "fn": "token_exchange.setHistory",
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1248": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51A"
    },
    "1251": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1252": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1254": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1263": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1264": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1266": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1267": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1268": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1269": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1271": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1272": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1273": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1274": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1275": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1276": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1277": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1279": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1280": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1281": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1283": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1284": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1285": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12BC"
    },
    "1288": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1290": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1291": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1292": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1294": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1295": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1296": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1297": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1298": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1300": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1301": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1302": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1303": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1304": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1305": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1306": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1307": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4968
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 9,
      "value": "0x8"
    },
    "1309": {
      "op": "DUP1"
    },
    "1310": {
      "op": "SLOAD"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "DUP2"
    },
    "1314": {
      "op": "ADD"
    },
    "1315": {
      "op": "DUP3"
    },
    "1316": {
      "op": "SSTORE"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1319": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1320": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1321": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1322": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1323": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "1356": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "ADD",
      "path": "15"
    },
    "1357": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4956,
        4980
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1358": {
      "fn": "token_exchange.setHistory",
      "jump": "o",
      "offset": [
        4893,
        4988
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1359": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1360": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x55A"
    },
    "1363": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4DA"
    },
    "1366": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF1"
    },
    "1369": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1370": {
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1371": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x595"
    },
    "1374": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1375": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1377": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1386": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1387": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1389": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1390": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1391": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1392": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1394": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1395": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1396": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1397": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1398": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1399": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1400": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1402": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1403": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1404": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1406": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1407": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1408": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12BC"
    },
    "1411": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1413": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1414": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1415": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1417": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1418": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1419": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1420": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1421": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1423": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1424": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1425": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1426": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1427": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1428": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1429": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1430": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        792
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 10,
      "value": "0x4CC"
    },
    "1433": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        784,
        791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1434": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCDF"
    },
    "1437": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        773,
        792
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1438": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1439": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 11,
      "value": "0x3A2"
    },
    "1442": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5A9"
    },
    "1445": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF1"
    },
    "1448": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1449": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1450": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD27"
    },
    "1453": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1454": {
      "fn": "token_exchange.getFee",
      "offset": [
        3801,
        4207
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1455": {
      "fn": "token_exchange.getFee",
      "offset": [
        3864,
        3871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1457": {
      "fn": "token_exchange.getFee",
      "offset": [
        3936,
        3947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1458": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1460": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1462": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1463": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1464": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1465": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1468": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "EXP",
      "path": "15"
    },
    "1469": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1470": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "DIV",
      "path": "15"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "op": "SUB"
    },
    "1479": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3963
      ],
      "op": "AND",
      "path": "15"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "SUB"
    },
    "1488": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3972
      ],
      "op": "AND",
      "path": "15"
    },
    "1489": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3972
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "1494": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1496": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1497": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1498": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1503": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "AND",
      "path": "15"
    },
    "1504": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1506": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "SHL",
      "path": "15"
    },
    "1507": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1508": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1509": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1511": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "ADD",
      "path": "15"
    },
    "1512": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1514": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1516": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1517": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1518": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1519": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "SUB",
      "path": "15"
    },
    "1520": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1521": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1522": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1523": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1524": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1525": {
      "op": "DUP1"
    },
    "1526": {
      "op": "ISZERO"
    },
    "1527": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1530": {
      "op": "JUMPI"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1533": {
      "op": "DUP1"
    },
    "1534": {
      "op": "REVERT"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "POP",
      "path": "15"
    },
    "1537": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "GAS",
      "path": "15"
    },
    "1538": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1539": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1540": {
      "op": "DUP1"
    },
    "1541": {
      "op": "ISZERO"
    },
    "1542": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "1545": {
      "op": "JUMPI"
    },
    "1546": {
      "op": "RETURNDATASIZE"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1549": {
      "op": "DUP1"
    },
    "1550": {
      "op": "RETURNDATACOPY"
    },
    "1551": {
      "op": "RETURNDATASIZE"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1554": {
      "op": "REVERT"
    },
    "1555": {
      "op": "JUMPDEST"
    },
    "1556": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "POP",
      "path": "15"
    },
    "1557": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "POP",
      "path": "15"
    },
    "1558": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "POP",
      "path": "15"
    },
    "1559": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "POP",
      "path": "15"
    },
    "1560": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1562": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1563": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1566": {
      "op": "DUP2"
    },
    "1567": {
      "op": "LT"
    },
    "1568": {
      "op": "ISZERO"
    },
    "1569": {
      "op": "PUSH2",
      "value": "0x629"
    },
    "1572": {
      "op": "JUMPI"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1575": {
      "op": "DUP1"
    },
    "1576": {
      "op": "REVERT"
    },
    "1577": {
      "op": "JUMPDEST"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "token_exchange.getFee",
      "offset": [
        3958,
        3974
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1580": {
      "fn": "token_exchange.getFee",
      "offset": [
        3950,
        3975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1582": {
      "fn": "token_exchange.getFee",
      "offset": [
        3950,
        3975
      ],
      "op": "AND",
      "path": "15"
    },
    "1583": {
      "fn": "token_exchange.getFee",
      "offset": [
        3950,
        3975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "fn": "token_exchange.getFee",
      "offset": [
        3986,
        4200
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1586": {
      "fn": "token_exchange.getFee",
      "offset": [
        3986,
        4200
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1587": {
      "fn": "token_exchange.getFee",
      "offset": [
        3986,
        4200
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x68C"
    },
    "1590": {
      "fn": "token_exchange.getFee",
      "offset": [
        3986,
        4200
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1591": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4082
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 12,
      "value": "0x684"
    },
    "1594": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4081
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x65C"
    },
    "1597": {
      "fn": "token_exchange.getFee",
      "offset": [
        4076,
        4080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "1600": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x650"
    },
    "1603": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4064
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1604": {
      "fn": "token_exchange.getFee",
      "offset": [
        4069,
        4070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1606": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4071
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1611": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4068
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "1614": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4071
      ],
      "op": "AND",
      "path": "15"
    },
    "1615": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4058,
        4071
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1616": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1617": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4075
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1618": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4081
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1623": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDC8"
    },
    "1626": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4081
      ],
      "op": "AND",
      "path": "15"
    },
    "1627": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4058,
        4081
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1628": {
      "fn": "token_exchange.getFee",
      "offset": [
        4058,
        4081
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1629": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x678"
    },
    "1632": {
      "fn": "token_exchange.getFee",
      "offset": [
        4049,
        4052
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1633": {
      "fn": "token_exchange.getFee",
      "offset": [
        4045,
        4047
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "1635": {
      "fn": "token_exchange.getFee",
      "offset": [
        4045,
        4052
      ],
      "op": "EXP",
      "path": "15"
    },
    "1636": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4040
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x650"
    },
    "1639": {
      "fn": "token_exchange.getFee",
      "offset": [
        4031,
        4039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1641": {
      "fn": "token_exchange.getFee",
      "offset": [
        4031,
        4039
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1642": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4026
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1643": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "1646": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4030
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1647": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4040
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1648": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4040
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1649": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4040
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1654": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4040
      ],
      "op": "AND",
      "path": "15"
    },
    "1655": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4020,
        4040
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1656": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4053
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1657": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4057
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1658": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4082
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1663": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC3D"
    },
    "1666": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4082
      ],
      "op": "AND",
      "path": "15"
    },
    "1667": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4020,
        4082
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1668": {
      "fn": "token_exchange.getFee",
      "offset": [
        4020,
        4082
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1669": {
      "fn": "token_exchange.getFee",
      "offset": [
        4013,
        4082
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1670": {
      "fn": "token_exchange.getFee",
      "offset": [
        4013,
        4082
      ],
      "op": "POP",
      "path": "15"
    },
    "1671": {
      "fn": "token_exchange.getFee",
      "offset": [
        4013,
        4082
      ],
      "op": "POP",
      "path": "15"
    },
    "1672": {
      "fn": "token_exchange.getFee",
      "offset": [
        4013,
        4082
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x379"
    },
    "1675": {
      "fn": "token_exchange.getFee",
      "offset": [
        4013,
        4082
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1676": {
      "fn": "token_exchange.getFee",
      "offset": [
        3986,
        4200
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1677": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4189
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 13,
      "value": "0x684"
    },
    "1680": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A6"
    },
    "1683": {
      "fn": "token_exchange.getFee",
      "offset": [
        4183,
        4187
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "1686": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4178
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x650"
    },
    "1689": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4171
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1690": {
      "fn": "token_exchange.getFee",
      "offset": [
        4176,
        4177
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1692": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4178
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1697": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4175
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "1700": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4178
      ],
      "op": "AND",
      "path": "15"
    },
    "1701": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4165,
        4178
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1702": {
      "fn": "token_exchange.getFee",
      "offset": [
        4165,
        4188
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1703": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4160
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6C2"
    },
    "1706": {
      "fn": "token_exchange.getFee",
      "offset": [
        4156,
        4159
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1707": {
      "fn": "token_exchange.getFee",
      "offset": [
        4152,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "1709": {
      "fn": "token_exchange.getFee",
      "offset": [
        4152,
        4159
      ],
      "op": "EXP",
      "path": "15"
    },
    "1710": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x650"
    },
    "1713": {
      "fn": "token_exchange.getFee",
      "offset": [
        4138,
        4146
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1715": {
      "fn": "token_exchange.getFee",
      "offset": [
        4138,
        4146
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1716": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4133
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1717": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4137
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "1720": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4137
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1721": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1722": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1723": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4147
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1728": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4147
      ],
      "op": "AND",
      "path": "15"
    },
    "1729": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4127,
        4147
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1730": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4160
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1731": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1732": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4189
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1737": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB41"
    },
    "1740": {
      "fn": "token_exchange.getFee",
      "offset": [
        4127,
        4189
      ],
      "op": "AND",
      "path": "15"
    },
    "1741": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        4127,
        4189
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1742": {
      "offset": [
        446,
        474
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1743": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1745": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1746": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1748": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "AND",
      "path": "15"
    },
    "1749": {
      "fn": "token_exchange.getFee",
      "offset": [
        446,
        474
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1750": {
      "fn": "token_exchange.getFee",
      "jump": "o",
      "offset": [
        446,
        474
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1751": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1752": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5062,
        5069
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1754": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E4"
    },
    "1757": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4DA"
    },
    "1760": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF1"
    },
    "1763": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1764": {
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1765": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71F"
    },
    "1768": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1769": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1771": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1780": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1781": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1783": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1784": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1785": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1786": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1788": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1789": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1790": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1791": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1792": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1793": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1794": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1796": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1797": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1798": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1800": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1801": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1802": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12BC"
    },
    "1805": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1807": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1808": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1809": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1811": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1812": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1813": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1814": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1815": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1817": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1818": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1819": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1820": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1821": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1822": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1823": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1824": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5114
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1826": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5134
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1827": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5134
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1828": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5099
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1830": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5099
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1831": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5114
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1832": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5141
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x738"
    },
    "1835": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5141
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1836": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5139,
        5140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1838": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5141
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1843": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5138
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB41"
    },
    "1846": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5141
      ],
      "op": "AND",
      "path": "15"
    },
    "1847": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5115,
        5141
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1848": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5115,
        5141
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1849": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1850": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1851": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1852": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "LT",
      "path": "15"
    },
    "1853": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x742"
    },
    "1856": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1857": {
      "dev": "Index out of range",
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1858": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1859": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1861": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1862": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1863": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1864": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1866": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1867": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1868": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "ADD",
      "path": "15"
    },
    "1869": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1870": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5102,
        5142
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1871": {
      "op": "POP"
    },
    "1872": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5172,
        5204
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1873": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5172,
        5204
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1874": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5172,
        5204
      ],
      "op": "ADD",
      "path": "15"
    },
    "1875": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5172,
        5204
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1876": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5254,
        5267
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 14
    },
    "1877": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5254,
        5267
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1878": {
      "branch": 55,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5254,
        5267
      ],
      "op": "SGT",
      "path": "15"
    },
    "1879": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7A7"
    },
    "1882": {
      "branch": 55,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1883": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1885": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1886": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1895": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1896": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1898": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1900": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1901": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "ADD",
      "path": "15"
    },
    "1902": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1903": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x17"
    },
    "1905": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1907": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1908": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "ADD",
      "path": "15"
    },
    "1909": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1910": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x5072696365206D75737420626520706F73697469766521000000000000000000"
    },
    "1943": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1945": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1946": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "ADD",
      "path": "15"
    },
    "1947": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1948": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1949": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1950": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1951": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1952": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1953": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "SUB",
      "path": "15"
    },
    "1954": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1956": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "ADD",
      "path": "15"
    },
    "1957": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1958": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1959": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5245,
        5295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1960": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5319,
        5340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7B2"
    },
    "1963": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5327,
        5339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3CA"
    },
    "1966": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5327,
        5337
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBF1"
    },
    "1969": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5327,
        5339
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1970": {
      "branch": 56,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5319,
        5340
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1971": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1972": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x847"
    },
    "1975": {
      "branch": 56,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1976": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5364,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 15,
      "value": "0x7BF"
    },
    "1979": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5364,
        5370
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A4"
    },
    "1982": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5364,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1983": {
      "branch": 57,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5364,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1984": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x803"
    },
    "1987": {
      "branch": 57,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1988": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1990": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1991": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1998": {
      "op": "SHL"
    },
    "1999": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2000": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2001": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2003": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2005": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2006": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "ADD",
      "path": "15"
    },
    "2007": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2008": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "2010": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2012": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2013": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "ADD",
      "path": "15"
    },
    "2014": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2015": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2037": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2038": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "ADD",
      "path": "15"
    },
    "2039": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2040": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2041": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2042": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2043": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2044": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2045": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "SUB",
      "path": "15"
    },
    "2046": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2048": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "ADD",
      "path": "15"
    },
    "2049": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2050": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2051": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5356,
        5393
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2052": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5459,
        5468
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 16
    },
    "2053": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5439,
        5449
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2054": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5425,
        5437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x80D"
    },
    "2057": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5425,
        5435
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBF1"
    },
    "2060": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5425,
        5437
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2061": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5425,
        5437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "AND",
      "path": "15"
    },
    "2071": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x24E1C492BC15609A5125924E67E792A203A4F550A353426FAD01A2C6D5FF976"
    },
    "2104": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2106": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2107": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2109": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2110": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2111": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2112": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "SUB",
      "path": "15"
    },
    "2113": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2114": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5413,
        5470
      ],
      "op": "LOG4",
      "path": "15"
    },
    "2115": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x94D"
    },
    "2118": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2119": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2120": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5532
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 17,
      "value": "0x7"
    },
    "2122": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5532
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2123": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5535,
        5536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2125": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2127": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2128": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5532
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2129": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5532
      ],
      "op": "AND",
      "path": "15"
    },
    "2130": {
      "branch": 58,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5517,
        5536
      ],
      "op": "LT",
      "path": "15"
    },
    "2131": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x88D"
    },
    "2134": {
      "branch": 58,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2135": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2137": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2146": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2147": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2149": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "ADD",
      "path": "15"
    },
    "2150": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2151": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2152": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2154": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "ADD",
      "path": "15"
    },
    "2155": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2156": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2157": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "SUB",
      "path": "15"
    },
    "2158": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2159": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2160": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x21"
    },
    "2162": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2163": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2164": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2166": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "ADD",
      "path": "15"
    },
    "2167": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2168": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x129B"
    },
    "2171": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x21"
    },
    "2173": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2174": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "2175": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2177": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "ADD",
      "path": "15"
    },
    "2178": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2179": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "POP",
      "path": "15"
    },
    "2180": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "POP",
      "path": "15"
    },
    "2181": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2183": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2184": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2185": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2186": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "SUB",
      "path": "15"
    },
    "2187": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2188": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2189": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5509,
        5574
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2190": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5662
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 18,
      "value": "0x8B3"
    },
    "2193": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A6"
    },
    "2196": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5657,
        5660
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2198": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x650"
    },
    "2201": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5644
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2202": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5649,
        5651
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "2204": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5652
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2209": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5648
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "2212": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5652
      ],
      "op": "AND",
      "path": "15"
    },
    "2213": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5634,
        5652
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2214": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5634,
        5661
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2215": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5629
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2216": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5629
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2217": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5662
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2222": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB41"
    },
    "2225": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5662
      ],
      "op": "AND",
      "path": "15"
    },
    "2226": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5619,
        5662
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2227": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5619,
        5662
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2228": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5606,
        5615
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2229": {
      "branch": 59,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5598,
        5662
      ],
      "op": "GT",
      "path": "15"
    },
    "2230": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5598,
        5730
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2231": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5598,
        5730
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2232": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5598,
        5730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8E5"
    },
    "2235": {
      "branch": 59,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5598,
        5730
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2236": {
      "op": "POP"
    },
    "2237": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5730
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8E2"
    },
    "2240": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5729
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8D5"
    },
    "2243": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5725,
        5728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2245": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5720
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x650"
    },
    "2248": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5712
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2249": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5717,
        5719
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "2251": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5720
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2256": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5716
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "2259": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5720
      ],
      "op": "AND",
      "path": "15"
    },
    "2260": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5702,
        5720
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2261": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5702,
        5729
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2262": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5697
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2263": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5697
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2264": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5730
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2269": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC3D"
    },
    "2272": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5730
      ],
      "op": "AND",
      "path": "15"
    },
    "2273": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5687,
        5730
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2274": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5687,
        5730
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2275": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5674,
        5683
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2276": {
      "branch": 60,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5666,
        5730
      ],
      "op": "LT",
      "path": "15"
    },
    "2277": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5598,
        5730
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2278": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x936"
    },
    "2281": {
      "branch": 60,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2282": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2284": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2285": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2294": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2295": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2297": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2299": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2300": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "ADD",
      "path": "15"
    },
    "2301": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2302": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "2304": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2306": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2307": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "ADD",
      "path": "15"
    },
    "2308": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2309": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x43616E2774206368616E6765206D6F7265207468616E202D2B31302500000000"
    },
    "2342": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2344": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2345": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "ADD",
      "path": "15"
    },
    "2346": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2347": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2348": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2349": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2350": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2351": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2352": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "SUB",
      "path": "15"
    },
    "2353": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2355": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "ADD",
      "path": "15"
    },
    "2356": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2357": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2358": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5589,
        5764
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2359": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5794
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 19,
      "value": "0x7"
    },
    "2361": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2362": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2363": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2365": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2366": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2367": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "AND",
      "path": "15"
    },
    "2368": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5798,
        5799
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2370": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "ADD",
      "path": "15"
    },
    "2371": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "AND",
      "path": "15"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2374": {
      "op": "NOT"
    },
    "2375": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2376": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2377": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "AND",
      "path": "15"
    },
    "2378": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "OR",
      "path": "15"
    },
    "2379": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2380": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5779,
        5799
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2381": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5315,
        5811
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2382": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5821,
        5851
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 20,
      "value": "0x956"
    },
    "2385": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5840,
        5849
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2386": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5821,
        5831
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CF"
    },
    "2389": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5821,
        5851
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2390": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5821,
        5851
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2391": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5886
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 21,
      "value": "0x8"
    },
    "2393": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5893
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2394": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5900
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x96A"
    },
    "2397": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5900
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2398": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5898,
        5899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2400": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5900
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2405": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5897
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB41"
    },
    "2408": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5900
      ],
      "op": "AND",
      "path": "15"
    },
    "2409": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5874,
        5900
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2410": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5874,
        5900
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2411": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5861,
        5900
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2412": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4994,
        5937
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2413": {
      "op": "POP"
    },
    "2414": {
      "op": "POP"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "fn": "token_exchange.setNewPrice",
      "jump": "o",
      "offset": [
        4994,
        5937
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2419": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2420": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4824,
        4831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2422": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4861
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x8"
    },
    "2424": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4862,
        4870
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2425": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2426": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2427": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2428": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "LT",
      "path": "15"
    },
    "2429": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x982"
    },
    "2432": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2433": {
      "dev": "Index out of range",
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2434": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2435": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2436": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2438": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2439": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2441": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2443": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2444": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "ADD",
      "path": "15"
    },
    "2445": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4849,
        4871
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2446": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4842,
        4871
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2447": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4842,
        4871
      ],
      "op": "POP",
      "path": "15"
    },
    "2448": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2449": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2450": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4763,
        4887
      ],
      "op": "POP",
      "path": "15"
    },
    "2451": {
      "fn": "token_exchange.getHistory",
      "jump": "o",
      "offset": [
        4763,
        4887
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2452": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2453": {
      "fn": "token_exchange.buy",
      "offset": [
        2388,
        2392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2455": {
      "offset": [
        1311,
        1319
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x99E"
    },
    "2458": {
      "offset": [
        1311,
        1317
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A4"
    },
    "2461": {
      "jump": "i",
      "offset": [
        1311,
        1319
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2462": {
      "fn": "token_exchange.buy",
      "offset": [
        1311,
        1319
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2463": {
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9E2"
    },
    "2466": {
      "offset": [
        1303,
        1340
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2467": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2469": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2470": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2471": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2477": {
      "op": "SHL"
    },
    "2478": {
      "offset": [
        1303,
        1340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2479": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2480": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2482": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2484": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2485": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2486": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2487": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "2489": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2491": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2492": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2493": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2494": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2516": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2517": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2518": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2519": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2520": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2521": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2522": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2523": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2524": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "SUB",
      "path": "15"
    },
    "2525": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2527": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2528": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2529": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2530": {
      "fn": "token_exchange.buy",
      "offset": [
        1303,
        1340
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2531": {
      "fn": "token_exchange.buy",
      "offset": [
        2663,
        2729
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 23,
      "value": "0xA77"
    },
    "2534": {
      "fn": "token_exchange.buy",
      "offset": [
        2668,
        2680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9ED"
    },
    "2537": {
      "fn": "token_exchange.buy",
      "offset": [
        2668,
        2678
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBF1"
    },
    "2540": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2668,
        2680
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2541": {
      "fn": "token_exchange.buy",
      "offset": [
        2668,
        2680
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2542": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2544": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2715
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2545": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2547": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2548": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2549": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2558": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2559": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2560": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2561": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA72"
    },
    "2564": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2728
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2715
      ],
      "op": "AND",
      "path": "15"
    },
    "2574": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2715
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2575": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2724
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "2580": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2724
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2581": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2583": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2584": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2585": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "ADD",
      "path": "15"
    },
    "2586": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2587": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2589": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2590": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2591": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2592": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2593": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2594": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "SUB",
      "path": "15"
    },
    "2595": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "ADD",
      "path": "15"
    },
    "2596": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2597": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2715
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2598": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2599": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2600": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2601": {
      "op": "DUP1"
    },
    "2602": {
      "op": "ISZERO"
    },
    "2603": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2606": {
      "op": "JUMPI"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2609": {
      "op": "DUP1"
    },
    "2610": {
      "op": "REVERT"
    },
    "2611": {
      "op": "JUMPDEST"
    },
    "2612": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "POP",
      "path": "15"
    },
    "2613": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "GAS",
      "path": "15"
    },
    "2614": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "2615": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2616": {
      "op": "DUP1"
    },
    "2617": {
      "op": "ISZERO"
    },
    "2618": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2621": {
      "op": "JUMPI"
    },
    "2622": {
      "op": "RETURNDATASIZE"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "DUP1"
    },
    "2626": {
      "op": "RETURNDATACOPY"
    },
    "2627": {
      "op": "RETURNDATASIZE"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2630": {
      "op": "REVERT"
    },
    "2631": {
      "op": "JUMPDEST"
    },
    "2632": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "POP",
      "path": "15"
    },
    "2633": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "POP",
      "path": "15"
    },
    "2634": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "POP",
      "path": "15"
    },
    "2635": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "POP",
      "path": "15"
    },
    "2636": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2638": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2639": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2642": {
      "op": "DUP2"
    },
    "2643": {
      "op": "LT"
    },
    "2644": {
      "op": "ISZERO"
    },
    "2645": {
      "op": "PUSH2",
      "value": "0xA5D"
    },
    "2648": {
      "op": "JUMPI"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2651": {
      "op": "DUP1"
    },
    "2652": {
      "op": "REVERT"
    },
    "2653": {
      "op": "JUMPDEST"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "fn": "token_exchange.buy",
      "offset": [
        2710,
        2726
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2656": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2693
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2657": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2693
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2658": {
      "fn": "token_exchange.buy",
      "offset": [
        2702,
        2727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2660": {
      "fn": "token_exchange.buy",
      "offset": [
        2702,
        2727
      ],
      "op": "AND",
      "path": "15"
    },
    "2661": {
      "fn": "token_exchange.buy",
      "offset": [
        2698,
        2700
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "2663": {
      "fn": "token_exchange.buy",
      "offset": [
        2698,
        2727
      ],
      "op": "EXP",
      "path": "15"
    },
    "2664": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2728
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2669": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6F"
    },
    "2672": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2728
      ],
      "op": "AND",
      "path": "15"
    },
    "2673": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2682,
        2728
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2674": {
      "fn": "token_exchange.buy",
      "offset": [
        2682,
        2728
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2675": {
      "fn": "token_exchange.buy",
      "offset": [
        2663,
        2667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE0A"
    },
    "2678": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2663,
        2729
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2679": {
      "fn": "token_exchange.buy",
      "offset": [
        2663,
        2729
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "fn": "token_exchange.buy",
      "offset": [
        2747,
        2751
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0x1"
    },
    "2683": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2684": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2685": {
      "fn": "token_exchange.buy",
      "offset": [
        2322,
        2758
      ],
      "op": "POP",
      "path": "15"
    },
    "2686": {
      "fn": "token_exchange.buy",
      "jump": "o",
      "offset": [
        2322,
        2758
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2687": {
      "fn": "token_exchange.sell",
      "offset": [
        2764,
        3202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2688": {
      "fn": "token_exchange.sell",
      "offset": [
        2831,
        2835
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2690": {
      "offset": [
        1311,
        1319
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA89"
    },
    "2693": {
      "offset": [
        1311,
        1317
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A4"
    },
    "2696": {
      "jump": "i",
      "offset": [
        1311,
        1319
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2697": {
      "branch": 61,
      "fn": "token_exchange.sell",
      "offset": [
        1311,
        1319
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2698": {
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xACD"
    },
    "2701": {
      "branch": 61,
      "offset": [
        1303,
        1340
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2702": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2704": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2705": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2706": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2712": {
      "op": "SHL"
    },
    "2713": {
      "offset": [
        1303,
        1340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2714": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2715": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2717": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2719": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2720": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2721": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2722": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "2724": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2726": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2727": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2728": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2729": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2751": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2752": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2753": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2754": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2755": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2756": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2757": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2758": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2759": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "SUB",
      "path": "15"
    },
    "2760": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2762": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "ADD",
      "path": "15"
    },
    "2763": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2764": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2765": {
      "fn": "token_exchange.sell",
      "offset": [
        1303,
        1340
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2766": {
      "fn": "token_exchange.sell",
      "offset": [
        3106,
        3173
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 25,
      "value": "0xA77"
    },
    "2769": {
      "fn": "token_exchange.sell",
      "offset": [
        3112,
        3124
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAD8"
    },
    "2772": {
      "fn": "token_exchange.sell",
      "offset": [
        3112,
        3122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBF1"
    },
    "2775": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        3112,
        3124
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2776": {
      "fn": "token_exchange.sell",
      "offset": [
        3112,
        3124
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2777": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3159
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2779": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3159
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2780": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2782": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2783": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2784": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2793": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2794": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2795": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2796": {
      "fn": "token_exchange.sell",
      "offset": [
        3126,
        3172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB1E"
    },
    "2799": {
      "fn": "token_exchange.sell",
      "offset": [
        3126,
        3172
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2806": {
      "op": "SHL"
    },
    "2807": {
      "op": "SUB"
    },
    "2808": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3159
      ],
      "op": "AND",
      "path": "15"
    },
    "2809": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3159
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2810": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3168
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "2815": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3168
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2816": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2818": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2819": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2820": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "ADD",
      "path": "15"
    },
    "2821": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2822": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2824": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2825": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2826": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2827": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2828": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2829": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "SUB",
      "path": "15"
    },
    "2830": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "ADD",
      "path": "15"
    },
    "2831": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2832": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3159
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2833": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2834": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2835": {
      "fn": "token_exchange.sell",
      "offset": [
        3154,
        3170
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2836": {
      "op": "DUP1"
    },
    "2837": {
      "op": "ISZERO"
    },
    "2838": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2841": {
      "op": "JUMPI"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2844": {
      "op": "DUP1"
    },
    "2845": {
      "fn": "token_exchange.sell",
      "offset": [
        3126,
        3172
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2846": {
      "fn": "token_exchange.sell",
      "offset": [
        3126,
        3172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2847": {
      "fn": "token_exchange.sell",
      "offset": [
        3106,
        3111
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF7B"
    },
    "2850": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        3106,
        3173
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2851": {
      "offset": [
        289,
        310
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2852": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2854": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2861": {
      "op": "SHL"
    },
    "2862": {
      "op": "SUB"
    },
    "2863": {
      "offset": [
        289,
        310
      ],
      "op": "AND",
      "path": "15"
    },
    "2864": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2865": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        289,
        310
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2866": {
      "offset": [
        316,
        341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2867": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2869": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2876": {
      "op": "SHL"
    },
    "2877": {
      "op": "SUB"
    },
    "2878": {
      "offset": [
        316,
        341
      ],
      "op": "AND",
      "path": "15"
    },
    "2879": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2880": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        316,
        341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2881": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2882": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2884": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0xB83"
    },
    "2887": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2888": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2889": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2891": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2892": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2893": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2895": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "2896": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2898": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2899": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2900": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "2902": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2903": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2904": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2906": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "2907": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2940": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2941": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2942": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "3"
    },
    "2943": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B6"
    },
    "2946": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2947": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2948": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2949": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "op": "POP"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2954": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2955": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "op": "SUB"
    },
    "2965": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 27
    },
    "2966": {
      "branch": 62,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "2967": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD1"
    },
    "2970": {
      "branch": 62,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2971": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2973": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2980": {
      "op": "SHL"
    },
    "2981": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2982": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2983": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2985": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2986": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2987": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2988": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2990": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2991": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2992": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2993": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "2994": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2995": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2996": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "2998": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2999": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3000": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3002": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3003": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3004": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136E"
    },
    "3007": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "3009": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3010": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "3011": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3013": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3014": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3015": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "3016": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "3017": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3019": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3020": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3021": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3022": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "3023": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3024": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3025": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3026": {
      "op": "POP"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3033": {
      "op": "SHL"
    },
    "3034": {
      "op": "SUB"
    },
    "3035": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 28
    },
    "3036": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3038": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3039": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3040": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3041": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3043": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3044": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3045": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3046": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3047": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3049": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3050": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3051": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3052": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3054": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "3055": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3056": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3057": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3058": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 29
    },
    "3059": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3060": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3061": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3062": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 30,
      "value": "0xC06"
    },
    "3065": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3067": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1088,
        1095
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3068": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3073": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1087
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x114D"
    },
    "3076": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "AND",
      "path": "10"
    },
    "3077": {
      "fn": "BrokerRole._removeBroker",
      "jump": "i",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3078": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3079": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 31,
      "value": "0x40"
    },
    "3081": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3088": {
      "op": "SHL"
    },
    "3089": {
      "op": "SUB"
    },
    "3090": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3091": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "AND",
      "path": "10"
    },
    "3092": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3093": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0"
    },
    "3126": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3127": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3129": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3130": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3131": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "POP",
      "path": "10"
    },
    "3132": {
      "fn": "BrokerRole._removeBroker",
      "jump": "o",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3133": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3134": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3136": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3137": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3138": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "3"
    },
    "3139": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 32
    },
    "3140": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3141": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "3"
    },
    "3142": {
      "branch": 65,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3143": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB83"
    },
    "3146": {
      "branch": 65,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3147": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3149": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3150": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3159": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3160": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3162": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3164": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3165": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3166": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3167": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "3169": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3171": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3172": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3173": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3174": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3207": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3209": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3210": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3211": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3212": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3213": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3214": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3215": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3216": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3217": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "3"
    },
    "3218": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3220": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3221": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3222": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3223": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3224": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 33,
      "value": "0xCA8"
    },
    "3227": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3229": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3230": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3235": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11B4"
    },
    "3238": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "3239": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3240": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3241": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 34,
      "value": "0x40"
    },
    "3243": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3250": {
      "op": "SHL"
    },
    "3251": {
      "op": "SUB"
    },
    "3252": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3253": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "3254": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3255": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "3288": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3289": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3291": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3292": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3293": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "3294": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3295": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3296": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 35,
      "value": "0xCF0"
    },
    "3299": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3301": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        957,
        964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3302": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3307": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11B4"
    },
    "3310": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "AND",
      "path": "10"
    },
    "3311": {
      "fn": "BrokerRole._addBroker",
      "jump": "i",
      "offset": [
        944,
        965
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3312": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3313": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 36,
      "value": "0x40"
    },
    "3315": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3322": {
      "op": "SHL"
    },
    "3323": {
      "op": "SUB"
    },
    "3324": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3325": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "AND",
      "path": "10"
    },
    "3326": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3327": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB"
    },
    "3360": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3361": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3363": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3364": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3365": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "POP",
      "path": "10"
    },
    "3366": {
      "fn": "BrokerRole._addBroker",
      "jump": "o",
      "offset": [
        888,
        1007
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3367": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3368": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 37,
      "value": "0xD38"
    },
    "3371": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3373": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3374": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3379": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x114D"
    },
    "3382": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "3383": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3384": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3385": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 38,
      "value": "0x40"
    },
    "3387": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3394": {
      "op": "SHL"
    },
    "3395": {
      "op": "SUB"
    },
    "3396": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3397": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "3398": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3399": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "3432": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3433": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3435": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3436": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3437": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "3438": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3439": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3440": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3442": {
      "branch": 66,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3443": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7E"
    },
    "3446": {
      "branch": 66,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 39,
      "value": "0x0"
    },
    "3450": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x379"
    },
    "3453": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3454": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3455": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3456": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3457": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "3"
    },
    "3458": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3459": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3460": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3461": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3462": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0xD8B"
    },
    "3465": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3466": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3467": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3468": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "3"
    },
    "3469": {
      "branch": 67,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "3"
    },
    "3470": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB83"
    },
    "3473": {
      "branch": 67,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3474": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3476": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3483": {
      "op": "SHL"
    },
    "3484": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3485": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3486": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3488": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3489": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3490": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3491": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3493": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3494": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3495": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3496": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "3497": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3498": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3499": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3501": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3502": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3503": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3505": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3506": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3507": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x134D"
    },
    "3510": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3512": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3513": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3514": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3516": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3517": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3518": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "3519": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "3520": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3522": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3523": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3524": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3525": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "3526": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3527": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3528": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3529": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3531": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0xB83"
    },
    "3534": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3535": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3536": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3538": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3539": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3540": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3542": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "3543": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3545": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3546": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3547": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "3549": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3550": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3551": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3553": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "3554": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "3587": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3588": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3589": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "3"
    },
    "3590": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1235"
    },
    "3593": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3594": {
      "fn": "token_exchange._buy",
      "offset": [
        3208,
        3484
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3595": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3328
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0x3"
    },
    "3597": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3328
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "op": "SUB"
    },
    "3606": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3328
      ],
      "op": "AND",
      "path": "15"
    },
    "3607": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3341
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "3612": {
      "fn": "token_exchange._buy",
      "offset": [
        3342,
        3351
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3613": {
      "fn": "token_exchange._buy",
      "offset": [
        3361,
        3365
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "3614": {
      "fn": "token_exchange._buy",
      "offset": [
        3368,
        3388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE28"
    },
    "3617": {
      "fn": "token_exchange._buy",
      "offset": [
        3375,
        3381
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3618": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3328
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3620": {
      "fn": "token_exchange._buy",
      "offset": [
        3368,
        3374
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5AE"
    },
    "3623": {
      "fn": "token_exchange._buy",
      "jump": "i",
      "offset": [
        3368,
        3388
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3624": {
      "fn": "token_exchange._buy",
      "offset": [
        3368,
        3388
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3625": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3627": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3628": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3629": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3634": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "AND",
      "path": "15"
    },
    "3635": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3637": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "SHL",
      "path": "15"
    },
    "3638": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3639": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3640": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3642": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "ADD",
      "path": "15"
    },
    "3643": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3644": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "op": "SUB"
    },
    "3653": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "AND",
      "path": "15"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "op": "SUB"
    },
    "3662": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "AND",
      "path": "15"
    },
    "3663": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3664": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3665": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3667": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "ADD",
      "path": "15"
    },
    "3668": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3675": {
      "op": "SHL"
    },
    "3676": {
      "op": "SUB"
    },
    "3677": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "AND",
      "path": "15"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "op": "SUB"
    },
    "3686": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "AND",
      "path": "15"
    },
    "3687": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3688": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3689": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3691": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "ADD",
      "path": "15"
    },
    "3692": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3693": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3694": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3695": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3697": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "ADD",
      "path": "15"
    },
    "3698": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3699": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3700": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3701": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3702": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3703": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3705": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3707": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3708": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3709": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3710": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "SUB",
      "path": "15"
    },
    "3711": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3712": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3714": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3715": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3716": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3717": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3718": {
      "op": "DUP1"
    },
    "3719": {
      "op": "ISZERO"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE90"
    },
    "3723": {
      "op": "JUMPI"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3726": {
      "op": "DUP1"
    },
    "3727": {
      "op": "REVERT"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3730": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "GAS",
      "path": "15"
    },
    "3731": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "CALL",
      "path": "15"
    },
    "3732": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3733": {
      "op": "DUP1"
    },
    "3734": {
      "op": "ISZERO"
    },
    "3735": {
      "op": "PUSH2",
      "value": "0xEA4"
    },
    "3738": {
      "op": "JUMPI"
    },
    "3739": {
      "op": "RETURNDATASIZE"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3742": {
      "op": "DUP1"
    },
    "3743": {
      "op": "RETURNDATACOPY"
    },
    "3744": {
      "op": "RETURNDATASIZE"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3747": {
      "op": "REVERT"
    },
    "3748": {
      "op": "JUMPDEST"
    },
    "3749": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3750": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3751": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3752": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "POP",
      "path": "15"
    },
    "3753": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3755": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3756": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3759": {
      "op": "DUP2"
    },
    "3760": {
      "op": "LT"
    },
    "3761": {
      "op": "ISZERO"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBA"
    },
    "3765": {
      "op": "JUMPI"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "DUP1"
    },
    "3769": {
      "op": "REVERT"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 43,
      "value": "0x2"
    },
    "3775": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3776": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3778": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3779": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3780": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3789": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "op": "SUB"
    },
    "3798": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3799": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3800": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "AND",
      "path": "15"
    },
    "3801": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3803": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3804": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "ADD",
      "path": "15"
    },
    "3805": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3806": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3808": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3809": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "ADD",
      "path": "15"
    },
    "3810": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3811": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3812": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3813": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3814": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3815": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3816": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3817": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3818": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "AND",
      "path": "15"
    },
    "3819": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3820": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "3825": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3410
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3826": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "3828": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3829": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3830": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "ADD",
      "path": "15"
    },
    "3831": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3832": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3834": {
      "fn": "token_exchange._buy",
      "offset": [
        3321,
        3389
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3835": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3836": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3837": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3838": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3839": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "SUB",
      "path": "15"
    },
    "3840": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "ADD",
      "path": "15"
    },
    "3841": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3842": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3844": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3405
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3845": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3846": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3847": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "ISZERO"
    },
    "3850": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "3853": {
      "op": "JUMPI"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3856": {
      "op": "DUP1"
    },
    "3857": {
      "op": "REVERT"
    },
    "3858": {
      "op": "JUMPDEST"
    },
    "3859": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "POP",
      "path": "15"
    },
    "3860": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "GAS",
      "path": "15"
    },
    "3861": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "CALL",
      "path": "15"
    },
    "3862": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "ISZERO"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xF26"
    },
    "3868": {
      "op": "JUMPI"
    },
    "3869": {
      "op": "RETURNDATASIZE"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3872": {
      "op": "DUP1"
    },
    "3873": {
      "op": "RETURNDATACOPY"
    },
    "3874": {
      "op": "RETURNDATASIZE"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3877": {
      "op": "REVERT"
    },
    "3878": {
      "op": "JUMPDEST"
    },
    "3879": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "POP",
      "path": "15"
    },
    "3880": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "POP",
      "path": "15"
    },
    "3881": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "POP",
      "path": "15"
    },
    "3882": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "POP",
      "path": "15"
    },
    "3883": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3885": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3886": {
      "fn": "token_exchange._buy",
      "offset": [
        3400,
        3429
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3889": {
      "op": "DUP2"
    },
    "3890": {
      "op": "LT"
    },
    "3891": {
      "op": "ISZERO"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF3C"
    },
    "3895": {
      "op": "JUMPI"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3898": {
      "op": "DUP1"
    },
    "3899": {
      "op": "REVERT"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "fn": "token_exchange._buy",
      "offset": [
        3468,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0x4"
    },
    "3905": {
      "fn": "token_exchange._buy",
      "offset": [
        3468,
        3476
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3906": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3908": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3909": {
      "fn": "token_exchange._buy",
      "offset": [
        3460,
        3466
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3910": {
      "fn": "token_exchange._buy",
      "offset": [
        3460,
        3466
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3917": {
      "op": "SHL"
    },
    "3918": {
      "op": "SUB"
    },
    "3919": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3920": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "AND",
      "path": "15"
    },
    "3921": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3922": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
    },
    "3955": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3956": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3958": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3959": {
      "fn": "token_exchange._buy",
      "offset": [
        3445,
        3477
      ],
      "op": "LOG4",
      "path": "15"
    },
    "3960": {
      "fn": "token_exchange._buy",
      "offset": [
        3208,
        3484
      ],
      "op": "POP",
      "path": "15"
    },
    "3961": {
      "fn": "token_exchange._buy",
      "offset": [
        3208,
        3484
      ],
      "op": "POP",
      "path": "15"
    },
    "3962": {
      "fn": "token_exchange._buy",
      "jump": "o",
      "offset": [
        3208,
        3484
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3963": {
      "fn": "token_exchange._sell",
      "offset": [
        3490,
        3795
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3964": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 45,
      "value": "0x2"
    },
    "3966": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3967": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3969": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3970": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3971": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3978": {
      "op": "SHL"
    },
    "3979": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3980": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3987": {
      "op": "SHL"
    },
    "3988": {
      "op": "SUB"
    },
    "3989": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3990": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3991": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "AND",
      "path": "15"
    },
    "3992": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3994": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3995": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "ADD",
      "path": "15"
    },
    "3996": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3997": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3999": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4000": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "ADD",
      "path": "15"
    },
    "4001": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4002": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4003": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4004": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4005": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4006": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4007": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4008": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4009": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "AND",
      "path": "15"
    },
    "4010": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4011": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3666
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x79CC6790"
    },
    "4016": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3666
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4017": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4019": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4020": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4021": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "ADD",
      "path": "15"
    },
    "4022": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4023": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4025": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4026": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4027": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4028": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4029": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4030": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "SUB",
      "path": "15"
    },
    "4031": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "ADD",
      "path": "15"
    },
    "4032": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4033": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4034": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3657
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4035": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4036": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4037": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4038": {
      "op": "DUP1"
    },
    "4039": {
      "op": "ISZERO"
    },
    "4040": {
      "op": "PUSH2",
      "value": "0xFD0"
    },
    "4043": {
      "op": "JUMPI"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4046": {
      "op": "DUP1"
    },
    "4047": {
      "op": "REVERT"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "POP",
      "path": "15"
    },
    "4050": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "GAS",
      "path": "15"
    },
    "4051": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "CALL",
      "path": "15"
    },
    "4052": {
      "fn": "token_exchange._sell",
      "offset": [
        3652,
        3682
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4053": {
      "op": "DUP1"
    },
    "4054": {
      "op": "ISZERO"
    },
    "4055": {
      "op": "PUSH2",
      "value": "0xFE4"
    },
    "4058": {
      "op": "JUMPI"
    },
    "4059": {
      "op": "RETURNDATASIZE"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4062": {
      "op": "DUP1"
    },
    "4063": {
      "op": "RETURNDATACOPY"
    },
    "4064": {
      "op": "RETURNDATASIZE"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4067": {
      "op": "REVERT"
    },
    "4068": {
      "op": "JUMPDEST"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3700
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 46,
      "value": "0x3"
    },
    "4073": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3700
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4080": {
      "op": "SHL"
    },
    "4081": {
      "op": "SUB"
    },
    "4082": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3700
      ],
      "op": "AND",
      "path": "15"
    },
    "4083": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3700
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3705
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "4090": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3705
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "fn": "token_exchange._sell",
      "offset": [
        3706,
        3712
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4093": {
      "fn": "token_exchange._sell",
      "offset": [
        3713,
        3734
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1007"
    },
    "4096": {
      "fn": "token_exchange._sell",
      "offset": [
        3720,
        3726
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4097": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3700
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4099": {
      "fn": "token_exchange._sell",
      "offset": [
        3713,
        3719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5AE"
    },
    "4102": {
      "fn": "token_exchange._sell",
      "jump": "i",
      "offset": [
        3713,
        3734
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4103": {
      "fn": "token_exchange._sell",
      "offset": [
        3713,
        3734
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4104": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4106": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4107": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4108": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4113": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "AND",
      "path": "15"
    },
    "4114": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4116": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "SHL",
      "path": "15"
    },
    "4117": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4118": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4119": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4121": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "ADD",
      "path": "15"
    },
    "4122": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4123": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4130": {
      "op": "SHL"
    },
    "4131": {
      "op": "SUB"
    },
    "4132": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "AND",
      "path": "15"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4139": {
      "op": "SHL"
    },
    "4140": {
      "op": "SUB"
    },
    "4141": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "AND",
      "path": "15"
    },
    "4142": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4143": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4144": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4146": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "ADD",
      "path": "15"
    },
    "4147": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4148": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4149": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4150": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4152": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "ADD",
      "path": "15"
    },
    "4153": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4154": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4155": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4156": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4157": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4159": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4161": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4162": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4163": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4164": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "SUB",
      "path": "15"
    },
    "4165": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4166": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4168": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4169": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4170": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4171": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4172": {
      "op": "DUP1"
    },
    "4173": {
      "op": "ISZERO"
    },
    "4174": {
      "op": "PUSH2",
      "value": "0x1056"
    },
    "4177": {
      "op": "JUMPI"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4180": {
      "op": "DUP1"
    },
    "4181": {
      "op": "REVERT"
    },
    "4182": {
      "op": "JUMPDEST"
    },
    "4183": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4184": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "GAS",
      "path": "15"
    },
    "4185": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "CALL",
      "path": "15"
    },
    "4186": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4187": {
      "op": "DUP1"
    },
    "4188": {
      "op": "ISZERO"
    },
    "4189": {
      "op": "PUSH2",
      "value": "0x106A"
    },
    "4192": {
      "op": "JUMPI"
    },
    "4193": {
      "op": "RETURNDATASIZE"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4196": {
      "op": "DUP1"
    },
    "4197": {
      "op": "RETURNDATACOPY"
    },
    "4198": {
      "op": "RETURNDATASIZE"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4201": {
      "op": "REVERT"
    },
    "4202": {
      "op": "JUMPDEST"
    },
    "4203": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4204": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4205": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4206": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "POP",
      "path": "15"
    },
    "4207": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4209": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4210": {
      "fn": "token_exchange._sell",
      "offset": [
        3693,
        3735
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4213": {
      "op": "DUP2"
    },
    "4214": {
      "op": "LT"
    },
    "4215": {
      "op": "ISZERO"
    },
    "4216": {
      "op": "PUSH2",
      "value": "0x1080"
    },
    "4219": {
      "op": "JUMPI"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4222": {
      "op": "DUP1"
    },
    "4223": {
      "op": "REVERT"
    },
    "4224": {
      "op": "JUMPDEST"
    },
    "4225": {
      "op": "POP"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "fn": "token_exchange._sell",
      "offset": [
        3779,
        3787
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 47,
      "value": "0x4"
    },
    "4229": {
      "fn": "token_exchange._sell",
      "offset": [
        3779,
        3787
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4230": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4232": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4233": {
      "fn": "token_exchange._sell",
      "offset": [
        3771,
        3777
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4234": {
      "fn": "token_exchange._sell",
      "offset": [
        3771,
        3777
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4235": {
      "fn": "token_exchange._sell",
      "offset": [
        3764,
        3768
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4236": {
      "fn": "token_exchange._sell",
      "offset": [
        3764,
        3768
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4237": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
    },
    "4270": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4271": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4273": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4274": {
      "fn": "token_exchange._sell",
      "offset": [
        3751,
        3788
      ],
      "op": "LOG4",
      "path": "15"
    },
    "4275": {
      "fn": "token_exchange._sell",
      "offset": [
        3490,
        3795
      ],
      "op": "POP",
      "path": "15"
    },
    "4276": {
      "fn": "token_exchange._sell",
      "offset": [
        3490,
        3795
      ],
      "op": "POP",
      "path": "15"
    },
    "4277": {
      "fn": "token_exchange._sell",
      "jump": "o",
      "offset": [
        3490,
        3795
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4278": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4279": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4281": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 48
    },
    "4282": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4283": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4284": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "3"
    },
    "4285": {
      "branch": 68,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4286": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1145"
    },
    "4289": {
      "branch": 68,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4290": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4292": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4299": {
      "op": "SHL"
    },
    "4300": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4301": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4302": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4304": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4305": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4306": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4307": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4309": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4310": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4311": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4312": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4313": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4314": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4315": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4316": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4317": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4318": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4319": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4320": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4321": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4323": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4324": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4325": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4326": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4327": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4328": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4329": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4331": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4332": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4333": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4334": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4335": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4338": {
      "op": "JUMPDEST"
    },
    "4339": {
      "op": "DUP4"
    },
    "4340": {
      "op": "DUP2"
    },
    "4341": {
      "op": "LT"
    },
    "4342": {
      "op": "ISZERO"
    },
    "4343": {
      "op": "PUSH2",
      "value": "0x110A"
    },
    "4346": {
      "op": "JUMPI"
    },
    "4347": {
      "op": "DUP2"
    },
    "4348": {
      "op": "DUP2"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "MLOAD"
    },
    "4351": {
      "op": "DUP4"
    },
    "4352": {
      "op": "DUP3"
    },
    "4353": {
      "op": "ADD"
    },
    "4354": {
      "op": "MSTORE"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4357": {
      "op": "ADD"
    },
    "4358": {
      "op": "PUSH2",
      "value": "0x10F2"
    },
    "4361": {
      "op": "JUMP"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4365": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4366": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4367": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4368": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4369": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4370": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4371": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4372": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4373": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4375": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "4376": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4377": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4378": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1137"
    },
    "4381": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4382": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4383": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4384": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4385": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4386": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4387": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4389": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4390": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4392": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4393": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4396": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "3"
    },
    "4397": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4398": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "3"
    },
    "4399": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "4400": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4401": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4402": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4404": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4405": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4406": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4407": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4408": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4409": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4410": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4411": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4412": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4413": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4415": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4416": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4417": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4418": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4419": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4420": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4421": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "op": "POP"
    },
    "4424": {
      "op": "POP"
    },
    "4425": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4426": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "3"
    },
    "4427": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4428": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4429": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4430": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 49,
      "value": "0x1157"
    },
    "4433": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4434": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4435": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB8A"
    },
    "4438": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4439": {
      "branch": 63,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4440": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1192"
    },
    "4443": {
      "branch": 63,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4444": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4446": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4453": {
      "op": "SHL"
    },
    "4454": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4455": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4456": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4458": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4459": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4460": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4461": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4463": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4464": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4465": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4466": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "4467": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4468": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4469": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "4471": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4472": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4473": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4475": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4476": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4477": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12EC"
    },
    "4480": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "4482": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4483": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4484": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4486": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4487": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4488": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "4489": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "4490": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4492": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4493": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4494": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4495": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "4496": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4497": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4498": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4505": {
      "op": "SHL"
    },
    "4506": {
      "op": "SUB"
    },
    "4507": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 50
    },
    "4508": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4510": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4511": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4512": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4513": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4515": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4516": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4517": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4518": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4519": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4521": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4522": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4523": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4524": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4527": {
      "op": "NOT"
    },
    "4528": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "4529": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4530": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4531": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4532": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4533": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 51,
      "value": "0x11BE"
    },
    "4536": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4537": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4538": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB8A"
    },
    "4541": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4542": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4543": {
      "branch": 64,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4544": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1210"
    },
    "4547": {
      "branch": 64,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4548": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4550": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4551": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4560": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4561": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4563": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4565": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4566": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4567": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4568": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4570": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4572": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4573": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4574": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4575": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "4608": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "4610": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4611": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4612": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4613": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4614": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4615": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4616": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4617": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4618": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "4619": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "4621": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4622": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4623": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4624": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 52
    },
    "4634": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4636": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4637": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4638": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4639": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4641": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4642": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4643": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4644": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4645": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4647": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4648": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4649": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4650": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4653": {
      "op": "NOT"
    },
    "4654": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "4655": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4657": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "4658": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4659": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4660": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4661": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4662": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4664": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 53
    },
    "4665": {
      "branch": 69,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4666": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1284"
    },
    "4669": {
      "branch": 69,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4670": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4672": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4681": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4682": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4684": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4686": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4687": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4688": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4689": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4690": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4691": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4692": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4693": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4695": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4696": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4697": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4698": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4699": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4700": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4701": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4702": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4703": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4704": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4706": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4707": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4708": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4709": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4710": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4711": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4712": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4713": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4714": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4715": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4716": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4717": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4719": {
      "op": "DUP4"
    },
    "4720": {
      "op": "ISZERO"
    },
    "4721": {
      "op": "PUSH2",
      "value": "0x110A"
    },
    "4724": {
      "op": "JUMPI"
    },
    "4725": {
      "op": "DUP2"
    },
    "4726": {
      "op": "DUP2"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "op": "MLOAD"
    },
    "4729": {
      "op": "DUP4"
    },
    "4730": {
      "op": "DUP3"
    },
    "4731": {
      "op": "ADD"
    },
    "4732": {
      "op": "MSTORE"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x10F2"
    },
    "4739": {
      "op": "JUMP"
    },
    "4740": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4741": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "3"
    },
    "4742": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4744": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4745": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4746": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4747": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1290"
    },
    "4750": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4751": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "3"
    },
    "4752": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4753": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "3"
    },
    "4754": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4755": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "POP"
    },
    "4758": {
      "op": "POP"
    },
    "4759": {
      "op": "POP"
    },
    "4760": {
      "op": "POP"
    },
    "4761": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "80bd076785c8dc632463df1e57580d09b447e4b4",
  "source": "pragma solidity ^0.5.0;\n\n\nimport \"./PayCoin.sol\";\nimport \"../interfaces/IT_ERC20.sol\";\nimport \"./token_erc20.sol\";\nimport \"./BrokerRole.sol\";\nimport \"./AdminRole.sol\";\n\ncontract token_exchange is BrokerRole, AdminRole {\n    using SafeMath for uint256;\n    using SafeMath for int256; \n\n    IT_ERC20 public token;\n    IT_PayCoin public payCoin;\n\n    uint256 private tk_price;\n    uint256 private _openingtime;\n    uint256 private _closingtime;\n    uint8 public _overnightCalls; \n\n    uint256[] priceHistory;\n\n    //address _addressPC ;\n    //= 0xc429620C4451d820B96FD3E5209FADa0F5a89852\n    /*\n    address _frama = 0x96E7Cf89FF09659854277531FA315AFc27102E37 ;\n    address _libra = 0x2FbfB1e766E6F6244669E4794ff022a653F34eFf ;\n    address _pirot = 0x743491ab1511287491af8De4Ca25b2fbc707eB88 ;\n    */\n\n    address _fss = 0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff ; \n\n    event Buy(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event Sell(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event PriceChange(address indexed changer, uint256 indexed id_price, uint256 indexed price); \n    event ChangeStart(address indexed who, uint256 indexed when); \n    event ChangeEnd(address indexed who, uint256 indexed when); \n\n    modifier onlyWhileOpen {\n        require(isOpen(), \"Market is closed\");\n        _;\n    }\n\n    constructor() public {\n\n        token = new token_erc20();\n        payCoin = new PayCoin();\n\n        tk_price = 1e18 ; //accounts for PayCoin's decimals\n        priceHistory.push(tk_price);\n\n        _openingtime = now ;\n        _closingtime = now + 1 hours ; //TODO Remember to modify it!\n        _overnightCalls = 0; \n\n        if (!(isAdmin(_fss) && isBroker(_fss))){\n            addAdmin(_fss);\n            addBroker(_fss);\n        }\n        /*\n        if (!(isAdmin(_frama) && isBroker(_frama))){\n            addAdmin(_frama);\n            addBroker(_frama);\n        }\n        if (!(isAdmin(_libra) && isBroker(_libra))){\n            addAdmin(_libra);\n            addBroker(_libra);\n        }\n        if (!(isAdmin(_pirot) && isBroker(_pirot))){\n            addAdmin(_pirot);\n            addBroker(_pirot);\n        }\n        */\n        emit ChangeStart(_msgSender(), _openingtime); \n        emit ChangeEnd(_msgSender(), _closingtime + 7 days); \n    }\n\n    function buy(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _buy(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function sell(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _sell(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function _buy(address recipient, uint256 amount) internal {\n        // TODO set real address of the team\n        payCoin.transferFrom(recipient, address(this), getFee(amount, true));\n\n        token.mint(recipient, amount);\n\n        emit Buy(recipient, amount, tk_price);\n    }\n\n    function _sell(address seller, uint256 amount) internal {\n        // token_exchange != team, so it can mint paycoin (these doesn't count vs initial 50k)\n\n        token.burnFrom(seller, amount);\n\n        payCoin.mint(seller,getFee(amount, false));\n\n        emit Sell(address(this), amount, tk_price);\n    }\n\n    function getFee(uint256 amount, bool from_buy) public returns (uint256){\n        // amount * tk_price / 10^18 +- 2*amount/1000\n        uint256 exp = uint256(token.decimals());\n\n        if (from_buy){\n            return amount.mul(tk_price).div(10**exp).add(amount.mul(2).div(1000));\n        }\n        else{\n            return amount.mul(tk_price).div(10**exp).sub(amount.mul(2).div(1000));\n        }\n\n    }\n\n    function isOpen() public view returns (bool) {\n        return now >= _openingtime && now <= _closingtime;\n    }\n\n    function setOpenTime() external onlyAdmin {\n        require(_openingtime < _closingtime, \"Something's wrong, maybe you set the initial _openingtime wrong.\");\n        _openingtime = _closingtime.add(15 hours) ;\n        _closingtime = _openingtime.add(9 hours) ;\n    }\n\n    function lastPrice() external view returns (uint256, uint256){\n        return (priceHistory.length.sub(1), priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function getHistory(uint256 id_price) external view returns (uint256){\n        return priceHistory[id_price] ;        \n    }\n\n    function setHistory(uint256 price) onlyBroker public {\n        priceHistory.push(price); \n    }\n\n    function setNewPrice(int256 delta_price) onlyBroker public returns (uint256) {\n        uint256 last_price = priceHistory[priceHistory.length.sub(1)]; \n        int256 new_price = int256(last_price) + delta_price; \n        uint256 new_length; \n\n        require (new_price > 0, \"Price must be positive!\"); \n        \n        if (isAdmin(_msgSender())) {\n            require(isOpen(), \"Market is closed\"); \n            emit PriceChange(_msgSender(), new_length, uint256(new_price)); \n        }\n        else{\n            require(_overnightCalls < 4, \"Already calls 4 times this night.\"); \n            require( uint256(new_price) > last_price.sub(last_price.mul(10).div(100)) && uint256(new_price) < last_price.add(last_price.mul(10).div(100)), \"Can't change more than -+10%\" ); \n            _overnightCalls += 1; \n        }\n\n        setHistory(uint256(new_price));\n        new_length = priceHistory.length.sub(1); \n\n        return new_length; \n    }\n\n\n\n}\n",
  "sourceMap": "169:5773:15:-;;;802:57;;;-1:-1:-1;;;;;;802:57:15;817:42;802:57;;;1364:952;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;420:24:10;431:12;-1:-1:-1;;;;;431:10:10;:12;:::i;:::-;-1:-1:-1;;;;;420:10:10;:24;:::i;:::-;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;1404:17:15;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1396:5:15;:25;;-1:-1:-1;;;;;;1396:25:15;-1:-1:-1;;;;;1396:25:15;;;;;;;;;;1441:13;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1431:7:15;:23;;-1:-1:-1;;;;;;1431:23:15;-1:-1:-1;;;;;1431:23:15;;;;;;1476:4;1465:8;:15;;;1525:12;27:10:-1;;-1:-1;23:18;;45:23;;-1:-1;1525:27:15;;;;;;;1578:3;1563:12;:18;;;1613:7;1607:13;1592:12;:28;1661:15;:19;;-1:-1:-1;;1661:19:15;;;1706:4;;1698:13;;1706:4;1698:7;:13::i;:::-;:31;;;;-1:-1:-1;1724:4:15;;1715:14;;-1:-1:-1;;;;;1724:4:15;-1:-1:-1;;;;;1715:8:15;:14;:::i;:::-;1692:107;;1754:4;;1745:14;;-1:-1:-1;;;;;1754:4:15;-1:-1:-1;;;;;1745:8:15;:14;:::i;:::-;1783:4;;1773:15;;-1:-1:-1;;;;;1783:4:15;-1:-1:-1;;;;;1773:9:15;:15;:::i;:::-;2233:12;;2219;-1:-1:-1;;;;;2219:10:15;:12;:::i;:::-;-1:-1:-1;;;;;2207:39:15;;;;;;;;;;;2286:12;;2301:6;2286:21;2272:12;-1:-1:-1;;;;;2272:10:15;:12;:::i;:::-;-1:-1:-1;;;;;2262:46:15;;;;;;;;;;;169:5773;;788:96:0;867:10;788:96;:::o;888:119:10:-;944:21;957:7;944:8;:12;;;;;;:21;;;;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;587:105::-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;596:107:10:-;652:4;675:21;688:7;675:8;:12;;;;;;:21;;;;:::i;698:87:9:-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;-1:-1:-1;;;;;506:10:10;:12;:::i;:::-;-1:-1:-1;;;;;497:8:10;:22;:::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;-1:-1:-1;;;;;773:10:10;:19;:::i;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;169:5773:15:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/token_exchange.sol",
  "type": "contract"
}