{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "ChangeEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "ChangeStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_overnightCalls",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "getHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "payCoin",
      "outputs": [
        {
          "internalType": "contract IT_PayCoin",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setHistory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "delta_price",
          "type": "int256"
        }
      ],
      "name": "setNewPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setOpenTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IT_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "10": "contracts/BrokerRole.sol",
    "11": "contracts/BurnerRole.sol",
    "13": "contracts/PayCoin.sol",
    "16": "contracts/token_erc20.sol",
    "17": "contracts/token_exchange.sol",
    "18": "interfaces/IT_ERC20.sol",
    "19": "interfaces/IT_PayCoin.sol",
    "2": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/roles/MinterRole.sol",
    "3": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/math/SafeMath.sol",
    "4": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Burnable.sol",
    "6": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
    "7": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Mintable.sol",
    "8": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/IERC20.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_exchange.sol",
    "exportedSymbols": {
      "token_exchange": [
        1591
      ]
    },
    "id": 1592,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1022,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "contracts/PayCoin.sol",
        "file": "./PayCoin.sol",
        "id": 1023,
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 1779,
        "src": "26:23:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IT_ERC20.sol",
        "file": "../interfaces/IT_ERC20.sol",
        "id": 1024,
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 2145,
        "src": "50:36:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token_erc20.sol",
        "file": "./token_erc20.sol",
        "id": 1025,
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 2109,
        "src": "87:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BrokerRole.sol",
        "file": "./BrokerRole.sol",
        "id": 1026,
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 2029,
        "src": "115:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AdminRole.sol",
        "file": "./AdminRole.sol",
        "id": 1027,
        "nodeType": "ImportDirective",
        "scope": 1592,
        "sourceUnit": 1699,
        "src": "142:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1028,
              "name": "BrokerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2028,
              "src": "196:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BrokerRole_$2028",
                "typeString": "contract BrokerRole"
              }
            },
            "id": 1029,
            "nodeType": "InheritanceSpecifier",
            "src": "196:10:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1030,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1698,
              "src": "208:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$1698",
                "typeString": "contract AdminRole"
              }
            },
            "id": 1031,
            "nodeType": "InheritanceSpecifier",
            "src": "208:9:17"
          }
        ],
        "contractDependencies": [
          1698,
          1778,
          2028,
          2108,
          2171
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1591,
        "linearizedBaseContracts": [
          1591,
          1698,
          2028,
          2171
        ],
        "name": "token_exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1034,
            "libraryName": {
              "contractScope": null,
              "id": 1032,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3247,
              "src": "230:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3247",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:27:17",
            "typeName": {
              "id": 1033,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1037,
            "libraryName": {
              "contractScope": null,
              "id": 1035,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3247,
              "src": "262:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3247",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "256:26:17",
            "typeName": {
              "id": 1036,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "275:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "id": 1039,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "289:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_ERC20_$2144",
              "typeString": "contract IT_ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1038,
              "name": "IT_ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2144,
              "src": "289:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                "typeString": "contract IT_ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1041,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "316:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$1814",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 1040,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1814,
              "src": "316:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$1814",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1043,
            "name": "_openingtime",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "380:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1042,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1045,
            "name": "_closingtime",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "414:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "414:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1047,
            "name": "_overnightCalls",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "448:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1046,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "448:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1050,
            "name": "priceHistory",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "484:30:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1048,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "484:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1049,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "484:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1053,
            "name": "_fss",
            "nodeType": "VariableDeclaration",
            "scope": 1591,
            "src": "600:57:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1051,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838354138643732343146666666656537323930353031343733413942313142466441324165394666",
              "id": 1052,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "615:42:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1061,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1055,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "676:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "699:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "723:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "675:70:17"
            },
            "src": "666:80:17"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1069,
            "name": "Sell",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "762:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "785:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1069,
                  "src": "809:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "761:70:17"
            },
            "src": "751:81:17"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1077,
            "name": "PriceChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1071,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "855:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "indexed": true,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "876:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1075,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "902:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "854:70:17"
            },
            "src": "837:88:17"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1083,
            "name": "ChangeStart",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "949:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1081,
                  "indexed": true,
                  "name": "when",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "970:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "948:43:17"
            },
            "src": "931:61:17"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1089,
            "name": "ChangeEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "1014:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "indexed": true,
                  "name": "when",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "1035:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1013:43:17"
            },
            "src": "998:59:17"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "1087:65:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1092,
                          "name": "isOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1381,
                          "src": "1105:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1105:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b657420697320636c6f736564",
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1115:18:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        },
                        "value": "Market is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        }
                      ],
                      "id": 1091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3265,
                        3266
                      ],
                      "referencedDeclaration": 3266,
                      "src": "1097:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:37:17"
                },
                {
                  "id": 1097,
                  "nodeType": "PlaceholderStatement",
                  "src": "1144:1:17"
                }
              ]
            },
            "documentation": null,
            "id": 1099,
            "name": "onlyWhileOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:17"
            },
            "src": "1064:88:17",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "1179:547:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1102,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "1190:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                        "typeString": "contract IT_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1198:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_token_erc20_$2108_$",
                          "typeString": "function () returns (contract token_erc20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1103,
                          "name": "token_erc20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2108,
                          "src": "1202:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_erc20_$2108",
                            "typeString": "contract token_erc20"
                          }
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1198:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_erc20_$2108",
                        "typeString": "contract token_erc20"
                      }
                    },
                    "src": "1190:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                      "typeString": "contract IT_ERC20"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:25:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1108,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "1225:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1814",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1235:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PayCoin_$1778_$",
                          "typeString": "function () returns (contract PayCoin)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1109,
                          "name": "PayCoin",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1778,
                          "src": "1239:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PayCoin_$1778",
                            "typeString": "contract PayCoin"
                          }
                        }
                      },
                      "id": 1111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1235:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$1778",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "src": "1225:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1814",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 1113,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:23:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1114,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "1361:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1115,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3264,
                      "src": "1376:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1361:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:18:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1118,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "1390:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3264,
                        "src": "1405:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3132",
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1411:8:17",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_43200_by_1",
                          "typeString": "int_const 43200"
                        },
                        "value": "12"
                      },
                      "src": "1405:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1390:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1124,
                      "name": "_overnightCalls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "1460:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1478:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1460:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:19:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1495:34:17",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1129,
                                "name": "_fss",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1053,
                                "src": "1505:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1128,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "1497:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 1130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1497:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1132,
                                "name": "_fss",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1053,
                                "src": "1523:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1131,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1974,
                              "src": "1514:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1514:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1497:31:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1135,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1496:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1146,
                  "nodeType": "IfStatement",
                  "src": "1491:107:17",
                  "trueBody": {
                    "id": 1145,
                    "nodeType": "Block",
                    "src": "1530:68:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1138,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "1553:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1137,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "1544:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "1544:14:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1142,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "1582:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1141,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1986,
                            "src": "1572:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1572:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1144,
                        "nodeType": "ExpressionStatement",
                        "src": "1572:15:17"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1148,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "1629:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1629:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1150,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "1643:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1147,
                      "name": "ChangeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "1617:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "EmitStatement",
                  "src": "1612:44:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1154,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "1682:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1682:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1156,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "1696:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "37",
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1711:6:17",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "7"
                        },
                        "src": "1696:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1153,
                      "name": "ChangeEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "1672:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1160,
                  "nodeType": "EmitStatement",
                  "src": "1667:51:17"
                }
              ]
            },
            "documentation": null,
            "id": 1162,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:2:17"
            },
            "returnParameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:17"
            },
            "scope": 1591,
            "src": "1158:568:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1803:365:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1172,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "2078:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2078:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2108:2:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1178,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1039,
                                      "src": "2120:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 1179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2131,
                                    "src": "2120:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2120:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2112:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2112:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2108:29:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1174,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "2092:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3164,
                          "src": "2092:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2092:46:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1171,
                      "name": "_buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1256,
                      "src": "2073:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:66:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2157:4:17",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1170,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "2150:11:17"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1167,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1166,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "1775:13:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1775:13:17"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1745:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1744:21:17"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1798:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1797:6:17"
            },
            "scope": 1591,
            "src": "1732:436:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1215,
              "nodeType": "Block",
              "src": "2246:366:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1199,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "2522:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2522:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2552:2:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1205,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1039,
                                      "src": "2564:5:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 1206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2131,
                                    "src": "2564:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2564:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2556:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2556:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2552:29:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1201,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1191,
                            "src": "2536:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3164,
                          "src": "2536:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2536:46:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1198,
                      "name": "_sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "2516:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:67:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:67:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2601:4:17",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1197,
                  "id": 1214,
                  "nodeType": "Return",
                  "src": "2594:11:17"
                }
              ]
            },
            "documentation": null,
            "id": 1216,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1194,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1193,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "2218:13:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2218:13:17"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "2188:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2187:21:17"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "2241:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2240:6:17"
            },
            "scope": 1591,
            "src": "2174:438:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1255,
              "nodeType": "Block",
              "src": "2676:250:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1226,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "2752:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1228,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3312,
                            "src": "2771:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$1591",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$1591",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2763:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2763:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1231,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "2785:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2793:4:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1230,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "2778:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2778:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1223,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "2731:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1814",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2682,
                      "src": "2731:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:68:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:68:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1239,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "2821:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1240,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "2832:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1236,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "2810:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "2810:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:29:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "2859:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1220,
                        "src": "2870:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1246,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "2878:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1252,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2915:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1247,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "2891:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1248,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2891:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3103,
                            "src": "2891:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2891:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2878:40:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1243,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "2855:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:64:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "EmitStatement",
                  "src": "2850:69:17"
                }
              ]
            },
            "documentation": null,
            "id": 1256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1256,
                  "src": "2632:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1220,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1256,
                  "src": "2651:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2651:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2631:35:17"
            },
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2676:0:17"
            },
            "scope": 1591,
            "src": "2618:308:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "2988:281:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "3109:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "3117:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1263,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "3094:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "3094:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3094:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "3094:30:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1273,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "3148:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1275,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "3162:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3170:5:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1274,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "3155:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3155:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1270,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "3135:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1814",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "3135:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:42:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1282,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3312,
                            "src": "3206:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$1591",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$1591",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3198:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3198:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1284,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "3213:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1285,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "3221:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1291,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3258:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1286,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "3234:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3234:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3103,
                            "src": "3234:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3234:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3221:40:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1280,
                      "name": "Sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "3193:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:69:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1293,
                  "nodeType": "EmitStatement",
                  "src": "3188:74:17"
                }
              ]
            },
            "documentation": null,
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1258,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "2947:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1260,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "2963:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2946:32:17"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2988:0:17"
            },
            "scope": 1591,
            "src": "2932:337:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1366,
              "nodeType": "Block",
              "src": "3347:399:17",
              "statements": [
                {
                  "assignments": [
                    1305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1305,
                      "name": "exp",
                      "nodeType": "VariableDeclaration",
                      "scope": 1366,
                      "src": "3411:11:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3411:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1311,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1307,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "3433:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IT_ERC20_$2144",
                              "typeString": "contract IT_ERC20"
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2131,
                          "src": "3433:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3433:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3425:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3411:39:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1312,
                    "name": "from_buy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1299,
                    "src": "3465:8:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1364,
                    "nodeType": "Block",
                    "src": "3613:126:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 1360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3722:4:17",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 1357,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3715:1:17",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1355,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1297,
                                      "src": "3704:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3164,
                                    "src": "3704:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3704:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3180,
                                "src": "3704:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3704:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3691:2:17",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1351,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1305,
                                    "src": "3695:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3691:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1341,
                                        "name": "priceHistory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1050,
                                        "src": "3645:12:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1347,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 1345,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3682:1:17",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1342,
                                              "name": "priceHistory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1050,
                                              "src": "3658:12:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1343,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "3658:19:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1344,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3103,
                                          "src": "3658:23:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1346,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3658:26:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3645:40:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1339,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1297,
                                      "src": "3634:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3164,
                                    "src": "3634:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3634:52:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3180,
                                "src": "3634:56:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3634:65:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3103,
                            "src": "3634:69:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3634:94:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1303,
                        "id": 1363,
                        "nodeType": "Return",
                        "src": "3627:101:17"
                      }
                    ]
                  },
                  "id": 1365,
                  "nodeType": "IfStatement",
                  "src": "3461:278:17",
                  "trueBody": {
                    "id": 1338,
                    "nodeType": "Block",
                    "src": "3474:126:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 1334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3583:4:17",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 1331,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3576:1:17",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1329,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1297,
                                      "src": "3565:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3164,
                                    "src": "3565:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3565:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3180,
                                "src": "3565:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3565:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3552:2:17",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1325,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1305,
                                    "src": "3556:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3552:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1315,
                                        "name": "priceHistory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1050,
                                        "src": "3506:12:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1321,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 1319,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3543:1:17",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1316,
                                              "name": "priceHistory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1050,
                                              "src": "3519:12:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1317,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "3519:19:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1318,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3103,
                                          "src": "3519:23:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1320,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3519:26:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3506:40:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1313,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1297,
                                      "src": "3495:6:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3164,
                                    "src": "3495:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3495:52:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3180,
                                "src": "3495:56:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3495:65:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3087,
                            "src": "3495:69:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:94:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1303,
                        "id": 1337,
                        "nodeType": "Return",
                        "src": "3488:101:17"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1297,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "3291:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3291:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "name": "from_buy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "3307:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3290:31:17"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "3339:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3339:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3338:9:17"
            },
            "scope": 1591,
            "src": "3275:471:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1380,
              "nodeType": "Block",
              "src": "3797:66:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1372,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3264,
                        "src": "3814:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1373,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "3821:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3814:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1375,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3264,
                        "src": "3837:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1376,
                        "name": "_closingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "3844:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3837:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3814:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1371,
                  "id": 1379,
                  "nodeType": "Return",
                  "src": "3807:49:17"
                }
              ]
            },
            "documentation": null,
            "id": 1381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOpen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3767:2:17"
            },
            "returnParameters": {
              "id": 1371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "3791:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3790:6:17"
            },
            "scope": 1591,
            "src": "3752:111:17",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1407,
              "nodeType": "Block",
              "src": "3911:224:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1387,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1043,
                          "src": "3929:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1388,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "3944:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3929:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e",
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3958:66:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        },
                        "value": "Something's wrong, maybe you set the initial _openingtime wrong."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        }
                      ],
                      "id": 1386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3265,
                        3266
                      ],
                      "referencedDeclaration": 3266,
                      "src": "3921:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:104:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:104:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1393,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "4035:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4067:8:17",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          },
                          "value": "15"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1394,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "4050:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3087,
                        "src": "4050:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4050:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4035:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "4035:41:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1400,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "4087:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4119:7:17",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1401,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1043,
                          "src": "4102:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3087,
                        "src": "4102:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4102:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4087:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:40:17"
                }
              ]
            },
            "documentation": null,
            "id": 1408,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1384,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1383,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1631,
                  "src": "3901:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3901:9:17"
              }
            ],
            "name": "setOpenTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3889:2:17"
            },
            "returnParameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3911:0:17"
            },
            "scope": 1591,
            "src": "3869:266:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1429,
              "nodeType": "Block",
              "src": "4202:94:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4244:1:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1415,
                              "name": "priceHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1050,
                              "src": "4220:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4220:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3103,
                          "src": "4220:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4220:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "4248:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1426,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4285:1:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1421,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "4261:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4261:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3103,
                            "src": "4261:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4248:40:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1427,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4219:70:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1414,
                  "id": 1428,
                  "nodeType": "Return",
                  "src": "4212:77:17"
                }
              ]
            },
            "documentation": null,
            "id": 1430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4159:2:17"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "4185:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1413,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "4194:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4184:18:17"
            },
            "scope": 1591,
            "src": "4141:155:17",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1441,
              "nodeType": "Block",
              "src": "4371:55:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1437,
                      "name": "priceHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "4388:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1439,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1438,
                      "name": "id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1432,
                      "src": "4401:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4388:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1436,
                  "id": 1440,
                  "nodeType": "Return",
                  "src": "4381:29:17"
                }
              ]
            },
            "documentation": null,
            "id": 1442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1432,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "4322:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4321:18:17"
            },
            "returnParameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1442,
                  "src": "4363:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4362:9:17"
            },
            "scope": 1591,
            "src": "4302:124:17",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1455,
              "nodeType": "Block",
              "src": "4485:42:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1452,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "4513:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "priceHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "4495:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4495:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:24:17"
                }
              ]
            },
            "documentation": null,
            "id": 1456,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1447,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1446,
                  "name": "onlyBroker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1961,
                  "src": "4467:10:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4467:10:17"
              }
            ],
            "name": "setHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1444,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "4452:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4452:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4451:15:17"
            },
            "returnParameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4485:0:17"
            },
            "scope": 1591,
            "src": "4432:95:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1589,
              "nodeType": "Block",
              "src": "4610:1036:17",
              "statements": [
                {
                  "assignments": [
                    1466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1466,
                      "name": "last_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1589,
                      "src": "4620:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4620:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1474,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1467,
                      "name": "priceHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "4641:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1473,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4678:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1468,
                            "name": "priceHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "4654:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4654:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3103,
                        "src": "4654:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4654:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4641:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4620:61:17"
                },
                {
                  "assignments": [
                    1476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1476,
                      "name": "new_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1589,
                      "src": "4692:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1475,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4692:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1482,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1478,
                          "name": "last_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1466,
                          "src": "4718:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4711:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": "int256"
                      },
                      "id": 1479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4711:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1480,
                      "name": "delta_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "4732:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4711:32:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4692:51:17"
                },
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "name": "last_id_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1589,
                      "src": "4754:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4754:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1485,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4754:21:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1487,
                          "name": "new_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1476,
                          "src": "4796:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4808:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4796:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072696365206d75737420626520706f73697469766521",
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4811:25:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b727a0f9e51eaa13062016295d601d8fa22a2264ae06c107a759bee2c54dbe6d",
                          "typeString": "literal_string \"Price must be positive!\""
                        },
                        "value": "Price must be positive!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b727a0f9e51eaa13062016295d601d8fa22a2264ae06c107a759bee2c54dbe6d",
                          "typeString": "literal_string \"Price must be positive!\""
                        }
                      ],
                      "id": 1486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3265,
                        3266
                      ],
                      "referencedDeclaration": 3266,
                      "src": "4787:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:50:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1494,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "4869:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4869:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1493,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "4861:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1585,
                    "nodeType": "Block",
                    "src": "5166:442:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1528,
                                "name": "_overnightCalls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "5188:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "34",
                                "id": 1529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5206:1:17",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "src": "5188:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416c72656164792063616c6c7320342074696d65732074686973206e696768742e",
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5209:35:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00eccb539501bbae30f67aa01f9323c94f4f92c523121abbda6546675ac2014d",
                                "typeString": "literal_string \"Already calls 4 times this night.\""
                              },
                              "value": "Already calls 4 times this night."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00eccb539501bbae30f67aa01f9323c94f4f92c523121abbda6546675ac2014d",
                                "typeString": "literal_string \"Already calls 4 times this night.\""
                              }
                            ],
                            "id": 1527,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3265,
                              3266
                            ],
                            "referencedDeclaration": 3266,
                            "src": "5180:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5180:65:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1533,
                        "nodeType": "ExpressionStatement",
                        "src": "5180:65:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1536,
                                      "name": "new_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1476,
                                      "src": "5277:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 1535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5269:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 1537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5269:18:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5328:3:17",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3130",
                                              "id": 1542,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5320:2:17",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1540,
                                              "name": "last_price",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1466,
                                              "src": "5305:10:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1541,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3164,
                                            "src": "5305:14:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1543,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5305:18:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1544,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3180,
                                        "src": "5305:22:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5305:27:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1538,
                                      "name": "last_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1466,
                                      "src": "5290:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1539,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3103,
                                    "src": "5290:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5290:43:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5269:64:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1550,
                                      "name": "new_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1476,
                                      "src": "5345:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 1549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5337:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 1551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5337:18:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1559,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5396:3:17",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3130",
                                              "id": 1556,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5388:2:17",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1554,
                                              "name": "last_price",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1466,
                                              "src": "5373:10:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1555,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3164,
                                            "src": "5373:14:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1557,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5373:18:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1558,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3180,
                                        "src": "5373:22:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1560,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5373:27:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1552,
                                      "name": "last_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1466,
                                      "src": "5358:10:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3087,
                                    "src": "5358:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5358:43:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5337:64:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5269:132:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "43616e2774206368616e6765206d6f7265207468616e202d2b313025",
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5403:30:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d60a62876805af97b5dd1c2ff63fb59d00ce26fed0a57cc3216e134b08528804",
                                "typeString": "literal_string \"Can't change more than -+10%\""
                              },
                              "value": "Can't change more than -+10%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d60a62876805af97b5dd1c2ff63fb59d00ce26fed0a57cc3216e134b08528804",
                                "typeString": "literal_string \"Can't change more than -+10%\""
                              }
                            ],
                            "id": 1534,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3265,
                              3266
                            ],
                            "referencedDeclaration": 3266,
                            "src": "5260:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5260:175:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1566,
                        "nodeType": "ExpressionStatement",
                        "src": "5260:175:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1569,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1476,
                                  "src": "5482:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5474:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5474:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1567,
                            "name": "setHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "5463:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5463:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1572,
                        "nodeType": "ExpressionStatement",
                        "src": "5463:30:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1573,
                            "name": "last_id_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "5507:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5547:1:17",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1574,
                                  "name": "priceHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1050,
                                  "src": "5523:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1575,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5523:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3103,
                              "src": "5523:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5523:26:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5507:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1580,
                        "nodeType": "ExpressionStatement",
                        "src": "5507:42:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1581,
                            "name": "_overnightCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "5576:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5595:1:17",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5576:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "5576:20:17"
                      }
                    ]
                  },
                  "id": 1586,
                  "nodeType": "IfStatement",
                  "src": "4857:751:17",
                  "trueBody": {
                    "id": 1526,
                    "nodeType": "Block",
                    "src": "4884:269:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1498,
                                "name": "isOpen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1381,
                                "src": "4906:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4906:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d61726b657420697320636c6f736564",
                              "id": 1500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4916:18:17",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                                "typeString": "literal_string \"Market is closed\""
                              },
                              "value": "Market is closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                                "typeString": "literal_string \"Market is closed\""
                              }
                            ],
                            "id": 1497,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3265,
                              3266
                            ],
                            "referencedDeclaration": 3266,
                            "src": "4898:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4898:37:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1502,
                        "nodeType": "ExpressionStatement",
                        "src": "4898:37:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1505,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1476,
                                  "src": "4982:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4974:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4974:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1503,
                            "name": "setHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "4963:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4963:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1508,
                        "nodeType": "ExpressionStatement",
                        "src": "4963:30:17"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1509,
                            "name": "last_id_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "5007:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5047:1:17",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1510,
                                  "name": "priceHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1050,
                                  "src": "5023:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5023:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3103,
                              "src": "5023:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5023:26:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5007:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "5007:42:17"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1518,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2159,
                                "src": "5093:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5093:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1520,
                              "name": "last_id_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "5107:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1522,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1476,
                                  "src": "5130:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5122:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5122:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1517,
                            "name": "PriceChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "5081:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5081:60:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1525,
                        "nodeType": "EmitStatement",
                        "src": "5076:65:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1587,
                    "name": "last_id_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1484,
                    "src": "5625:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1464,
                  "id": 1588,
                  "nodeType": "Return",
                  "src": "5618:20:17"
                }
              ]
            },
            "documentation": null,
            "id": 1590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1460,
                  "name": "onlyBroker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1961,
                  "src": "4574:10:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4574:10:17"
              }
            ],
            "name": "setNewPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1458,
                  "name": "delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "4554:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1457,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4554:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4553:20:17"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "4601:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4601:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4600:9:17"
            },
            "scope": 1591,
            "src": "4533:1113:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1592,
        "src": "169:5773:17"
      }
    ],
    "src": "0:5943:17"
  },
  "bytecode": "6080604052600880546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b506200005e6200004f6001600160e01b036200024c16565b6001600160e01b036200025016565b62000084620000756001600160e01b036200024c16565b6001600160e01b03620002a216565b60405162000092906200051b565b604051809103906000f080158015620000af573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b0392909216919091179055604051620000de9062000529565b604051809103906000f080158015620000fb573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392831617905542600481905561a8c0016005556006805460ff191690556008546200013e9116620002f4565b801562000166575060085462000166906001600160a01b03166001600160e01b036200031716565b620001ab576008546200018b906001600160a01b03166001600160e01b036200033416565b600854620001ab906001600160a01b03166001600160e01b03620003ae16565b600454620001c16001600160e01b036200024c16565b6001600160a01b03167f16c752bdf6502cc829c9a81132e2e73aeb12d145e0e3b1cd632a9759485a5f5360405160405180910390a360055462093a8001620002116001600160e01b036200024c16565b6001600160a01b03167f9cd0f0f4c626f6284b893eff5aa9a5f50e76b4fa9811bf3ec86ac52cc6ed782760405160405180910390a362000537565b3390565b6200026b8160006200042560201b620010de1790919060201c565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b620002bd8160016200042560201b620010de1790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b600062000311826001620004b260201b62000a661790919060201c565b92915050565b600062000311826000620004b260201b62000a661790919060201c565b6200035a6200034b6001600160e01b036200024c16565b6001600160e01b03620002f416565b620003975760405162461bcd60e51b815260040180806020018281038252602e81526020018062004c69602e913960400191505060405180910390fd5b620003ab816001600160e01b03620002a216565b50565b620003d4620003c56001600160e01b036200024c16565b6001600160e01b036200031716565b620004115760405162461bcd60e51b815260040180806020018281038252603081526020018062004c176030913960400191505060405180910390fd5b620003ab816001600160e01b036200025016565b6200043a82826001600160e01b03620004b216565b156200048d576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620004fb5760405162461bcd60e51b815260040180806020018281038252602281526020018062004c476022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61193580620019ad83390190565b61193580620032e283390190565b61146680620005476000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063836cae65116100a2578063c8691b2a11610071578063c8691b2a14610269578063d96a094a14610286578063e4849b32146102a3578063fc0c546a146102c0578063ffb4e075146102e45761010b565b8063836cae65146101ee5780638bad0c0a14610214578063a48ff7821461021c578063a96711931461023a5761010b565b806347535d7b116100de57806347535d7b1461019b5780634f15e62e146101a357806370480275146101ab578063761909d0146101d15761010b565b8063053f14da1461011057806322b31d9f1461013157806324d7806c1461016b578063431e5c9d14610191575b600080fd5b6101186102ec565b6040805192835260208301919091528051918290030190f35b6101576004803603602081101561014757600080fd5b50356001600160a01b0316610337565b604080519115158252519081900360200190f35b6101576004803603602081101561018157600080fd5b50356001600160a01b031661034f565b610199610362565b005b610157610374565b61019961038f565b610199600480360360208110156101c157600080fd5b50356001600160a01b031661044d565b610199600480360360208110156101e757600080fd5b503561049f565b6101996004803603602081101561020457600080fd5b50356001600160a01b031661051f565b61019961056e565b61022461057e565b6040805160ff9092168252519081900360200190f35b6102576004803603602081101561025057600080fd5b5035610587565b60408051918252519081900360200190f35b6102576004803603602081101561027f57600080fd5b503561084f565b6101576004803603602081101561029c57600080fd5b5035610870565b610157600480360360208110156102b957600080fd5b503561095b565b6102c86109ff565b604080516001600160a01b039092168252519081900360200190f35b6102c8610a0e565b600754600090819061030590600163ffffffff610a1d16565b6007805461031a90600163ffffffff610a1d16565b8154811061032457fe5b9060005260206000200154915091509091565b6000610349818363ffffffff610a6616565b92915050565b600061034960018363ffffffff610a6616565b61037261036d610acd565b610ad1565b565b6000600454421015801561038a57506005544211155b905090565b61039f61039a610acd565b61034f565b6103da5760405162461bcd60e51b815260040180806020018281038252602e815260200180611404602e913960400191505060405180910390fd5b6005546004541061041c5760405162461bcd60e51b81526004018080602001828103825260408152602001806113816040913960400191505060405180910390fd5b6005546104319061d2f063ffffffff610b1916565b600481905561044890617e9063ffffffff610b1916565b600555565b61045861039a610acd565b6104935760405162461bcd60e51b815260040180806020018281038252602e815260200180611404602e913960400191505060405180910390fd5b61049c81610b73565b50565b6104af6104aa610acd565b610337565b6104ea5760405162461bcd60e51b81526004018080602001828103825260308152602001806113306030913960400191505060405180910390fd5b600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b61052a6104aa610acd565b6105655760405162461bcd60e51b81526004018080602001828103825260308152602001806113306030913960400191505060405180910390fd5b61049c81610bbb565b610372610579610acd565b610c03565b60065460ff1681565b60006105946104aa610acd565b6105cf5760405162461bcd60e51b81526004018080602001828103825260308152602001806113306030913960400191505060405180910390fd5b60078054600091906105e890600163ffffffff610a1d16565b815481106105f257fe5b6000918252602082200154915083820190808213610657576040805162461bcd60e51b815260206004820152601760248201527f5072696365206d75737420626520706f73697469766521000000000000000000604482015290519081900360640190fd5b61066261039a610acd565b156107165761066f610374565b6106b3576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6106bc8261049f565b6007546106d090600163ffffffff610a1d16565b905081816106dc610acd565b6001600160a01b03167f024e1c492bc15609a5125924e67e792a203a4f550a353426fad01a2c6d5ff97660405160405180910390a4610847565b600654600460ff9091161061075c5760405162461bcd60e51b815260040180806020018281038252602181526020018061130f6021913960400191505060405180910390fd5b61078e610781606461077586600a63ffffffff610c4b16565b9063ffffffff610ca416565b849063ffffffff610a1d16565b821180156107c057506107bd6107b0606461077586600a63ffffffff610c4b16565b849063ffffffff610b1916565b82105b610811576040805162461bcd60e51b815260206004820152601c60248201527f43616e2774206368616e6765206d6f7265207468616e202d2b31302500000000604482015290519081900360640190fd5b61081a8261049f565b60075461082e90600163ffffffff610a1d16565b6006805460ff8082166001011660ff1990911617905590505b949350505050565b60006007828154811061085e57fe5b90600052602060002001549050919050565b600061087a610374565b6108be576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6109536108c9610acd565b6002546040805163313ce56760e01b8152905161094e926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561090f57600080fd5b505afa158015610923573d6000803e3d6000fd5b505050506040513d602081101561093957600080fd5b5051859060ff16600a0a63ffffffff610c4b16565b610ce6565b506001919050565b6000610965610374565b6109a9576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6109536109b4610acd565b6002546040805163313ce56760e01b815290516109fa926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561090f57600080fd5b610e7f565b6002546001600160a01b031681565b6003546001600160a01b031681565b6000610a5f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610fe0565b9392505050565b60006001600160a01b038216610aad5760405162461bcd60e51b81526004018080602001828103825260228152602001806113e26022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b610ae260008263ffffffff61107716565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b600082820183811015610a5f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b610b8460018263ffffffff6110de16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b610bcc60008263ffffffff6110de16565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b610c1460018263ffffffff61107716565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b600082610c5a57506000610349565b82820282848281610c6757fe5b0414610a5f5760405162461bcd60e51b81526004018080602001828103825260218152602001806113c16021913960400191505060405180910390fd5b6000610a5f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061115f565b6003546001600160a01b03166323b872dd8330610d048560016111c4565b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b158015610d6c57600080fd5b505af1158015610d80573d6000803e3d6000fd5b505050506040513d6020811015610d9657600080fd5b5050600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050506040513d6020811015610e1857600080fd5b505060078054610e2f90600163ffffffff610a1d16565b81548110610e3957fe5b906000526020600020015481836001600160a01b03167f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed60405160405180910390a45050565b6002546040805163079cc67960e41b81526001600160a01b03858116600483015260248201859052915191909216916379cc679091604480830192600092919082900301818387803b158015610ed457600080fd5b505af1158015610ee8573d6000803e3d6000fd5b50506003546001600160a01b031691506340c10f19905083610f0b8460006111c4565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610f5a57600080fd5b505af1158015610f6e573d6000803e3d6000fd5b505050506040513d6020811015610f8457600080fd5b505060078054610f9b90600163ffffffff610a1d16565b81548110610fa557fe5b60009182526020822001546040519091839130917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91a45050565b6000818484111561106f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561103457818101518382015260200161101c565b50505050905090810190601f1680156110615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6110818282610a66565b6110bc5760405162461bcd60e51b81526004018080602001828103825260218152602001806113606021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6110e88282610a66565b1561113a576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081836111ae5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561103457818101518382015260200161101c565b5060008385816111ba57fe5b0495945050505050565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561121557600080fd5b505afa158015611229573d6000803e3d6000fd5b505050506040513d602081101561123f57600080fd5b505160ff16905082156112c3576112bb6112666103e861077587600263ffffffff610c4b16565b6112af83600a0a610775600761128b6001600780549050610a1d90919063ffffffff16565b8154811061129557fe5b906000526020600020015489610c4b90919063ffffffff16565b9063ffffffff610b1916565b915050610349565b6112bb6112dd6103e861077587600263ffffffff610c4b16565b61130283600a0a610775600761128b6001600780549050610a1d90919063ffffffff16565b9063ffffffff610a1d1656fe416c72656164792063616c6c7320342074696d65732074686973206e696768742e42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a72315820e9f36532a9df48be072db5e11a74cc5bf2cd6695457e4076c70d648089a8c4cb64736f6c634300051100326080604052600880546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b50604051806040016040528060078152602001662329a9a1b7b4b760c91b8152506040518060400160405280600381526020016246535360e81b8152506012620000996200008a6200018c60201b60201c565b6001600160e01b036200019116565b8251620000ae9060049060208601906200045c565b508151620000c49060059060208501906200045c565b506006805460ff191660ff9290921691909117905550620000f99050620000ea6200018c565b6001600160e01b03620001e316565b60085462000119906001600160a01b03166001600160e01b036200023516565b801562000141575060085462000141906001600160a01b03166001600160e01b036200025816565b620001865760085462000166906001600160a01b03166001600160e01b036200027516565b60085462000186906001600160a01b03166001600160e01b03620002ef16565b620004fe565b335b90565b620001ac8160036200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001fe8160076200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b600062000252826003620003f360201b62000d5a1790919060201c565b92915050565b600062000252826007620003f360201b62000d5a1790919060201c565b6200029b6200028c6001600160e01b036200018c16565b6001600160e01b036200023516565b620002d85760405162461bcd60e51b8152600401808060200182810382526030815260200180620018e36030913960400191505060405180910390fd5b620002ec816001600160e01b036200019116565b50565b62000315620003066001600160e01b036200018c16565b6001600160e01b036200025816565b620003525760405162461bcd60e51b8152600401808060200182810382526030815260200180620018b36030913960400191505060405180910390fd5b620002ec816001600160e01b03620001e316565b6200037b82826001600160e01b03620003f316565b15620003ce576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200043c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620019136022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049f57805160ff1916838001178555620004cf565b82800160010185558215620004cf579182015b82811115620004cf578251825591602001919060010190620004b2565b50620004dd929150620004e1565b5090565b6200018e91905b80821115620004dd5760008155600101620004e8565b6113a5806200050e6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820a9098e46632a4fb5e53c8bdd690b28c5d7db66650e7c11ec47acdb4e872000df64736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573736080604052600880546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b50604051806040016040528060078152602001662830bca1b7b4b760c91b8152506040518060400160405280600381526020016250614360e81b8152506012620000996200008a6200018c60201b60201c565b6001600160e01b036200019116565b8251620000ae9060049060208601906200045c565b508151620000c49060059060208501906200045c565b506006805460ff191660ff9290921691909117905550620000f99050620000ea6200018c565b6001600160e01b03620001e316565b60085462000119906001600160a01b03166001600160e01b036200023516565b801562000141575060085462000141906001600160a01b03166001600160e01b036200025816565b620001865760085462000166906001600160a01b03166001600160e01b036200027516565b60085462000186906001600160a01b03166001600160e01b03620002ef16565b620004fe565b335b90565b620001ac8160036200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001fe8160076200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b600062000252826003620003f360201b62000d5a1790919060201c565b92915050565b600062000252826007620003f360201b62000d5a1790919060201c565b6200029b6200028c6001600160e01b036200018c16565b6001600160e01b036200023516565b620002d85760405162461bcd60e51b8152600401808060200182810382526030815260200180620018e36030913960400191505060405180910390fd5b620002ec816001600160e01b036200019116565b50565b62000315620003066001600160e01b036200018c16565b6001600160e01b036200025816565b620003525760405162461bcd60e51b8152600401808060200182810382526030815260200180620018b36030913960400191505060405180910390fd5b620002ec816001600160e01b03620001e316565b6200037b82826001600160e01b03620003f316565b15620003ce576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200043c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620019136022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049f57805160ff1916838001178555620004cf565b82800160010185558215620004cf579182015b82811115620004cf578251825591602001919060010190620004b2565b50620004dd929150620004e1565b5090565b6200018e91905b80821115620004dd5760008155600101620004e8565b6113a5806200050e6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820426ab355e9a2908e9def7b4d551afd265d23eb2f2bb7175321eedc0f0854af2164736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737342726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_exchange",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "67": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "65": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "66": [
            589,
            607,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "13": {},
      "16": {},
      "17": {
        "token_exchange.sell": {
          "64": [
            1105,
            1113,
            true
          ]
        },
        "token_exchange.setNewPrice": {
          "58": [
            4796,
            4809,
            true
          ],
          "59": [
            4861,
            4882,
            false
          ],
          "60": [
            4906,
            4914,
            true
          ],
          "61": [
            5188,
            5207,
            true
          ],
          "62": [
            5269,
            5333,
            false
          ],
          "63": [
            5337,
            5401,
            true
          ]
        },
        "token_exchange.setOpenTime": {
          "57": [
            3929,
            3956,
            true
          ]
        }
      },
      "18": {},
      "19": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "68": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "72": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "69": [
            2458,
            2464,
            false
          ],
          "70": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "71": [
            1845,
            1851,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "30": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "52": [
            328,
            391
          ],
          "53": [
            401,
            428
          ]
        },
        "Roles.has": {
          "28": [
            867,
            935
          ],
          "29": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "50": [
            581,
            645
          ],
          "51": [
            655,
            683
          ]
        }
      },
      "10": {
        "BrokerRole._addBroker": {
          "36": [
            944,
            965
          ],
          "37": [
            975,
            1000
          ]
        },
        "BrokerRole._removeBroker": {
          "31": [
            1072,
            1096
          ],
          "32": [
            1106,
            1133
          ]
        },
        "BrokerRole.addBroker": {
          "10": [
            773,
            792
          ]
        },
        "BrokerRole.isBroker": {
          "1": [
            668,
            696
          ]
        },
        "BrokerRole.renounceBroker": {
          "3": [
            848,
            875
          ]
        }
      },
      "11": {},
      "13": {},
      "16": {},
      "17": {
        "token_exchange._buy": {
          "43": [
            2731,
            2799
          ],
          "44": [
            2810,
            2839
          ],
          "45": [
            2850,
            2919
          ]
        },
        "token_exchange._sell": {
          "46": [
            3094,
            3124
          ],
          "47": [
            3135,
            3177
          ],
          "48": [
            3188,
            3262
          ]
        },
        "token_exchange.buy": {
          "24": [
            2073,
            2139
          ],
          "25": [
            2150,
            2161
          ]
        },
        "token_exchange.getFee": {
          "55": [
            3488,
            3589
          ],
          "56": [
            3627,
            3728
          ]
        },
        "token_exchange.getHistory": {
          "23": [
            4381,
            4410
          ]
        },
        "token_exchange.isOpen": {
          "4": [
            3807,
            3856
          ]
        },
        "token_exchange.lastPrice": {
          "0": [
            4212,
            4289
          ]
        },
        "token_exchange.sell": {
          "26": [
            2516,
            2583
          ]
        },
        "token_exchange.setHistory": {
          "9": [
            4495,
            4519
          ]
        },
        "token_exchange.setNewPrice": {
          "12": [
            4787,
            4837
          ],
          "13": [
            4898,
            4935
          ],
          "14": [
            4963,
            4993
          ],
          "15": [
            5007,
            5049
          ],
          "16": [
            5076,
            5141
          ],
          "17": [
            5180,
            5245
          ],
          "18": [
            5260,
            5435
          ],
          "19": [
            5463,
            5493
          ],
          "20": [
            5507,
            5549
          ],
          "21": [
            5576,
            5596
          ],
          "22": [
            5618,
            5638
          ]
        },
        "token_exchange.setOpenTime": {
          "5": [
            3921,
            4025
          ],
          "6": [
            4035,
            4076
          ],
          "7": [
            4087,
            4127
          ]
        }
      },
      "18": {},
      "19": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "33": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "42": [
            3150,
            3196
          ],
          "54": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "40": [
            2480,
            2488
          ],
          "41": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "27": [
            1351,
            1401
          ],
          "49": [
            1837,
            1866
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "AdminRole._addAdmin": {
          "34": [
            927,
            947
          ],
          "35": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "38": [
            1052,
            1075
          ],
          "39": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "8": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "2": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "11": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "BrokerRole",
    "BurnerRole",
    "Context",
    "ERC20",
    "ERC20Burnable",
    "ERC20Detailed",
    "ERC20Mintable",
    "IERC20",
    "IT_ERC20",
    "IT_PayCoin",
    "MinterRole",
    "PayCoin",
    "Roles",
    "SafeMath",
    "token_erc20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "169:5773:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:5773:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4141:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;596:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;596:107:10;-1:-1:-1;;;;;596:107:10;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;805:77:10:-;;;:::i;:::-;;3752:111:17;;;:::i;3869:266::-;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;4432:95:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4432:95:17;;:::i;709:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;709:90:10;-1:-1:-1;;;;;709:90:10;;:::i;791:75:9:-;;;:::i;448:28:17:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4533:1113;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4533:1113:17;;:::i;:::-;;;;;;;;;;;;;;;;4302:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4302:124:17;;:::i;1732:436::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1732:436:17;;:::i;2174:438::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2174:438:17;;:::i;289:21::-;;;:::i;:::-;;;;-1:-1:-1;;;;;289:21:17;;;;;;;;;;;;;;316:25;;;:::i;4141:155::-;4220:12;:19;4185:7;;;;4220:26;;4244:1;4220:26;:23;:26;:::i;:::-;4248:12;4261:19;;:26;;4285:1;4261:26;:23;:26;:::i;:::-;4248:40;;;;;;;;;;;;;;;;4212:77;;;;4141:155;;:::o;596:107:10:-;652:4;675:21;652:4;688:7;675:21;:12;:21;:::i;:::-;668:28;596:107;-1:-1:-1;;596:107:10:o;587:105:9:-;642:4;665:20;:7;677;665:20;:11;:20;:::i;805:77:10:-;848:27;862:12;:10;:12::i;:::-;848:13;:27::i;:::-;805:77::o;3752:111:17:-;3791:4;3821:12;;3814:3;:19;;:42;;;;;3844:12;;3837:3;:19;;3814:42;3807:49;;3752:111;:::o;3869:266::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3944:12:17;;3929;;:27;3921:104;;;;-1:-1:-1;;;3921:104:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4050:12;;:26;;4067:8;4050:26;:16;:26;:::i;:::-;4035:12;:41;;;4102:25;;4119:7;4102:25;:16;:25;:::i;:::-;4087:12;:40;3869:266::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;4432:95:17:-;497:22:10;506:12;:10;:12::i;:::-;497:8;:22::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4495:12:17;27:10:-1;;39:1;23:18;;45:23;;-1:-1;4495:24:17;;;;;;;4432:95::o;709:90:10:-;497:22;506:12;:10;:12::i;497:22::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;773:10;:19::i;791:75:9:-;833:26;846:12;:10;:12::i;:::-;833;:26::i;448:28:17:-;;;;;;:::o;4533:1113::-;4601:7;497:22:10;506:12;:10;:12::i;497:22::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4641:12:17;4654:19;;4620:18;;4641:12;4654:26;;4678:1;4654:26;:23;:26;:::i;:::-;4641:40;;;;;;;;;;;;;;;;;;-1:-1:-1;4711:32:17;;;;4796:13;;;4787:50;;;;;-1:-1:-1;;;4787:50:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;4861:21;4869:12;:10;:12::i;4861:21::-;4857:751;;;4906:8;:6;:8::i;:::-;4898:37;;;;;-1:-1:-1;;;4898:37:17;;;;;;;;;;;;-1:-1:-1;;;4898:37:17;;;;;;;;;;;;;;;4963:30;4982:9;4963:10;:30::i;:::-;5023:12;:19;:26;;5047:1;5023:26;:23;:26;:::i;:::-;5007:42;;5130:9;5107:13;5093:12;:10;:12::i;:::-;-1:-1:-1;;;;;5081:60:17;;;;;;;;;;;4857:751;;;5188:15;;5206:1;5188:15;;;;:19;5180:65;;;;-1:-1:-1;;;5180:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:43;5305:27;5328:3;5305:18;:10;5320:2;5305:18;:14;:18;:::i;:::-;:22;:27;:22;:27;:::i;:::-;5290:10;;:43;:14;:43;:::i;:::-;5277:9;5269:64;:132;;;;-1:-1:-1;5358:43:17;5373:27;5396:3;5373:18;:10;5388:2;5373:18;:14;:18;:::i;:27::-;5358:10;;:43;:14;:43;:::i;:::-;5345:9;5337:64;5269:132;5260:175;;;;;-1:-1:-1;;;5260:175:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;5463:30;5482:9;5463:10;:30::i;:::-;5523:12;:19;:26;;5547:1;5523:26;:23;:26;:::i;:::-;5576:15;:20;;;;;;5595:1;5576:20;;-1:-1:-1;;5576:20:17;;;;;;5507:42;-1:-1:-1;4857:751:17;5625:13;4533:1113;-1:-1:-1;;;;4533:1113:17:o;4302:124::-;4363:7;4388:12;4401:8;4388:22;;;;;;;;;;;;;;;;4381:29;;4302:124;;;:::o;1732:436::-;1798:4;1105:8;:6;:8::i;:::-;1097:37;;;;;-1:-1:-1;;;1097:37:17;;;;;;;;;;;;-1:-1:-1;;;1097:37:17;;;;;;;;;;;;;;;2073:66;2078:12;:10;:12::i;:::-;2120:5;;:16;;;-1:-1:-1;;;2120:16:17;;;;2092:46;;-1:-1:-1;;;;;2120:5:17;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;2120:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2120:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2120:16:17;2092:11;;2112:25;;2108:2;:29;2092:46;:15;:46;:::i;:::-;2073:4;:66::i;:::-;-1:-1:-1;2157:4:17;1732:436;;;:::o;2174:438::-;2241:4;1105:8;:6;:8::i;:::-;1097:37;;;;;-1:-1:-1;;;1097:37:17;;;;;;;;;;;;-1:-1:-1;;;1097:37:17;;;;;;;;;;;;;;;2516:67;2522:12;:10;:12::i;:::-;2564:5;;:16;;;-1:-1:-1;;;2564:16:17;;;;2536:46;;-1:-1:-1;;;;;2564:5:17;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;2536:46:17;2516:5;:67::i;289:21::-;;;-1:-1:-1;;;;;289:21:17;;:::o;316:25::-;;;-1:-1:-1;;;;;316:25:17;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:3:o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;1013:127:10:-;1072:24;:8;1088:7;1072:24;:15;:24;:::i;:::-;1111:22;;-1:-1:-1;;;;;1111:22:10;;;;;;;;1013:127;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;872:116:9;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;888:119:10:-;944:21;:8;957:7;944:21;:12;:21;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;994:124:9:-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;2159:459:3:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;2618:308:17:-;2731:7;;-1:-1:-1;;;;;2731:7:17;:20;2752:9;2771:4;2778:20;2785:6;2731:7;2778:6;:20::i;:::-;2731:68;;;;;;;;;;;;;-1:-1:-1;;;;;2731:68:17;-1:-1:-1;;;;;2731:68:17;;;;;;-1:-1:-1;;;;;2731:68:17;-1:-1:-1;;;;;2731:68:17;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2731:68:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2731:68:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2810:5:17;;:29;;;-1:-1:-1;;;2810:29:17;;-1:-1:-1;;;;;2810:29:17;;;;;;;;;;;;;;;:5;;;;;:10;;:29;;;;;2731:68;;2810:29;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;2810:29:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2810:29:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2878:12:17;2891:19;;:26;;2915:1;2891:26;:23;:26;:::i;:::-;2878:40;;;;;;;;;;;;;;;;2870:6;2859:9;-1:-1:-1;;;;;2855:64:17;;;;;;;;;;;2618:308;;:::o;2932:337::-;3094:5;;:30;;;-1:-1:-1;;;3094:30:17;;-1:-1:-1;;;;;3094:30:17;;;;;;;;;;;;;;;:5;;;;;:14;;:30;;;;;:5;;:30;;;;;;;:5;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3094:30:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3135:7:17;;-1:-1:-1;;;;;3135:7:17;;-1:-1:-1;3135:12:17;;-1:-1:-1;3148:6:17;3155:21;3162:6;3135:7;3155:6;:21::i;:::-;3135:42;;;;;;;;;;;;;-1:-1:-1;;;;;3135:42:17;-1:-1:-1;;;;;3135:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3135:42:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3135:42:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3221:12:17;3234:19;;:26;;3258:1;3234:26;:23;:26;:::i;:::-;3221:40;;;;;;;;;;;;;;;;;3193:69;;3221:40;;3213:6;;3206:4;;3193:69;;;2932:337;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;510:180:1:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;3718:338:3:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:3;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:3:o;3275:471:17:-;3339:7;3411:11;3433:5;;;;;;;;;-1:-1:-1;;;;;3433:5:17;-1:-1:-1;;;;;3433:14:17;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3433:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3433:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3433:16:17;3425:25;;;-1:-1:-1;3461:278:17;;;;3495:94;3565:23;3583:4;3565:13;:6;3576:1;3565:13;:10;:13;:::i;:23::-;3495:65;3556:3;3552:2;:7;3495:52;3506:12;3519:26;3543:1;3519:12;:19;;;;:23;;:26;;;;:::i;:::-;3506:40;;;;;;;;;;;;;;;;3495:6;:10;;:52;;;;:::i;:65::-;:69;:94;:69;:94;:::i;:::-;3488:101;;;;;3461:278;3634:94;3704:23;3722:4;3704:13;:6;3715:1;3704:13;:10;:13;:::i;:23::-;3634:65;3695:3;3691:2;:7;3634:52;3645:12;3658:26;3682:1;3658:12;:19;;;;:23;;:26;;;;:::i;3634:65::-;:69;:94;:69;:94;:::i",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    169,
    5942
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x836CAE65 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC8691B2A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC8691B2A EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xFFB4E075 EQ PUSH2 0x2E4 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x836CAE65 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA48FF782 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xA9671193 EQ PUSH2 0x23A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x47535D7B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x4F15E62E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x761909D0 EQ PUSH2 0x1D1 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x22B31D9F EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x431E5C9D EQ PUSH2 0x191 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34F JUMP JUMPDEST PUSH2 0x199 PUSH2 0x362 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44D JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F JUMP JUMPDEST PUSH2 0x199 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x224 PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x84F JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x870 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x95B JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x324 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA66 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA66 AND JUMP JUMPDEST PUSH2 0x372 PUSH2 0x36D PUSH2 0xACD JUMP JUMPDEST PUSH2 0xAD1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x38A JUMPI POP PUSH1 0x5 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x39A PUSH2 0xACD JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH2 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1404 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD LT PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1381 PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x431 SWAP1 PUSH2 0xD2F0 PUSH4 0xFFFFFFFF PUSH2 0xB19 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH2 0x448 SWAP1 PUSH2 0x7E90 PUSH4 0xFFFFFFFF PUSH2 0xB19 AND JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x458 PUSH2 0x39A PUSH2 0xACD JUMP JUMPDEST PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1404 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49C DUP2 PUSH2 0xB73 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x4AA PUSH2 0xACD JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1330 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SSTORE JUMP JUMPDEST PUSH2 0x52A PUSH2 0x4AA PUSH2 0xACD JUMP JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1330 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49C DUP2 PUSH2 0xBBB JUMP JUMPDEST PUSH2 0x372 PUSH2 0x579 PUSH2 0xACD JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x594 PUSH2 0x4AA PUSH2 0xACD JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1330 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x5E8 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x5F2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD SWAP2 POP DUP4 DUP3 ADD SWAP1 DUP1 DUP3 SGT PUSH2 0x657 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520706F73697469766521000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x662 PUSH2 0x39A PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0x716 JUMPI PUSH2 0x66F PUSH2 0x374 JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6BC DUP3 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x6D0 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x6DC PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x24E1C492BC15609A5125924E67E792A203A4F550A353426FAD01A2C6D5FF976 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x130F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E PUSH2 0x781 PUSH1 0x64 PUSH2 0x775 DUP7 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0xC4B AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCA4 AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST DUP3 GT DUP1 ISZERO PUSH2 0x7C0 JUMPI POP PUSH2 0x7BD PUSH2 0x7B0 PUSH1 0x64 PUSH2 0x775 DUP7 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0xC4B AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB19 AND JUMP JUMPDEST DUP3 LT JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206368616E6765206D6F7265207468616E202D2B31302500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81A DUP3 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x82E SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x1 ADD AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x85E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87A PUSH2 0x374 JUMP JUMPDEST PUSH2 0x8BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x953 PUSH2 0x8C9 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x94E SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x923 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0xC4B AND JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x965 PUSH2 0x374 JUMP JUMPDEST PUSH2 0x9A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x953 PUSH2 0x9B4 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x9FA SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x90F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xFE0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13E2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0xAE2 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1077 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA5F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB84 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10DE AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xBCC PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x10DE AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xC14 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1077 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC5A JUMPI POP PUSH1 0x0 PUSH2 0x349 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC67 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13C1 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x115F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH2 0xD04 DUP6 PUSH1 0x1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH2 0xE2F SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE39 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x40C10F19 SWAP1 POP DUP4 PUSH2 0xF0B DUP5 PUSH1 0x0 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH2 0xF9B SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFA5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 SWAP2 ADDRESS SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1034 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x101C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1061 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x1081 DUP3 DUP3 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1360 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10E8 DUP3 DUP3 PUSH2 0xA66 JUMP JUMPDEST ISZERO PUSH2 0x113A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1034 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x101C JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x11BA JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND SWAP1 POP DUP3 ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12BB PUSH2 0x1266 PUSH2 0x3E8 PUSH2 0x775 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xC4B AND JUMP JUMPDEST PUSH2 0x12AF DUP4 PUSH1 0xA EXP PUSH2 0x775 PUSH1 0x7 PUSH2 0x128B PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xA1D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1295 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xC4B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB19 AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x349 JUMP JUMPDEST PUSH2 0x12BB PUSH2 0x12DD PUSH2 0x3E8 PUSH2 0x775 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xC4B AND JUMP JUMPDEST PUSH2 0x1302 DUP4 PUSH1 0xA EXP PUSH2 0x775 PUSH1 0x7 PUSH2 0x128B PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xA1D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA1D AND JUMP INVALID COINBASE PUSH13 0x72656164792063616C6C732034 KECCAK256 PUSH21 0x696D65732074686973206E696768742E42726F6B65 PUSH19 0x526F6C653A2063616C6C657220646F6573206E PUSH16 0x742068617665207468652042726F6B65 PUSH19 0x20726F6C65526F6C65733A206163636F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65536F6D6574 PUSH9 0x696E6727732077726F PUSH15 0x672C206D6179626520796F75207365 PUSH21 0x2074686520696E697469616C205F6F70656E696E67 PUSH21 0x696D652077726F6E672E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7752 PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F206164647265737341646D696E52 PUSH16 0x6C653A2063616C6C657220646F657320 PUSH15 0x6F742068617665207468652041646D PUSH10 0x6E20726F6C65A265627A PUSH27 0x72315820E9F36532A9DF48BE072DB5E11A74CC5BF2CD6695457E40 PUSH23 0xC70D648089A8C4CB64736F6C6343000511003200000000 ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        169,
        5942
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x836CAE65"
    },
    "38": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "GT",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC8691B2A"
    },
    "49": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "GT",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC8691B2A"
    },
    "60": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x269"
    },
    "64": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xD96A094A"
    },
    "71": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x286"
    },
    "75": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE4849B32"
    },
    "82": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2A3"
    },
    "86": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C0"
    },
    "97": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "99": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFB4E075"
    },
    "104": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "105": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2E4"
    },
    "108": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "109": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMP",
      "path": "17"
    },
    "113": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "114": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "115": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x836CAE65"
    },
    "120": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "121": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EE"
    },
    "124": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8BAD0C0A"
    },
    "131": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "132": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x214"
    },
    "135": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA48FF782"
    },
    "142": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "143": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x21C"
    },
    "146": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "147": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "148": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA9671193"
    },
    "153": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "154": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x23A"
    },
    "157": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "158": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMP",
      "path": "17"
    },
    "162": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "163": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "164": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x47535D7B"
    },
    "169": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "GT",
      "path": "17"
    },
    "170": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "174": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "175": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x47535D7B"
    },
    "180": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "181": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x19B"
    },
    "184": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "185": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "186": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x4F15E62E"
    },
    "191": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "192": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A3"
    },
    "195": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "196": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "197": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x70480275"
    },
    "202": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "203": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AB"
    },
    "206": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "207": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "208": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x761909D0"
    },
    "213": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "214": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D1"
    },
    "217": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "218": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMP",
      "path": "17"
    },
    "222": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "223": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "224": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x53F14DA"
    },
    "229": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "230": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "234": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "235": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x22B31D9F"
    },
    "240": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "241": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x131"
    },
    "244": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "245": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "246": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x24D7806C"
    },
    "251": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "252": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16B"
    },
    "255": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "256": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "257": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x431E5C9D"
    },
    "262": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "EQ",
      "path": "17"
    },
    "263": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x191"
    },
    "266": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "267": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "268": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "DUP1",
      "path": "17"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        169,
        5942
      ],
      "op": "REVERT",
      "path": "17"
    },
    "272": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "273": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x118"
    },
    "276": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2EC"
    },
    "279": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4141,
        4296
      ],
      "op": "JUMP",
      "path": "17"
    },
    "280": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "281": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "283": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "DUP1",
      "path": "17"
    },
    "284": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "285": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "286": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "DUP4",
      "path": "17"
    },
    "287": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "288": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "290": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "DUP4",
      "path": "17"
    },
    "291": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "ADD",
      "path": "17"
    },
    "292": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "293": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "294": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "295": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "296": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "DUP1",
      "path": "17"
    },
    "297": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "298": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "299": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "300": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "301": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SUB",
      "path": "17"
    },
    "302": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "ADD",
      "path": "17"
    },
    "303": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "304": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "RETURN",
      "path": "17"
    },
    "305": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "306": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x157"
    },
    "309": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "311": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "312": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "313": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "316": {
      "op": "DUP2"
    },
    "317": {
      "op": "LT"
    },
    "318": {
      "op": "ISZERO"
    },
    "319": {
      "op": "PUSH2",
      "value": "0x147"
    },
    "322": {
      "op": "JUMPI"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "325": {
      "op": "DUP1"
    },
    "326": {
      "op": "REVERT"
    },
    "327": {
      "op": "JUMPDEST"
    },
    "328": {
      "op": "POP"
    },
    "329": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "op": "SUB"
    },
    "338": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "AND",
      "path": "10"
    },
    "339": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x337"
    },
    "342": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "343": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "344": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "346": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "347": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "348": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "349": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "350": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "351": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP3",
      "path": "10"
    },
    "352": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "353": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "354": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "355": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP2",
      "path": "10"
    },
    "356": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "357": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "358": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "360": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ADD",
      "path": "10"
    },
    "361": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "362": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "RETURN",
      "path": "10"
    },
    "363": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "364": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x157"
    },
    "367": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "369": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "370": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "371": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "374": {
      "op": "DUP2"
    },
    "375": {
      "op": "LT"
    },
    "376": {
      "op": "ISZERO"
    },
    "377": {
      "op": "PUSH2",
      "value": "0x181"
    },
    "380": {
      "op": "JUMPI"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "383": {
      "op": "DUP1"
    },
    "384": {
      "op": "REVERT"
    },
    "385": {
      "op": "JUMPDEST"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "397": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x34F"
    },
    "400": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "401": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "402": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x199"
    },
    "405": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x362"
    },
    "408": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "409": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "410": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "STOP",
      "path": "10"
    },
    "411": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3752,
        3863
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "412": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3752,
        3863
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x157"
    },
    "415": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3752,
        3863
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x374"
    },
    "418": {
      "fn": "token_exchange.isOpen",
      "jump": "i",
      "offset": [
        3752,
        3863
      ],
      "op": "JUMP",
      "path": "17"
    },
    "419": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3869,
        4135
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "420": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3869,
        4135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x199"
    },
    "423": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3869,
        4135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x38F"
    },
    "426": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3869,
        4135
      ],
      "op": "JUMP",
      "path": "17"
    },
    "427": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "428": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x199"
    },
    "431": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "433": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "434": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "435": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "LT"
    },
    "440": {
      "op": "ISZERO"
    },
    "441": {
      "op": "PUSH2",
      "value": "0x1C1"
    },
    "444": {
      "op": "JUMPI"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "447": {
      "op": "DUP1"
    },
    "448": {
      "op": "REVERT"
    },
    "449": {
      "op": "JUMPDEST"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "SUB"
    },
    "460": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "461": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x44D"
    },
    "464": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "465": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "466": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x199"
    },
    "469": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "471": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "DUP1",
      "path": "17"
    },
    "472": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "473": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "SUB",
      "path": "17"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "476": {
      "op": "DUP2"
    },
    "477": {
      "op": "LT"
    },
    "478": {
      "op": "ISZERO"
    },
    "479": {
      "op": "PUSH2",
      "value": "0x1E7"
    },
    "482": {
      "op": "JUMPI"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "485": {
      "op": "DUP1"
    },
    "486": {
      "op": "REVERT"
    },
    "487": {
      "op": "JUMPDEST"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "490": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49F"
    },
    "493": {
      "fn": "token_exchange.setHistory",
      "jump": "i",
      "offset": [
        4432,
        4527
      ],
      "op": "JUMP",
      "path": "17"
    },
    "494": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "495": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x199"
    },
    "498": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "500": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "DUP1",
      "path": "10"
    },
    "501": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "502": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "SUB",
      "path": "10"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "505": {
      "op": "DUP2"
    },
    "506": {
      "op": "LT"
    },
    "507": {
      "op": "ISZERO"
    },
    "508": {
      "op": "PUSH2",
      "value": "0x204"
    },
    "511": {
      "op": "JUMPI"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "514": {
      "op": "DUP1"
    },
    "515": {
      "op": "REVERT"
    },
    "516": {
      "op": "JUMPDEST"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "SUB"
    },
    "527": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "AND",
      "path": "10"
    },
    "528": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51F"
    },
    "531": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        709,
        799
      ],
      "op": "JUMP",
      "path": "10"
    },
    "532": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "533": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x199"
    },
    "536": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x56E"
    },
    "539": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "540": {
      "offset": [
        448,
        476
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "541": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x224"
    },
    "544": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x57E"
    },
    "547": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        448,
        476
      ],
      "op": "JUMP",
      "path": "17"
    },
    "548": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "549": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "551": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "DUP1",
      "path": "17"
    },
    "552": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "553": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "555": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "556": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "557": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "AND",
      "path": "17"
    },
    "558": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "DUP3",
      "path": "17"
    },
    "559": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "560": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "561": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "562": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "DUP2",
      "path": "17"
    },
    "563": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "564": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SUB",
      "path": "17"
    },
    "565": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "567": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "ADD",
      "path": "17"
    },
    "568": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "569": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "RETURN",
      "path": "17"
    },
    "570": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "571": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x257"
    },
    "574": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "576": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "DUP1",
      "path": "17"
    },
    "577": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "578": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SUB",
      "path": "17"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "581": {
      "op": "DUP2"
    },
    "582": {
      "op": "LT"
    },
    "583": {
      "op": "ISZERO"
    },
    "584": {
      "op": "PUSH2",
      "value": "0x250"
    },
    "587": {
      "op": "JUMPI"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "590": {
      "op": "DUP1"
    },
    "591": {
      "op": "REVERT"
    },
    "592": {
      "op": "JUMPDEST"
    },
    "593": {
      "op": "POP"
    },
    "594": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "595": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x587"
    },
    "598": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4533,
        5646
      ],
      "op": "JUMP",
      "path": "17"
    },
    "599": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "600": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "602": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "DUP1",
      "path": "17"
    },
    "603": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "604": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "605": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "DUP3",
      "path": "17"
    },
    "606": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "607": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "608": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "609": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "DUP2",
      "path": "17"
    },
    "610": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "611": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SUB",
      "path": "17"
    },
    "612": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "614": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "ADD",
      "path": "17"
    },
    "615": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "616": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "RETURN",
      "path": "17"
    },
    "617": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "618": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x257"
    },
    "621": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "623": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "DUP1",
      "path": "17"
    },
    "624": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "625": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "SUB",
      "path": "17"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "628": {
      "op": "DUP2"
    },
    "629": {
      "op": "LT"
    },
    "630": {
      "op": "ISZERO"
    },
    "631": {
      "op": "PUSH2",
      "value": "0x27F"
    },
    "634": {
      "op": "JUMPI"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "637": {
      "op": "DUP1"
    },
    "638": {
      "op": "REVERT"
    },
    "639": {
      "op": "JUMPDEST"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "642": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x84F"
    },
    "645": {
      "fn": "token_exchange.getHistory",
      "jump": "i",
      "offset": [
        4302,
        4426
      ],
      "op": "JUMP",
      "path": "17"
    },
    "646": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "647": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x157"
    },
    "650": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "652": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "DUP1",
      "path": "17"
    },
    "653": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "654": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "SUB",
      "path": "17"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "LT"
    },
    "659": {
      "op": "ISZERO"
    },
    "660": {
      "op": "PUSH2",
      "value": "0x29C"
    },
    "663": {
      "op": "JUMPI"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "666": {
      "op": "DUP1"
    },
    "667": {
      "op": "REVERT"
    },
    "668": {
      "op": "JUMPDEST"
    },
    "669": {
      "op": "POP"
    },
    "670": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "671": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x870"
    },
    "674": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1732,
        2168
      ],
      "op": "JUMP",
      "path": "17"
    },
    "675": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "676": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x157"
    },
    "679": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "681": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "682": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "683": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "SUB",
      "path": "17"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "DUP2"
    },
    "687": {
      "op": "LT"
    },
    "688": {
      "op": "ISZERO"
    },
    "689": {
      "op": "PUSH2",
      "value": "0x2B9"
    },
    "692": {
      "op": "JUMPI"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "695": {
      "op": "DUP1"
    },
    "696": {
      "op": "REVERT"
    },
    "697": {
      "op": "JUMPDEST"
    },
    "698": {
      "op": "POP"
    },
    "699": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "700": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x95B"
    },
    "703": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2174,
        2612
      ],
      "op": "JUMP",
      "path": "17"
    },
    "704": {
      "offset": [
        289,
        310
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "705": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C8"
    },
    "708": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9FF"
    },
    "711": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        289,
        310
      ],
      "op": "JUMP",
      "path": "17"
    },
    "712": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "713": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "715": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP1",
      "path": "17"
    },
    "716": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "726": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "727": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "AND",
      "path": "17"
    },
    "728": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP3",
      "path": "17"
    },
    "729": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "730": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "731": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "732": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP2",
      "path": "17"
    },
    "733": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "734": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SUB",
      "path": "17"
    },
    "735": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "737": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "ADD",
      "path": "17"
    },
    "738": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "739": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "RETURN",
      "path": "17"
    },
    "740": {
      "offset": [
        316,
        341
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "741": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C8"
    },
    "744": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA0E"
    },
    "747": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        316,
        341
      ],
      "op": "JUMP",
      "path": "17"
    },
    "748": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "749": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4232
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 0,
      "value": "0x7"
    },
    "751": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4239
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "752": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4185,
        4192
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "754": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4185,
        4192
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "755": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4185,
        4192
      ],
      "op": "DUP2",
      "path": "17"
    },
    "756": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4185,
        4192
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "757": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4246
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x305"
    },
    "760": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4246
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "761": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4244,
        4245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "763": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4246
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "768": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4243
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "771": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4246
      ],
      "op": "AND",
      "path": "17"
    },
    "772": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4220,
        4246
      ],
      "op": "JUMP",
      "path": "17"
    },
    "773": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4220,
        4246
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "774": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4260
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "776": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4280
      ],
      "op": "DUP1",
      "path": "17"
    },
    "777": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4280
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "778": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4287
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x31A"
    },
    "781": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4287
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "782": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4285,
        4286
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "784": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4287
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "789": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4284
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "792": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4287
      ],
      "op": "AND",
      "path": "17"
    },
    "793": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4261,
        4287
      ],
      "op": "JUMP",
      "path": "17"
    },
    "794": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4261,
        4287
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "795": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "DUP2",
      "path": "17"
    },
    "796": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "797": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "DUP2",
      "path": "17"
    },
    "798": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "LT",
      "path": "17"
    },
    "799": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x324"
    },
    "802": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "803": {
      "dev": "Index out of range",
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "INVALID",
      "path": "17"
    },
    "804": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "805": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "806": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "808": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "809": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "811": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "813": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "814": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "ADD",
      "path": "17"
    },
    "815": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4248,
        4288
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "816": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4212,
        4289
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "817": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4212,
        4289
      ],
      "op": "POP",
      "path": "17"
    },
    "818": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4212,
        4289
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "819": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4212,
        4289
      ],
      "op": "POP",
      "path": "17"
    },
    "820": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "821": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4141,
        4296
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "822": {
      "fn": "token_exchange.lastPrice",
      "jump": "o",
      "offset": [
        4141,
        4296
      ],
      "op": "JUMP",
      "path": "17"
    },
    "823": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "824": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "826": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 1,
      "value": "0x349"
    },
    "829": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "830": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        688,
        695
      ],
      "op": "DUP4",
      "path": "10"
    },
    "831": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "836": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        687
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA66"
    },
    "839": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "AND",
      "path": "10"
    },
    "840": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        675,
        696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "841": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "842": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        668,
        696
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "843": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "fn": "BrokerRole.isBroker",
      "jump": "o",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "847": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "848": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "850": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 2,
      "value": "0x349"
    },
    "853": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "855": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "856": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "861": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA66"
    },
    "864": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "865": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "866": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "867": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 3,
      "value": "0x372"
    },
    "870": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36D"
    },
    "873": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xACD"
    },
    "876": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        862,
        874
      ],
      "op": "JUMP",
      "path": "10"
    },
    "877": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "878": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAD1"
    },
    "881": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        848,
        875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "882": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "883": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "o",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "884": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3752,
        3863
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "885": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3791,
        3795
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "887": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3821,
        3833
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 4,
      "value": "0x4"
    },
    "889": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3821,
        3833
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "890": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3817
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "891": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3833
      ],
      "op": "LT",
      "path": "17"
    },
    "892": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3833
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "893": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3856
      ],
      "op": "DUP1",
      "path": "17"
    },
    "894": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3856
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "895": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3856
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x38A"
    },
    "898": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3856
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "899": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3856
      ],
      "op": "POP",
      "path": "17"
    },
    "900": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3844,
        3856
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "902": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3844,
        3856
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "903": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3837,
        3840
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "904": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3837,
        3856
      ],
      "op": "GT",
      "path": "17"
    },
    "905": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3837,
        3856
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "906": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3814,
        3856
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "907": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3807,
        3856
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "908": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3807,
        3856
      ],
      "op": "POP",
      "path": "17"
    },
    "909": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3752,
        3863
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "910": {
      "fn": "token_exchange.isOpen",
      "jump": "o",
      "offset": [
        3752,
        3863
      ],
      "op": "JUMP",
      "path": "17"
    },
    "911": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3869,
        4135
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "912": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x39F"
    },
    "915": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x39A"
    },
    "918": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xACD"
    },
    "921": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "922": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "923": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x34F"
    },
    "926": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "927": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "928": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "931": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "932": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "934": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "943": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "944": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "946": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "947": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "948": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "949": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "951": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "952": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "953": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "954": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "955": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "956": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "957": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "959": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "960": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "961": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "963": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "964": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "965": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1404"
    },
    "968": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "970": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "971": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "972": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "974": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "975": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "976": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "977": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "978": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "980": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "981": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "982": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "983": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "984": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "985": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "986": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "987": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3944,
        3956
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x5"
    },
    "989": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3944,
        3956
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "990": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3941
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "992": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3941
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "993": {
      "branch": 57,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3956
      ],
      "op": "LT",
      "path": "17"
    },
    "994": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x41C"
    },
    "997": {
      "branch": 57,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "998": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1000": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1009": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1010": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1012": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "ADD",
      "path": "17"
    },
    "1013": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1014": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1015": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1017": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "ADD",
      "path": "17"
    },
    "1018": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1019": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1020": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "SUB",
      "path": "17"
    },
    "1021": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1022": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1023": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1025": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1026": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1027": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1029": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "ADD",
      "path": "17"
    },
    "1030": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1031": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1381"
    },
    "1034": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1036": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1037": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "CODECOPY",
      "path": "17"
    },
    "1038": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1040": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "ADD",
      "path": "17"
    },
    "1041": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1042": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "POP",
      "path": "17"
    },
    "1043": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "POP",
      "path": "17"
    },
    "1044": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1046": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1047": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1048": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1049": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "SUB",
      "path": "17"
    },
    "1050": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1051": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1052": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3921,
        4025
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1053": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4062
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 6,
      "value": "0x5"
    },
    "1055": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4062
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1056": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4076
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x431"
    },
    "1059": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4076
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1060": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4067,
        4075
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD2F0"
    },
    "1063": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4076
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1068": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4066
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB19"
    },
    "1071": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4076
      ],
      "op": "AND",
      "path": "17"
    },
    "1072": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4050,
        4076
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1073": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4050,
        4076
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1074": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4035,
        4047
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1076": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4035,
        4076
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1077": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4035,
        4076
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1078": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4035,
        4076
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1079": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4102,
        4127
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 7,
      "value": "0x448"
    },
    "1082": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4102,
        4127
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1083": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4119,
        4126
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7E90"
    },
    "1086": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4102,
        4127
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1091": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4102,
        4118
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB19"
    },
    "1094": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4102,
        4127
      ],
      "op": "AND",
      "path": "17"
    },
    "1095": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        4102,
        4127
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1096": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4102,
        4127
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1097": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4087,
        4099
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "1099": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        4087,
        4127
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1100": {
      "fn": "token_exchange.setOpenTime",
      "jump": "o",
      "offset": [
        3869,
        4135
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1101": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1102": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x458"
    },
    "1105": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x39A"
    },
    "1108": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xACD"
    },
    "1111": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1112": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1113": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x493"
    },
    "1116": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1117": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1119": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1128": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1129": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1131": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1132": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1133": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1134": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1136": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1137": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1138": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1139": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1140": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1141": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1142": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1144": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1145": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1146": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1148": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1149": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1150": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1404"
    },
    "1153": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1155": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1156": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1157": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1159": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1160": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1161": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1162": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1163": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1165": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1166": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1167": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1168": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1169": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1170": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1171": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1172": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 8,
      "value": "0x49C"
    },
    "1175": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1176": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB73"
    },
    "1179": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1180": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1181": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "1182": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1183": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4432,
        4527
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1184": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AF"
    },
    "1187": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AA"
    },
    "1190": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xACD"
    },
    "1193": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1194": {
      "fn": "token_exchange.setHistory",
      "offset": [
        506,
        518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1195": {
      "offset": [
        497,
        505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x337"
    },
    "1198": {
      "jump": "i",
      "offset": [
        497,
        519
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1199": {
      "fn": "token_exchange.setHistory",
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1200": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EA"
    },
    "1203": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1204": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1206": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1215": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1216": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1218": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1219": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1220": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1221": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1223": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1224": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1225": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1226": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1227": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1228": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1229": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1231": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1232": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1233": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1235": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1236": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1237": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1330"
    },
    "1240": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1242": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1243": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1244": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1246": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1247": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1248": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1249": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1250": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1252": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1253": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1254": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1255": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1256": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1257": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1258": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1259": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4507
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 9,
      "value": "0x7"
    },
    "1261": {
      "op": "DUP1"
    },
    "1262": {
      "op": "SLOAD"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "SSTORE"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1271": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1272": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1273": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1274": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1275": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1308": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "ADD",
      "path": "17"
    },
    "1309": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4495,
        4519
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1310": {
      "fn": "token_exchange.setHistory",
      "jump": "o",
      "offset": [
        4432,
        4527
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1311": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1312": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52A"
    },
    "1315": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AA"
    },
    "1318": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xACD"
    },
    "1321": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1322": {
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1323": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x565"
    },
    "1326": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1327": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1329": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1336": {
      "op": "SHL"
    },
    "1337": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1338": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1339": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1341": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1342": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1343": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1344": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1346": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1347": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1348": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1349": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1350": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1351": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1352": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1354": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1355": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1356": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1358": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1359": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1360": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1330"
    },
    "1363": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1365": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1366": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1367": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1369": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1370": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1371": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1372": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1373": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1375": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1376": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1377": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1378": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1379": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1380": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1381": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1382": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        792
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 10,
      "value": "0x49C"
    },
    "1385": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        784,
        791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1386": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBB"
    },
    "1389": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        773,
        792
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1390": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1391": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 11,
      "value": "0x372"
    },
    "1394": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x579"
    },
    "1397": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xACD"
    },
    "1400": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1401": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1402": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC03"
    },
    "1405": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1406": {
      "offset": [
        448,
        476
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1407": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "1409": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1410": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1412": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "AND",
      "path": "17"
    },
    "1413": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        448,
        476
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1414": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "o",
      "offset": [
        448,
        476
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1415": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1416": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4601,
        4608
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1418": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x594"
    },
    "1421": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AA"
    },
    "1424": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xACD"
    },
    "1427": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1428": {
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1429": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5CF"
    },
    "1432": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1433": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1435": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1444": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1445": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1447": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1448": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1449": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1450": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1452": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1453": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1454": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1455": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1456": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1457": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1458": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1460": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1461": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1462": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1464": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1465": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1466": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1330"
    },
    "1469": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1471": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1472": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1473": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1475": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1476": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1477": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1478": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1479": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1481": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1482": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1483": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1484": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1485": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1486": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1487": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1488": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4653
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "1490": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4673
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1491": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4673
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1492": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1494": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4620,
        4638
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1495": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4653
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1496": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4680
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5E8"
    },
    "1499": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4680
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1500": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4678,
        4679
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1502": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4680
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1507": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4677
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "1510": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4680
      ],
      "op": "AND",
      "path": "17"
    },
    "1511": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4654,
        4680
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1512": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4654,
        4680
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1513": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1514": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1515": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1516": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "LT",
      "path": "17"
    },
    "1517": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5F2"
    },
    "1520": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1521": {
      "dev": "Index out of range",
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "INVALID",
      "path": "17"
    },
    "1522": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1523": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1525": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1526": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1527": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1528": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1530": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1531": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1532": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "ADD",
      "path": "17"
    },
    "1533": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1534": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4641,
        4681
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4711,
        4743
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1537": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4711,
        4743
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1538": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4711,
        4743
      ],
      "op": "ADD",
      "path": "17"
    },
    "1539": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4711,
        4743
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1540": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4796,
        4809
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 12
    },
    "1541": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4796,
        4809
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1542": {
      "branch": 58,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4796,
        4809
      ],
      "op": "SGT",
      "path": "17"
    },
    "1543": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x657"
    },
    "1546": {
      "branch": 58,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1547": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1549": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1550": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1559": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1560": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1562": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1564": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1565": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "ADD",
      "path": "17"
    },
    "1566": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1567": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x17"
    },
    "1569": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1571": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1572": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "ADD",
      "path": "17"
    },
    "1573": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1574": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x5072696365206D75737420626520706F73697469766521000000000000000000"
    },
    "1607": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "1609": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1610": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "ADD",
      "path": "17"
    },
    "1611": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1612": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1613": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1614": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1615": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1616": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1617": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "SUB",
      "path": "17"
    },
    "1618": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1620": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "ADD",
      "path": "17"
    },
    "1621": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1622": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1623": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4787,
        4837
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1624": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4861,
        4882
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x662"
    },
    "1627": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4869,
        4881
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x39A"
    },
    "1630": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4869,
        4879
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xACD"
    },
    "1633": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4869,
        4881
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1634": {
      "branch": 59,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4861,
        4882
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1635": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1636": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x716"
    },
    "1639": {
      "branch": 59,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1640": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4906,
        4914
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 13,
      "value": "0x66F"
    },
    "1643": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4906,
        4912
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x374"
    },
    "1646": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4906,
        4914
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1647": {
      "branch": 60,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4906,
        4914
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1648": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6B3"
    },
    "1651": {
      "branch": 60,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1652": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1654": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1655": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1662": {
      "op": "SHL"
    },
    "1663": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1664": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1665": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1667": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1669": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1670": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "ADD",
      "path": "17"
    },
    "1671": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1672": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "1674": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1676": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1677": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "ADD",
      "path": "17"
    },
    "1678": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1679": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "1701": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1702": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "ADD",
      "path": "17"
    },
    "1703": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1704": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1705": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1706": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1707": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1708": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1709": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "SUB",
      "path": "17"
    },
    "1710": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1712": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "ADD",
      "path": "17"
    },
    "1713": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1714": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1715": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4898,
        4935
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1716": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4963,
        4993
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 14,
      "value": "0x6BC"
    },
    "1719": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4982,
        4991
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1720": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4963,
        4973
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49F"
    },
    "1723": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4963,
        4993
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1724": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4963,
        4993
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1725": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5035
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 15,
      "value": "0x7"
    },
    "1727": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5042
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1728": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5049
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6D0"
    },
    "1731": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5049
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1732": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5047,
        5048
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1734": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5049
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1739": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5046
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "1742": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5049
      ],
      "op": "AND",
      "path": "17"
    },
    "1743": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5023,
        5049
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1744": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5023,
        5049
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1745": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5049
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1746": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5049
      ],
      "op": "POP",
      "path": "17"
    },
    "1747": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5130,
        5139
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 16
    },
    "1748": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5107,
        5120
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1749": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5093,
        5105
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6DC"
    },
    "1752": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5093,
        5103
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xACD"
    },
    "1755": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5093,
        5105
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1756": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5093,
        5105
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "op": "SUB"
    },
    "1765": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "AND",
      "path": "17"
    },
    "1766": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x24E1C492BC15609A5125924E67E792A203A4F550A353426FAD01A2C6D5FF976"
    },
    "1799": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1801": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1802": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1804": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1805": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1806": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1807": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "SUB",
      "path": "17"
    },
    "1808": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1809": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5081,
        5141
      ],
      "op": "LOG4",
      "path": "17"
    },
    "1810": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x847"
    },
    "1813": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1814": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1815": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5203
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 17,
      "value": "0x6"
    },
    "1817": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5203
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1818": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5206,
        5207
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1820": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5203
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1822": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5203
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1823": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5203
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1824": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5203
      ],
      "op": "AND",
      "path": "17"
    },
    "1825": {
      "branch": 61,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5188,
        5207
      ],
      "op": "LT",
      "path": "17"
    },
    "1826": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x75C"
    },
    "1829": {
      "branch": 61,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1830": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1832": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1841": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1842": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1844": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "ADD",
      "path": "17"
    },
    "1845": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1846": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1847": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1849": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "ADD",
      "path": "17"
    },
    "1850": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1851": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1852": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "SUB",
      "path": "17"
    },
    "1853": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1854": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1855": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x21"
    },
    "1857": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1858": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1859": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1861": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "ADD",
      "path": "17"
    },
    "1862": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1863": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x130F"
    },
    "1866": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x21"
    },
    "1868": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1869": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "CODECOPY",
      "path": "17"
    },
    "1870": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1872": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "ADD",
      "path": "17"
    },
    "1873": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1874": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "POP",
      "path": "17"
    },
    "1875": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "POP",
      "path": "17"
    },
    "1876": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1878": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1879": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1880": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1881": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "SUB",
      "path": "17"
    },
    "1882": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1883": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1884": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5180,
        5245
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1885": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5333
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 18,
      "value": "0x78E"
    },
    "1888": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5332
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x781"
    },
    "1891": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5328,
        5331
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1893": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5323
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x775"
    },
    "1896": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5315
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1897": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5320,
        5322
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "1899": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5323
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1904": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5319
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC4B"
    },
    "1907": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5323
      ],
      "op": "AND",
      "path": "17"
    },
    "1908": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5305,
        5323
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1909": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5323
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1910": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5327
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1911": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5332
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1916": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5327
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA4"
    },
    "1919": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5332
      ],
      "op": "AND",
      "path": "17"
    },
    "1920": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5305,
        5332
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1921": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5305,
        5332
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1922": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5300
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1923": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5300
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1924": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5333
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1929": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5304
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "1932": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5333
      ],
      "op": "AND",
      "path": "17"
    },
    "1933": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5290,
        5333
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1934": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5333
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1935": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5277,
        5286
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1936": {
      "branch": 62,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5269,
        5333
      ],
      "op": "GT",
      "path": "17"
    },
    "1937": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5269,
        5401
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1938": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5269,
        5401
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1939": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5269,
        5401
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7C0"
    },
    "1942": {
      "branch": 62,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5269,
        5401
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1943": {
      "op": "POP"
    },
    "1944": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5401
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7BD"
    },
    "1947": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5400
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7B0"
    },
    "1950": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5396,
        5399
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1952": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5391
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x775"
    },
    "1955": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5383
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1956": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5388,
        5390
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "1958": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5391
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1963": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5387
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC4B"
    },
    "1966": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5391
      ],
      "op": "AND",
      "path": "17"
    },
    "1967": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5373,
        5391
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1968": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5373,
        5400
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1969": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5368
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1970": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5368
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1971": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5401
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1976": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5372
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB19"
    },
    "1979": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5401
      ],
      "op": "AND",
      "path": "17"
    },
    "1980": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5358,
        5401
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1981": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5358,
        5401
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1982": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5345,
        5354
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1983": {
      "branch": 63,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5337,
        5401
      ],
      "op": "LT",
      "path": "17"
    },
    "1984": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5269,
        5401
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1985": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x811"
    },
    "1988": {
      "branch": 63,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1989": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1991": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1992": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2001": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2002": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2004": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2006": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2007": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "ADD",
      "path": "17"
    },
    "2008": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2009": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1C"
    },
    "2011": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "2013": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2014": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "ADD",
      "path": "17"
    },
    "2015": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2016": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x43616E2774206368616E6765206D6F7265207468616E202D2B31302500000000"
    },
    "2049": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "2051": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2052": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "ADD",
      "path": "17"
    },
    "2053": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2054": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2055": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2056": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2057": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2058": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2059": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "SUB",
      "path": "17"
    },
    "2060": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "2062": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "ADD",
      "path": "17"
    },
    "2063": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2064": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2065": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5260,
        5435
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2066": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5463,
        5493
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 19,
      "value": "0x81A"
    },
    "2069": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5482,
        5491
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2070": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5463,
        5473
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49F"
    },
    "2073": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5463,
        5493
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2074": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5463,
        5493
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2075": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5535
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 20,
      "value": "0x7"
    },
    "2077": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5542
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2078": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5549
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x82E"
    },
    "2081": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5549
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2082": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5547,
        5548
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2084": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5549
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2089": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5546
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "2092": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5549
      ],
      "op": "AND",
      "path": "17"
    },
    "2093": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5523,
        5549
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2094": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5523,
        5549
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2095": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5591
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 21,
      "value": "0x6"
    },
    "2097": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2098": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2099": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "2101": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2102": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2103": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "AND",
      "path": "17"
    },
    "2104": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5595,
        5596
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2106": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "ADD",
      "path": "17"
    },
    "2107": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "AND",
      "path": "17"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2110": {
      "op": "NOT"
    },
    "2111": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2112": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2113": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "AND",
      "path": "17"
    },
    "2114": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "OR",
      "path": "17"
    },
    "2115": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2116": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5576,
        5596
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "2117": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5507,
        5549
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2118": {
      "op": "POP"
    },
    "2119": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4857,
        5608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2120": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5625,
        5638
      ],
      "op": "SWAP5",
      "path": "17",
      "statement": 22
    },
    "2121": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4533,
        5646
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "fn": "token_exchange.setNewPrice",
      "jump": "o",
      "offset": [
        4533,
        5646
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2127": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2128": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4363,
        4370
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2130": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4400
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 23,
      "value": "0x7"
    },
    "2132": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4401,
        4409
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2133": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2134": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2135": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2136": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "LT",
      "path": "17"
    },
    "2137": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x85E"
    },
    "2140": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2141": {
      "dev": "Index out of range",
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "INVALID",
      "path": "17"
    },
    "2142": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2143": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2144": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2146": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2147": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2149": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2151": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2152": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "ADD",
      "path": "17"
    },
    "2153": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4388,
        4410
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2154": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4381,
        4410
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2155": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4381,
        4410
      ],
      "op": "POP",
      "path": "17"
    },
    "2156": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2157": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2158": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4302,
        4426
      ],
      "op": "POP",
      "path": "17"
    },
    "2159": {
      "fn": "token_exchange.getHistory",
      "jump": "o",
      "offset": [
        4302,
        4426
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2160": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2161": {
      "fn": "token_exchange.buy",
      "offset": [
        1798,
        1802
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2163": {
      "offset": [
        1105,
        1113
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x87A"
    },
    "2166": {
      "offset": [
        1105,
        1111
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x374"
    },
    "2169": {
      "jump": "i",
      "offset": [
        1105,
        1113
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2170": {
      "fn": "token_exchange.buy",
      "offset": [
        1105,
        1113
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2171": {
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8BE"
    },
    "2174": {
      "offset": [
        1097,
        1134
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2175": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2177": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2178": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "offset": [
        1097,
        1134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2187": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2188": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2190": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2192": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2193": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2194": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2195": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "2197": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "2199": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2200": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2201": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2202": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2221": {
      "op": "SHL"
    },
    "2222": {
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "2224": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2225": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2226": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2227": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2228": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2229": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2230": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2231": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2232": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "SUB",
      "path": "17"
    },
    "2233": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "2235": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2236": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2237": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2238": {
      "fn": "token_exchange.buy",
      "offset": [
        1097,
        1134
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2239": {
      "fn": "token_exchange.buy",
      "offset": [
        2073,
        2139
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 24,
      "value": "0x953"
    },
    "2242": {
      "fn": "token_exchange.buy",
      "offset": [
        2078,
        2090
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8C9"
    },
    "2245": {
      "fn": "token_exchange.buy",
      "offset": [
        2078,
        2088
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xACD"
    },
    "2248": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2078,
        2090
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2249": {
      "fn": "token_exchange.buy",
      "offset": [
        2078,
        2090
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2250": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2125
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2252": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2125
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2253": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2255": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2256": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2257": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2266": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2267": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2268": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2269": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2138
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x94E"
    },
    "2272": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2138
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2279": {
      "op": "SHL"
    },
    "2280": {
      "op": "SUB"
    },
    "2281": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2125
      ],
      "op": "AND",
      "path": "17"
    },
    "2282": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2125
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2283": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2134
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x313CE567"
    },
    "2288": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2134
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2289": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2291": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2292": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2293": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "ADD",
      "path": "17"
    },
    "2294": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2295": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2297": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2298": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2299": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2300": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2301": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2302": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "SUB",
      "path": "17"
    },
    "2303": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "ADD",
      "path": "17"
    },
    "2304": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2305": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2125
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2306": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2307": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "2308": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2309": {
      "op": "DUP1"
    },
    "2310": {
      "op": "ISZERO"
    },
    "2311": {
      "op": "PUSH2",
      "value": "0x90F"
    },
    "2314": {
      "op": "JUMPI"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2317": {
      "op": "DUP1"
    },
    "2318": {
      "op": "REVERT"
    },
    "2319": {
      "op": "JUMPDEST"
    },
    "2320": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "POP",
      "path": "17"
    },
    "2321": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "GAS",
      "path": "17"
    },
    "2322": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2323": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2324": {
      "op": "DUP1"
    },
    "2325": {
      "op": "ISZERO"
    },
    "2326": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2329": {
      "op": "JUMPI"
    },
    "2330": {
      "op": "RETURNDATASIZE"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2333": {
      "op": "DUP1"
    },
    "2334": {
      "op": "RETURNDATACOPY"
    },
    "2335": {
      "op": "RETURNDATASIZE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2338": {
      "op": "REVERT"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "POP",
      "path": "17"
    },
    "2341": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "POP",
      "path": "17"
    },
    "2342": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "POP",
      "path": "17"
    },
    "2343": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "POP",
      "path": "17"
    },
    "2344": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2346": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2347": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2350": {
      "op": "DUP2"
    },
    "2351": {
      "op": "LT"
    },
    "2352": {
      "op": "ISZERO"
    },
    "2353": {
      "op": "PUSH2",
      "value": "0x939"
    },
    "2356": {
      "op": "JUMPI"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2359": {
      "op": "DUP1"
    },
    "2360": {
      "op": "REVERT"
    },
    "2361": {
      "op": "JUMPDEST"
    },
    "2362": {
      "op": "POP"
    },
    "2363": {
      "fn": "token_exchange.buy",
      "offset": [
        2120,
        2136
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2364": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2103
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2365": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2103
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2366": {
      "fn": "token_exchange.buy",
      "offset": [
        2112,
        2137
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "2368": {
      "fn": "token_exchange.buy",
      "offset": [
        2112,
        2137
      ],
      "op": "AND",
      "path": "17"
    },
    "2369": {
      "fn": "token_exchange.buy",
      "offset": [
        2108,
        2110
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "2371": {
      "fn": "token_exchange.buy",
      "offset": [
        2108,
        2137
      ],
      "op": "EXP",
      "path": "17"
    },
    "2372": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2138
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2377": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2107
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC4B"
    },
    "2380": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2138
      ],
      "op": "AND",
      "path": "17"
    },
    "2381": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2092,
        2138
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2382": {
      "fn": "token_exchange.buy",
      "offset": [
        2092,
        2138
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2383": {
      "fn": "token_exchange.buy",
      "offset": [
        2073,
        2077
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCE6"
    },
    "2386": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        2073,
        2139
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2387": {
      "fn": "token_exchange.buy",
      "offset": [
        2073,
        2139
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "fn": "token_exchange.buy",
      "offset": [
        2157,
        2161
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 25,
      "value": "0x1"
    },
    "2391": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2392": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2393": {
      "fn": "token_exchange.buy",
      "offset": [
        1732,
        2168
      ],
      "op": "POP",
      "path": "17"
    },
    "2394": {
      "fn": "token_exchange.buy",
      "jump": "o",
      "offset": [
        1732,
        2168
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2395": {
      "fn": "token_exchange.sell",
      "offset": [
        2174,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2396": {
      "fn": "token_exchange.sell",
      "offset": [
        2241,
        2245
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2398": {
      "offset": [
        1105,
        1113
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x965"
    },
    "2401": {
      "offset": [
        1105,
        1111
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x374"
    },
    "2404": {
      "jump": "i",
      "offset": [
        1105,
        1113
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2405": {
      "branch": 64,
      "fn": "token_exchange.sell",
      "offset": [
        1105,
        1113
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2406": {
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9A9"
    },
    "2409": {
      "branch": 64,
      "offset": [
        1097,
        1134
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2410": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2412": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2413": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2420": {
      "op": "SHL"
    },
    "2421": {
      "offset": [
        1097,
        1134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2422": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2423": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2425": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2427": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2428": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2429": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2430": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x10"
    },
    "2432": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "2434": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2435": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2436": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2437": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "2459": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2460": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2461": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2462": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2463": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2464": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2465": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2466": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2467": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "SUB",
      "path": "17"
    },
    "2468": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "2470": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "ADD",
      "path": "17"
    },
    "2471": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2472": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2473": {
      "fn": "token_exchange.sell",
      "offset": [
        1097,
        1134
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2474": {
      "fn": "token_exchange.sell",
      "offset": [
        2516,
        2583
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 26,
      "value": "0x953"
    },
    "2477": {
      "fn": "token_exchange.sell",
      "offset": [
        2522,
        2534
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9B4"
    },
    "2480": {
      "fn": "token_exchange.sell",
      "offset": [
        2522,
        2532
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xACD"
    },
    "2483": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2522,
        2534
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2484": {
      "fn": "token_exchange.sell",
      "offset": [
        2522,
        2534
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2485": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2569
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2487": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2569
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2488": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2490": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2491": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2492": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2501": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2502": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2503": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2504": {
      "fn": "token_exchange.sell",
      "offset": [
        2536,
        2582
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9FA"
    },
    "2507": {
      "fn": "token_exchange.sell",
      "offset": [
        2536,
        2582
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "op": "SUB"
    },
    "2516": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2569
      ],
      "op": "AND",
      "path": "17"
    },
    "2517": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2569
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2518": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2578
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x313CE567"
    },
    "2523": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2578
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2524": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2526": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2527": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2528": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "ADD",
      "path": "17"
    },
    "2529": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2530": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2532": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2533": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2534": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2535": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2536": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2537": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "SUB",
      "path": "17"
    },
    "2538": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "ADD",
      "path": "17"
    },
    "2539": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2540": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2569
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2541": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2542": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "2543": {
      "fn": "token_exchange.sell",
      "offset": [
        2564,
        2580
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2544": {
      "op": "DUP1"
    },
    "2545": {
      "op": "ISZERO"
    },
    "2546": {
      "op": "PUSH2",
      "value": "0x90F"
    },
    "2549": {
      "op": "JUMPI"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2552": {
      "op": "DUP1"
    },
    "2553": {
      "fn": "token_exchange.sell",
      "offset": [
        2536,
        2582
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2554": {
      "fn": "token_exchange.sell",
      "offset": [
        2536,
        2582
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2555": {
      "fn": "token_exchange.sell",
      "offset": [
        2516,
        2521
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE7F"
    },
    "2558": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2516,
        2583
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2559": {
      "offset": [
        289,
        310
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2560": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "2562": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "op": "SUB"
    },
    "2571": {
      "offset": [
        289,
        310
      ],
      "op": "AND",
      "path": "17"
    },
    "2572": {
      "fn": "token_exchange.sell",
      "offset": [
        289,
        310
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2573": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        289,
        310
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2574": {
      "offset": [
        316,
        341
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2575": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "2577": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "op": "SUB"
    },
    "2586": {
      "offset": [
        316,
        341
      ],
      "op": "AND",
      "path": "17"
    },
    "2587": {
      "fn": "token_exchange.sell",
      "offset": [
        316,
        341
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2588": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        316,
        341
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2589": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2590": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2592": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0xA5F"
    },
    "2595": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2596": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2597": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2599": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2600": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2601": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2603": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "2604": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2606": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2607": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2608": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "2610": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2611": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2612": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2614": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "2615": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2648": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2649": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2650": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "3"
    },
    "2651": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE0"
    },
    "2654": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2655": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2656": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2657": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "op": "POP"
    },
    "2661": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2662": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2663": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "op": "SUB"
    },
    "2673": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "2674": {
      "branch": 65,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "2675": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAAD"
    },
    "2678": {
      "branch": 65,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2679": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2681": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2690": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2691": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2693": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2694": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2695": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2696": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2698": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2699": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2700": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2701": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "2702": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2703": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2704": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "2706": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2707": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2708": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2710": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2711": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2712": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E2"
    },
    "2715": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "2717": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2718": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2719": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2721": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "2722": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2723": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "2724": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "2725": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2727": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2728": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2729": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2730": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "2731": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2732": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2733": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2741": {
      "op": "SHL"
    },
    "2742": {
      "op": "SUB"
    },
    "2743": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 29
    },
    "2744": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2746": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2747": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2748": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2749": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2751": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2752": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2754": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2755": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2757": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2758": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2759": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2760": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2762": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "2763": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2764": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2765": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2766": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 30
    },
    "2767": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2768": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2769": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2770": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 31,
      "value": "0xAE2"
    },
    "2773": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2775": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1088,
        1095
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2776": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2781": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1087
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1077"
    },
    "2784": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "AND",
      "path": "10"
    },
    "2785": {
      "fn": "BrokerRole._removeBroker",
      "jump": "i",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2786": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2787": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 32,
      "value": "0x40"
    },
    "2789": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "op": "SUB"
    },
    "2798": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2799": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "AND",
      "path": "10"
    },
    "2800": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2801": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0"
    },
    "2834": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2835": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2837": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2838": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2839": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "POP",
      "path": "10"
    },
    "2840": {
      "fn": "BrokerRole._removeBroker",
      "jump": "o",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2841": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2842": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2844": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2845": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2846": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "3"
    },
    "2847": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 33
    },
    "2848": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "3"
    },
    "2850": {
      "branch": 68,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2851": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5F"
    },
    "2854": {
      "branch": 68,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2855": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2857": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2858": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2859": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2867": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2868": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2870": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2872": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2873": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2874": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2875": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "2877": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2879": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2880": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2881": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2882": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2915": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2917": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2918": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2919": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2920": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2921": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2922": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2923": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2924": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2925": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "3"
    },
    "2926": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2928": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2929": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2930": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2931": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2932": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 34,
      "value": "0xB84"
    },
    "2935": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2937": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2938": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2943": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10DE"
    },
    "2946": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "2947": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2948": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2949": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 35,
      "value": "0x40"
    },
    "2951": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "op": "SUB"
    },
    "2960": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2961": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "2962": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2963": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "2996": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2997": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2999": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3000": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3001": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "3002": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3003": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3004": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 36,
      "value": "0xBCC"
    },
    "3007": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3009": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        957,
        964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3010": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3015": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10DE"
    },
    "3018": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "AND",
      "path": "10"
    },
    "3019": {
      "fn": "BrokerRole._addBroker",
      "jump": "i",
      "offset": [
        944,
        965
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3020": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3021": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 37,
      "value": "0x40"
    },
    "3023": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3033": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "AND",
      "path": "10"
    },
    "3034": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3035": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB"
    },
    "3068": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3069": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3071": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3072": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3073": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "POP",
      "path": "10"
    },
    "3074": {
      "fn": "BrokerRole._addBroker",
      "jump": "o",
      "offset": [
        888,
        1007
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3075": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3076": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 38,
      "value": "0xC14"
    },
    "3079": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3081": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3082": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3087": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1077"
    },
    "3090": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "3091": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3092": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3093": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 39,
      "value": "0x40"
    },
    "3095": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "op": "SUB"
    },
    "3104": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3105": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "3106": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3107": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "3140": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3141": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3143": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3144": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3145": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "3146": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3147": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3148": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3150": {
      "branch": 69,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3151": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5A"
    },
    "3154": {
      "branch": 69,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3155": {
      "op": "POP"
    },
    "3156": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x0"
    },
    "3158": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x349"
    },
    "3161": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3162": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3163": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3164": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3165": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "3"
    },
    "3166": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3167": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3168": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3169": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3170": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0xC67"
    },
    "3173": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3174": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3175": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3176": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "3"
    },
    "3177": {
      "branch": 70,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "3"
    },
    "3178": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5F"
    },
    "3181": {
      "branch": 70,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3182": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3184": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3191": {
      "op": "SHL"
    },
    "3192": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3193": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3194": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3196": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3197": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3198": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3199": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3201": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3202": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3203": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3204": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "3205": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3206": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3207": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3209": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3210": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3211": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3213": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3214": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3215": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C1"
    },
    "3218": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3220": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3221": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3222": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3224": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3225": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3226": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "3227": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "3228": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3230": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3231": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3232": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3233": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "3234": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3235": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3236": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3237": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3239": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 42,
      "value": "0xA5F"
    },
    "3242": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3243": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3244": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3246": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3247": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3248": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3250": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "3251": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3253": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3254": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3255": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "3257": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3258": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3259": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3261": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "3262": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "3295": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3296": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3297": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "3"
    },
    "3298": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x115F"
    },
    "3301": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3302": {
      "fn": "token_exchange._buy",
      "offset": [
        2618,
        2926
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3303": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2738
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 43,
      "value": "0x3"
    },
    "3305": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2738
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3312": {
      "op": "SHL"
    },
    "3313": {
      "op": "SUB"
    },
    "3314": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2738
      ],
      "op": "AND",
      "path": "17"
    },
    "3315": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2751
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x23B872DD"
    },
    "3320": {
      "fn": "token_exchange._buy",
      "offset": [
        2752,
        2761
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3321": {
      "fn": "token_exchange._buy",
      "offset": [
        2771,
        2775
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "3322": {
      "fn": "token_exchange._buy",
      "offset": [
        2778,
        2798
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD04"
    },
    "3325": {
      "fn": "token_exchange._buy",
      "offset": [
        2785,
        2791
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3326": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3328": {
      "fn": "token_exchange._buy",
      "offset": [
        2778,
        2784
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11C4"
    },
    "3331": {
      "fn": "token_exchange._buy",
      "jump": "i",
      "offset": [
        2778,
        2798
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3332": {
      "fn": "token_exchange._buy",
      "offset": [
        2778,
        2798
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3333": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3335": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3336": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3337": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3342": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "AND",
      "path": "17"
    },
    "3343": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "3345": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "SHL",
      "path": "17"
    },
    "3346": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3347": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3348": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3350": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "ADD",
      "path": "17"
    },
    "3351": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3352": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "AND",
      "path": "17"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "SUB"
    },
    "3370": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "AND",
      "path": "17"
    },
    "3371": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3372": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3373": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3375": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "ADD",
      "path": "17"
    },
    "3376": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "AND",
      "path": "17"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3392": {
      "op": "SHL"
    },
    "3393": {
      "op": "SUB"
    },
    "3394": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "AND",
      "path": "17"
    },
    "3395": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3396": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3397": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3399": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "ADD",
      "path": "17"
    },
    "3400": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3401": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3402": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3403": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3405": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "ADD",
      "path": "17"
    },
    "3406": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3407": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3408": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3409": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3410": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3411": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3413": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3415": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3416": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3417": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3418": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "SUB",
      "path": "17"
    },
    "3419": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3420": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3422": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3423": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3424": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "3425": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3426": {
      "op": "DUP1"
    },
    "3427": {
      "op": "ISZERO"
    },
    "3428": {
      "op": "PUSH2",
      "value": "0xD6C"
    },
    "3431": {
      "op": "JUMPI"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3434": {
      "op": "DUP1"
    },
    "3435": {
      "op": "REVERT"
    },
    "3436": {
      "op": "JUMPDEST"
    },
    "3437": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3438": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "GAS",
      "path": "17"
    },
    "3439": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "CALL",
      "path": "17"
    },
    "3440": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3441": {
      "op": "DUP1"
    },
    "3442": {
      "op": "ISZERO"
    },
    "3443": {
      "op": "PUSH2",
      "value": "0xD80"
    },
    "3446": {
      "op": "JUMPI"
    },
    "3447": {
      "op": "RETURNDATASIZE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3450": {
      "op": "DUP1"
    },
    "3451": {
      "op": "RETURNDATACOPY"
    },
    "3452": {
      "op": "RETURNDATASIZE"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3455": {
      "op": "REVERT"
    },
    "3456": {
      "op": "JUMPDEST"
    },
    "3457": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3458": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3459": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3460": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "POP",
      "path": "17"
    },
    "3461": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3463": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3464": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3467": {
      "op": "DUP2"
    },
    "3468": {
      "op": "LT"
    },
    "3469": {
      "op": "ISZERO"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0xD96"
    },
    "3473": {
      "op": "JUMPI"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3476": {
      "op": "DUP1"
    },
    "3477": {
      "op": "REVERT"
    },
    "3478": {
      "op": "JUMPDEST"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "POP"
    },
    "3481": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 44,
      "value": "0x2"
    },
    "3483": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3484": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3486": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3487": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3488": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3495": {
      "op": "SHL"
    },
    "3496": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3497": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3504": {
      "op": "SHL"
    },
    "3505": {
      "op": "SUB"
    },
    "3506": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3507": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3508": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "AND",
      "path": "17"
    },
    "3509": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3511": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3512": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "ADD",
      "path": "17"
    },
    "3513": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3514": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "3516": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3517": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "ADD",
      "path": "17"
    },
    "3518": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3519": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3520": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3521": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3522": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3523": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3524": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3525": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3526": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "AND",
      "path": "17"
    },
    "3527": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3528": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2820
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x40C10F19"
    },
    "3533": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2820
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3534": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "3536": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3537": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3538": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "ADD",
      "path": "17"
    },
    "3539": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3540": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3542": {
      "fn": "token_exchange._buy",
      "offset": [
        2731,
        2799
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3543": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3544": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3545": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3546": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3547": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "SUB",
      "path": "17"
    },
    "3548": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "ADD",
      "path": "17"
    },
    "3549": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3550": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3552": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2815
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3553": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3554": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "3555": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3556": {
      "op": "DUP1"
    },
    "3557": {
      "op": "ISZERO"
    },
    "3558": {
      "op": "PUSH2",
      "value": "0xDEE"
    },
    "3561": {
      "op": "JUMPI"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3564": {
      "op": "DUP1"
    },
    "3565": {
      "op": "REVERT"
    },
    "3566": {
      "op": "JUMPDEST"
    },
    "3567": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "POP",
      "path": "17"
    },
    "3568": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "GAS",
      "path": "17"
    },
    "3569": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "CALL",
      "path": "17"
    },
    "3570": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3571": {
      "op": "DUP1"
    },
    "3572": {
      "op": "ISZERO"
    },
    "3573": {
      "op": "PUSH2",
      "value": "0xE02"
    },
    "3576": {
      "op": "JUMPI"
    },
    "3577": {
      "op": "RETURNDATASIZE"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "RETURNDATACOPY"
    },
    "3582": {
      "op": "RETURNDATASIZE"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3585": {
      "op": "REVERT"
    },
    "3586": {
      "op": "JUMPDEST"
    },
    "3587": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "POP",
      "path": "17"
    },
    "3588": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "POP",
      "path": "17"
    },
    "3589": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "POP",
      "path": "17"
    },
    "3590": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "POP",
      "path": "17"
    },
    "3591": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3593": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3594": {
      "fn": "token_exchange._buy",
      "offset": [
        2810,
        2839
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3597": {
      "op": "DUP2"
    },
    "3598": {
      "op": "LT"
    },
    "3599": {
      "op": "ISZERO"
    },
    "3600": {
      "op": "PUSH2",
      "value": "0xE18"
    },
    "3603": {
      "op": "JUMPI"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3606": {
      "op": "DUP1"
    },
    "3607": {
      "op": "REVERT"
    },
    "3608": {
      "op": "JUMPDEST"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "op": "POP"
    },
    "3611": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2890
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 45,
      "value": "0x7"
    },
    "3613": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2910
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3614": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2910
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3615": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2917
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE2F"
    },
    "3618": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2917
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3619": {
      "fn": "token_exchange._buy",
      "offset": [
        2915,
        2916
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3621": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2917
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3626": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2914
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "3629": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2917
      ],
      "op": "AND",
      "path": "17"
    },
    "3630": {
      "fn": "token_exchange._buy",
      "jump": "i",
      "offset": [
        2891,
        2917
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3631": {
      "fn": "token_exchange._buy",
      "offset": [
        2891,
        2917
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3632": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3633": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3634": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3635": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "LT",
      "path": "17"
    },
    "3636": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE39"
    },
    "3639": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3640": {
      "dev": "Index out of range",
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "INVALID",
      "path": "17"
    },
    "3641": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3642": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3643": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3645": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3646": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3648": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3650": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3651": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "ADD",
      "path": "17"
    },
    "3652": {
      "fn": "token_exchange._buy",
      "offset": [
        2878,
        2918
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3653": {
      "fn": "token_exchange._buy",
      "offset": [
        2870,
        2876
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3654": {
      "fn": "token_exchange._buy",
      "offset": [
        2859,
        2868
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3661": {
      "op": "SHL"
    },
    "3662": {
      "op": "SUB"
    },
    "3663": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "AND",
      "path": "17"
    },
    "3664": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
    },
    "3697": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3699": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3700": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3702": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3703": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3704": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3705": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "SUB",
      "path": "17"
    },
    "3706": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3707": {
      "fn": "token_exchange._buy",
      "offset": [
        2855,
        2919
      ],
      "op": "LOG4",
      "path": "17"
    },
    "3708": {
      "fn": "token_exchange._buy",
      "offset": [
        2618,
        2926
      ],
      "op": "POP",
      "path": "17"
    },
    "3709": {
      "fn": "token_exchange._buy",
      "offset": [
        2618,
        2926
      ],
      "op": "POP",
      "path": "17"
    },
    "3710": {
      "fn": "token_exchange._buy",
      "jump": "o",
      "offset": [
        2618,
        2926
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3711": {
      "fn": "token_exchange._sell",
      "offset": [
        2932,
        3269
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3712": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 46,
      "value": "0x2"
    },
    "3714": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3715": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3717": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3718": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3719": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3726": {
      "op": "SHL"
    },
    "3727": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3728": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "op": "SUB"
    },
    "3737": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3738": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3739": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "AND",
      "path": "17"
    },
    "3740": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3742": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3743": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "ADD",
      "path": "17"
    },
    "3744": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3745": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "3747": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3748": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "ADD",
      "path": "17"
    },
    "3749": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP6",
      "path": "17"
    },
    "3750": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3751": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3752": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3753": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3754": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3755": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3756": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3757": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "AND",
      "path": "17"
    },
    "3758": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3759": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3108
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x79CC6790"
    },
    "3764": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3108
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3765": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "3767": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3768": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3769": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "ADD",
      "path": "17"
    },
    "3770": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3771": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3773": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3774": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3775": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3776": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3777": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3778": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "SUB",
      "path": "17"
    },
    "3779": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "ADD",
      "path": "17"
    },
    "3780": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3781": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3782": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3099
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3783": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3784": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "3785": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3786": {
      "op": "DUP1"
    },
    "3787": {
      "op": "ISZERO"
    },
    "3788": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "3791": {
      "op": "JUMPI"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3794": {
      "op": "DUP1"
    },
    "3795": {
      "op": "REVERT"
    },
    "3796": {
      "op": "JUMPDEST"
    },
    "3797": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "POP",
      "path": "17"
    },
    "3798": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "GAS",
      "path": "17"
    },
    "3799": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "CALL",
      "path": "17"
    },
    "3800": {
      "fn": "token_exchange._sell",
      "offset": [
        3094,
        3124
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3801": {
      "op": "DUP1"
    },
    "3802": {
      "op": "ISZERO"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE8"
    },
    "3806": {
      "op": "JUMPI"
    },
    "3807": {
      "op": "RETURNDATASIZE"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3810": {
      "op": "DUP1"
    },
    "3811": {
      "op": "RETURNDATACOPY"
    },
    "3812": {
      "op": "RETURNDATASIZE"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3815": {
      "op": "REVERT"
    },
    "3816": {
      "op": "JUMPDEST"
    },
    "3817": {
      "op": "POP"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3142
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 47,
      "value": "0x3"
    },
    "3821": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3142
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "op": "SUB"
    },
    "3830": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3142
      ],
      "op": "AND",
      "path": "17"
    },
    "3831": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3142
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3832": {
      "op": "POP"
    },
    "3833": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3147
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x40C10F19"
    },
    "3838": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3147
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3839": {
      "op": "POP"
    },
    "3840": {
      "fn": "token_exchange._sell",
      "offset": [
        3148,
        3154
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3841": {
      "fn": "token_exchange._sell",
      "offset": [
        3155,
        3176
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF0B"
    },
    "3844": {
      "fn": "token_exchange._sell",
      "offset": [
        3162,
        3168
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3845": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3142
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3847": {
      "fn": "token_exchange._sell",
      "offset": [
        3155,
        3161
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11C4"
    },
    "3850": {
      "fn": "token_exchange._sell",
      "jump": "i",
      "offset": [
        3155,
        3176
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3851": {
      "fn": "token_exchange._sell",
      "offset": [
        3155,
        3176
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3852": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3854": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3855": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3856": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3861": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "AND",
      "path": "17"
    },
    "3862": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "3864": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "SHL",
      "path": "17"
    },
    "3865": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3866": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3867": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3869": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "ADD",
      "path": "17"
    },
    "3870": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3871": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3878": {
      "op": "SHL"
    },
    "3879": {
      "op": "SUB"
    },
    "3880": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "AND",
      "path": "17"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3887": {
      "op": "SHL"
    },
    "3888": {
      "op": "SUB"
    },
    "3889": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "AND",
      "path": "17"
    },
    "3890": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3891": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3892": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3894": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "ADD",
      "path": "17"
    },
    "3895": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3896": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3897": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3898": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3900": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "ADD",
      "path": "17"
    },
    "3901": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3902": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3903": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3904": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3905": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3907": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3909": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3910": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3911": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3912": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "SUB",
      "path": "17"
    },
    "3913": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3914": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3916": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3917": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3918": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "3919": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3920": {
      "op": "DUP1"
    },
    "3921": {
      "op": "ISZERO"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0xF5A"
    },
    "3925": {
      "op": "JUMPI"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "op": "REVERT"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3932": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "GAS",
      "path": "17"
    },
    "3933": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "CALL",
      "path": "17"
    },
    "3934": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3935": {
      "op": "DUP1"
    },
    "3936": {
      "op": "ISZERO"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xF6E"
    },
    "3940": {
      "op": "JUMPI"
    },
    "3941": {
      "op": "RETURNDATASIZE"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3944": {
      "op": "DUP1"
    },
    "3945": {
      "op": "RETURNDATACOPY"
    },
    "3946": {
      "op": "RETURNDATASIZE"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3949": {
      "op": "REVERT"
    },
    "3950": {
      "op": "JUMPDEST"
    },
    "3951": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3952": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3953": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3954": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "POP",
      "path": "17"
    },
    "3955": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3957": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3958": {
      "fn": "token_exchange._sell",
      "offset": [
        3135,
        3177
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "LT"
    },
    "3963": {
      "op": "ISZERO"
    },
    "3964": {
      "op": "PUSH2",
      "value": "0xF84"
    },
    "3967": {
      "op": "JUMPI"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3970": {
      "op": "DUP1"
    },
    "3971": {
      "op": "REVERT"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "op": "POP"
    },
    "3975": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3233
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 48,
      "value": "0x7"
    },
    "3977": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3253
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3978": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3253
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3979": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3260
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF9B"
    },
    "3982": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3260
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3983": {
      "fn": "token_exchange._sell",
      "offset": [
        3258,
        3259
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3985": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3260
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3990": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3257
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "3993": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3260
      ],
      "op": "AND",
      "path": "17"
    },
    "3994": {
      "fn": "token_exchange._sell",
      "jump": "i",
      "offset": [
        3234,
        3260
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3995": {
      "fn": "token_exchange._sell",
      "offset": [
        3234,
        3260
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3996": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3997": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "3998": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3999": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "LT",
      "path": "17"
    },
    "4000": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFA5"
    },
    "4003": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4004": {
      "dev": "Index out of range",
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "INVALID",
      "path": "17"
    },
    "4005": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4006": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4008": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4009": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4010": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4011": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4013": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4014": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4015": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "ADD",
      "path": "17"
    },
    "4016": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4017": {
      "fn": "token_exchange._sell",
      "offset": [
        3193,
        3262
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4019": {
      "fn": "token_exchange._sell",
      "offset": [
        3193,
        3262
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4020": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4021": {
      "fn": "token_exchange._sell",
      "offset": [
        3221,
        3261
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4022": {
      "fn": "token_exchange._sell",
      "offset": [
        3213,
        3219
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4023": {
      "fn": "token_exchange._sell",
      "offset": [
        3213,
        3219
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4024": {
      "fn": "token_exchange._sell",
      "offset": [
        3206,
        3210
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "4025": {
      "fn": "token_exchange._sell",
      "offset": [
        3206,
        3210
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4026": {
      "fn": "token_exchange._sell",
      "offset": [
        3193,
        3262
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
    },
    "4059": {
      "fn": "token_exchange._sell",
      "offset": [
        3193,
        3262
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4060": {
      "fn": "token_exchange._sell",
      "offset": [
        3193,
        3262
      ],
      "op": "LOG4",
      "path": "17"
    },
    "4061": {
      "fn": "token_exchange._sell",
      "offset": [
        2932,
        3269
      ],
      "op": "POP",
      "path": "17"
    },
    "4062": {
      "fn": "token_exchange._sell",
      "offset": [
        2932,
        3269
      ],
      "op": "POP",
      "path": "17"
    },
    "4063": {
      "fn": "token_exchange._sell",
      "jump": "o",
      "offset": [
        2932,
        3269
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4064": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4065": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4067": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 49
    },
    "4068": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4069": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4070": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "3"
    },
    "4071": {
      "branch": 71,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4072": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x106F"
    },
    "4075": {
      "branch": 71,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4076": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4078": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4085": {
      "op": "SHL"
    },
    "4086": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4087": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4088": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4090": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4091": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4092": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4093": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4095": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4096": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4097": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4098": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4099": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4100": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4101": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4102": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4103": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4104": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4105": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4106": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4107": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4109": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4110": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4111": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4112": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4113": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4114": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4115": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4117": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4118": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4119": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4120": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4121": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4124": {
      "op": "JUMPDEST"
    },
    "4125": {
      "op": "DUP4"
    },
    "4126": {
      "op": "DUP2"
    },
    "4127": {
      "op": "LT"
    },
    "4128": {
      "op": "ISZERO"
    },
    "4129": {
      "op": "PUSH2",
      "value": "0x1034"
    },
    "4132": {
      "op": "JUMPI"
    },
    "4133": {
      "op": "DUP2"
    },
    "4134": {
      "op": "DUP2"
    },
    "4135": {
      "op": "ADD"
    },
    "4136": {
      "op": "MLOAD"
    },
    "4137": {
      "op": "DUP4"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4143": {
      "op": "ADD"
    },
    "4144": {
      "op": "PUSH2",
      "value": "0x101C"
    },
    "4147": {
      "op": "JUMP"
    },
    "4148": {
      "op": "JUMPDEST"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4151": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4152": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4153": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4154": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4155": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4156": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4157": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4158": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4159": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4161": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "4162": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4163": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4164": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1061"
    },
    "4167": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4168": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4169": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4170": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4171": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4172": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4173": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4175": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4176": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4178": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4179": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4182": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "3"
    },
    "4183": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4184": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "3"
    },
    "4185": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "4186": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4187": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4188": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4190": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4191": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4192": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4193": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4194": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4195": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4196": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4197": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4198": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4199": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4201": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4202": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4203": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4204": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4205": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4206": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4207": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4208": {
      "op": "POP"
    },
    "4209": {
      "op": "POP"
    },
    "4210": {
      "op": "POP"
    },
    "4211": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4212": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "3"
    },
    "4213": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4214": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4215": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4216": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 50,
      "value": "0x1081"
    },
    "4219": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4220": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4221": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA66"
    },
    "4224": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4225": {
      "branch": 66,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4226": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10BC"
    },
    "4229": {
      "branch": 66,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4230": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4232": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4239": {
      "op": "SHL"
    },
    "4240": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4241": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4242": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4244": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4245": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4246": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4247": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4249": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4250": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4251": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4252": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "4253": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4254": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4255": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "4257": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4258": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4259": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4261": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4262": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4263": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1360"
    },
    "4266": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "4268": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4269": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4270": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4272": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "4273": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4274": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "4275": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "4276": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4278": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4279": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4280": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4281": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "4282": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4283": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4284": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "op": "SUB"
    },
    "4293": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 51
    },
    "4294": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4296": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4297": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4298": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4299": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4301": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4302": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4303": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4304": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4305": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4307": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4308": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4309": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4310": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4313": {
      "op": "NOT"
    },
    "4314": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "4315": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4316": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4317": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4318": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4319": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 52,
      "value": "0x10E8"
    },
    "4322": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4323": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4324": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA66"
    },
    "4327": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4328": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4329": {
      "branch": 67,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4330": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113A"
    },
    "4333": {
      "branch": 67,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4334": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4336": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4337": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4344": {
      "op": "SHL"
    },
    "4345": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4346": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4347": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4349": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4351": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4352": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4353": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4354": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4356": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4358": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4359": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4360": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4361": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "4394": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "4396": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4397": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4398": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4399": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4400": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4401": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4402": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4403": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4404": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "4405": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "4407": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "4408": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4409": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4410": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "op": "SUB"
    },
    "4419": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 53
    },
    "4420": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4422": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4423": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4424": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4425": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4427": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4428": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4429": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4430": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4431": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4433": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4434": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4435": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4436": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4439": {
      "op": "NOT"
    },
    "4440": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "4441": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4443": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "4444": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4445": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4446": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4447": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4448": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4450": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 54
    },
    "4451": {
      "branch": 72,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4452": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11AE"
    },
    "4455": {
      "branch": 72,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4456": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4458": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4467": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4468": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4470": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4472": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4473": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4474": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4475": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4476": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4477": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4478": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4479": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4481": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4482": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4483": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4484": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4485": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4486": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4487": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4488": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4489": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4490": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4492": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4493": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4494": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4495": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4496": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4497": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4498": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "4499": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4500": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4501": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4502": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4503": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4505": {
      "op": "DUP4"
    },
    "4506": {
      "op": "ISZERO"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x1034"
    },
    "4510": {
      "op": "JUMPI"
    },
    "4511": {
      "op": "DUP2"
    },
    "4512": {
      "op": "DUP2"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "MLOAD"
    },
    "4515": {
      "op": "DUP4"
    },
    "4516": {
      "op": "DUP3"
    },
    "4517": {
      "op": "ADD"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "PUSH2",
      "value": "0x101C"
    },
    "4525": {
      "op": "JUMP"
    },
    "4526": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4527": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "3"
    },
    "4528": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4530": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4531": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4532": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4533": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11BA"
    },
    "4536": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4537": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "3"
    },
    "4538": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4539": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "3"
    },
    "4540": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4541": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4542": {
      "op": "POP"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4548": {
      "fn": "token_exchange.getFee",
      "offset": [
        3275,
        3746
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4549": {
      "fn": "token_exchange.getFee",
      "offset": [
        3339,
        3346
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4551": {
      "fn": "token_exchange.getFee",
      "offset": [
        3411,
        3422
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4552": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4554": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4556": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4557": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4558": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4559": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "4562": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "EXP",
      "path": "17"
    },
    "4563": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4564": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "DIV",
      "path": "17"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4571": {
      "op": "SHL"
    },
    "4572": {
      "op": "SUB"
    },
    "4573": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3438
      ],
      "op": "AND",
      "path": "17"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4580": {
      "op": "SHL"
    },
    "4581": {
      "op": "SUB"
    },
    "4582": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3447
      ],
      "op": "AND",
      "path": "17"
    },
    "4583": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3447
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x313CE567"
    },
    "4588": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4590": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4591": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4592": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4597": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "AND",
      "path": "17"
    },
    "4598": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "4600": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "SHL",
      "path": "17"
    },
    "4601": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4602": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4603": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4605": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "ADD",
      "path": "17"
    },
    "4606": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4608": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4610": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4611": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4612": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4613": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "SUB",
      "path": "17"
    },
    "4614": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4615": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4616": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4617": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "4618": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4619": {
      "op": "DUP1"
    },
    "4620": {
      "op": "ISZERO"
    },
    "4621": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4624": {
      "op": "JUMPI"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4627": {
      "op": "DUP1"
    },
    "4628": {
      "op": "REVERT"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "POP",
      "path": "17"
    },
    "4631": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "GAS",
      "path": "17"
    },
    "4632": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4633": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4634": {
      "op": "DUP1"
    },
    "4635": {
      "op": "ISZERO"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x1229"
    },
    "4639": {
      "op": "JUMPI"
    },
    "4640": {
      "op": "RETURNDATASIZE"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4643": {
      "op": "DUP1"
    },
    "4644": {
      "op": "RETURNDATACOPY"
    },
    "4645": {
      "op": "RETURNDATASIZE"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4648": {
      "op": "REVERT"
    },
    "4649": {
      "op": "JUMPDEST"
    },
    "4650": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "POP",
      "path": "17"
    },
    "4651": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "POP",
      "path": "17"
    },
    "4652": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "POP",
      "path": "17"
    },
    "4653": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "POP",
      "path": "17"
    },
    "4654": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4656": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4657": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4660": {
      "op": "DUP2"
    },
    "4661": {
      "op": "LT"
    },
    "4662": {
      "op": "ISZERO"
    },
    "4663": {
      "op": "PUSH2",
      "value": "0x123F"
    },
    "4666": {
      "op": "JUMPI"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4669": {
      "op": "DUP1"
    },
    "4670": {
      "op": "REVERT"
    },
    "4671": {
      "op": "JUMPDEST"
    },
    "4672": {
      "op": "POP"
    },
    "4673": {
      "fn": "token_exchange.getFee",
      "offset": [
        3433,
        3449
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4674": {
      "fn": "token_exchange.getFee",
      "offset": [
        3425,
        3450
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "4676": {
      "fn": "token_exchange.getFee",
      "offset": [
        3425,
        3450
      ],
      "op": "AND",
      "path": "17"
    },
    "4677": {
      "fn": "token_exchange.getFee",
      "offset": [
        3425,
        3450
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4678": {
      "op": "POP"
    },
    "4679": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3739
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4680": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3739
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4681": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3739
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12C3"
    },
    "4684": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3739
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4685": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 55,
      "value": "0x12BB"
    },
    "4688": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3588
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1266"
    },
    "4691": {
      "fn": "token_exchange.getFee",
      "offset": [
        3583,
        3587
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "4694": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3578
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x775"
    },
    "4697": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3571
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4698": {
      "fn": "token_exchange.getFee",
      "offset": [
        3576,
        3577
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4700": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3578
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4705": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3575
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC4B"
    },
    "4708": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3578
      ],
      "op": "AND",
      "path": "17"
    },
    "4709": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3565,
        3578
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4710": {
      "fn": "token_exchange.getFee",
      "offset": [
        3565,
        3588
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4711": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3560
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12AF"
    },
    "4714": {
      "fn": "token_exchange.getFee",
      "offset": [
        3556,
        3559
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4715": {
      "fn": "token_exchange.getFee",
      "offset": [
        3552,
        3554
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "4717": {
      "fn": "token_exchange.getFee",
      "offset": [
        3552,
        3559
      ],
      "op": "EXP",
      "path": "17"
    },
    "4718": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3547
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x775"
    },
    "4721": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3518
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "4723": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3545
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x128B"
    },
    "4726": {
      "fn": "token_exchange.getFee",
      "offset": [
        3543,
        3544
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4728": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3531
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "4730": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3538
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4731": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3538
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4732": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3538
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4733": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3538
      ],
      "op": "POP",
      "path": "17"
    },
    "4734": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3542
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "4737": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3542
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4738": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3545
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4739": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3545
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4740": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3545
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4745": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3545
      ],
      "op": "AND",
      "path": "17"
    },
    "4746": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3519,
        3545
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4747": {
      "fn": "token_exchange.getFee",
      "offset": [
        3519,
        3545
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4748": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4749": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4750": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4751": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "LT",
      "path": "17"
    },
    "4752": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1295"
    },
    "4755": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4756": {
      "dev": "Index out of range",
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "INVALID",
      "path": "17"
    },
    "4757": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4758": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4759": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4761": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4762": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4764": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4766": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4767": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "ADD",
      "path": "17"
    },
    "4768": {
      "fn": "token_exchange.getFee",
      "offset": [
        3506,
        3546
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4769": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3501
      ],
      "op": "DUP10",
      "path": "17"
    },
    "4770": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3505
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC4B"
    },
    "4773": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3505
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4774": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3547
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4775": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3547
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4776": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3547
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4781": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3547
      ],
      "op": "AND",
      "path": "17"
    },
    "4782": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3495,
        3547
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4783": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3560
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4784": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3564
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4785": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3589
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4790": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3564
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB19"
    },
    "4793": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3589
      ],
      "op": "AND",
      "path": "17"
    },
    "4794": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3495,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4795": {
      "fn": "token_exchange.getFee",
      "offset": [
        3495,
        3589
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4796": {
      "fn": "token_exchange.getFee",
      "offset": [
        3488,
        3589
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4797": {
      "fn": "token_exchange.getFee",
      "offset": [
        3488,
        3589
      ],
      "op": "POP",
      "path": "17"
    },
    "4798": {
      "fn": "token_exchange.getFee",
      "offset": [
        3488,
        3589
      ],
      "op": "POP",
      "path": "17"
    },
    "4799": {
      "fn": "token_exchange.getFee",
      "offset": [
        3488,
        3589
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x349"
    },
    "4802": {
      "fn": "token_exchange.getFee",
      "offset": [
        3488,
        3589
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4803": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3739
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4804": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3728
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 56,
      "value": "0x12BB"
    },
    "4807": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12DD"
    },
    "4810": {
      "fn": "token_exchange.getFee",
      "offset": [
        3722,
        3726
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3E8"
    },
    "4813": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x775"
    },
    "4816": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3710
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4817": {
      "fn": "token_exchange.getFee",
      "offset": [
        3715,
        3716
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "4819": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3717
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4824": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3714
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC4B"
    },
    "4827": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3717
      ],
      "op": "AND",
      "path": "17"
    },
    "4828": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3704,
        3717
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4829": {
      "fn": "token_exchange.getFee",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4830": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3699
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1302"
    },
    "4833": {
      "fn": "token_exchange.getFee",
      "offset": [
        3695,
        3698
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4834": {
      "fn": "token_exchange.getFee",
      "offset": [
        3691,
        3693
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "4836": {
      "fn": "token_exchange.getFee",
      "offset": [
        3691,
        3698
      ],
      "op": "EXP",
      "path": "17"
    },
    "4837": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3686
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x775"
    },
    "4840": {
      "fn": "token_exchange.getFee",
      "offset": [
        3645,
        3657
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "4842": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3684
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x128B"
    },
    "4845": {
      "fn": "token_exchange.getFee",
      "offset": [
        3682,
        3683
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4847": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3670
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x7"
    },
    "4849": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3677
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4850": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3677
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "4851": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3677
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4852": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3677
      ],
      "op": "POP",
      "path": "17"
    },
    "4853": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3681
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "4856": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3681
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4857": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3684
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4858": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3684
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4859": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3684
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4864": {
      "fn": "token_exchange.getFee",
      "offset": [
        3658,
        3684
      ],
      "op": "AND",
      "path": "17"
    },
    "4865": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3658,
        3684
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4866": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3699
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4867": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3703
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4868": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3728
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4873": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3703
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA1D"
    },
    "4876": {
      "fn": "token_exchange.getFee",
      "offset": [
        3634,
        3728
      ],
      "op": "AND",
      "path": "17"
    },
    "4877": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3634,
        3728
      ],
      "op": "JUMP",
      "path": "17"
    }
  },
  "sha1": "68eaff5e2a9cfb30a82fc0e614861ad98ba277ec",
  "source": "pragma solidity ^0.5.0;\n\n\nimport \"./PayCoin.sol\";\nimport \"../interfaces/IT_ERC20.sol\";\nimport \"./token_erc20.sol\";\nimport \"./BrokerRole.sol\";\nimport \"./AdminRole.sol\";\n\ncontract token_exchange is BrokerRole, AdminRole {\n    using SafeMath for uint256;\n    using SafeMath for int256; \n\n    IT_ERC20 public token;\n    IT_PayCoin public payCoin;\n\n    //uint256 private tk_price;\n    uint256 private _openingtime;\n    uint256 private _closingtime;\n    uint8 public _overnightCalls; \n\n    uint256[] private priceHistory;\n\n    //address _addressPC ;\n    //= 0xc429620C4451d820B96FD3E5209FADa0F5a89852\n\n    address _fss = 0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff ; \n\n    event Buy(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event Sell(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event PriceChange(address indexed who, uint256 indexed id_price, uint256 indexed price); \n    event ChangeStart(address indexed who, uint256 indexed when); \n    event ChangeEnd(address indexed who, uint256 indexed when); \n\n    modifier onlyWhileOpen {\n        require(isOpen(), \"Market is closed\");\n        _;\n    }\n\n    constructor() public {\n\n        token = new token_erc20();\n        payCoin = new PayCoin();\n\n        //tk_price = 1e18 ; //accounts for PayCoin's decimals\n        //priceHistory.push(tk_price);\n\n        _openingtime = now ;\n        _closingtime = now + 12 hours ; //TODO Remember to modify it!\n        _overnightCalls = 0; \n\n        if (!(isAdmin(_fss) && isBroker(_fss))){\n            addAdmin(_fss);\n            addBroker(_fss);\n        }\n    \n        emit ChangeStart(_msgSender(), _openingtime); \n        emit ChangeEnd(_msgSender(), _closingtime + 7 days); \n    }\n\n    function buy(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _buy(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function sell(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _sell(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function _buy(address recipient, uint256 amount) internal {\n        // TODO set real address of the team\n        payCoin.transferFrom(recipient, address(this), getFee(amount, true));\n\n        token.mint(recipient, amount);\n\n        emit Buy(recipient, amount, priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function _sell(address seller, uint256 amount) internal {\n        // token_exchange != team, so it can mint paycoin (these doesn't count vs initial 50k)\n\n        token.burnFrom(seller, amount);\n\n        payCoin.mint(seller,getFee(amount, false));\n\n        emit Sell(address(this), amount, priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function getFee(uint256 amount, bool from_buy) internal returns(uint256){\n        // amount * tk_price / 10^18 +- 2*amount/1000\n        uint256 exp = uint256(token.decimals());\n\n        if (from_buy){\n            return amount.mul(priceHistory[priceHistory.length.sub(1)]).div(10**exp).add(amount.mul(2).div(1000));\n        }\n        else{\n            return amount.mul(priceHistory[priceHistory.length.sub(1)]).div(10**exp).sub(amount.mul(2).div(1000));\n        }\n\n    }\n\n    function isOpen() public view returns (bool) {\n        return now >= _openingtime && now <= _closingtime;\n    }\n\n    function setOpenTime() external onlyAdmin {\n        require(_openingtime < _closingtime, \"Something's wrong, maybe you set the initial _openingtime wrong.\");\n        _openingtime = _closingtime.add(15 hours) ;\n        _closingtime = _openingtime.add(9 hours) ;\n    }\n\n    function lastPrice() external view returns (uint256, uint256){\n        return (priceHistory.length.sub(1), priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function getHistory(uint256 id_price) external view returns (uint256){\n        return priceHistory[id_price] ;        \n    }\n\n    function setHistory(uint256 price) onlyBroker public {\n        priceHistory.push(price); \n    }\n\n    function setNewPrice(int256 delta_price) onlyBroker public returns (uint256) {\n        uint256 last_price = priceHistory[priceHistory.length.sub(1)]; \n        int256 new_price = int256(last_price) + delta_price; \n        uint256 last_id_price; \n\n        require (new_price > 0, \"Price must be positive!\"); \n        \n        if (isAdmin(_msgSender())) {\n            require(isOpen(), \"Market is closed\"); \n            \n            setHistory(uint256(new_price));\n            last_id_price = priceHistory.length.sub(1);\n            \n            emit PriceChange(_msgSender(), last_id_price, uint256(new_price)); \n        }\n        else{\n            require(_overnightCalls < 4, \"Already calls 4 times this night.\"); \n            require( uint256(new_price) > last_price.sub(last_price.mul(10).div(100)) && uint256(new_price) < last_price.add(last_price.mul(10).div(100)), \"Can't change more than -+10%\" ); \n            \n            setHistory(uint256(new_price));\n            last_id_price = priceHistory.length.sub(1);\n            \n            _overnightCalls += 1; \n        }\n\n        return last_id_price; \n    }\n\n    //TEAMTOKEN & PAYCOIN ADDRESS\n    /*\n    function setToken(address tokenAddress) onlyAdmin external {\n        token = token_erc20(tokenAddress); \n    }\n    \n    function setPayCoin(address payCoinAddress) onlyAdmin external {\n        payCoin = IT_PayCoin(payCoinAddress); \n    }\n    */\n\n\n\n}\n",
  "sourceMap": "169:5773:17:-;;;600:57;;;-1:-1:-1;;;;;;600:57:17;615:42;600:57;;;1158:568;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;420:24:10;431:12;-1:-1:-1;;;;;431:10:10;:12;:::i;:::-;-1:-1:-1;;;;;420:10:10;:24;:::i;:::-;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;1198:17:17;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1190:5:17;:25;;-1:-1:-1;;;;;;1190:25:17;-1:-1:-1;;;;;1190:25:17;;;;;;;;;;1235:13;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1225:7:17;:23;;-1:-1:-1;;;;;;1225:23:17;-1:-1:-1;;;;;1225:23:17;;;;;;1376:3;1361:12;:18;;;1411:8;1405:14;1390:12;:29;1460:15;:19;;-1:-1:-1;;1460:19:17;;;1505:4;;1497:13;;1505:4;1497:7;:13::i;:::-;:31;;;;-1:-1:-1;1523:4:17;;1514:14;;-1:-1:-1;;;;;1523:4:17;-1:-1:-1;;;;;1514:8:17;:14;:::i;:::-;1491:107;;1553:4;;1544:14;;-1:-1:-1;;;;;1553:4:17;-1:-1:-1;;;;;1544:8:17;:14;:::i;:::-;1582:4;;1572:15;;-1:-1:-1;;;;;1582:4:17;-1:-1:-1;;;;;1572:9:17;:15;:::i;:::-;1643:12;;1629;-1:-1:-1;;;;;1629:10:17;:12;:::i;:::-;-1:-1:-1;;;;;1617:39:17;;;;;;;;;;;1696:12;;1711:6;1696:21;1682:12;-1:-1:-1;;;;;1682:10:17;:12;:::i;:::-;-1:-1:-1;;;;;1672:46:17;;;;;;;;;;;169:5773;;788:96:0;867:10;788:96;:::o;888:119:10:-;944:21;957:7;944:8;:12;;;;;;:21;;;;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;587:105::-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;596:107:10:-;652:4;675:21;688:7;675:8;:12;;;;;;:21;;;;:::i;698:87:9:-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;-1:-1:-1;;;;;506:10:10;:12;:::i;:::-;-1:-1:-1;;;;;497:8:10;:22;:::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;-1:-1:-1;;;;;773:10:10;:19;:::i;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;169:5773:17:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/token_exchange.sol",
  "type": "contract"
}