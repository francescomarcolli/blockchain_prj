{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "ChangeEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "ChangeStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "changeEnd",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        }
      ],
      "name": "changeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "getHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "payCoin",
      "outputs": [
        {
          "internalType": "contract IT_PayCoin",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setHistory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "delta_price",
          "type": "int256"
        }
      ],
      "name": "setNewPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setOpenTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "payCoinAddress",
          "type": "address"
        }
      ],
      "name": "setPayCoin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "10": "contracts/BrokerRole.sol",
    "11": "contracts/BurnerRole.sol",
    "12": "contracts/PayCoin.sol",
    "16": "contracts/token_exchange.sol",
    "18": "interfaces/IT_PayCoin.sol",
    "2": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/roles/MinterRole.sol",
    "3": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/math/SafeMath.sol",
    "4": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Burnable.sol",
    "6": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
    "7": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Mintable.sol",
    "8": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/IERC20.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_exchange.sol",
    "exportedSymbols": {
      "token_exchange": [
        1496
      ]
    },
    "id": 1497,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 844,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "contracts/PayCoin.sol",
        "file": "./PayCoin.sol",
        "id": 845,
        "nodeType": "ImportDirective",
        "scope": 1497,
        "sourceUnit": 80,
        "src": "26:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IT_ERC20.sol",
        "file": "../interfaces/IT_ERC20.sol",
        "id": 846,
        "nodeType": "ImportDirective",
        "scope": 1497,
        "sourceUnit": 2196,
        "src": "50:36:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token_erc20.sol",
        "file": "./token_erc20.sol",
        "id": 847,
        "nodeType": "ImportDirective",
        "scope": 1497,
        "sourceUnit": 2160,
        "src": "87:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BrokerRole.sol",
        "file": "./BrokerRole.sol",
        "id": 848,
        "nodeType": "ImportDirective",
        "scope": 1497,
        "sourceUnit": 2080,
        "src": "115:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AdminRole.sol",
        "file": "./AdminRole.sol",
        "id": 849,
        "nodeType": "ImportDirective",
        "scope": 1497,
        "sourceUnit": 1973,
        "src": "142:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 850,
              "name": "BrokerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2079,
              "src": "196:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BrokerRole_$2079",
                "typeString": "contract BrokerRole"
              }
            },
            "id": 851,
            "nodeType": "InheritanceSpecifier",
            "src": "196:10:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 852,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1972,
              "src": "208:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$1972",
                "typeString": "contract AdminRole"
              }
            },
            "id": 853,
            "nodeType": "InheritanceSpecifier",
            "src": "208:9:16"
          }
        ],
        "contractDependencies": [
          79,
          1523,
          1972,
          2079
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1496,
        "linearizedBaseContracts": [
          1496,
          1972,
          2079,
          1523
        ],
        "name": "token_exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 856,
            "libraryName": {
              "contractScope": null,
              "id": 854,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2965,
              "src": "230:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2965",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "224:27:16",
            "typeName": {
              "id": 855,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 859,
            "libraryName": {
              "contractScope": null,
              "id": 857,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2965,
              "src": "262:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2965",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "256:26:16",
            "typeName": {
              "id": 858,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "275:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "id": 861,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "289:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_ERC20_$2195",
              "typeString": "contract IT_ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 860,
              "name": "IT_ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2195,
              "src": "289:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_ERC20_$2195",
                "typeString": "contract IT_ERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 863,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "317:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 862,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1758,
              "src": "317:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 865,
            "name": "_openingtime",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "349:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 864,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 867,
            "name": "_closingtime",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "383:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 866,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "383:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 869,
            "name": "_overnightCalls",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "417:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 868,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "417:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 872,
            "name": "priceHistory",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "454:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 870,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "454:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 871,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "454:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 874,
            "name": "_start",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "491:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 876,
            "name": "_end",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "519:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 875,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "519:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 879,
            "name": "_fss_admin",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "625:71:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 877,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "625:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307832623137376331383534444531333245393633323642343534303535303035453632666542446337",
              "id": 878,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "654:42:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x2b177c1854DE132E96326B454055005E62feBDc7"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 882,
            "name": "_fss_trading",
            "nodeType": "VariableDeclaration",
            "scope": 1496,
            "src": "703:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 880,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "703:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838354138643732343146666666656537323930353031343733413942313142466441324165394666",
              "id": 881,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "734:42:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 890,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "795:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 886,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "818:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "842:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "794:70:16"
            },
            "src": "785:80:16"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 898,
            "name": "Sell",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "881:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "904:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "928:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "880:70:16"
            },
            "src": "870:81:16"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 906,
            "name": "PriceChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "974:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "indexed": true,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "995:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "1021:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "973:70:16"
            },
            "src": "956:88:16"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 912,
            "name": "ChangeStart",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "1068:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "indexed": true,
                  "name": "when",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "1089:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:43:16"
            },
            "src": "1050:61:16"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 918,
            "name": "ChangeEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "indexed": true,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "1133:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "indexed": true,
                  "name": "when",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "1154:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:43:16"
            },
            "src": "1117:59:16"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "1206:65:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 921,
                          "name": "isOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1222,
                          "src": "1224:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1224:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b657420697320636c6f736564",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1234:18:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        },
                        "value": "Market is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        }
                      ],
                      "id": 920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "1216:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:37:16"
                },
                {
                  "id": 926,
                  "nodeType": "PlaceholderStatement",
                  "src": "1263:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 928,
            "name": "onlyWhileOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:16"
            },
            "src": "1183:88:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "1298:393:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 931,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "1309:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1319:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PayCoin_$79_$",
                          "typeString": "function () returns (contract PayCoin)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 932,
                          "name": "PayCoin",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 79,
                          "src": "1323:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PayCoin_$79",
                            "typeString": "contract PayCoin"
                          }
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1319:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$79",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "src": "1309:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:23:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 937,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "1343:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 938,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "1358:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1343:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 941,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "1372:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 942,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3089,
                        "src": "1387:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3132",
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1393:8:16",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_43200_by_1",
                          "typeString": "int_const 43200"
                        },
                        "value": "12"
                      },
                      "src": "1387:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1372:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:29:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 947,
                      "name": "_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "1442:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 948,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "1451:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1442:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:21:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 951,
                      "name": "_end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "1474:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 952,
                          "name": "_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 874,
                          "src": "1481:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "37",
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1490:6:16",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "7"
                        },
                        "src": "1481:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "39",
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1499:7:16",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32400_by_1",
                          "typeString": "int_const 32400"
                        },
                        "value": "9"
                      },
                      "src": "1481:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1474:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:32:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 959,
                      "name": "_overnightCalls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "1518:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1536:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1518:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:19:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1553:46:16",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 964,
                                "name": "_fss_admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 879,
                                "src": "1563:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 963,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1918,
                              "src": "1555:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1555:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 967,
                                "name": "_fss_admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 879,
                                "src": "1587:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 966,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2025,
                              "src": "1578:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1578:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1555:43:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 970,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1554:45:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 981,
                  "nodeType": "IfStatement",
                  "src": "1549:131:16",
                  "trueBody": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "1600:80:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 973,
                              "name": "_fss_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "1623:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 972,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "1614:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1614:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 975,
                        "nodeType": "ExpressionStatement",
                        "src": "1614:20:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 977,
                              "name": "_fss_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "1658:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 976,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "1648:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1648:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:21:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 983,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:2:16"
            },
            "returnParameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:0:16"
            },
            "scope": 1496,
            "src": "1277:414:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1011,
              "nodeType": "Block",
              "src": "1768:246:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 993,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3089,
                            "src": "1787:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 994,
                            "name": "_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "1793:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1787:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 996,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3089,
                            "src": "1803:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 997,
                            "name": "_end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "1809:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1803:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1787:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d61726b657420697320636c6f736520666f72657665722e",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1816:30:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be2e04ebb01fac59ee44d5eae4611f3d298bb70208dc75846f70cd58f8cd5432",
                          "typeString": "literal_string \"The market is close forever.\""
                        },
                        "value": "The market is close forever."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be2e04ebb01fac59ee44d5eae4611f3d298bb70208dc75846f70cd58f8cd5432",
                          "typeString": "literal_string \"The market is close forever.\""
                        }
                      ],
                      "id": 992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "1778:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:69:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:69:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1004,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "1959:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1959:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1006,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "1973:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1003,
                      "name": "_buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "1954:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:31:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2003:4:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 991,
                  "id": 1010,
                  "nodeType": "Return",
                  "src": "1996:11:16"
                }
              ]
            },
            "documentation": null,
            "id": 1012,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 988,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 987,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 928,
                  "src": "1740:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1740:13:16"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "1710:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1709:21:16"
            },
            "returnParameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "1763:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1762:6:16"
            },
            "scope": 1496,
            "src": "1697:317:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1040,
              "nodeType": "Block",
              "src": "2092:247:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1022,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3089,
                            "src": "2111:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1023,
                            "name": "_start",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "2117:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2111:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1025,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3089,
                            "src": "2127:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1026,
                            "name": "_end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "2133:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2127:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2111:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d61726b657420697320636c6f736520666f72657665722e",
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2140:30:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be2e04ebb01fac59ee44d5eae4611f3d298bb70208dc75846f70cd58f8cd5432",
                          "typeString": "literal_string \"The market is close forever.\""
                        },
                        "value": "The market is close forever."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be2e04ebb01fac59ee44d5eae4611f3d298bb70208dc75846f70cd58f8cd5432",
                          "typeString": "literal_string \"The market is close forever.\""
                        }
                      ],
                      "id": 1021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2102:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2102:69:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:69:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1033,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "2284:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2284:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1035,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "2298:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1032,
                      "name": "_sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "2278:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2278:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:32:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2328:4:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1020,
                  "id": 1039,
                  "nodeType": "Return",
                  "src": "2321:11:16"
                }
              ]
            },
            "documentation": null,
            "id": 1041,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1017,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1016,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 928,
                  "src": "2064:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2064:13:16"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "2034:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2033:21:16"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "2087:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2086:6:16"
            },
            "scope": 1496,
            "src": "2020:319:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "2403:280:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1049,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1043,
                          "src": "2421:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2442:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2434:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2434:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2421:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526563697069656e7420697320746865207a65726f2061646472657373",
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2446:31:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d00a29824e03644ef14dc77c2877f1e93d644f4b2292b7f7d27d812012566cc",
                          "typeString": "literal_string \"Recipient is the zero address\""
                        },
                        "value": "Recipient is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d00a29824e03644ef14dc77c2877f1e93d644f4b2292b7f7d27d812012566cc",
                          "typeString": "literal_string \"Recipient is the zero address\""
                        }
                      ],
                      "id": 1048,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2413:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:65:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:65:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1060,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "2510:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1061,
                        "name": "_fss_trading",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "2521:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1063,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "2542:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2550:4:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1062,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "2535:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2535:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1057,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "2489:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 1059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2329,
                      "src": "2489:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:67:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:67:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "2578:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1072,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "2589:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1068,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "2567:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$2195",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2777,
                      "src": "2567:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:29:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1076,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "2616:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1077,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "2627:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1078,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "2635:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1084,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2672:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1079,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "2648:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2648:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2821,
                            "src": "2648:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2635:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1075,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "2612:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:64:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "EmitStatement",
                  "src": "2607:69:16"
                }
              ]
            },
            "documentation": null,
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "2359:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "2378:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2358:35:16"
            },
            "returnParameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2403:0:16"
            },
            "scope": 1496,
            "src": "2345:338:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "2745:351:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1096,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1090,
                          "src": "2858:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2876:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2868:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2868:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2858:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656c6c657220697320746865207a65726f2061646472657373",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2880:28:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3eaccf3418075cc66fd84e4441c05755a5287a5b066d89e271081ee4b333fba",
                          "typeString": "literal_string \"Seller is the zero address\""
                        },
                        "value": "Seller is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3eaccf3418075cc66fd84e4441c05755a5287a5b066d89e271081ee4b333fba",
                          "typeString": "literal_string \"Seller is the zero address\""
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2850:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:59:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:59:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "2935:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1108,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1092,
                        "src": "2943:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1104,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "2920:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$2195",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2194,
                      "src": "2920:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2920:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:30:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1114,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "2974:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1116,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "2989:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2997:5:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1115,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "2982:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (uint256,bool) returns (uint256)"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2982:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1111,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "2961:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2777,
                      "src": "2961:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:43:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "2961:43:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1123,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3135,
                            "src": "3033:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$1496",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$1496",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3025:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3025:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1125,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1092,
                        "src": "3040:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1126,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "3048:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1132,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3085:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1127,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "3061:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3061:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2821,
                            "src": "3061:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3061:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3048:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1121,
                      "name": "Sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 898,
                      "src": "3020:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3020:69:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "EmitStatement",
                  "src": "3015:74:16"
                }
              ]
            },
            "documentation": null,
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "2704:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "2720:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2703:32:16"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2745:0:16"
            },
            "scope": 1496,
            "src": "2689:407:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1207,
              "nodeType": "Block",
              "src": "3174:399:16",
              "statements": [
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "name": "exp",
                      "nodeType": "VariableDeclaration",
                      "scope": 1207,
                      "src": "3238:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3238:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1152,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1148,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 861,
                            "src": "3260:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IT_ERC20_$2195",
                              "typeString": "contract IT_ERC20"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2182,
                          "src": "3260:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3260:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3252:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3252:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3238:39:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1153,
                    "name": "from_buy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1140,
                    "src": "3292:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1205,
                    "nodeType": "Block",
                    "src": "3440:126:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 1201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3549:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 1198,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3542:1:16",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1196,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1138,
                                      "src": "3531:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1197,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2882,
                                    "src": "3531:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3531:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2898,
                                "src": "3531:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3531:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3518:2:16",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1192,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1146,
                                    "src": "3522:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3518:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1182,
                                        "name": "priceHistory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 872,
                                        "src": "3472:12:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1188,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 1186,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3509:1:16",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1183,
                                              "name": "priceHistory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 872,
                                              "src": "3485:12:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1184,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "3485:19:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1185,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2821,
                                          "src": "3485:23:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1187,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3485:26:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3472:40:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1180,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1138,
                                      "src": "3461:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2882,
                                    "src": "3461:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3461:52:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2898,
                                "src": "3461:56:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3461:65:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2821,
                            "src": "3461:69:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3461:94:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1144,
                        "id": 1204,
                        "nodeType": "Return",
                        "src": "3454:101:16"
                      }
                    ]
                  },
                  "id": 1206,
                  "nodeType": "IfStatement",
                  "src": "3288:278:16",
                  "trueBody": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "3301:126:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31303030",
                                  "id": 1175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3410:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "32",
                                      "id": 1172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3403:1:16",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1170,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1138,
                                      "src": "3392:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2882,
                                    "src": "3392:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3392:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2898,
                                "src": "3392:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3392:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3379:2:16",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1166,
                                    "name": "exp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1146,
                                    "src": "3383:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3379:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1156,
                                        "name": "priceHistory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 872,
                                        "src": "3333:12:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1162,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 1160,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3370:1:16",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1157,
                                              "name": "priceHistory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 872,
                                              "src": "3346:12:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 1158,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "3346:19:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1159,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2821,
                                          "src": "3346:23:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3346:26:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3333:40:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1154,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1138,
                                      "src": "3322:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1155,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2882,
                                    "src": "3322:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3322:52:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2898,
                                "src": "3322:56:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3322:65:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2805,
                            "src": "3322:69:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3322:94:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1144,
                        "id": 1178,
                        "nodeType": "Return",
                        "src": "3315:101:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1208,
                  "src": "3118:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "name": "from_buy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1208,
                  "src": "3134:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3117:31:16"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1208,
                  "src": "3166:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3165:9:16"
            },
            "scope": 1496,
            "src": "3102:471:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1221,
              "nodeType": "Block",
              "src": "3624:66:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1213,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3089,
                        "src": "3641:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1214,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "3648:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3641:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1216,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3089,
                        "src": "3664:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1217,
                        "name": "_closingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 867,
                        "src": "3671:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3664:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3641:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1212,
                  "id": 1220,
                  "nodeType": "Return",
                  "src": "3634:49:16"
                }
              ]
            },
            "documentation": null,
            "id": 1222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOpen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3594:2:16"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "3618:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3617:6:16"
            },
            "scope": 1496,
            "src": "3579:111:16",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "3738:224:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1228,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "3756:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1229,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "3771:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3756:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e",
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3785:66:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        },
                        "value": "Something's wrong, maybe you set the initial _openingtime wrong."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        }
                      ],
                      "id": 1227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3748:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3748:104:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:104:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1234,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "3862:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3894:8:16",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          },
                          "value": "15"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1235,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "3877:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2805,
                        "src": "3877:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3877:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3862:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:41:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1241,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "3914:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3946:7:16",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1242,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 865,
                          "src": "3929:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2805,
                        "src": "3929:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3929:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3914:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "3914:40:16"
                }
              ]
            },
            "documentation": null,
            "id": 1249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1225,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1224,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "3728:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3728:9:16"
              }
            ],
            "name": "setOpenTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3716:2:16"
            },
            "returnParameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3738:0:16"
            },
            "scope": 1496,
            "src": "3696:266:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1270,
              "nodeType": "Block",
              "src": "4029:94:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4071:1:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1256,
                              "name": "priceHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "4047:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4047:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2821,
                          "src": "4047:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4047:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1261,
                          "name": "priceHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "4075:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1267,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4112:1:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1262,
                                "name": "priceHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 872,
                                "src": "4088:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4088:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2821,
                            "src": "4088:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4088:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4075:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1268,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4046:70:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1255,
                  "id": 1269,
                  "nodeType": "Return",
                  "src": "4039:77:16"
                }
              ]
            },
            "documentation": null,
            "id": 1271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3986:2:16"
            },
            "returnParameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "4012:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "4021:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4011:18:16"
            },
            "scope": 1496,
            "src": "3968:155:16",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "4198:55:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1278,
                      "name": "priceHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "4215:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1280,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1279,
                      "name": "id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "4228:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4215:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1277,
                  "id": 1281,
                  "nodeType": "Return",
                  "src": "4208:29:16"
                }
              ]
            },
            "documentation": null,
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "4149:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4149:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4148:18:16"
            },
            "returnParameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1276,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "4190:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4190:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4189:9:16"
            },
            "scope": 1496,
            "src": "4129:124:16",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "4312:42:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1293,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1285,
                        "src": "4340:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1290,
                        "name": "priceHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "4322:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4322:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:24:16"
                }
              ]
            },
            "documentation": null,
            "id": 1297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1288,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1287,
                  "name": "onlyBroker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2012,
                  "src": "4294:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4294:10:16"
              }
            ],
            "name": "setHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "4279:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4278:15:16"
            },
            "returnParameters": {
              "id": 1289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4312:0:16"
            },
            "scope": 1496,
            "src": "4259:95:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1430,
              "nodeType": "Block",
              "src": "4437:1036:16",
              "statements": [
                {
                  "assignments": [
                    1307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1307,
                      "name": "last_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "4447:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4447:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1315,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1308,
                      "name": "priceHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "4468:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1314,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4505:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1309,
                            "name": "priceHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "4481:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4481:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2821,
                        "src": "4481:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4481:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4468:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4447:61:16"
                },
                {
                  "assignments": [
                    1317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1317,
                      "name": "new_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "4519:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1316,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4519:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1319,
                          "name": "last_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1307,
                          "src": "4545:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4538:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": "int256"
                      },
                      "id": 1320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4538:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "delta_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "4559:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4538:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4519:51:16"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "name": "last_id_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "4581:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4581:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1326,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4581:21:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1328,
                          "name": "new_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "4623:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4635:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4623:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072696365206d75737420626520706f73697469766521",
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:25:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b727a0f9e51eaa13062016295d601d8fa22a2264ae06c107a759bee2c54dbe6d",
                          "typeString": "literal_string \"Price must be positive!\""
                        },
                        "value": "Price must be positive!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b727a0f9e51eaa13062016295d601d8fa22a2264ae06c107a759bee2c54dbe6d",
                          "typeString": "literal_string \"Price must be positive!\""
                        }
                      ],
                      "id": 1327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4614:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4614:50:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:50:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1335,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "4696:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4696:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1334,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1918,
                      "src": "4688:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1426,
                    "nodeType": "Block",
                    "src": "4993:442:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1369,
                                "name": "_overnightCalls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "5015:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "34",
                                "id": 1370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5033:1:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "src": "5015:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416c72656164792063616c6c7320342074696d65732074686973206e696768742e",
                              "id": 1372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5036:35:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00eccb539501bbae30f67aa01f9323c94f4f92c523121abbda6546675ac2014d",
                                "typeString": "literal_string \"Already calls 4 times this night.\""
                              },
                              "value": "Already calls 4 times this night."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00eccb539501bbae30f67aa01f9323c94f4f92c523121abbda6546675ac2014d",
                                "typeString": "literal_string \"Already calls 4 times this night.\""
                              }
                            ],
                            "id": 1368,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "5007:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5007:65:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1374,
                        "nodeType": "ExpressionStatement",
                        "src": "5007:65:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1377,
                                      "name": "new_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1317,
                                      "src": "5104:9:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 1376,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5096:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 1378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5096:18:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1386,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5155:3:16",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3130",
                                              "id": 1383,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5147:2:16",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1381,
                                              "name": "last_price",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1307,
                                              "src": "5132:10:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1382,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2882,
                                            "src": "5132:14:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1384,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5132:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1385,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2898,
                                        "src": "5132:22:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1387,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5132:27:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1379,
                                      "name": "last_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1307,
                                      "src": "5117:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2821,
                                    "src": "5117:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5117:43:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5096:64:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1391,
                                      "name": "new_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1317,
                                      "src": "5172:9:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 1390,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5164:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 1392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5164:18:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1400,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5223:3:16",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3130",
                                              "id": 1397,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5215:2:16",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1395,
                                              "name": "last_price",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1307,
                                              "src": "5200:10:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1396,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2882,
                                            "src": "5200:14:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1398,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5200:18:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1399,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2898,
                                        "src": "5200:22:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5200:27:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1393,
                                      "name": "last_price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1307,
                                      "src": "5185:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2805,
                                    "src": "5185:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5185:43:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5164:64:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5096:132:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "43616e2774206368616e6765206d6f7265207468616e202d2b313025",
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5230:30:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d60a62876805af97b5dd1c2ff63fb59d00ce26fed0a57cc3216e134b08528804",
                                "typeString": "literal_string \"Can't change more than -+10%\""
                              },
                              "value": "Can't change more than -+10%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d60a62876805af97b5dd1c2ff63fb59d00ce26fed0a57cc3216e134b08528804",
                                "typeString": "literal_string \"Can't change more than -+10%\""
                              }
                            ],
                            "id": 1375,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "5087:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5087:175:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1407,
                        "nodeType": "ExpressionStatement",
                        "src": "5087:175:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1410,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1317,
                                  "src": "5309:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5301:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5301:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1408,
                            "name": "setHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "5290:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5290:30:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1413,
                        "nodeType": "ExpressionStatement",
                        "src": "5290:30:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1414,
                            "name": "last_id_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1325,
                            "src": "5334:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5374:1:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1415,
                                  "name": "priceHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 872,
                                  "src": "5350:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1416,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5350:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2821,
                              "src": "5350:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5350:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5334:42:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1421,
                        "nodeType": "ExpressionStatement",
                        "src": "5334:42:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1422,
                            "name": "_overnightCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "5403:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5422:1:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5403:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1425,
                        "nodeType": "ExpressionStatement",
                        "src": "5403:20:16"
                      }
                    ]
                  },
                  "id": 1427,
                  "nodeType": "IfStatement",
                  "src": "4684:751:16",
                  "trueBody": {
                    "id": 1367,
                    "nodeType": "Block",
                    "src": "4711:269:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1339,
                                "name": "isOpen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "4733:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4733:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d61726b657420697320636c6f736564",
                              "id": 1341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4743:18:16",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                                "typeString": "literal_string \"Market is closed\""
                              },
                              "value": "Market is closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                                "typeString": "literal_string \"Market is closed\""
                              }
                            ],
                            "id": 1338,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "4725:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4725:37:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1343,
                        "nodeType": "ExpressionStatement",
                        "src": "4725:37:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1346,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1317,
                                  "src": "4809:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4801:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4801:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1344,
                            "name": "setHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "4790:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4790:30:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1349,
                        "nodeType": "ExpressionStatement",
                        "src": "4790:30:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1350,
                            "name": "last_id_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1325,
                            "src": "4834:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4874:1:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1351,
                                  "name": "priceHistory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 872,
                                  "src": "4850:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1352,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4850:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2821,
                              "src": "4850:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4850:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4834:42:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1357,
                        "nodeType": "ExpressionStatement",
                        "src": "4834:42:16"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1359,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1511,
                                "src": "4920:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4920:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1361,
                              "name": "last_id_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1325,
                              "src": "4934:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1363,
                                  "name": "new_price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1317,
                                  "src": "4957:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4949:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4949:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1358,
                            "name": "PriceChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "4908:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4908:60:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1366,
                        "nodeType": "EmitStatement",
                        "src": "4903:65:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1428,
                    "name": "last_id_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1325,
                    "src": "5452:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1305,
                  "id": 1429,
                  "nodeType": "Return",
                  "src": "5445:20:16"
                }
              ]
            },
            "documentation": null,
            "id": 1431,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1302,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1301,
                  "name": "onlyBroker",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2012,
                  "src": "4401:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4401:10:16"
              }
            ],
            "name": "setNewPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "name": "delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "4381:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4381:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4380:20:16"
            },
            "returnParameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1431,
                  "src": "4428:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4427:9:16"
            },
            "scope": 1496,
            "src": "4360:1113:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "5577:51:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1438,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "5587:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_ERC20_$2195",
                        "typeString": "contract IT_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1440,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "5607:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1439,
                        "name": "token_erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2159,
                        "src": "5595:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_erc20_$2159_$",
                          "typeString": "type(contract token_erc20)"
                        }
                      },
                      "id": 1441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5595:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_erc20_$2159",
                        "typeString": "contract token_erc20"
                      }
                    },
                    "src": "5587:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_ERC20_$2195",
                      "typeString": "contract IT_ERC20"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "5587:33:16"
                }
              ]
            },
            "documentation": null,
            "id": 1445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1436,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1435,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "5558:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5558:9:16"
              }
            ],
            "name": "setToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1433,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "5536:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5536:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5535:22:16"
            },
            "returnParameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5577:0:16"
            },
            "scope": 1496,
            "src": "5518:110:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "5701:54:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1452,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "5711:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1454,
                          "name": "payCoinAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "5732:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1453,
                        "name": "IT_PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1758,
                        "src": "5721:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IT_PayCoin_$1758_$",
                          "typeString": "type(contract IT_PayCoin)"
                        }
                      },
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5721:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "src": "5711:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 1457,
                  "nodeType": "ExpressionStatement",
                  "src": "5711:36:16"
                }
              ]
            },
            "documentation": null,
            "id": 1459,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1450,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1449,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "5682:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5682:9:16"
              }
            ],
            "name": "setPayCoin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1447,
                  "name": "payCoinAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1459,
                  "src": "5658:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5658:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5657:24:16"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5701:0:16"
            },
            "scope": 1496,
            "src": "5638:117:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1476,
              "nodeType": "Block",
              "src": "5820:74:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1466,
                      "name": "_start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "5828:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1467,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "5837:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5828:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "5828:14:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1471,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "5867:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5867:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "5881:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1470,
                      "name": "ChangeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 912,
                      "src": "5855:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1475,
                  "nodeType": "EmitStatement",
                  "src": "5850:37:16"
                }
              ]
            },
            "documentation": null,
            "id": 1477,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1464,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1463,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "5801:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5801:9:16"
              }
            ],
            "name": "changeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1461,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 1477,
                  "src": "5786:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5786:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5785:15:16"
            },
            "returnParameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5820:0:16"
            },
            "scope": 1496,
            "src": "5765:129:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1494,
              "nodeType": "Block",
              "src": "5951:66:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1484,
                      "name": "_end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "5959:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1485,
                      "name": "end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "5966:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5959:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1487,
                  "nodeType": "ExpressionStatement",
                  "src": "5959:10:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1489,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "5992:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5992:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "end",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "6006:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1488,
                      "name": "ChangeEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "5982:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5982:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1493,
                  "nodeType": "EmitStatement",
                  "src": "5977:33:16"
                }
              ]
            },
            "documentation": null,
            "id": 1495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1482,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1481,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "5932:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5932:9:16"
              }
            ],
            "name": "changeEnd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "name": "end",
                  "nodeType": "VariableDeclaration",
                  "scope": 1495,
                  "src": "5919:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5919:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5918:13:16"
            },
            "returnParameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5951:0:16"
            },
            "scope": 1496,
            "src": "5900:117:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1497,
        "src": "169:5853:16"
      }
    ],
    "src": "0:6023:16"
  },
  "bytecode": "6080604052600a80546001600160a01b0319908116732b177c1854de132e96326b454055005e62febdc717909155600b80549091167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200005957600080fd5b5062000080620000716001600160e01b036200019516565b6001600160e01b036200019916565b620000a6620000976001600160e01b036200019516565b6001600160e01b03620001eb16565b604051620000b49062000464565b604051809103906000f080158015620000d1573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392831617905542600481905561a8c0810160055560088190556209b910016009556006805460ff19169055600a546200012291166200023d565b80156200014a5750600a546200014a906001600160a01b03166001600160e01b036200026016565b6200018f57600a546200016f906001600160a01b03166001600160e01b036200027d16565b600a546200018f906001600160a01b03166001600160e01b03620002f716565b62000472565b3390565b620001b48160006200036e60201b620013df1790919060201c565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b620002068160016200036e60201b620013df1790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b60006200025a826001620003fb60201b62000cad1790919060201c565b92915050565b60006200025a826000620003fb60201b62000cad1790919060201c565b620002a3620002946001600160e01b036200019516565b6001600160e01b036200023d16565b620002e05760405162461bcd60e51b815260040180806020018281038252602e81526020018062003570602e913960400191505060405180910390fd5b620002f4816001600160e01b03620001eb16565b50565b6200031d6200030e6001600160e01b036200019516565b6001600160e01b036200026016565b6200035a5760405162461bcd60e51b81526004018080602001828103825260308152602001806200351e6030913960400191505060405180910390fd5b620002f4816001600160e01b036200019916565b6200038382826001600160e01b03620003fb16565b15620003d6576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620004445760405162461bcd60e51b81526004018080602001828103825260228152602001806200354e6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6119358062001be983390190565b61176780620004826000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063836cae65116100ad578063d1d5190c11610071578063d1d5190c146102ca578063d96a094a146102e7578063e37bddc314610304578063e4849b3214610321578063ffb4e0751461033e57610121565b8063836cae651461022a5780638bad0c0a146102505780639f986fbb14610258578063a96711931461027e578063c8691b2a146102ad57610121565b8063431e5c9d116100f4578063431e5c9d146101cf57806347535d7b146101d75780634f15e62e146101df57806370480275146101e7578063761909d01461020d57610121565b8063053f14da14610126578063144fa6d71461014757806322b31d9f1461016f57806324d7806c146101a9575b600080fd5b61012e610362565b6040805192835260208301919091528051918290030190f35b61016d6004803603602081101561015d57600080fd5b50356001600160a01b03166103ad565b005b6101956004803603602081101561018557600080fd5b50356001600160a01b031661041a565b604080519115158252519081900360200190f35b610195600480360360208110156101bf57600080fd5b50356001600160a01b0316610432565b61016d610445565b610195610457565b61016d610472565b61016d600480360360208110156101fd57600080fd5b50356001600160a01b031661052b565b61016d6004803603602081101561022357600080fd5b503561057d565b61016d6004803603602081101561024057600080fd5b50356001600160a01b03166105fd565b61016d61064c565b61016d6004803603602081101561026e57600080fd5b50356001600160a01b031661065c565b61029b6004803603602081101561029457600080fd5b50356106c4565b60408051918252519081900360200190f35b61029b600480360360208110156102c357600080fd5b503561098c565b61016d600480360360208110156102e057600080fd5b50356109ad565b610195600480360360208110156102fd57600080fd5b5035610a39565b61016d6004803603602081101561031a57600080fd5b5035610b03565b6101956004803603602081101561033757600080fd5b5035610b8f565b610346610c51565b604080516001600160a01b039092168252519081900360200190f35b600754600090819061037b90600163ffffffff610c6016565b6007805461039090600163ffffffff610c6016565b8154811061039a57fe5b9060005260206000200154915091509091565b6103bd6103b8610ca9565b610432565b6103f85760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600061042c818363ffffffff610cad16565b92915050565b600061042c60018363ffffffff610cad16565b610455610450610ca9565b610d14565b565b6000600454421015801561046d57506005544211155b905090565b61047d6103b8610ca9565b6104b85760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600554600454106104fa5760405162461bcd60e51b81526004018080602001828103825260408152602001806116826040913960400191505060405180910390fd5b60055461050f9061d2f063ffffffff610d5c16565b600481905561052690617e9063ffffffff610d5c16565b600555565b6105366103b8610ca9565b6105715760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b61057a81610db6565b50565b61058d610588610ca9565b61041a565b6105c85760405162461bcd60e51b81526004018080602001828103825260308152602001806116316030913960400191505060405180910390fd5b600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b610608610588610ca9565b6106435760405162461bcd60e51b81526004018080602001828103825260308152602001806116316030913960400191505060405180910390fd5b61057a81610dfe565b610455610657610ca9565b610e46565b6106676103b8610ca9565b6106a25760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006106d1610588610ca9565b61070c5760405162461bcd60e51b81526004018080602001828103825260308152602001806116316030913960400191505060405180910390fd5b600780546000919061072590600163ffffffff610c6016565b8154811061072f57fe5b6000918252602082200154915083820190808213610794576040805162461bcd60e51b815260206004820152601760248201527f5072696365206d75737420626520706f73697469766521000000000000000000604482015290519081900360640190fd5b61079f6103b8610ca9565b15610853576107ac610457565b6107f0576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6107f98261057d565b60075461080d90600163ffffffff610c6016565b90508181610819610ca9565b6001600160a01b03167f024e1c492bc15609a5125924e67e792a203a4f550a353426fad01a2c6d5ff97660405160405180910390a4610984565b600654600460ff909116106108995760405162461bcd60e51b81526004018080602001828103825260218152602001806116106021913960400191505060405180910390fd5b6108cb6108be60646108b286600a63ffffffff610e8e16565b9063ffffffff610ee716565b849063ffffffff610c6016565b821180156108fd57506108fa6108ed60646108b286600a63ffffffff610e8e16565b849063ffffffff610d5c16565b82105b61094e576040805162461bcd60e51b815260206004820152601c60248201527f43616e2774206368616e6765206d6f7265207468616e202d2b31302500000000604482015290519081900360640190fd5b6109578261057d565b60075461096b90600163ffffffff610c6016565b6006805460ff8082166001011660ff1990911617905590505b949350505050565b60006007828154811061099b57fe5b90600052602060002001549050919050565b6109b86103b8610ca9565b6109f35760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600881905580610a01610ca9565b6001600160a01b03167f16c752bdf6502cc829c9a81132e2e73aeb12d145e0e3b1cd632a9759485a5f5360405160405180910390a350565b6000610a43610457565b610a87576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b60085442118015610a99575060095442105b610aea576040805162461bcd60e51b815260206004820152601c60248201527f546865206d61726b657420697320636c6f736520666f72657665722e00000000604482015290519081900360640190fd5b610afb610af5610ca9565b83610f29565b506001919050565b610b0e6103b8610ca9565b610b495760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600981905580610b57610ca9565b6001600160a01b03167f9cd0f0f4c626f6284b893eff5aa9a5f50e76b4fa9811bf3ec86ac52cc6ed782760405160405180910390a350565b6000610b99610457565b610bdd576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b60085442118015610bef575060095442105b610c40576040805162461bcd60e51b815260206004820152601c60248201527f546865206d61726b657420697320636c6f736520666f72657665722e00000000604482015290519081900360640190fd5b610afb610c4b610ca9565b83611125565b6003546001600160a01b031681565b6000610ca283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112e1565b9392505050565b3390565b60006001600160a01b038216610cf45760405162461bcd60e51b81526004018080602001828103825260228152602001806116e36022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610d2560008263ffffffff61137816565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b600082820183811015610ca2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b610dc760018263ffffffff6113df16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b610e0f60008263ffffffff6113df16565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b610e5760018263ffffffff61137816565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b600082610e9d5750600061042c565b82820282848281610eaa57fe5b0414610ca25760405162461bcd60e51b81526004018080602001828103825260218152602001806116c26021913960400191505060405180910390fd5b6000610ca283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611460565b6001600160a01b038216610f84576040805162461bcd60e51b815260206004820152601d60248201527f526563697069656e7420697320746865207a65726f2061646472657373000000604482015290519081900360640190fd5b600354600b546001600160a01b03918216916323b872dd91859116610faa8560016114c5565b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561101257600080fd5b505af1158015611026573d6000803e3d6000fd5b505050506040513d602081101561103c57600080fd5b5050600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561109457600080fd5b505af11580156110a8573d6000803e3d6000fd5b505050506040513d60208110156110be57600080fd5b5050600780546110d590600163ffffffff610c6016565b815481106110df57fe5b906000526020600020015481836001600160a01b03167f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed60405160405180910390a45050565b6001600160a01b038216611180576040805162461bcd60e51b815260206004820152601a60248201527f53656c6c657220697320746865207a65726f2061646472657373000000000000604482015290519081900360640190fd5b6002546040805163079cc67960e41b81526001600160a01b03858116600483015260248201859052915191909216916379cc679091604480830192600092919082900301818387803b1580156111d557600080fd5b505af11580156111e9573d6000803e3d6000fd5b50506003546001600160a01b031691506340c10f1990508361120c8460006114c5565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561125b57600080fd5b505af115801561126f573d6000803e3d6000fd5b505050506040513d602081101561128557600080fd5b50506007805461129c90600163ffffffff610c6016565b815481106112a657fe5b60009182526020822001546040519091839130917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91a45050565b600081848411156113705760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561133557818101518382015260200161131d565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6113828282610cad565b6113bd5760405162461bcd60e51b81526004018080602001828103825260218152602001806116616021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6113e98282610cad565b1561143b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081836114af5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561133557818101518382015260200161131d565b5060008385816114bb57fe5b0495945050505050565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561151657600080fd5b505afa15801561152a573d6000803e3d6000fd5b505050506040513d602081101561154057600080fd5b505160ff16905082156115c4576115bc6115676103e86108b287600263ffffffff610e8e16565b6115b083600a0a6108b2600761158c6001600780549050610c6090919063ffffffff16565b8154811061159657fe5b906000526020600020015489610e8e90919063ffffffff16565b9063ffffffff610d5c16565b91505061042c565b6115bc6115de6103e86108b287600263ffffffff610e8e16565b61160383600a0a6108b2600761158c6001600780549050610c6090919063ffffffff16565b9063ffffffff610c601656fe416c72656164792063616c6c7320342074696d65732074686973206e696768742e42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a7231582052ee5f43dbe587863c8a80ab52ae57cef7cc04f1031beeacfde780e3314918d364736f6c634300051100326080604052600880546001600160a01b031916732b177c1854de132e96326b454055005e62febdc71790553480156200003757600080fd5b50604051806040016040528060078152602001662830bca1b7b4b760c91b8152506040518060400160405280600381526020016250614360e81b8152506012620000996200008a6200018c60201b60201c565b6001600160e01b036200019116565b8251620000ae9060049060208601906200045c565b508151620000c49060059060208501906200045c565b506006805460ff191660ff9290921691909117905550620000f99050620000ea6200018c565b6001600160e01b03620001e316565b60085462000119906001600160a01b03166001600160e01b036200023516565b801562000141575060085462000141906001600160a01b03166001600160e01b036200025816565b620001865760085462000166906001600160a01b03166001600160e01b036200027516565b60085462000186906001600160a01b03166001600160e01b03620002ef16565b620004fe565b335b90565b620001ac8160036200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620001fe8160076200036660201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b600062000252826003620003f360201b62000d5a1790919060201c565b92915050565b600062000252826007620003f360201b62000d5a1790919060201c565b6200029b6200028c6001600160e01b036200018c16565b6001600160e01b036200023516565b620002d85760405162461bcd60e51b8152600401808060200182810382526030815260200180620018e36030913960400191505060405180910390fd5b620002ec816001600160e01b036200019116565b50565b62000315620003066001600160e01b036200018c16565b6001600160e01b036200025816565b620003525760405162461bcd60e51b8152600401808060200182810382526030815260200180620018b36030913960400191505060405180910390fd5b620002ec816001600160e01b03620001e316565b6200037b82826001600160e01b03620003f316565b15620003ce576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200043c5760405162461bcd60e51b8152600401808060200182810382526022815260200180620019136022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200049f57805160ff1916838001178555620004cf565b82800160010185558215620004cf579182015b82811115620004cf578251825591602001919060010190620004b2565b50620004dd929150620004e1565b5090565b6200018e91905b80821115620004dd5760008155600101620004e8565b6113a5806200050e6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158206505baac79f1c96398d0ddba89628cd14192b6e5bcbd5f7ff056b37034d637a164736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737342726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_exchange",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "83": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "81": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "82": [
            589,
            607,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "16": {
        "token_exchange._buy": {
          "79": [
            2421,
            2444,
            true
          ]
        },
        "token_exchange._sell": {
          "80": [
            2858,
            2878,
            true
          ]
        },
        "token_exchange.buy": {
          "74": [
            1787,
            1799,
            false
          ],
          "75": [
            1803,
            1813,
            true
          ]
        },
        "token_exchange.sell": {
          "76": [
            1224,
            1232,
            true
          ],
          "77": [
            2111,
            2123,
            false
          ],
          "78": [
            2127,
            2137,
            true
          ]
        },
        "token_exchange.setNewPrice": {
          "68": [
            4623,
            4636,
            true
          ],
          "69": [
            4688,
            4709,
            false
          ],
          "70": [
            4733,
            4741,
            true
          ],
          "71": [
            5015,
            5034,
            true
          ],
          "72": [
            5096,
            5160,
            false
          ],
          "73": [
            5164,
            5228,
            true
          ]
        },
        "token_exchange.setOpenTime": {
          "67": [
            3756,
            3783,
            true
          ]
        }
      },
      "18": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "84": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "88": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "85": [
            2458,
            2464,
            false
          ],
          "86": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "87": [
            1845,
            1851,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "36": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "62": [
            328,
            391
          ],
          "63": [
            401,
            428
          ]
        },
        "Roles.has": {
          "37": [
            867,
            935
          ],
          "38": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "60": [
            581,
            645
          ],
          "61": [
            655,
            683
          ]
        }
      },
      "10": {
        "BrokerRole._addBroker": {
          "44": [
            944,
            965
          ],
          "45": [
            975,
            1000
          ]
        },
        "BrokerRole._removeBroker": {
          "39": [
            1072,
            1096
          ],
          "40": [
            1106,
            1133
          ]
        },
        "BrokerRole.addBroker": {
          "11": [
            773,
            792
          ]
        },
        "BrokerRole.isBroker": {
          "2": [
            668,
            696
          ]
        },
        "BrokerRole.renounceBroker": {
          "4": [
            848,
            875
          ]
        }
      },
      "11": {},
      "12": {},
      "16": {
        "token_exchange._buy": {
          "51": [
            2413,
            2478
          ],
          "52": [
            2489,
            2556
          ],
          "53": [
            2567,
            2596
          ],
          "54": [
            2607,
            2676
          ]
        },
        "token_exchange._sell": {
          "55": [
            2850,
            2909
          ],
          "56": [
            2920,
            2950
          ],
          "57": [
            2961,
            3004
          ],
          "58": [
            3015,
            3089
          ]
        },
        "token_exchange.buy": {
          "28": [
            1778,
            1847
          ],
          "29": [
            1954,
            1985
          ],
          "30": [
            1996,
            2007
          ]
        },
        "token_exchange.changeEnd": {
          "31": [
            5959,
            5969
          ],
          "32": [
            5977,
            6010
          ]
        },
        "token_exchange.changeStart": {
          "26": [
            5828,
            5842
          ],
          "27": [
            5850,
            5887
          ]
        },
        "token_exchange.getFee": {
          "65": [
            3315,
            3416
          ],
          "66": [
            3454,
            3555
          ]
        },
        "token_exchange.getHistory": {
          "25": [
            4208,
            4237
          ]
        },
        "token_exchange.isOpen": {
          "5": [
            3634,
            3683
          ]
        },
        "token_exchange.lastPrice": {
          "0": [
            4039,
            4116
          ]
        },
        "token_exchange.sell": {
          "33": [
            2102,
            2171
          ],
          "34": [
            2278,
            2310
          ]
        },
        "token_exchange.setHistory": {
          "10": [
            4322,
            4346
          ]
        },
        "token_exchange.setNewPrice": {
          "14": [
            4614,
            4664
          ],
          "15": [
            4725,
            4762
          ],
          "16": [
            4790,
            4820
          ],
          "17": [
            4834,
            4876
          ],
          "18": [
            4903,
            4968
          ],
          "19": [
            5007,
            5072
          ],
          "20": [
            5087,
            5262
          ],
          "21": [
            5290,
            5320
          ],
          "22": [
            5334,
            5376
          ],
          "23": [
            5403,
            5423
          ],
          "24": [
            5445,
            5465
          ]
        },
        "token_exchange.setOpenTime": {
          "6": [
            3748,
            3852
          ],
          "7": [
            3862,
            3903
          ],
          "8": [
            3914,
            3954
          ]
        },
        "token_exchange.setPayCoin": {
          "13": [
            5711,
            5747
          ]
        },
        "token_exchange.setToken": {
          "1": [
            5587,
            5620
          ]
        }
      },
      "18": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "41": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "50": [
            3150,
            3196
          ],
          "64": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "48": [
            2480,
            2488
          ],
          "49": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "35": [
            1351,
            1401
          ],
          "59": [
            1837,
            1866
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "AdminRole._addAdmin": {
          "42": [
            927,
            947
          ],
          "43": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "46": [
            1052,
            1075
          ],
          "47": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "9": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "3": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "12": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "BrokerRole",
    "BurnerRole",
    "Context",
    "ERC20",
    "ERC20Burnable",
    "ERC20Detailed",
    "ERC20Mintable",
    "IERC20",
    "IT_PayCoin",
    "MinterRole",
    "PayCoin",
    "Roles",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063836cae65116100ad578063d1d5190c11610071578063d1d5190c146102ca578063d96a094a146102e7578063e37bddc314610304578063e4849b3214610321578063ffb4e0751461033e57610121565b8063836cae651461022a5780638bad0c0a146102505780639f986fbb14610258578063a96711931461027e578063c8691b2a146102ad57610121565b8063431e5c9d116100f4578063431e5c9d146101cf57806347535d7b146101d75780634f15e62e146101df57806370480275146101e7578063761909d01461020d57610121565b8063053f14da14610126578063144fa6d71461014757806322b31d9f1461016f57806324d7806c146101a9575b600080fd5b61012e610362565b6040805192835260208301919091528051918290030190f35b61016d6004803603602081101561015d57600080fd5b50356001600160a01b03166103ad565b005b6101956004803603602081101561018557600080fd5b50356001600160a01b031661041a565b604080519115158252519081900360200190f35b610195600480360360208110156101bf57600080fd5b50356001600160a01b0316610432565b61016d610445565b610195610457565b61016d610472565b61016d600480360360208110156101fd57600080fd5b50356001600160a01b031661052b565b61016d6004803603602081101561022357600080fd5b503561057d565b61016d6004803603602081101561024057600080fd5b50356001600160a01b03166105fd565b61016d61064c565b61016d6004803603602081101561026e57600080fd5b50356001600160a01b031661065c565b61029b6004803603602081101561029457600080fd5b50356106c4565b60408051918252519081900360200190f35b61029b600480360360208110156102c357600080fd5b503561098c565b61016d600480360360208110156102e057600080fd5b50356109ad565b610195600480360360208110156102fd57600080fd5b5035610a39565b61016d6004803603602081101561031a57600080fd5b5035610b03565b6101956004803603602081101561033757600080fd5b5035610b8f565b610346610c51565b604080516001600160a01b039092168252519081900360200190f35b600754600090819061037b90600163ffffffff610c6016565b6007805461039090600163ffffffff610c6016565b8154811061039a57fe5b9060005260206000200154915091509091565b6103bd6103b8610ca9565b610432565b6103f85760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600061042c818363ffffffff610cad16565b92915050565b600061042c60018363ffffffff610cad16565b610455610450610ca9565b610d14565b565b6000600454421015801561046d57506005544211155b905090565b61047d6103b8610ca9565b6104b85760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600554600454106104fa5760405162461bcd60e51b81526004018080602001828103825260408152602001806116826040913960400191505060405180910390fd5b60055461050f9061d2f063ffffffff610d5c16565b600481905561052690617e9063ffffffff610d5c16565b600555565b6105366103b8610ca9565b6105715760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b61057a81610db6565b50565b61058d610588610ca9565b61041a565b6105c85760405162461bcd60e51b81526004018080602001828103825260308152602001806116316030913960400191505060405180910390fd5b600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b610608610588610ca9565b6106435760405162461bcd60e51b81526004018080602001828103825260308152602001806116316030913960400191505060405180910390fd5b61057a81610dfe565b610455610657610ca9565b610e46565b6106676103b8610ca9565b6106a25760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006106d1610588610ca9565b61070c5760405162461bcd60e51b81526004018080602001828103825260308152602001806116316030913960400191505060405180910390fd5b600780546000919061072590600163ffffffff610c6016565b8154811061072f57fe5b6000918252602082200154915083820190808213610794576040805162461bcd60e51b815260206004820152601760248201527f5072696365206d75737420626520706f73697469766521000000000000000000604482015290519081900360640190fd5b61079f6103b8610ca9565b15610853576107ac610457565b6107f0576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6107f98261057d565b60075461080d90600163ffffffff610c6016565b90508181610819610ca9565b6001600160a01b03167f024e1c492bc15609a5125924e67e792a203a4f550a353426fad01a2c6d5ff97660405160405180910390a4610984565b600654600460ff909116106108995760405162461bcd60e51b81526004018080602001828103825260218152602001806116106021913960400191505060405180910390fd5b6108cb6108be60646108b286600a63ffffffff610e8e16565b9063ffffffff610ee716565b849063ffffffff610c6016565b821180156108fd57506108fa6108ed60646108b286600a63ffffffff610e8e16565b849063ffffffff610d5c16565b82105b61094e576040805162461bcd60e51b815260206004820152601c60248201527f43616e2774206368616e6765206d6f7265207468616e202d2b31302500000000604482015290519081900360640190fd5b6109578261057d565b60075461096b90600163ffffffff610c6016565b6006805460ff8082166001011660ff1990911617905590505b949350505050565b60006007828154811061099b57fe5b90600052602060002001549050919050565b6109b86103b8610ca9565b6109f35760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600881905580610a01610ca9565b6001600160a01b03167f16c752bdf6502cc829c9a81132e2e73aeb12d145e0e3b1cd632a9759485a5f5360405160405180910390a350565b6000610a43610457565b610a87576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b60085442118015610a99575060095442105b610aea576040805162461bcd60e51b815260206004820152601c60248201527f546865206d61726b657420697320636c6f736520666f72657665722e00000000604482015290519081900360640190fd5b610afb610af5610ca9565b83610f29565b506001919050565b610b0e6103b8610ca9565b610b495760405162461bcd60e51b815260040180806020018281038252602e815260200180611705602e913960400191505060405180910390fd5b600981905580610b57610ca9565b6001600160a01b03167f9cd0f0f4c626f6284b893eff5aa9a5f50e76b4fa9811bf3ec86ac52cc6ed782760405160405180910390a350565b6000610b99610457565b610bdd576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b60085442118015610bef575060095442105b610c40576040805162461bcd60e51b815260206004820152601c60248201527f546865206d61726b657420697320636c6f736520666f72657665722e00000000604482015290519081900360640190fd5b610afb610c4b610ca9565b83611125565b6003546001600160a01b031681565b6000610ca283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112e1565b9392505050565b3390565b60006001600160a01b038216610cf45760405162461bcd60e51b81526004018080602001828103825260228152602001806116e36022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610d2560008263ffffffff61137816565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b600082820183811015610ca2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b610dc760018263ffffffff6113df16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b610e0f60008263ffffffff6113df16565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b610e5760018263ffffffff61137816565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b600082610e9d5750600061042c565b82820282848281610eaa57fe5b0414610ca25760405162461bcd60e51b81526004018080602001828103825260218152602001806116c26021913960400191505060405180910390fd5b6000610ca283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611460565b6001600160a01b038216610f84576040805162461bcd60e51b815260206004820152601d60248201527f526563697069656e7420697320746865207a65726f2061646472657373000000604482015290519081900360640190fd5b600354600b546001600160a01b03918216916323b872dd91859116610faa8560016114c5565b6040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561101257600080fd5b505af1158015611026573d6000803e3d6000fd5b505050506040513d602081101561103c57600080fd5b5050600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561109457600080fd5b505af11580156110a8573d6000803e3d6000fd5b505050506040513d60208110156110be57600080fd5b5050600780546110d590600163ffffffff610c6016565b815481106110df57fe5b906000526020600020015481836001600160a01b03167f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed60405160405180910390a45050565b6001600160a01b038216611180576040805162461bcd60e51b815260206004820152601a60248201527f53656c6c657220697320746865207a65726f2061646472657373000000000000604482015290519081900360640190fd5b6002546040805163079cc67960e41b81526001600160a01b03858116600483015260248201859052915191909216916379cc679091604480830192600092919082900301818387803b1580156111d557600080fd5b505af11580156111e9573d6000803e3d6000fd5b50506003546001600160a01b031691506340c10f1990508361120c8460006114c5565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561125b57600080fd5b505af115801561126f573d6000803e3d6000fd5b505050506040513d602081101561128557600080fd5b50506007805461129c90600163ffffffff610c6016565b815481106112a657fe5b60009182526020822001546040519091839130917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91a45050565b600081848411156113705760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561133557818101518382015260200161131d565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6113828282610cad565b6113bd5760405162461bcd60e51b81526004018080602001828103825260218152602001806116616021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6113e98282610cad565b1561143b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081836114af5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561133557818101518382015260200161131d565b5060008385816114bb57fe5b0495945050505050565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561151657600080fd5b505afa15801561152a573d6000803e3d6000fd5b505050506040513d602081101561154057600080fd5b505160ff16905082156115c4576115bc6115676103e86108b287600263ffffffff610e8e16565b6115b083600a0a6108b2600761158c6001600780549050610c6090919063ffffffff16565b8154811061159657fe5b906000526020600020015489610e8e90919063ffffffff16565b9063ffffffff610d5c16565b91505061042c565b6115bc6115de6103e86108b287600263ffffffff610e8e16565b61160383600a0a6108b2600761158c6001600780549050610c6090919063ffffffff16565b9063ffffffff610c601656fe416c72656164792063616c6c7320342074696d65732074686973206e696768742e42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a7231582052ee5f43dbe587863c8a80ab52ae57cef7cc04f1031beeacfde780e3314918d364736f6c63430005110032",
  "deployedSourceMap": "169:5853:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:5853:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3968:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5518:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5518:110:16;-1:-1:-1;;;;;5518:110:16;;:::i;:::-;;596:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;596:107:10;-1:-1:-1;;;;;596:107:10;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;805:77:10:-;;;:::i;3579:111:16:-;;;:::i;3696:266::-;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;4259:95:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4259:95:16;;:::i;709:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;709:90:10;-1:-1:-1;;;;;709:90:10;;:::i;791:75:9:-;;;:::i;5638:117:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5638:117:16;-1:-1:-1;;;;;5638:117:16;;:::i;4360:1113::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4360:1113:16;;:::i;:::-;;;;;;;;;;;;;;;;4129:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4129:124:16;;:::i;5765:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5765:129:16;;:::i;1697:317::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1697:317:16;;:::i;5900:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5900:117:16;;:::i;2020:319::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2020:319:16;;:::i;317:25::-;;;:::i;:::-;;;;-1:-1:-1;;;;;317:25:16;;;;;;;;;;;;;;3968:155;4047:12;:19;4012:7;;;;4047:26;;4071:1;4047:26;:23;:26;:::i;:::-;4075:12;4088:19;;:26;;4112:1;4088:26;:23;:26;:::i;:::-;4075:40;;;;;;;;;;;;;;;;4039:77;;;;3968:155;;:::o;5518:110::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:5:16;:33;;-1:-1:-1;;;;;;5587:33:16;-1:-1:-1;;;;;5587:33:16;;;;;;;;;;5518:110::o;596:107:10:-;652:4;675:21;652:4;688:7;675:21;:12;:21;:::i;:::-;668:28;596:107;-1:-1:-1;;596:107:10:o;587:105:9:-;642:4;665:20;:7;677;665:20;:11;:20;:::i;805:77:10:-;848:27;862:12;:10;:12::i;:::-;848:13;:27::i;:::-;805:77::o;3579:111:16:-;3618:4;3648:12;;3641:3;:19;;:42;;;;;3671:12;;3664:3;:19;;3641:42;3634:49;;3579:111;:::o;3696:266::-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3771:12:16;;3756;;:27;3748:104;;;;-1:-1:-1;;;3748:104:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:12;;:26;;3894:8;3877:26;:16;:26;:::i;:::-;3862:12;:41;;;3929:25;;3946:7;3929:25;:16;:25;:::i;:::-;3914:12;:40;3696:266::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;4259:95:16:-;497:22:10;506:12;:10;:12::i;:::-;497:8;:22::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4322:12:16;27:10:-1;;39:1;23:18;;45:23;;-1:-1;4322:24:16;;;;;;;4259:95::o;709:90:10:-;497:22;506:12;:10;:12::i;497:22::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;773:10;:19::i;791:75:9:-;833:26;846:12;:10;:12::i;:::-;833;:26::i;5638:117:16:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5711:7:16;:36;;-1:-1:-1;;;;;;5711:36:16;-1:-1:-1;;;;;5711:36:16;;;;;;;;;;5638:117::o;4360:1113::-;4428:7;497:22:10;506:12;:10;:12::i;497:22::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4468:12:16;4481:19;;4447:18;;4468:12;4481:26;;4505:1;4481:26;:23;:26;:::i;:::-;4468:40;;;;;;;;;;;;;;;;;;-1:-1:-1;4538:32:16;;;;4623:13;;;4614:50;;;;;-1:-1:-1;;;4614:50:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:21;4696:12;:10;:12::i;4688:21::-;4684:751;;;4733:8;:6;:8::i;:::-;4725:37;;;;;-1:-1:-1;;;4725:37:16;;;;;;;;;;;;-1:-1:-1;;;4725:37:16;;;;;;;;;;;;;;;4790:30;4809:9;4790:10;:30::i;:::-;4850:12;:19;:26;;4874:1;4850:26;:23;:26;:::i;:::-;4834:42;;4957:9;4934:13;4920:12;:10;:12::i;:::-;-1:-1:-1;;;;;4908:60:16;;;;;;;;;;;4684:751;;;5015:15;;5033:1;5015:15;;;;:19;5007:65;;;;-1:-1:-1;;;5007:65:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5117:43;5132:27;5155:3;5132:18;:10;5147:2;5132:18;:14;:18;:::i;:::-;:22;:27;:22;:27;:::i;:::-;5117:10;;:43;:14;:43;:::i;:::-;5104:9;5096:64;:132;;;;-1:-1:-1;5185:43:16;5200:27;5223:3;5200:18;:10;5215:2;5200:18;:14;:18;:::i;:27::-;5185:10;;:43;:14;:43;:::i;:::-;5172:9;5164:64;5096:132;5087:175;;;;;-1:-1:-1;;;5087:175:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:30;5309:9;5290:10;:30::i;:::-;5350:12;:19;:26;;5374:1;5350:26;:23;:26;:::i;:::-;5403:15;:20;;;;;;5422:1;5403:20;;-1:-1:-1;;5403:20:16;;;;;;5334:42;-1:-1:-1;4684:751:16;5452:13;4360:1113;-1:-1:-1;;;;4360:1113:16:o;4129:124::-;4190:7;4215:12;4228:8;4215:22;;;;;;;;;;;;;;;;4208:29;;4129:124;;;:::o;5765:129::-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5828:6:16;:14;;;5837:5;5867:12;:10;:12::i;:::-;-1:-1:-1;;;;;5855:32:16;;;;;;;;;;;5765:129;:::o;1697:317::-;1763:4;1224:8;:6;:8::i;:::-;1216:37;;;;;-1:-1:-1;;;1216:37:16;;;;;;;;;;;;-1:-1:-1;;;1216:37:16;;;;;;;;;;;;;;;1793:6;;1787:3;:12;:26;;;;;1809:4;;1803:3;:10;1787:26;1778:69;;;;;-1:-1:-1;;;1778:69:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:31;1959:12;:10;:12::i;:::-;1973:11;1954:4;:31::i;:::-;-1:-1:-1;2003:4:16;1697:317;;;:::o;5900:117::-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5959:4:16;:10;;;5966:3;5992:12;:10;:12::i;:::-;-1:-1:-1;;;;;5982:28:16;;;;;;;;;;;5900:117;:::o;2020:319::-;2087:4;1224:8;:6;:8::i;:::-;1216:37;;;;;-1:-1:-1;;;1216:37:16;;;;;;;;;;;;-1:-1:-1;;;1216:37:16;;;;;;;;;;;;;;;2117:6;;2111:3;:12;:26;;;;;2133:4;;2127:3;:10;2111:26;2102:69;;;;;-1:-1:-1;;;2102:69:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:32;2284:12;:10;:12::i;:::-;2298:11;2278:5;:32::i;317:25::-;;;-1:-1:-1;;;;;317:25:16;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:3:o;788:96:0:-;867:10;788:96;:::o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;1013:127:10:-;1072:24;:8;1088:7;1072:24;:15;:24;:::i;:::-;1111:22;;-1:-1:-1;;;;;1111:22:10;;;;;;;;1013:127;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;872:116:9;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;888:119:10:-;944:21;:8;957:7;944:21;:12;:21;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;994:124:9:-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;2159:459:3:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;2345:338:16:-;-1:-1:-1;;;;;2421:23:16;;2413:65;;;;;-1:-1:-1;;;2413:65:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:7;;2521:12;;-1:-1:-1;;;;;2489:7:16;;;;:20;;2510:9;;2521:12;2535:20;2542:6;2489:7;2535:6;:20::i;:::-;2489:67;;;;;;;;;;;;;-1:-1:-1;;;;;2489:67:16;-1:-1:-1;;;;;2489:67:16;;;;;;-1:-1:-1;;;;;2489:67:16;-1:-1:-1;;;;;2489:67:16;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2489:67:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2489:67:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2567:5:16;;:29;;;-1:-1:-1;;;2567:29:16;;-1:-1:-1;;;;;2567:29:16;;;;;;;;;;;;;;;:5;;;;;:10;;:29;;;;;2489:67;;2567:29;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:29:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:29:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2635:12:16;2648:19;;:26;;2672:1;2648:26;:23;:26;:::i;:::-;2635:40;;;;;;;;;;;;;;;;2627:6;2616:9;-1:-1:-1;;;;;2612:64:16;;;;;;;;;;;2345:338;;:::o;2689:407::-;-1:-1:-1;;;;;2858:20:16;;2850:59;;;;;-1:-1:-1;;;2850:59:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2920:5;;:30;;;-1:-1:-1;;;2920:30:16;;-1:-1:-1;;;;;2920:30:16;;;;;;;;;;;;;;;:5;;;;;:14;;:30;;;;;:5;;:30;;;;;;;:5;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2920:30:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2961:7:16;;-1:-1:-1;;;;;2961:7:16;;-1:-1:-1;2961:12:16;;-1:-1:-1;2974:6:16;2982:21;2989:6;2961:7;2982:6;:21::i;:::-;2961:43;;;;;;;;;;;;;-1:-1:-1;;;;;2961:43:16;-1:-1:-1;;;;;2961:43:16;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2961:43:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2961:43:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3048:12:16;3061:19;;:26;;3085:1;3061:26;:23;:26;:::i;:::-;3048:40;;;;;;;;;;;;;;;;;3020:69;;3048:40;;3040:6;;3033:4;;3020:69;;;2689:407;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;510:180:1:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;3718:338:3:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:3;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:3:o;3102:471:16:-;3166:7;3238:11;3260:5;;;;;;;;;-1:-1:-1;;;;;3260:5:16;-1:-1:-1;;;;;3260:14:16;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3260:16:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3260:16:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3260:16:16;3252:25;;;-1:-1:-1;3288:278:16;;;;3322:94;3392:23;3410:4;3392:13;:6;3403:1;3392:13;:10;:13;:::i;:23::-;3322:65;3383:3;3379:2;:7;3322:52;3333:12;3346:26;3370:1;3346:12;:19;;;;:23;;:26;;;;:::i;:::-;3333:40;;;;;;;;;;;;;;;;3322:6;:10;;:52;;;;:::i;:65::-;:69;:94;:69;:94;:::i;:::-;3315:101;;;;;3288:278;3461:94;3531:23;3549:4;3531:13;:6;3542:1;3531:13;:10;:13;:::i;:23::-;3461:65;3522:3;3518:2;:7;3461:52;3472:12;3485:26;3509:1;3485:12;:19;;;;:23;;:26;;;;:::i;3461:65::-;:69;:94;:69;:94;:::i",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    169,
    6022
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x836CAE65 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1D5190C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1D5190C EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE37BDDC3 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xFFB4E075 EQ PUSH2 0x33E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x836CAE65 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x9F986FBB EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA9671193 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xC8691B2A EQ PUSH2 0x2AD JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x431E5C9D GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x431E5C9D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4F15E62E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x761909D0 EQ PUSH2 0x20D JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x22B31D9F EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x432 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x445 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x457 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x472 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52B JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x16D PUSH2 0x64C JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x65C JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x98C JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x346 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x37B SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x390 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x39A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xCAD AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xCAD AND JUMP JUMPDEST PUSH2 0x455 PUSH2 0x450 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI POP PUSH1 0x5 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47D PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD LT PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1682 PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x50F SWAP1 PUSH2 0xD2F0 PUSH4 0xFFFFFFFF PUSH2 0xD5C AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH2 0x526 SWAP1 PUSH2 0x7E90 PUSH4 0xFFFFFFFF PUSH2 0xD5C AND JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x536 PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57A DUP2 PUSH2 0xDB6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x58D PUSH2 0x588 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1631 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SSTORE JUMP JUMPDEST PUSH2 0x608 PUSH2 0x588 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1631 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57A DUP2 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x455 PUSH2 0x657 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x667 PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D1 PUSH2 0x588 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1631 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x725 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x72F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD SWAP2 POP DUP4 DUP3 ADD SWAP1 DUP1 DUP3 SGT PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D75737420626520706F73697469766521000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x79F PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST ISZERO PUSH2 0x853 JUMPI PUSH2 0x7AC PUSH2 0x457 JUMP JUMPDEST PUSH2 0x7F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x7F9 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x80D SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x819 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x24E1C492BC15609A5125924E67E792A203A4F550A353426FAD01A2C6D5FF976 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x984 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1610 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB PUSH2 0x8BE PUSH1 0x64 PUSH2 0x8B2 DUP7 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0xE8E AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEE7 AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST DUP3 GT DUP1 ISZERO PUSH2 0x8FD JUMPI POP PUSH2 0x8FA PUSH2 0x8ED PUSH1 0x64 PUSH2 0x8B2 DUP7 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0xE8E AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD5C AND JUMP JUMPDEST DUP3 LT JUMPDEST PUSH2 0x94E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206368616E6765206D6F7265207468616E202D2B31302500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x957 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x96B SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x1 ADD AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE DUP1 PUSH2 0xA01 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x16C752BDF6502CC829C9A81132E2E73AEB12D145E0E3B1CD632A9759485A5F53 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA43 PUSH2 0x457 JUMP JUMPDEST PUSH2 0xA87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xA99 JUMPI POP PUSH1 0x9 SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xAEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D61726B657420697320636C6F736520666F72657665722E00000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAFB PUSH2 0xAF5 PUSH2 0xCA9 JUMP JUMPDEST DUP4 PUSH2 0xF29 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0E PUSH2 0x3B8 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1705 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE DUP1 PUSH2 0xB57 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9CD0F0F4C626F6284B893EFF5AA9A5F50E76B4FA9811BF3EC86AC52CC6ED7827 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB99 PUSH2 0x457 JUMP JUMPDEST PUSH2 0xBDD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xBEF JUMPI POP PUSH1 0x9 SLOAD TIMESTAMP LT JUMPDEST PUSH2 0xC40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D61726B657420697320636C6F736520666F72657665722E00000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAFB PUSH2 0xC4B PUSH2 0xCA9 JUMP JUMPDEST DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16E3 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD25 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1378 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xDC7 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13DF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xE0F PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13DF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xE57 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1378 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE9D JUMPI POP PUSH1 0x0 PUSH2 0x42C JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xEAA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16C2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E7420697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 DUP6 SWAP2 AND PUSH2 0xFAA DUP6 PUSH1 0x1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1026 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x103C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH2 0x10D5 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x10DF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1180 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C657220697320746865207A65726F2061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x40C10F19 SWAP1 POP DUP4 PUSH2 0x120C DUP5 PUSH1 0x0 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH2 0x129C SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x12A6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 SWAP2 ADDRESS SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1335 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x131D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1362 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x1382 DUP3 DUP3 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1661 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x13E9 DUP3 DUP3 PUSH2 0xCAD JUMP JUMPDEST ISZERO PUSH2 0x143B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1335 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x131D JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x14BB JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND SWAP1 POP DUP3 ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15BC PUSH2 0x1567 PUSH2 0x3E8 PUSH2 0x8B2 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xE8E AND JUMP JUMPDEST PUSH2 0x15B0 DUP4 PUSH1 0xA EXP PUSH2 0x8B2 PUSH1 0x7 PUSH2 0x158C PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xC60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1596 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xE8E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD5C AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST PUSH2 0x15BC PUSH2 0x15DE PUSH2 0x3E8 PUSH2 0x8B2 DUP8 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xE8E AND JUMP JUMPDEST PUSH2 0x1603 DUP4 PUSH1 0xA EXP PUSH2 0x8B2 PUSH1 0x7 PUSH2 0x158C PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xC60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC60 AND JUMP INVALID COINBASE PUSH13 0x72656164792063616C6C732034 KECCAK256 PUSH21 0x696D65732074686973206E696768742E42726F6B65 PUSH19 0x526F6C653A2063616C6C657220646F6573206E PUSH16 0x742068617665207468652042726F6B65 PUSH19 0x20726F6C65526F6C65733A206163636F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65536F6D6574 PUSH9 0x696E6727732077726F PUSH15 0x672C206D6179626520796F75207365 PUSH21 0x2074686520696E697469616C205F6F70656E696E67 PUSH21 0x696D652077726F6E672E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7752 PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F206164647265737341646D696E52 PUSH16 0x6C653A2063616C6C657220646F657320 PUSH15 0x6F742068617665207468652041646D PUSH10 0x6E20726F6C65A265627A PUSH27 0x7231582052EE5F43DBE587863C8A80AB52AE57CEF7CC04F1031BEE 0xAC REVERT 0xE7 DUP1 0xE3 BALANCE 0x49 XOR 0xD3 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        6022
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        169,
        6022
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x121"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x836CAE65"
    },
    "38": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD1D5190C"
    },
    "49": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD1D5190C"
    },
    "60": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CA"
    },
    "64": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD96A094A"
    },
    "71": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E7"
    },
    "75": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE37BDDC3"
    },
    "82": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x304"
    },
    "86": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE4849B32"
    },
    "93": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x321"
    },
    "97": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFB4E075"
    },
    "104": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "105": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33E"
    },
    "108": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x121"
    },
    "112": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMP",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x836CAE65"
    },
    "120": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22A"
    },
    "124": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8BAD0C0A"
    },
    "131": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x250"
    },
    "135": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9F986FBB"
    },
    "142": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x258"
    },
    "146": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "148": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9671193"
    },
    "153": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "154": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27E"
    },
    "157": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "158": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC8691B2A"
    },
    "164": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "165": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AD"
    },
    "168": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "169": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x121"
    },
    "172": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMP",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x431E5C9D"
    },
    "180": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "GT",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x431E5C9D"
    },
    "191": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CF"
    },
    "195": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x47535D7B"
    },
    "202": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D7"
    },
    "206": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F15E62E"
    },
    "213": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "214": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF"
    },
    "217": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "218": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70480275"
    },
    "224": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "225": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E7"
    },
    "228": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "229": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x761909D0"
    },
    "235": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "236": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20D"
    },
    "239": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "240": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x121"
    },
    "243": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMP",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "245": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "246": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x53F14DA"
    },
    "251": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "252": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x126"
    },
    "255": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "256": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x144FA6D7"
    },
    "262": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "263": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x147"
    },
    "266": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "267": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x22B31D9F"
    },
    "273": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "274": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F"
    },
    "277": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "278": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "279": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x24D7806C"
    },
    "284": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "EQ",
      "path": "16"
    },
    "285": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A9"
    },
    "288": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "289": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "290": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "first_revert": true,
      "fn": null,
      "offset": [
        169,
        6022
      ],
      "op": "REVERT",
      "path": "16"
    },
    "294": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "295": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12E"
    },
    "298": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x362"
    },
    "301": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        3968,
        4123
      ],
      "op": "JUMP",
      "path": "16"
    },
    "302": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "303": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "305": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "DUP1",
      "path": "16"
    },
    "306": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "307": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "308": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "DUP4",
      "path": "16"
    },
    "309": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "310": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "312": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "DUP4",
      "path": "16"
    },
    "313": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "ADD",
      "path": "16"
    },
    "314": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "315": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "316": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "317": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "318": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "DUP1",
      "path": "16"
    },
    "319": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "320": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "321": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "DUP3",
      "path": "16"
    },
    "322": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "323": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SUB",
      "path": "16"
    },
    "324": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "ADD",
      "path": "16"
    },
    "325": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "326": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "RETURN",
      "path": "16"
    },
    "327": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "328": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D"
    },
    "331": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "333": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "DUP1",
      "path": "16"
    },
    "334": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "335": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "SUB",
      "path": "16"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "338": {
      "op": "DUP2"
    },
    "339": {
      "op": "LT"
    },
    "340": {
      "op": "ISZERO"
    },
    "341": {
      "op": "PUSH2",
      "value": "0x15D"
    },
    "344": {
      "op": "JUMPI"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "347": {
      "op": "DUP1"
    },
    "348": {
      "op": "REVERT"
    },
    "349": {
      "op": "JUMPDEST"
    },
    "350": {
      "op": "POP"
    },
    "351": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "358": {
      "op": "SHL"
    },
    "359": {
      "op": "SUB"
    },
    "360": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "AND",
      "path": "16"
    },
    "361": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AD"
    },
    "364": {
      "fn": "token_exchange.setToken",
      "jump": "i",
      "offset": [
        5518,
        5628
      ],
      "op": "JUMP",
      "path": "16"
    },
    "365": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "366": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "STOP",
      "path": "16"
    },
    "367": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "368": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x195"
    },
    "371": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "373": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "374": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "375": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "LT"
    },
    "380": {
      "op": "ISZERO"
    },
    "381": {
      "op": "PUSH2",
      "value": "0x185"
    },
    "384": {
      "op": "JUMPI"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "387": {
      "op": "DUP1"
    },
    "388": {
      "op": "REVERT"
    },
    "389": {
      "op": "JUMPDEST"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "AND",
      "path": "10"
    },
    "401": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41A"
    },
    "404": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "405": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "406": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "408": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "409": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "410": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "411": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "412": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "413": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP3",
      "path": "10"
    },
    "414": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "415": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "416": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "417": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP2",
      "path": "10"
    },
    "418": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "419": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "420": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "422": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ADD",
      "path": "10"
    },
    "423": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "424": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "RETURN",
      "path": "10"
    },
    "425": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "426": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x195"
    },
    "429": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "431": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "432": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "433": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "436": {
      "op": "DUP2"
    },
    "437": {
      "op": "LT"
    },
    "438": {
      "op": "ISZERO"
    },
    "439": {
      "op": "PUSH2",
      "value": "0x1BF"
    },
    "442": {
      "op": "JUMPI"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "445": {
      "op": "DUP1"
    },
    "446": {
      "op": "REVERT"
    },
    "447": {
      "op": "JUMPDEST"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "SUB"
    },
    "458": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "459": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x432"
    },
    "462": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "463": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "464": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16D"
    },
    "467": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x445"
    },
    "470": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "471": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3579,
        3690
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "472": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3579,
        3690
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195"
    },
    "475": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3579,
        3690
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x457"
    },
    "478": {
      "fn": "token_exchange.isOpen",
      "jump": "i",
      "offset": [
        3579,
        3690
      ],
      "op": "JUMP",
      "path": "16"
    },
    "479": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3696,
        3962
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "480": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3696,
        3962
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D"
    },
    "483": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3696,
        3962
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x472"
    },
    "486": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3696,
        3962
      ],
      "op": "JUMP",
      "path": "16"
    },
    "487": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "488": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16D"
    },
    "491": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "493": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "494": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "495": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "498": {
      "op": "DUP2"
    },
    "499": {
      "op": "LT"
    },
    "500": {
      "op": "ISZERO"
    },
    "501": {
      "op": "PUSH2",
      "value": "0x1FD"
    },
    "504": {
      "op": "JUMPI"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "507": {
      "op": "DUP1"
    },
    "508": {
      "op": "REVERT"
    },
    "509": {
      "op": "JUMPDEST"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "op": "SUB"
    },
    "520": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "521": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x52B"
    },
    "524": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "525": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "526": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D"
    },
    "529": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "531": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "DUP1",
      "path": "16"
    },
    "532": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "533": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "SUB",
      "path": "16"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "DUP2"
    },
    "537": {
      "op": "LT"
    },
    "538": {
      "op": "ISZERO"
    },
    "539": {
      "op": "PUSH2",
      "value": "0x223"
    },
    "542": {
      "op": "JUMPI"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "545": {
      "op": "DUP1"
    },
    "546": {
      "op": "REVERT"
    },
    "547": {
      "op": "JUMPDEST"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "550": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57D"
    },
    "553": {
      "fn": "token_exchange.setHistory",
      "jump": "i",
      "offset": [
        4259,
        4354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "554": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "555": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16D"
    },
    "558": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "560": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "DUP1",
      "path": "10"
    },
    "561": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "562": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "SUB",
      "path": "10"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "565": {
      "op": "DUP2"
    },
    "566": {
      "op": "LT"
    },
    "567": {
      "op": "ISZERO"
    },
    "568": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "571": {
      "op": "JUMPI"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "574": {
      "op": "DUP1"
    },
    "575": {
      "op": "REVERT"
    },
    "576": {
      "op": "JUMPDEST"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "AND",
      "path": "10"
    },
    "588": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5FD"
    },
    "591": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        709,
        799
      ],
      "op": "JUMP",
      "path": "10"
    },
    "592": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "593": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16D"
    },
    "596": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64C"
    },
    "599": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "600": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "601": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D"
    },
    "604": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "606": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "DUP1",
      "path": "16"
    },
    "607": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "608": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "SUB",
      "path": "16"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "611": {
      "op": "DUP2"
    },
    "612": {
      "op": "LT"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "PUSH2",
      "value": "0x26E"
    },
    "617": {
      "op": "JUMPI"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "620": {
      "op": "DUP1"
    },
    "621": {
      "op": "REVERT"
    },
    "622": {
      "op": "JUMPDEST"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "631": {
      "op": "SHL"
    },
    "632": {
      "op": "SUB"
    },
    "633": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "AND",
      "path": "16"
    },
    "634": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x65C"
    },
    "637": {
      "fn": "token_exchange.setPayCoin",
      "jump": "i",
      "offset": [
        5638,
        5755
      ],
      "op": "JUMP",
      "path": "16"
    },
    "638": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "639": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29B"
    },
    "642": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "644": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "DUP1",
      "path": "16"
    },
    "645": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "646": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SUB",
      "path": "16"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "649": {
      "op": "DUP2"
    },
    "650": {
      "op": "LT"
    },
    "651": {
      "op": "ISZERO"
    },
    "652": {
      "op": "PUSH2",
      "value": "0x294"
    },
    "655": {
      "op": "JUMPI"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "658": {
      "op": "DUP1"
    },
    "659": {
      "op": "REVERT"
    },
    "660": {
      "op": "JUMPDEST"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "663": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C4"
    },
    "666": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4360,
        5473
      ],
      "op": "JUMP",
      "path": "16"
    },
    "667": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "668": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "670": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "DUP1",
      "path": "16"
    },
    "671": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "672": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "673": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "DUP3",
      "path": "16"
    },
    "674": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "675": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "676": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "677": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "DUP2",
      "path": "16"
    },
    "678": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "679": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SUB",
      "path": "16"
    },
    "680": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "682": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "ADD",
      "path": "16"
    },
    "683": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "684": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "RETURN",
      "path": "16"
    },
    "685": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "686": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29B"
    },
    "689": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "691": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "DUP1",
      "path": "16"
    },
    "692": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "693": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "SUB",
      "path": "16"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "696": {
      "op": "DUP2"
    },
    "697": {
      "op": "LT"
    },
    "698": {
      "op": "ISZERO"
    },
    "699": {
      "op": "PUSH2",
      "value": "0x2C3"
    },
    "702": {
      "op": "JUMPI"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "705": {
      "op": "DUP1"
    },
    "706": {
      "op": "REVERT"
    },
    "707": {
      "op": "JUMPDEST"
    },
    "708": {
      "op": "POP"
    },
    "709": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "710": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98C"
    },
    "713": {
      "fn": "token_exchange.getHistory",
      "jump": "i",
      "offset": [
        4129,
        4253
      ],
      "op": "JUMP",
      "path": "16"
    },
    "714": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "715": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D"
    },
    "718": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "720": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "DUP1",
      "path": "16"
    },
    "721": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "722": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "SUB",
      "path": "16"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "725": {
      "op": "DUP2"
    },
    "726": {
      "op": "LT"
    },
    "727": {
      "op": "ISZERO"
    },
    "728": {
      "op": "PUSH2",
      "value": "0x2E0"
    },
    "731": {
      "op": "JUMPI"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "734": {
      "op": "DUP1"
    },
    "735": {
      "op": "REVERT"
    },
    "736": {
      "op": "JUMPDEST"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "739": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9AD"
    },
    "742": {
      "fn": "token_exchange.changeStart",
      "jump": "i",
      "offset": [
        5765,
        5894
      ],
      "op": "JUMP",
      "path": "16"
    },
    "743": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "744": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195"
    },
    "747": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "749": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "DUP1",
      "path": "16"
    },
    "750": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "751": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "SUB",
      "path": "16"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "754": {
      "op": "DUP2"
    },
    "755": {
      "op": "LT"
    },
    "756": {
      "op": "ISZERO"
    },
    "757": {
      "op": "PUSH2",
      "value": "0x2FD"
    },
    "760": {
      "op": "JUMPI"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "763": {
      "op": "DUP1"
    },
    "764": {
      "op": "REVERT"
    },
    "765": {
      "op": "JUMPDEST"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "768": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA39"
    },
    "771": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1697,
        2014
      ],
      "op": "JUMP",
      "path": "16"
    },
    "772": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "773": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D"
    },
    "776": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "778": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "DUP1",
      "path": "16"
    },
    "779": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "780": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "SUB",
      "path": "16"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "783": {
      "op": "DUP2"
    },
    "784": {
      "op": "LT"
    },
    "785": {
      "op": "ISZERO"
    },
    "786": {
      "op": "PUSH2",
      "value": "0x31A"
    },
    "789": {
      "op": "JUMPI"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "792": {
      "op": "DUP1"
    },
    "793": {
      "op": "REVERT"
    },
    "794": {
      "op": "JUMPDEST"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "797": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB03"
    },
    "800": {
      "fn": "token_exchange.changeEnd",
      "jump": "i",
      "offset": [
        5900,
        6017
      ],
      "op": "JUMP",
      "path": "16"
    },
    "801": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "802": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195"
    },
    "805": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "807": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "DUP1",
      "path": "16"
    },
    "808": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "809": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "SUB",
      "path": "16"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "812": {
      "op": "DUP2"
    },
    "813": {
      "op": "LT"
    },
    "814": {
      "op": "ISZERO"
    },
    "815": {
      "op": "PUSH2",
      "value": "0x337"
    },
    "818": {
      "op": "JUMPI"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "821": {
      "op": "DUP1"
    },
    "822": {
      "op": "REVERT"
    },
    "823": {
      "op": "JUMPDEST"
    },
    "824": {
      "op": "POP"
    },
    "825": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "826": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB8F"
    },
    "829": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2020,
        2339
      ],
      "op": "JUMP",
      "path": "16"
    },
    "830": {
      "offset": [
        317,
        342
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "831": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x346"
    },
    "834": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC51"
    },
    "837": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        317,
        342
      ],
      "op": "JUMP",
      "path": "16"
    },
    "838": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "839": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "841": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "DUP1",
      "path": "16"
    },
    "842": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "SUB"
    },
    "851": {
      "offset": [
        317,
        342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "852": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "853": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "AND",
      "path": "16"
    },
    "854": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "DUP3",
      "path": "16"
    },
    "855": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "856": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "857": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "858": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "DUP2",
      "path": "16"
    },
    "859": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "860": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "SUB",
      "path": "16"
    },
    "861": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "863": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "ADD",
      "path": "16"
    },
    "864": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "865": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "RETURN",
      "path": "16"
    },
    "866": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "867": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4059
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x7"
    },
    "869": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4066
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "870": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4012,
        4019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "872": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4012,
        4019
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "873": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4012,
        4019
      ],
      "op": "DUP2",
      "path": "16"
    },
    "874": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4012,
        4019
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "875": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4073
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37B"
    },
    "878": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4073
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "879": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4071,
        4072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "881": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4073
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "886": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4070
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "889": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4073
      ],
      "op": "AND",
      "path": "16"
    },
    "890": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4047,
        4073
      ],
      "op": "JUMP",
      "path": "16"
    },
    "891": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4047,
        4073
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "892": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4087
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "894": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4107
      ],
      "op": "DUP1",
      "path": "16"
    },
    "895": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4107
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "896": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x390"
    },
    "899": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4114
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "900": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4112,
        4113
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "902": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4114
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "907": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4111
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "910": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4114
      ],
      "op": "AND",
      "path": "16"
    },
    "911": {
      "fn": "token_exchange.lastPrice",
      "jump": "i",
      "offset": [
        4088,
        4114
      ],
      "op": "JUMP",
      "path": "16"
    },
    "912": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4088,
        4114
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "913": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "DUP2",
      "path": "16"
    },
    "914": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "915": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "DUP2",
      "path": "16"
    },
    "916": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "LT",
      "path": "16"
    },
    "917": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39A"
    },
    "920": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "921": {
      "dev": "Index out of range",
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "INVALID",
      "path": "16"
    },
    "922": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "923": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "924": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "926": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "927": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "929": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "931": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "932": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "ADD",
      "path": "16"
    },
    "933": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4075,
        4115
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "934": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4039,
        4116
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "935": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4039,
        4116
      ],
      "op": "POP",
      "path": "16"
    },
    "936": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4039,
        4116
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "937": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        4039,
        4116
      ],
      "op": "POP",
      "path": "16"
    },
    "938": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "939": {
      "fn": "token_exchange.lastPrice",
      "offset": [
        3968,
        4123
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "940": {
      "fn": "token_exchange.lastPrice",
      "jump": "o",
      "offset": [
        3968,
        4123
      ],
      "op": "JUMP",
      "path": "16"
    },
    "941": {
      "fn": "token_exchange.setToken",
      "offset": [
        5518,
        5628
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "942": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3BD"
    },
    "945": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B8"
    },
    "948": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "951": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "952": {
      "fn": "token_exchange.setToken",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "953": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x432"
    },
    "956": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "957": {
      "fn": "token_exchange.setToken",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "958": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3F8"
    },
    "961": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "962": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "964": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "973": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "974": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "976": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "977": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "978": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "979": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "981": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "982": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "983": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "984": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "985": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "986": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "987": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "989": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "990": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "991": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "993": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "994": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "995": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "998": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1000": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1001": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1002": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1004": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1005": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1006": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1007": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1008": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1010": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1011": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1012": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1013": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1014": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1015": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1016": {
      "fn": "token_exchange.setToken",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1017": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5592
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x2"
    },
    "1019": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1020": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "op": "SUB"
    },
    "1029": {
      "op": "NOT"
    },
    "1030": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "AND",
      "path": "16"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1040": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1041": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1042": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "AND",
      "path": "16"
    },
    "1043": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1044": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1045": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1046": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "OR",
      "path": "16"
    },
    "1047": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1048": {
      "fn": "token_exchange.setToken",
      "offset": [
        5587,
        5620
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1049": {
      "fn": "token_exchange.setToken",
      "jump": "o",
      "offset": [
        5518,
        5628
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1050": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1051": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1053": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 2,
      "value": "0x42C"
    },
    "1056": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1057": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        688,
        695
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1058": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1063": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        687
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCAD"
    },
    "1066": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "AND",
      "path": "10"
    },
    "1067": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        675,
        696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1068": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1069": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        668,
        696
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1070": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "BrokerRole.isBroker",
      "jump": "o",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1074": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1075": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1077": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 3,
      "value": "0x42C"
    },
    "1080": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1082": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1083": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1088": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCAD"
    },
    "1091": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "1092": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1093": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1094": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 4,
      "value": "0x455"
    },
    "1097": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x450"
    },
    "1100": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCA9"
    },
    "1103": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        862,
        874
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1104": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1105": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD14"
    },
    "1108": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        848,
        875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1109": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1110": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "o",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1111": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3579,
        3690
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1112": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3618,
        3622
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1114": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3648,
        3660
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 5,
      "value": "0x4"
    },
    "1116": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3648,
        3660
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1117": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3644
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "1118": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3660
      ],
      "op": "LT",
      "path": "16"
    },
    "1119": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3660
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1120": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3683
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1121": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3683
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1122": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46D"
    },
    "1125": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3683
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1126": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3683
      ],
      "op": "POP",
      "path": "16"
    },
    "1127": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3671,
        3683
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "1129": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3671,
        3683
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1130": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3664,
        3667
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "1131": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3664,
        3683
      ],
      "op": "GT",
      "path": "16"
    },
    "1132": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3664,
        3683
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1133": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3641,
        3683
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1134": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3634,
        3683
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1135": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3634,
        3683
      ],
      "op": "POP",
      "path": "16"
    },
    "1136": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3579,
        3690
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1137": {
      "fn": "token_exchange.isOpen",
      "jump": "o",
      "offset": [
        3579,
        3690
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1138": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3696,
        3962
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1139": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x47D"
    },
    "1142": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B8"
    },
    "1145": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "1148": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1149": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1150": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4B8"
    },
    "1153": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1154": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1156": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1163": {
      "op": "SHL"
    },
    "1164": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1165": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1166": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1168": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1169": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1170": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1171": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1173": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1174": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1175": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1176": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1177": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1178": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1179": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1181": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1182": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1183": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1185": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1186": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1187": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "1190": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1192": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1193": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1194": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1196": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1197": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1198": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1199": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1200": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1202": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1203": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1204": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1205": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1206": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1207": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1208": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1209": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3771,
        3783
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x5"
    },
    "1211": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3771,
        3783
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1212": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3756,
        3768
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1214": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3756,
        3768
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1215": {
      "branch": 67,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3756,
        3783
      ],
      "op": "LT",
      "path": "16"
    },
    "1216": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FA"
    },
    "1219": {
      "branch": 67,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1220": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1222": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1231": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1232": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1234": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1235": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1236": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1237": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1239": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1240": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1241": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1242": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "SUB",
      "path": "16"
    },
    "1243": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1244": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1245": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1247": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1248": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1249": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1251": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1252": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1253": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1682"
    },
    "1256": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1258": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1259": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "1260": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1262": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "ADD",
      "path": "16"
    },
    "1263": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1264": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "POP",
      "path": "16"
    },
    "1265": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "POP",
      "path": "16"
    },
    "1266": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1268": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1269": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1270": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1271": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "SUB",
      "path": "16"
    },
    "1272": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1273": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1274": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3748,
        3852
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1275": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3889
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 7,
      "value": "0x5"
    },
    "1277": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3889
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1278": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3903
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x50F"
    },
    "1281": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3903
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1282": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3894,
        3902
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD2F0"
    },
    "1285": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3903
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "1290": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "1293": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3903
      ],
      "op": "AND",
      "path": "16"
    },
    "1294": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3877,
        3903
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1295": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3877,
        3903
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1296": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3862,
        3874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1298": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3862,
        3903
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1299": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3862,
        3903
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1300": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3862,
        3903
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1301": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3954
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 8,
      "value": "0x526"
    },
    "1304": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3954
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1305": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3946,
        3953
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E90"
    },
    "1308": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3954
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "1313": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3945
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "1316": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3954
      ],
      "op": "AND",
      "path": "16"
    },
    "1317": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3929,
        3954
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1318": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3929,
        3954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1319": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3914,
        3926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "1321": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3914,
        3954
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1322": {
      "fn": "token_exchange.setOpenTime",
      "jump": "o",
      "offset": [
        3696,
        3962
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1323": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1324": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x536"
    },
    "1327": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B8"
    },
    "1330": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "1333": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1334": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1335": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x571"
    },
    "1338": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1339": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1341": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1350": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1351": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1353": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1354": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1355": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1356": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1358": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1359": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1360": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1361": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1362": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1363": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1364": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1366": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1367": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1368": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1370": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1371": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1372": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "1375": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1377": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1378": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1379": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1381": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1382": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1383": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1384": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1385": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1387": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1388": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1389": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1390": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1391": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1392": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1393": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1394": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 9,
      "value": "0x57A"
    },
    "1397": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1398": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDB6"
    },
    "1401": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1402": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1403": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "1404": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1405": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4259,
        4354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1406": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x58D"
    },
    "1409": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x588"
    },
    "1412": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCA9"
    },
    "1415": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1416": {
      "fn": "token_exchange.setHistory",
      "offset": [
        506,
        518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1417": {
      "offset": [
        497,
        505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41A"
    },
    "1420": {
      "jump": "i",
      "offset": [
        497,
        519
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1421": {
      "fn": "token_exchange.setHistory",
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1422": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C8"
    },
    "1425": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1426": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1428": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1435": {
      "op": "SHL"
    },
    "1436": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1437": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1438": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1440": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1441": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1442": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1443": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1445": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1446": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1447": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1448": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1449": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1450": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1451": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1453": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1454": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1455": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1457": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1458": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1459": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1631"
    },
    "1462": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1464": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1465": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1466": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1468": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1469": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1470": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1471": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1472": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1474": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1475": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1476": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1477": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1478": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1479": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1480": {
      "fn": "token_exchange.setHistory",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1481": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4334
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 10,
      "value": "0x7"
    },
    "1483": {
      "op": "DUP1"
    },
    "1484": {
      "op": "SLOAD"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "DUP2"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "DUP3"
    },
    "1490": {
      "op": "SSTORE"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1494": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1495": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1496": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1497": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1530": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "ADD",
      "path": "16"
    },
    "1531": {
      "fn": "token_exchange.setHistory",
      "offset": [
        4322,
        4346
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1532": {
      "fn": "token_exchange.setHistory",
      "jump": "o",
      "offset": [
        4259,
        4354
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1533": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1534": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x608"
    },
    "1537": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x588"
    },
    "1540": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCA9"
    },
    "1543": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1544": {
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1545": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x643"
    },
    "1548": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1549": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1551": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1560": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1561": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1563": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1564": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1565": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1566": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1568": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1569": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1570": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1571": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1572": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1573": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1574": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1576": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1577": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1578": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1580": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1581": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1582": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1631"
    },
    "1585": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1587": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1588": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1589": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1591": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1592": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1593": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1594": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1595": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1597": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1598": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1599": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1600": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1601": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1602": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1603": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1604": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        792
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0x57A"
    },
    "1607": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        784,
        791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1608": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDFE"
    },
    "1611": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        773,
        792
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1612": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1613": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 12,
      "value": "0x455"
    },
    "1616": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x657"
    },
    "1619": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "1622": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1623": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1624": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE46"
    },
    "1627": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1628": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5638,
        5755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1629": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x667"
    },
    "1632": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B8"
    },
    "1635": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "1638": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1639": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1640": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6A2"
    },
    "1643": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1644": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1646": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1655": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1656": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1658": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1659": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1660": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1661": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1663": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1664": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1665": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1666": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1667": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1668": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1669": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1671": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1672": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1673": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1675": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1676": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1677": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "1680": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "1682": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1683": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1684": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1686": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "1687": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1688": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1689": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "1690": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1692": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1693": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1694": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1695": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "1696": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1697": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1698": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1699": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5718
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x3"
    },
    "1701": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1702": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "SUB"
    },
    "1711": {
      "op": "NOT"
    },
    "1712": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "AND",
      "path": "16"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1722": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1723": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1724": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "AND",
      "path": "16"
    },
    "1725": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1726": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1727": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1728": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "OR",
      "path": "16"
    },
    "1729": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1730": {
      "fn": "token_exchange.setPayCoin",
      "offset": [
        5711,
        5747
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1731": {
      "fn": "token_exchange.setPayCoin",
      "jump": "o",
      "offset": [
        5638,
        5755
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1732": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1733": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4428,
        4435
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1735": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6D1"
    },
    "1738": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x588"
    },
    "1741": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCA9"
    },
    "1744": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1745": {
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1746": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70C"
    },
    "1749": {
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1750": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1752": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1761": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1762": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1764": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1765": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1766": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1767": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1769": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1770": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1771": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1772": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1773": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1774": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1775": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1777": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1778": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1779": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1781": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1782": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1783": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1631"
    },
    "1786": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "1788": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1789": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1790": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1792": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "1793": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1794": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1795": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "1796": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1798": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1799": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1800": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1801": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "1802": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1803": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1804": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1805": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1807": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4500
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1808": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4500
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1809": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4447,
        4465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1811": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4447,
        4465
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1812": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4480
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1813": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x725"
    },
    "1816": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4507
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1817": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4505,
        4506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1819": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4507
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "1824": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4504
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "1827": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4507
      ],
      "op": "AND",
      "path": "16"
    },
    "1828": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4481,
        4507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1829": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4481,
        4507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1830": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1831": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1832": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1833": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "LT",
      "path": "16"
    },
    "1834": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x72F"
    },
    "1837": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1838": {
      "dev": "Index out of range",
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "INVALID",
      "path": "16"
    },
    "1839": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1840": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1842": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1843": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1844": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1845": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1847": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1848": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1849": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "ADD",
      "path": "16"
    },
    "1850": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1851": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4468,
        4508
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1852": {
      "op": "POP"
    },
    "1853": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4538,
        4570
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1854": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4538,
        4570
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1855": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4538,
        4570
      ],
      "op": "ADD",
      "path": "16"
    },
    "1856": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4538,
        4570
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1857": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4623,
        4636
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 14
    },
    "1858": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4623,
        4636
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1859": {
      "branch": 68,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4623,
        4636
      ],
      "op": "SGT",
      "path": "16"
    },
    "1860": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x794"
    },
    "1863": {
      "branch": 68,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1864": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1866": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1867": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1874": {
      "op": "SHL"
    },
    "1875": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1876": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1877": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1879": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1881": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1882": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "ADD",
      "path": "16"
    },
    "1883": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1884": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "1886": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1888": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1889": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "ADD",
      "path": "16"
    },
    "1890": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1891": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5072696365206D75737420626520706F73697469766521000000000000000000"
    },
    "1924": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1926": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1927": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "ADD",
      "path": "16"
    },
    "1928": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1929": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1930": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1931": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1932": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1933": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1934": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "SUB",
      "path": "16"
    },
    "1935": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1937": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "ADD",
      "path": "16"
    },
    "1938": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1939": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1940": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4614,
        4664
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1941": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4688,
        4709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x79F"
    },
    "1944": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4696,
        4708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B8"
    },
    "1947": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4696,
        4706
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "1950": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4696,
        4708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1951": {
      "branch": 69,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4688,
        4709
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1952": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1953": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x853"
    },
    "1956": {
      "branch": 69,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1957": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4733,
        4741
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 15,
      "value": "0x7AC"
    },
    "1960": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4733,
        4739
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x457"
    },
    "1963": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4733,
        4741
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1964": {
      "branch": 70,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4733,
        4741
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1965": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F0"
    },
    "1968": {
      "branch": 70,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1969": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1971": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1972": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1981": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1982": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1984": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1986": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1987": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "ADD",
      "path": "16"
    },
    "1988": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1989": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "1991": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1993": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1994": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "ADD",
      "path": "16"
    },
    "1995": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1996": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2018": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2019": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "ADD",
      "path": "16"
    },
    "2020": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2021": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2022": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2023": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2024": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2025": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2026": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "SUB",
      "path": "16"
    },
    "2027": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2029": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "ADD",
      "path": "16"
    },
    "2030": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2031": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2032": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4725,
        4762
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2033": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4790,
        4820
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 16,
      "value": "0x7F9"
    },
    "2036": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4809,
        4818
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2037": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4790,
        4800
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57D"
    },
    "2040": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4790,
        4820
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2041": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4790,
        4820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2042": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4862
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x7"
    },
    "2044": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4869
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2045": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x80D"
    },
    "2048": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2049": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4874,
        4875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2051": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4876
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2056": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "2059": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4876
      ],
      "op": "AND",
      "path": "16"
    },
    "2060": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4850,
        4876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2061": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4850,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2062": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4834,
        4876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2063": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4834,
        4876
      ],
      "op": "POP",
      "path": "16"
    },
    "2064": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4957,
        4966
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 18
    },
    "2065": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4934,
        4947
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2066": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4920,
        4932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x819"
    },
    "2069": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4920,
        4930
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "2072": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        4920,
        4932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2073": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4920,
        4932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2080": {
      "op": "SHL"
    },
    "2081": {
      "op": "SUB"
    },
    "2082": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "AND",
      "path": "16"
    },
    "2083": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x24E1C492BC15609A5125924E67E792A203A4F550A353426FAD01A2C6D5FF976"
    },
    "2116": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2118": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2119": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2121": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2122": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2123": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2124": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "SUB",
      "path": "16"
    },
    "2125": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2126": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4908,
        4968
      ],
      "op": "LOG4",
      "path": "16"
    },
    "2127": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x984"
    },
    "2130": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2131": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2132": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5030
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x6"
    },
    "2134": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5030
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2135": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5033,
        5034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2137": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2139": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5030
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2140": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5030
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2141": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5030
      ],
      "op": "AND",
      "path": "16"
    },
    "2142": {
      "branch": 71,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5015,
        5034
      ],
      "op": "LT",
      "path": "16"
    },
    "2143": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x899"
    },
    "2146": {
      "branch": 71,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2147": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2149": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2150": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2156": {
      "op": "SHL"
    },
    "2157": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2158": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2159": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2161": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "ADD",
      "path": "16"
    },
    "2162": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2163": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2164": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2166": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "ADD",
      "path": "16"
    },
    "2167": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2168": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2169": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "SUB",
      "path": "16"
    },
    "2170": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2171": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2172": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x21"
    },
    "2174": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2175": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2176": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2178": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "ADD",
      "path": "16"
    },
    "2179": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2180": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1610"
    },
    "2183": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x21"
    },
    "2185": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2186": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "2187": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2189": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "ADD",
      "path": "16"
    },
    "2190": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2191": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "POP",
      "path": "16"
    },
    "2192": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "POP",
      "path": "16"
    },
    "2193": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2195": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2196": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2197": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2198": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "SUB",
      "path": "16"
    },
    "2199": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2200": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2201": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5007,
        5072
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2202": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5160
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 20,
      "value": "0x8CB"
    },
    "2205": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BE"
    },
    "2208": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5155,
        5158
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2210": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5150
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B2"
    },
    "2213": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5142
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2214": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5147,
        5149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "2216": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5150
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2221": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8E"
    },
    "2224": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5150
      ],
      "op": "AND",
      "path": "16"
    },
    "2225": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5132,
        5150
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2226": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5150
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2227": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5154
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2228": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5159
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2233": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5154
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEE7"
    },
    "2236": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5159
      ],
      "op": "AND",
      "path": "16"
    },
    "2237": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5132,
        5159
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2238": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5132,
        5159
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2239": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5127
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2240": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5127
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2241": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5160
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2246": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5131
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "2249": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5160
      ],
      "op": "AND",
      "path": "16"
    },
    "2250": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5117,
        5160
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2251": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5117,
        5160
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2252": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5104,
        5113
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2253": {
      "branch": 72,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5096,
        5160
      ],
      "op": "GT",
      "path": "16"
    },
    "2254": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5096,
        5228
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2255": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5096,
        5228
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2256": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5096,
        5228
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FD"
    },
    "2259": {
      "branch": 72,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5096,
        5228
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5228
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FA"
    },
    "2264": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5227
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8ED"
    },
    "2267": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5223,
        5226
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2269": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5218
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B2"
    },
    "2272": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5210
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2273": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5215,
        5217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "2275": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5218
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2280": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8E"
    },
    "2283": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5218
      ],
      "op": "AND",
      "path": "16"
    },
    "2284": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5200,
        5218
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2285": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5200,
        5227
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2286": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5195
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2287": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2288": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5228
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2293": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5199
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "2296": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5228
      ],
      "op": "AND",
      "path": "16"
    },
    "2297": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5185,
        5228
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2298": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5185,
        5228
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2299": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5172,
        5181
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2300": {
      "branch": 73,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5164,
        5228
      ],
      "op": "LT",
      "path": "16"
    },
    "2301": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5096,
        5228
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2302": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94E"
    },
    "2305": {
      "branch": 73,
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2306": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2308": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2309": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2310": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2316": {
      "op": "SHL"
    },
    "2317": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2318": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2319": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2321": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2323": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2324": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "ADD",
      "path": "16"
    },
    "2325": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2326": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1C"
    },
    "2328": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2330": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2331": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "ADD",
      "path": "16"
    },
    "2332": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2333": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x43616E2774206368616E6765206D6F7265207468616E202D2B31302500000000"
    },
    "2366": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2368": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2369": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "ADD",
      "path": "16"
    },
    "2370": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2371": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2372": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2373": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2374": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2375": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2376": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "SUB",
      "path": "16"
    },
    "2377": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2379": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "ADD",
      "path": "16"
    },
    "2380": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2381": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2382": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5087,
        5262
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2383": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5320
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 21,
      "value": "0x957"
    },
    "2386": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5309,
        5318
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2387": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5300
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57D"
    },
    "2390": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5290,
        5320
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2391": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5290,
        5320
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2392": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5362
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x7"
    },
    "2394": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5369
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2395": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5376
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x96B"
    },
    "2398": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5376
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2399": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5374,
        5375
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2401": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5376
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2406": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "2409": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5376
      ],
      "op": "AND",
      "path": "16"
    },
    "2410": {
      "fn": "token_exchange.setNewPrice",
      "jump": "i",
      "offset": [
        5350,
        5376
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2411": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5350,
        5376
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2412": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5418
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 23,
      "value": "0x6"
    },
    "2414": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2415": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2416": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2418": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2419": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2420": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "AND",
      "path": "16"
    },
    "2421": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5422,
        5423
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2423": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "ADD",
      "path": "16"
    },
    "2424": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "AND",
      "path": "16"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2427": {
      "op": "NOT"
    },
    "2428": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2429": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2430": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "AND",
      "path": "16"
    },
    "2431": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "OR",
      "path": "16"
    },
    "2432": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2433": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5403,
        5423
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2434": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5334,
        5376
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2435": {
      "op": "POP"
    },
    "2436": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4684,
        5435
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2437": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        5452,
        5465
      ],
      "op": "SWAP5",
      "path": "16",
      "statement": 24
    },
    "2438": {
      "fn": "token_exchange.setNewPrice",
      "offset": [
        4360,
        5473
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "op": "POP"
    },
    "2442": {
      "op": "POP"
    },
    "2443": {
      "fn": "token_exchange.setNewPrice",
      "jump": "o",
      "offset": [
        4360,
        5473
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2444": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2445": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4190,
        4197
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2447": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4227
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 25,
      "value": "0x7"
    },
    "2449": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4228,
        4236
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2450": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2451": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2452": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2453": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "LT",
      "path": "16"
    },
    "2454": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x99B"
    },
    "2457": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2458": {
      "dev": "Index out of range",
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "INVALID",
      "path": "16"
    },
    "2459": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2460": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2461": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2463": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2464": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2466": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2468": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2469": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "ADD",
      "path": "16"
    },
    "2470": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4215,
        4237
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2471": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4208,
        4237
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2472": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4208,
        4237
      ],
      "op": "POP",
      "path": "16"
    },
    "2473": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2474": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2475": {
      "fn": "token_exchange.getHistory",
      "offset": [
        4129,
        4253
      ],
      "op": "POP",
      "path": "16"
    },
    "2476": {
      "fn": "token_exchange.getHistory",
      "jump": "o",
      "offset": [
        4129,
        4253
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2477": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2478": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B8"
    },
    "2481": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B8"
    },
    "2484": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "2487": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2488": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2489": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9F3"
    },
    "2492": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2493": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2495": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2504": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2505": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2507": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2508": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2509": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2510": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2512": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2513": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2514": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2515": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2516": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2517": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2518": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2520": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2521": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2522": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2524": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2525": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2526": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "2529": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2531": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2532": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2533": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2535": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2536": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2537": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2538": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2539": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2541": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2542": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2543": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2544": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2545": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2546": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2547": {
      "fn": "token_exchange.changeStart",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2548": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5828,
        5834
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 26,
      "value": "0x8"
    },
    "2550": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5828,
        5842
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2551": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5828,
        5842
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2552": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5828,
        5842
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2553": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5837,
        5842
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2554": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5867,
        5879
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 27,
      "value": "0xA01"
    },
    "2557": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5867,
        5877
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "2560": {
      "fn": "token_exchange.changeStart",
      "jump": "i",
      "offset": [
        5867,
        5879
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2561": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5867,
        5879
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "AND",
      "path": "16"
    },
    "2571": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x16C752BDF6502CC829C9A81132E2E73AEB12D145E0E3B1CD632A9759485A5F53"
    },
    "2604": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2606": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2607": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2609": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2610": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2611": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2612": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "SUB",
      "path": "16"
    },
    "2613": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2614": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5855,
        5887
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2615": {
      "fn": "token_exchange.changeStart",
      "offset": [
        5765,
        5894
      ],
      "op": "POP",
      "path": "16"
    },
    "2616": {
      "fn": "token_exchange.changeStart",
      "jump": "o",
      "offset": [
        5765,
        5894
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2617": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2618": {
      "fn": "token_exchange.buy",
      "offset": [
        1763,
        1767
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2620": {
      "offset": [
        1224,
        1232
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA43"
    },
    "2623": {
      "offset": [
        1224,
        1230
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x457"
    },
    "2626": {
      "jump": "i",
      "offset": [
        1224,
        1232
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2627": {
      "fn": "token_exchange.buy",
      "offset": [
        1224,
        1232
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2628": {
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA87"
    },
    "2631": {
      "offset": [
        1216,
        1253
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2632": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2634": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2635": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "offset": [
        1216,
        1253
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2644": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2645": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2647": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2649": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2650": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "2651": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2652": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "2654": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2656": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2657": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "2658": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2659": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2681": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2682": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "2683": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2684": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2685": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2686": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2687": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2688": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2689": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "SUB",
      "path": "16"
    },
    "2690": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2692": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "2693": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2694": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2695": {
      "fn": "token_exchange.buy",
      "offset": [
        1216,
        1253
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2696": {
      "fn": "token_exchange.buy",
      "offset": [
        1793,
        1799
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 28,
      "value": "0x8"
    },
    "2698": {
      "fn": "token_exchange.buy",
      "offset": [
        1793,
        1799
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2699": {
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1790
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "2700": {
      "branch": 74,
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1799
      ],
      "op": "GT",
      "path": "16"
    },
    "2701": {
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1813
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2702": {
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1813
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2703": {
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1813
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA99"
    },
    "2706": {
      "branch": 74,
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1813
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2707": {
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1813
      ],
      "op": "POP",
      "path": "16"
    },
    "2708": {
      "fn": "token_exchange.buy",
      "offset": [
        1809,
        1813
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2710": {
      "fn": "token_exchange.buy",
      "offset": [
        1809,
        1813
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2711": {
      "fn": "token_exchange.buy",
      "offset": [
        1803,
        1806
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "2712": {
      "branch": 75,
      "fn": "token_exchange.buy",
      "offset": [
        1803,
        1813
      ],
      "op": "LT",
      "path": "16"
    },
    "2713": {
      "fn": "token_exchange.buy",
      "offset": [
        1787,
        1813
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2714": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAEA"
    },
    "2717": {
      "branch": 75,
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2718": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2720": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2721": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2728": {
      "op": "SHL"
    },
    "2729": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2730": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2731": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2733": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2735": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2736": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "ADD",
      "path": "16"
    },
    "2737": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2738": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1C"
    },
    "2740": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2742": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2743": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "ADD",
      "path": "16"
    },
    "2744": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2745": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x546865206D61726B657420697320636C6F736520666F72657665722E00000000"
    },
    "2778": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "2780": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2781": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "ADD",
      "path": "16"
    },
    "2782": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2783": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2784": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2785": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2786": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2787": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2788": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "SUB",
      "path": "16"
    },
    "2789": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "2791": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "ADD",
      "path": "16"
    },
    "2792": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2793": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2794": {
      "fn": "token_exchange.buy",
      "offset": [
        1778,
        1847
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2795": {
      "fn": "token_exchange.buy",
      "offset": [
        1954,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 29,
      "value": "0xAFB"
    },
    "2798": {
      "fn": "token_exchange.buy",
      "offset": [
        1959,
        1971
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAF5"
    },
    "2801": {
      "fn": "token_exchange.buy",
      "offset": [
        1959,
        1969
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "2804": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1959,
        1971
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2805": {
      "fn": "token_exchange.buy",
      "offset": [
        1959,
        1971
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2806": {
      "fn": "token_exchange.buy",
      "offset": [
        1973,
        1984
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2807": {
      "fn": "token_exchange.buy",
      "offset": [
        1954,
        1958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF29"
    },
    "2810": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1954,
        1985
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2811": {
      "fn": "token_exchange.buy",
      "offset": [
        1954,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "fn": "token_exchange.buy",
      "offset": [
        2003,
        2007
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0x1"
    },
    "2815": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2816": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2817": {
      "fn": "token_exchange.buy",
      "offset": [
        1697,
        2014
      ],
      "op": "POP",
      "path": "16"
    },
    "2818": {
      "fn": "token_exchange.buy",
      "jump": "o",
      "offset": [
        1697,
        2014
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2819": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2820": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB0E"
    },
    "2823": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B8"
    },
    "2826": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA9"
    },
    "2829": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2830": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2831": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB49"
    },
    "2834": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2835": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2837": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2846": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2847": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2849": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2850": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2851": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2852": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2854": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2855": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2856": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2857": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2858": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2859": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2860": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2862": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2863": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2864": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2866": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2867": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2868": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "2871": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2873": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2874": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2875": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2877": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2878": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2879": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2880": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2881": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2883": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2884": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2885": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2886": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2887": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2888": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2889": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2890": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5959,
        5963
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0x9"
    },
    "2892": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5959,
        5969
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2893": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5959,
        5969
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2894": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5959,
        5969
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2895": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5966,
        5969
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2896": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5992,
        6004
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 32,
      "value": "0xB57"
    },
    "2899": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5992,
        6002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "2902": {
      "fn": "token_exchange.changeEnd",
      "jump": "i",
      "offset": [
        5992,
        6004
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2903": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5992,
        6004
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "op": "SUB"
    },
    "2912": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "AND",
      "path": "16"
    },
    "2913": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x9CD0F0F4C626F6284B893EFF5AA9A5F50E76B4FA9811BF3EC86AC52CC6ED7827"
    },
    "2946": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2948": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2949": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2951": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2952": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2953": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2954": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "SUB",
      "path": "16"
    },
    "2955": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2956": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5982,
        6010
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2957": {
      "fn": "token_exchange.changeEnd",
      "offset": [
        5900,
        6017
      ],
      "op": "POP",
      "path": "16"
    },
    "2958": {
      "fn": "token_exchange.changeEnd",
      "jump": "o",
      "offset": [
        5900,
        6017
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2959": {
      "fn": "token_exchange.sell",
      "offset": [
        2020,
        2339
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2960": {
      "fn": "token_exchange.sell",
      "offset": [
        2087,
        2091
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2962": {
      "offset": [
        1224,
        1232
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB99"
    },
    "2965": {
      "offset": [
        1224,
        1230
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x457"
    },
    "2968": {
      "jump": "i",
      "offset": [
        1224,
        1232
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2969": {
      "branch": 76,
      "fn": "token_exchange.sell",
      "offset": [
        1224,
        1232
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2970": {
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBDD"
    },
    "2973": {
      "branch": 76,
      "offset": [
        1216,
        1253
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2974": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2976": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2977": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "offset": [
        1216,
        1253
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2986": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2987": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2989": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2991": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2992": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "2993": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2994": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "2996": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2998": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2999": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "3000": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3001": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "3023": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3024": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "3025": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3026": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3027": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3028": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3029": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3030": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3031": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "SUB",
      "path": "16"
    },
    "3032": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "3034": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "ADD",
      "path": "16"
    },
    "3035": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3036": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3037": {
      "fn": "token_exchange.sell",
      "offset": [
        1216,
        1253
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3038": {
      "fn": "token_exchange.sell",
      "offset": [
        2117,
        2123
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 33,
      "value": "0x8"
    },
    "3040": {
      "fn": "token_exchange.sell",
      "offset": [
        2117,
        2123
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3041": {
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2114
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "3042": {
      "branch": 77,
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2123
      ],
      "op": "GT",
      "path": "16"
    },
    "3043": {
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2137
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3044": {
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2137
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3045": {
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2137
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBEF"
    },
    "3048": {
      "branch": 77,
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2137
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3049": {
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2137
      ],
      "op": "POP",
      "path": "16"
    },
    "3050": {
      "fn": "token_exchange.sell",
      "offset": [
        2133,
        2137
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3052": {
      "fn": "token_exchange.sell",
      "offset": [
        2133,
        2137
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3053": {
      "fn": "token_exchange.sell",
      "offset": [
        2127,
        2130
      ],
      "op": "TIMESTAMP",
      "path": "16"
    },
    "3054": {
      "branch": 78,
      "fn": "token_exchange.sell",
      "offset": [
        2127,
        2137
      ],
      "op": "LT",
      "path": "16"
    },
    "3055": {
      "fn": "token_exchange.sell",
      "offset": [
        2111,
        2137
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3056": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC40"
    },
    "3059": {
      "branch": 78,
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3060": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3062": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3063": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3072": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3073": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3075": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3077": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3078": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "ADD",
      "path": "16"
    },
    "3079": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3080": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1C"
    },
    "3082": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3084": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3085": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "ADD",
      "path": "16"
    },
    "3086": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3087": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x546865206D61726B657420697320636C6F736520666F72657665722E00000000"
    },
    "3120": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "3122": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3123": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "ADD",
      "path": "16"
    },
    "3124": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3125": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3126": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3127": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3128": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3129": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3130": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "SUB",
      "path": "16"
    },
    "3131": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "3133": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "ADD",
      "path": "16"
    },
    "3134": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3135": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3136": {
      "fn": "token_exchange.sell",
      "offset": [
        2102,
        2171
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3137": {
      "fn": "token_exchange.sell",
      "offset": [
        2278,
        2310
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 34,
      "value": "0xAFB"
    },
    "3140": {
      "fn": "token_exchange.sell",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC4B"
    },
    "3143": {
      "fn": "token_exchange.sell",
      "offset": [
        2284,
        2294
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCA9"
    },
    "3146": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3147": {
      "fn": "token_exchange.sell",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3148": {
      "fn": "token_exchange.sell",
      "offset": [
        2298,
        2309
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3149": {
      "fn": "token_exchange.sell",
      "offset": [
        2278,
        2283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1125"
    },
    "3152": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2278,
        2310
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3153": {
      "offset": [
        317,
        342
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3154": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "3156": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "SUB"
    },
    "3165": {
      "offset": [
        317,
        342
      ],
      "op": "AND",
      "path": "16"
    },
    "3166": {
      "fn": "token_exchange.sell",
      "offset": [
        317,
        342
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3167": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        317,
        342
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3168": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3169": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3171": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 35,
      "value": "0xCA2"
    },
    "3174": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3175": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3176": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3178": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3179": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3180": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3182": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "3183": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3185": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3186": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3187": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "3189": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3190": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3191": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3193": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "3"
    },
    "3194": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "3227": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3228": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3229": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "3"
    },
    "3230": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E1"
    },
    "3233": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3234": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3235": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3236": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3241": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3242": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 36
    },
    "3243": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3244": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3245": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3246": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 37
    },
    "3257": {
      "branch": 81,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "3258": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF4"
    },
    "3261": {
      "branch": 81,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3262": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3264": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3271": {
      "op": "SHL"
    },
    "3272": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3273": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3274": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3276": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3277": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3278": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3279": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3281": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3282": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3283": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3284": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "3285": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3286": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3287": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "3289": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3290": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3291": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3293": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3294": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3295": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16E3"
    },
    "3298": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "3300": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3301": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "3302": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3304": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3305": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3306": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "3307": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "3308": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3310": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3311": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3312": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3313": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "3314": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3315": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3316": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 38
    },
    "3327": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3329": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3330": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3331": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3332": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3334": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3335": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3336": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3337": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3338": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3340": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3341": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3342": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3343": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3345": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "3346": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3347": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3348": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3349": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 39,
      "value": "0xD25"
    },
    "3352": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3354": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1088,
        1095
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3355": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3360": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1087
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1378"
    },
    "3363": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "AND",
      "path": "10"
    },
    "3364": {
      "fn": "BrokerRole._removeBroker",
      "jump": "i",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3365": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3366": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 40,
      "value": "0x40"
    },
    "3368": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3375": {
      "op": "SHL"
    },
    "3376": {
      "op": "SUB"
    },
    "3377": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3378": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "AND",
      "path": "10"
    },
    "3379": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3380": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0"
    },
    "3413": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3414": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3416": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3417": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3418": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "POP",
      "path": "10"
    },
    "3419": {
      "fn": "BrokerRole._removeBroker",
      "jump": "o",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3420": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3421": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3423": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3424": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3425": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "3"
    },
    "3426": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 41
    },
    "3427": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3428": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "3"
    },
    "3429": {
      "branch": 84,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3430": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA2"
    },
    "3433": {
      "branch": 84,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3434": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3436": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3437": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3444": {
      "op": "SHL"
    },
    "3445": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3446": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3447": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3449": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3451": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3452": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3453": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3454": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "3456": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3458": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3459": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3460": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3461": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3494": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3496": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3497": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3498": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3499": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3500": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3501": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3502": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3503": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3504": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "3"
    },
    "3505": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3507": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "3508": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3509": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3510": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3511": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 42,
      "value": "0xDC7"
    },
    "3514": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3516": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3517": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3522": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13DF"
    },
    "3525": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "3526": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3527": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3528": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 43,
      "value": "0x40"
    },
    "3530": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "op": "SUB"
    },
    "3539": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3540": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "3541": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3542": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "3575": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3576": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3578": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3579": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3580": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "3581": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3582": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3583": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 44,
      "value": "0xE0F"
    },
    "3586": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3588": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        957,
        964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3589": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3594": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13DF"
    },
    "3597": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "AND",
      "path": "10"
    },
    "3598": {
      "fn": "BrokerRole._addBroker",
      "jump": "i",
      "offset": [
        944,
        965
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3599": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3600": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 45,
      "value": "0x40"
    },
    "3602": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3609": {
      "op": "SHL"
    },
    "3610": {
      "op": "SUB"
    },
    "3611": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3612": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "AND",
      "path": "10"
    },
    "3613": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3614": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB"
    },
    "3647": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3648": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3650": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3651": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "LOG2",
      "path": "10"
    },
    "3652": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "POP",
      "path": "10"
    },
    "3653": {
      "fn": "BrokerRole._addBroker",
      "jump": "o",
      "offset": [
        888,
        1007
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3654": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3655": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 46,
      "value": "0xE57"
    },
    "3658": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3660": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3661": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3666": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1378"
    },
    "3669": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "3670": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3671": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3672": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 47,
      "value": "0x40"
    },
    "3674": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3681": {
      "op": "SHL"
    },
    "3682": {
      "op": "SUB"
    },
    "3683": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3684": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "3685": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3686": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "3719": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3720": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3722": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3723": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3724": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "3725": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3726": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3727": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3729": {
      "branch": 85,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3730": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE9D"
    },
    "3733": {
      "branch": 85,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0x0"
    },
    "3737": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42C"
    },
    "3740": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3741": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3742": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3743": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3744": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "3"
    },
    "3745": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3746": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3747": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3748": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3749": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0xEAA"
    },
    "3752": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3753": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3754": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3755": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "3"
    },
    "3756": {
      "branch": 86,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "3"
    },
    "3757": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA2"
    },
    "3760": {
      "branch": 86,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3761": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3763": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3772": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3773": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3775": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3776": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3777": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3778": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3780": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3781": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3782": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3783": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "3784": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3785": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3786": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3788": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3789": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3790": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3792": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3793": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3794": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C2"
    },
    "3797": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "3799": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3800": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3801": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3803": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "3804": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3805": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "3806": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "3807": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3809": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3810": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3811": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3812": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "3813": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3814": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3815": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3816": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3818": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 50,
      "value": "0xCA2"
    },
    "3821": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3822": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3823": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3825": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3826": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3827": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3829": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "3830": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3832": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3833": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3834": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "3836": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3837": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3838": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3840": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "3"
    },
    "3841": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "3874": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3875": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3876": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "3"
    },
    "3877": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1460"
    },
    "3880": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3881": {
      "fn": "token_exchange._buy",
      "offset": [
        2345,
        2683
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3888": {
      "op": "SHL"
    },
    "3889": {
      "op": "SUB"
    },
    "3890": {
      "fn": "token_exchange._buy",
      "offset": [
        2421,
        2444
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 51
    },
    "3891": {
      "branch": 79,
      "fn": "token_exchange._buy",
      "offset": [
        2421,
        2444
      ],
      "op": "AND",
      "path": "16"
    },
    "3892": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF84"
    },
    "3895": {
      "branch": 79,
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3896": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3898": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3899": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3908": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3909": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3911": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3913": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3914": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "ADD",
      "path": "16"
    },
    "3915": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3916": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1D"
    },
    "3918": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3920": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3921": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "ADD",
      "path": "16"
    },
    "3922": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3923": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x526563697069656E7420697320746865207A65726F2061646472657373000000"
    },
    "3956": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "3958": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3959": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "ADD",
      "path": "16"
    },
    "3960": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3961": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3962": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3963": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3964": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3965": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3966": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "SUB",
      "path": "16"
    },
    "3967": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "3969": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "ADD",
      "path": "16"
    },
    "3970": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3971": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3972": {
      "fn": "token_exchange._buy",
      "offset": [
        2413,
        2478
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3973": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 52,
      "value": "0x3"
    },
    "3975": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3976": {
      "fn": "token_exchange._buy",
      "offset": [
        2521,
        2533
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "3978": {
      "fn": "token_exchange._buy",
      "offset": [
        2521,
        2533
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3985": {
      "op": "SHL"
    },
    "3986": {
      "op": "SUB"
    },
    "3987": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3988": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3989": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "AND",
      "path": "16"
    },
    "3990": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3991": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2509
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "3996": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2509
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3997": {
      "fn": "token_exchange._buy",
      "offset": [
        2510,
        2519
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3998": {
      "fn": "token_exchange._buy",
      "offset": [
        2510,
        2519
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3999": {
      "fn": "token_exchange._buy",
      "offset": [
        2521,
        2533
      ],
      "op": "AND",
      "path": "16"
    },
    "4000": {
      "fn": "token_exchange._buy",
      "offset": [
        2535,
        2555
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFAA"
    },
    "4003": {
      "fn": "token_exchange._buy",
      "offset": [
        2542,
        2548
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4004": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2496
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4006": {
      "fn": "token_exchange._buy",
      "offset": [
        2535,
        2541
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14C5"
    },
    "4009": {
      "fn": "token_exchange._buy",
      "jump": "i",
      "offset": [
        2535,
        2555
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4010": {
      "fn": "token_exchange._buy",
      "offset": [
        2535,
        2555
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4011": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4013": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4014": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4015": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4020": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "AND",
      "path": "16"
    },
    "4021": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "4023": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "SHL",
      "path": "16"
    },
    "4024": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4025": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4026": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4028": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "ADD",
      "path": "16"
    },
    "4029": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4030": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "op": "SUB"
    },
    "4039": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "AND",
      "path": "16"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "SUB"
    },
    "4048": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "AND",
      "path": "16"
    },
    "4049": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4050": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4051": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4053": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "ADD",
      "path": "16"
    },
    "4054": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4061": {
      "op": "SHL"
    },
    "4062": {
      "op": "SUB"
    },
    "4063": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "AND",
      "path": "16"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "op": "SUB"
    },
    "4072": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "AND",
      "path": "16"
    },
    "4073": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4074": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4075": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4077": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "ADD",
      "path": "16"
    },
    "4078": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4079": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4080": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4081": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4083": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "ADD",
      "path": "16"
    },
    "4084": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4085": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4086": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4087": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4088": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4089": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4091": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4093": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4094": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4095": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4096": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "SUB",
      "path": "16"
    },
    "4097": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4098": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4100": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4101": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4102": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4103": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "ISZERO"
    },
    "4106": {
      "op": "PUSH2",
      "value": "0x1012"
    },
    "4109": {
      "op": "JUMPI"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "DUP1"
    },
    "4113": {
      "op": "REVERT"
    },
    "4114": {
      "op": "JUMPDEST"
    },
    "4115": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4116": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "GAS",
      "path": "16"
    },
    "4117": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "CALL",
      "path": "16"
    },
    "4118": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4119": {
      "op": "DUP1"
    },
    "4120": {
      "op": "ISZERO"
    },
    "4121": {
      "op": "PUSH2",
      "value": "0x1026"
    },
    "4124": {
      "op": "JUMPI"
    },
    "4125": {
      "op": "RETURNDATASIZE"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4128": {
      "op": "DUP1"
    },
    "4129": {
      "op": "RETURNDATACOPY"
    },
    "4130": {
      "op": "RETURNDATASIZE"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4133": {
      "op": "REVERT"
    },
    "4134": {
      "op": "JUMPDEST"
    },
    "4135": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4136": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4137": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4138": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "POP",
      "path": "16"
    },
    "4139": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4141": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4142": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "op": "DUP2"
    },
    "4146": {
      "op": "LT"
    },
    "4147": {
      "op": "ISZERO"
    },
    "4148": {
      "op": "PUSH2",
      "value": "0x103C"
    },
    "4151": {
      "op": "JUMPI"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4154": {
      "op": "DUP1"
    },
    "4155": {
      "op": "REVERT"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "op": "POP"
    },
    "4159": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 53,
      "value": "0x2"
    },
    "4161": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4162": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4164": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4165": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4166": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4175": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4182": {
      "op": "SHL"
    },
    "4183": {
      "op": "SUB"
    },
    "4184": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4185": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4186": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "AND",
      "path": "16"
    },
    "4187": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4189": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4190": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "ADD",
      "path": "16"
    },
    "4191": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4192": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4194": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4195": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "ADD",
      "path": "16"
    },
    "4196": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4197": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4198": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4199": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4200": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4201": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4202": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4203": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4204": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "AND",
      "path": "16"
    },
    "4205": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4206": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2577
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x40C10F19"
    },
    "4211": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2577
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4212": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4214": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4215": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4216": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "ADD",
      "path": "16"
    },
    "4217": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4218": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4220": {
      "fn": "token_exchange._buy",
      "offset": [
        2489,
        2556
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4221": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4222": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4223": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4224": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4225": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "SUB",
      "path": "16"
    },
    "4226": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "ADD",
      "path": "16"
    },
    "4227": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4228": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4230": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2572
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4231": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4232": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4233": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4234": {
      "op": "DUP1"
    },
    "4235": {
      "op": "ISZERO"
    },
    "4236": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "4239": {
      "op": "JUMPI"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "DUP1"
    },
    "4243": {
      "op": "REVERT"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "POP",
      "path": "16"
    },
    "4246": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "GAS",
      "path": "16"
    },
    "4247": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "CALL",
      "path": "16"
    },
    "4248": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4249": {
      "op": "DUP1"
    },
    "4250": {
      "op": "ISZERO"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0x10A8"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "RETURNDATASIZE"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4258": {
      "op": "DUP1"
    },
    "4259": {
      "op": "RETURNDATACOPY"
    },
    "4260": {
      "op": "RETURNDATASIZE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4263": {
      "op": "REVERT"
    },
    "4264": {
      "op": "JUMPDEST"
    },
    "4265": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "POP",
      "path": "16"
    },
    "4266": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "POP",
      "path": "16"
    },
    "4267": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "POP",
      "path": "16"
    },
    "4268": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "POP",
      "path": "16"
    },
    "4269": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4271": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4272": {
      "fn": "token_exchange._buy",
      "offset": [
        2567,
        2596
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4275": {
      "op": "DUP2"
    },
    "4276": {
      "op": "LT"
    },
    "4277": {
      "op": "ISZERO"
    },
    "4278": {
      "op": "PUSH2",
      "value": "0x10BE"
    },
    "4281": {
      "op": "JUMPI"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4284": {
      "op": "DUP1"
    },
    "4285": {
      "op": "REVERT"
    },
    "4286": {
      "op": "JUMPDEST"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "op": "POP"
    },
    "4289": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2647
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x7"
    },
    "4291": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2667
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4292": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2667
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4293": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2674
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10D5"
    },
    "4296": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2674
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4297": {
      "fn": "token_exchange._buy",
      "offset": [
        2672,
        2673
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4299": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2674
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4304": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2671
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "4307": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2674
      ],
      "op": "AND",
      "path": "16"
    },
    "4308": {
      "fn": "token_exchange._buy",
      "jump": "i",
      "offset": [
        2648,
        2674
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4309": {
      "fn": "token_exchange._buy",
      "offset": [
        2648,
        2674
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4310": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4311": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4312": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4313": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "LT",
      "path": "16"
    },
    "4314": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10DF"
    },
    "4317": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4318": {
      "dev": "Index out of range",
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "INVALID",
      "path": "16"
    },
    "4319": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4320": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4321": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4323": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4324": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4326": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4328": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4329": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "ADD",
      "path": "16"
    },
    "4330": {
      "fn": "token_exchange._buy",
      "offset": [
        2635,
        2675
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4331": {
      "fn": "token_exchange._buy",
      "offset": [
        2627,
        2633
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4332": {
      "fn": "token_exchange._buy",
      "offset": [
        2616,
        2625
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "op": "SUB"
    },
    "4341": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "AND",
      "path": "16"
    },
    "4342": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
    },
    "4375": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4377": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4378": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4380": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4381": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4382": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4383": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "SUB",
      "path": "16"
    },
    "4384": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4385": {
      "fn": "token_exchange._buy",
      "offset": [
        2612,
        2676
      ],
      "op": "LOG4",
      "path": "16"
    },
    "4386": {
      "fn": "token_exchange._buy",
      "offset": [
        2345,
        2683
      ],
      "op": "POP",
      "path": "16"
    },
    "4387": {
      "fn": "token_exchange._buy",
      "offset": [
        2345,
        2683
      ],
      "op": "POP",
      "path": "16"
    },
    "4388": {
      "fn": "token_exchange._buy",
      "jump": "o",
      "offset": [
        2345,
        2683
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4389": {
      "fn": "token_exchange._sell",
      "offset": [
        2689,
        3096
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4396": {
      "op": "SHL"
    },
    "4397": {
      "op": "SUB"
    },
    "4398": {
      "fn": "token_exchange._sell",
      "offset": [
        2858,
        2878
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 55
    },
    "4399": {
      "branch": 80,
      "fn": "token_exchange._sell",
      "offset": [
        2858,
        2878
      ],
      "op": "AND",
      "path": "16"
    },
    "4400": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1180"
    },
    "4403": {
      "branch": 80,
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4404": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4406": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4407": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4414": {
      "op": "SHL"
    },
    "4415": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4416": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4417": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4419": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4421": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4422": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "ADD",
      "path": "16"
    },
    "4423": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4424": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1A"
    },
    "4426": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4428": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4429": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "ADD",
      "path": "16"
    },
    "4430": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4431": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x53656C6C657220697320746865207A65726F2061646472657373000000000000"
    },
    "4464": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4466": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4467": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "ADD",
      "path": "16"
    },
    "4468": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4469": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4470": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4471": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4472": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4473": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4474": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "SUB",
      "path": "16"
    },
    "4475": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "4477": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "ADD",
      "path": "16"
    },
    "4478": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4479": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4480": {
      "fn": "token_exchange._sell",
      "offset": [
        2850,
        2909
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4481": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x2"
    },
    "4483": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4484": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4486": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4487": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4488": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "4495": {
      "op": "SHL"
    },
    "4496": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4497": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "op": "SUB"
    },
    "4506": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4507": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4508": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "AND",
      "path": "16"
    },
    "4509": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4511": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4512": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "ADD",
      "path": "16"
    },
    "4513": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4514": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4516": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4517": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "ADD",
      "path": "16"
    },
    "4518": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4519": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4520": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4521": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4522": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4523": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4524": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4525": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4526": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "AND",
      "path": "16"
    },
    "4527": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4528": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2934
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x79CC6790"
    },
    "4533": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2934
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4534": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4536": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4537": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4538": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "ADD",
      "path": "16"
    },
    "4539": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4540": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4542": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4543": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4544": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4545": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4546": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4547": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "SUB",
      "path": "16"
    },
    "4548": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "ADD",
      "path": "16"
    },
    "4549": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4550": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4551": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2925
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4552": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4553": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4554": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4555": {
      "op": "DUP1"
    },
    "4556": {
      "op": "ISZERO"
    },
    "4557": {
      "op": "PUSH2",
      "value": "0x11D5"
    },
    "4560": {
      "op": "JUMPI"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4563": {
      "op": "DUP1"
    },
    "4564": {
      "op": "REVERT"
    },
    "4565": {
      "op": "JUMPDEST"
    },
    "4566": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "POP",
      "path": "16"
    },
    "4567": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "GAS",
      "path": "16"
    },
    "4568": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "CALL",
      "path": "16"
    },
    "4569": {
      "fn": "token_exchange._sell",
      "offset": [
        2920,
        2950
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4570": {
      "op": "DUP1"
    },
    "4571": {
      "op": "ISZERO"
    },
    "4572": {
      "op": "PUSH2",
      "value": "0x11E9"
    },
    "4575": {
      "op": "JUMPI"
    },
    "4576": {
      "op": "RETURNDATASIZE"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "DUP1"
    },
    "4580": {
      "op": "RETURNDATACOPY"
    },
    "4581": {
      "op": "RETURNDATASIZE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "REVERT"
    },
    "4585": {
      "op": "JUMPDEST"
    },
    "4586": {
      "op": "POP"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2968
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0x3"
    },
    "4590": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2968
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "op": "SUB"
    },
    "4599": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2968
      ],
      "op": "AND",
      "path": "16"
    },
    "4600": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2968
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2973
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x40C10F19"
    },
    "4607": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2973
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "fn": "token_exchange._sell",
      "offset": [
        2974,
        2980
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4610": {
      "fn": "token_exchange._sell",
      "offset": [
        2982,
        3003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x120C"
    },
    "4613": {
      "fn": "token_exchange._sell",
      "offset": [
        2989,
        2995
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4614": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        2968
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4616": {
      "fn": "token_exchange._sell",
      "offset": [
        2982,
        2988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14C5"
    },
    "4619": {
      "fn": "token_exchange._sell",
      "jump": "i",
      "offset": [
        2982,
        3003
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4620": {
      "fn": "token_exchange._sell",
      "offset": [
        2982,
        3003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4621": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4623": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4624": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4625": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4630": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "AND",
      "path": "16"
    },
    "4631": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "4633": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "SHL",
      "path": "16"
    },
    "4634": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4635": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4636": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4638": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "ADD",
      "path": "16"
    },
    "4639": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4640": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "op": "SUB"
    },
    "4649": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "AND",
      "path": "16"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4656": {
      "op": "SHL"
    },
    "4657": {
      "op": "SUB"
    },
    "4658": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "AND",
      "path": "16"
    },
    "4659": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4660": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4661": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4663": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "ADD",
      "path": "16"
    },
    "4664": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4665": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4666": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4667": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4669": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "ADD",
      "path": "16"
    },
    "4670": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4671": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4672": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4673": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4674": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4676": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4678": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4679": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4680": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4681": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "SUB",
      "path": "16"
    },
    "4682": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4683": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4685": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4686": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4687": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4688": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4689": {
      "op": "DUP1"
    },
    "4690": {
      "op": "ISZERO"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x125B"
    },
    "4694": {
      "op": "JUMPI"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4697": {
      "op": "DUP1"
    },
    "4698": {
      "op": "REVERT"
    },
    "4699": {
      "op": "JUMPDEST"
    },
    "4700": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4701": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "GAS",
      "path": "16"
    },
    "4702": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "CALL",
      "path": "16"
    },
    "4703": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4704": {
      "op": "DUP1"
    },
    "4705": {
      "op": "ISZERO"
    },
    "4706": {
      "op": "PUSH2",
      "value": "0x126F"
    },
    "4709": {
      "op": "JUMPI"
    },
    "4710": {
      "op": "RETURNDATASIZE"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4713": {
      "op": "DUP1"
    },
    "4714": {
      "op": "RETURNDATACOPY"
    },
    "4715": {
      "op": "RETURNDATASIZE"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4718": {
      "op": "REVERT"
    },
    "4719": {
      "op": "JUMPDEST"
    },
    "4720": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4721": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4722": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4723": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "POP",
      "path": "16"
    },
    "4724": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4726": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4727": {
      "fn": "token_exchange._sell",
      "offset": [
        2961,
        3004
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4730": {
      "op": "DUP2"
    },
    "4731": {
      "op": "LT"
    },
    "4732": {
      "op": "ISZERO"
    },
    "4733": {
      "op": "PUSH2",
      "value": "0x1285"
    },
    "4736": {
      "op": "JUMPI"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4739": {
      "op": "DUP1"
    },
    "4740": {
      "op": "REVERT"
    },
    "4741": {
      "op": "JUMPDEST"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3060
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0x7"
    },
    "4746": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3080
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4747": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3080
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4748": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3087
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x129C"
    },
    "4751": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3087
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4752": {
      "fn": "token_exchange._sell",
      "offset": [
        3085,
        3086
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4754": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3087
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4759": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3084
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "4762": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3087
      ],
      "op": "AND",
      "path": "16"
    },
    "4763": {
      "fn": "token_exchange._sell",
      "jump": "i",
      "offset": [
        3061,
        3087
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4764": {
      "fn": "token_exchange._sell",
      "offset": [
        3061,
        3087
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4765": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4766": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4767": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4768": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "LT",
      "path": "16"
    },
    "4769": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12A6"
    },
    "4772": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4773": {
      "dev": "Index out of range",
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "INVALID",
      "path": "16"
    },
    "4774": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4775": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4777": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4778": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4779": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4780": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4782": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4783": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4784": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "ADD",
      "path": "16"
    },
    "4785": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4786": {
      "fn": "token_exchange._sell",
      "offset": [
        3020,
        3089
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4788": {
      "fn": "token_exchange._sell",
      "offset": [
        3020,
        3089
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4789": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4790": {
      "fn": "token_exchange._sell",
      "offset": [
        3048,
        3088
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4791": {
      "fn": "token_exchange._sell",
      "offset": [
        3040,
        3046
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4792": {
      "fn": "token_exchange._sell",
      "offset": [
        3040,
        3046
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4793": {
      "fn": "token_exchange._sell",
      "offset": [
        3033,
        3037
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "4794": {
      "fn": "token_exchange._sell",
      "offset": [
        3033,
        3037
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4795": {
      "fn": "token_exchange._sell",
      "offset": [
        3020,
        3089
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
    },
    "4828": {
      "fn": "token_exchange._sell",
      "offset": [
        3020,
        3089
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4829": {
      "fn": "token_exchange._sell",
      "offset": [
        3020,
        3089
      ],
      "op": "LOG4",
      "path": "16"
    },
    "4830": {
      "fn": "token_exchange._sell",
      "offset": [
        2689,
        3096
      ],
      "op": "POP",
      "path": "16"
    },
    "4831": {
      "fn": "token_exchange._sell",
      "offset": [
        2689,
        3096
      ],
      "op": "POP",
      "path": "16"
    },
    "4832": {
      "fn": "token_exchange._sell",
      "jump": "o",
      "offset": [
        2689,
        3096
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4833": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4834": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4836": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 59
    },
    "4837": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4838": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4839": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "3"
    },
    "4840": {
      "branch": 87,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4841": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1370"
    },
    "4844": {
      "branch": 87,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4845": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4847": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4856": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4857": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4859": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4860": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4861": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4862": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4864": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4865": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4866": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4867": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4868": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4869": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4870": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4871": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4872": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4873": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4874": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4875": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4876": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4878": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4879": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4880": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4881": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4882": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4883": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4884": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4886": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4887": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4888": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4889": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4890": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4893": {
      "op": "JUMPDEST"
    },
    "4894": {
      "op": "DUP4"
    },
    "4895": {
      "op": "DUP2"
    },
    "4896": {
      "op": "LT"
    },
    "4897": {
      "op": "ISZERO"
    },
    "4898": {
      "op": "PUSH2",
      "value": "0x1335"
    },
    "4901": {
      "op": "JUMPI"
    },
    "4902": {
      "op": "DUP2"
    },
    "4903": {
      "op": "DUP2"
    },
    "4904": {
      "op": "ADD"
    },
    "4905": {
      "op": "MLOAD"
    },
    "4906": {
      "op": "DUP4"
    },
    "4907": {
      "op": "DUP3"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "MSTORE"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x131D"
    },
    "4916": {
      "op": "JUMP"
    },
    "4917": {
      "op": "JUMPDEST"
    },
    "4918": {
      "op": "POP"
    },
    "4919": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4920": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4921": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4922": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4923": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4924": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4925": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4926": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4927": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4928": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4930": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "4931": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4932": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4933": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1362"
    },
    "4936": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4937": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4938": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4939": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4940": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4941": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4942": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4944": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4945": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4947": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4948": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4951": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "3"
    },
    "4952": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4953": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "3"
    },
    "4954": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "3"
    },
    "4955": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4956": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4957": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4959": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "3"
    },
    "4960": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4961": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4962": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4963": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4964": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4965": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4966": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4967": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "3"
    },
    "4968": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4970": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4971": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4972": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4973": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "3"
    },
    "4974": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4975": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4976": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4977": {
      "op": "POP"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4981": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "3"
    },
    "4982": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4983": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4984": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4985": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 60,
      "value": "0x1382"
    },
    "4988": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4989": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4990": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCAD"
    },
    "4993": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4994": {
      "branch": 82,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4995": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13BD"
    },
    "4998": {
      "branch": 82,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4999": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5001": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5010": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5011": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5013": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5014": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5015": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5016": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5018": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5019": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5020": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5021": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "5022": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5023": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5024": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5026": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5027": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5028": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5030": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5031": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5032": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1661"
    },
    "5035": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5037": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5038": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5039": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5041": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5042": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5043": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "5044": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "5045": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5047": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5048": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5049": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5050": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "5051": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5052": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5053": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5060": {
      "op": "SHL"
    },
    "5061": {
      "op": "SUB"
    },
    "5062": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 61
    },
    "5063": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5065": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5066": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5067": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5068": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5070": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5071": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5072": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5073": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5074": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5076": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5077": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5078": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5079": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5082": {
      "op": "NOT"
    },
    "5083": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "5084": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5085": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5086": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5087": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5088": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 62,
      "value": "0x13E9"
    },
    "5091": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5092": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5093": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCAD"
    },
    "5096": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5097": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5098": {
      "branch": 83,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5099": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x143B"
    },
    "5102": {
      "branch": 83,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5103": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5105": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5106": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5115": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5116": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5118": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5120": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5121": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5122": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5123": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5125": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "5127": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5128": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5129": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5130": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "5163": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "5165": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5166": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5167": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5168": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5169": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5170": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5171": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5172": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5173": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "5174": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5176": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5177": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5178": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5179": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5186": {
      "op": "SHL"
    },
    "5187": {
      "op": "SUB"
    },
    "5188": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 63
    },
    "5189": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5191": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5192": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5193": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5194": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5196": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5197": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5198": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5199": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5200": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5202": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5203": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5204": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5205": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5208": {
      "op": "NOT"
    },
    "5209": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "5210": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5212": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "5213": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5214": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5215": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5216": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5217": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5219": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 64
    },
    "5220": {
      "branch": 88,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5221": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14AF"
    },
    "5224": {
      "branch": 88,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5225": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5227": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5234": {
      "op": "SHL"
    },
    "5235": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5236": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5237": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5239": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5241": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5242": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "5243": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5244": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5245": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5246": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5247": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5248": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5250": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5251": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "5252": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5253": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5254": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5255": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5256": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5257": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5258": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5259": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5261": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5262": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5263": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "5264": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5265": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5266": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5267": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "3"
    },
    "5268": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5269": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5270": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5271": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5272": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5274": {
      "op": "DUP4"
    },
    "5275": {
      "op": "ISZERO"
    },
    "5276": {
      "op": "PUSH2",
      "value": "0x1335"
    },
    "5279": {
      "op": "JUMPI"
    },
    "5280": {
      "op": "DUP2"
    },
    "5281": {
      "op": "DUP2"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "op": "MLOAD"
    },
    "5284": {
      "op": "DUP4"
    },
    "5285": {
      "op": "DUP3"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "MSTORE"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "op": "PUSH2",
      "value": "0x131D"
    },
    "5294": {
      "op": "JUMP"
    },
    "5295": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5296": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "3"
    },
    "5297": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5299": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5300": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5301": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5302": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14BB"
    },
    "5305": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5306": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "3"
    },
    "5307": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5308": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "3"
    },
    "5309": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5310": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5311": {
      "op": "POP"
    },
    "5312": {
      "op": "POP"
    },
    "5313": {
      "op": "POP"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5317": {
      "fn": "token_exchange.getFee",
      "offset": [
        3102,
        3573
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5318": {
      "fn": "token_exchange.getFee",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5320": {
      "fn": "token_exchange.getFee",
      "offset": [
        3238,
        3249
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5321": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "5323": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5325": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5326": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5327": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5328": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5331": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "EXP",
      "path": "16"
    },
    "5332": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5333": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "DIV",
      "path": "16"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5340": {
      "op": "SHL"
    },
    "5341": {
      "op": "SUB"
    },
    "5342": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3265
      ],
      "op": "AND",
      "path": "16"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5349": {
      "op": "SHL"
    },
    "5350": {
      "op": "SUB"
    },
    "5351": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3274
      ],
      "op": "AND",
      "path": "16"
    },
    "5352": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3274
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x313CE567"
    },
    "5357": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5359": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5360": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5361": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5366": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "AND",
      "path": "16"
    },
    "5367": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "5369": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "SHL",
      "path": "16"
    },
    "5370": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5371": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5372": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5374": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "ADD",
      "path": "16"
    },
    "5375": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5377": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5379": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5380": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5381": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5382": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "SUB",
      "path": "16"
    },
    "5383": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5384": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP7",
      "path": "16"
    },
    "5385": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5386": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "5387": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5388": {
      "op": "DUP1"
    },
    "5389": {
      "op": "ISZERO"
    },
    "5390": {
      "op": "PUSH2",
      "value": "0x1516"
    },
    "5393": {
      "op": "JUMPI"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5396": {
      "op": "DUP1"
    },
    "5397": {
      "op": "REVERT"
    },
    "5398": {
      "op": "JUMPDEST"
    },
    "5399": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "POP",
      "path": "16"
    },
    "5400": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "GAS",
      "path": "16"
    },
    "5401": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "5402": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5403": {
      "op": "DUP1"
    },
    "5404": {
      "op": "ISZERO"
    },
    "5405": {
      "op": "PUSH2",
      "value": "0x152A"
    },
    "5408": {
      "op": "JUMPI"
    },
    "5409": {
      "op": "RETURNDATASIZE"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5412": {
      "op": "DUP1"
    },
    "5413": {
      "op": "RETURNDATACOPY"
    },
    "5414": {
      "op": "RETURNDATASIZE"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5417": {
      "op": "REVERT"
    },
    "5418": {
      "op": "JUMPDEST"
    },
    "5419": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "POP",
      "path": "16"
    },
    "5420": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "POP",
      "path": "16"
    },
    "5421": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "POP",
      "path": "16"
    },
    "5422": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "POP",
      "path": "16"
    },
    "5423": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5425": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5426": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5429": {
      "op": "DUP2"
    },
    "5430": {
      "op": "LT"
    },
    "5431": {
      "op": "ISZERO"
    },
    "5432": {
      "op": "PUSH2",
      "value": "0x1540"
    },
    "5435": {
      "op": "JUMPI"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5438": {
      "op": "DUP1"
    },
    "5439": {
      "op": "REVERT"
    },
    "5440": {
      "op": "JUMPDEST"
    },
    "5441": {
      "op": "POP"
    },
    "5442": {
      "fn": "token_exchange.getFee",
      "offset": [
        3260,
        3276
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5443": {
      "fn": "token_exchange.getFee",
      "offset": [
        3252,
        3277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5445": {
      "fn": "token_exchange.getFee",
      "offset": [
        3252,
        3277
      ],
      "op": "AND",
      "path": "16"
    },
    "5446": {
      "fn": "token_exchange.getFee",
      "offset": [
        3252,
        3277
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5447": {
      "op": "POP"
    },
    "5448": {
      "fn": "token_exchange.getFee",
      "offset": [
        3288,
        3566
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5449": {
      "fn": "token_exchange.getFee",
      "offset": [
        3288,
        3566
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5450": {
      "fn": "token_exchange.getFee",
      "offset": [
        3288,
        3566
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15C4"
    },
    "5453": {
      "fn": "token_exchange.getFee",
      "offset": [
        3288,
        3566
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5454": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3416
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 65,
      "value": "0x15BC"
    },
    "5457": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1567"
    },
    "5460": {
      "fn": "token_exchange.getFee",
      "offset": [
        3410,
        3414
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "5463": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B2"
    },
    "5466": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3398
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5467": {
      "fn": "token_exchange.getFee",
      "offset": [
        3403,
        3404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "5469": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3405
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5474": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3402
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8E"
    },
    "5477": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3405
      ],
      "op": "AND",
      "path": "16"
    },
    "5478": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3392,
        3405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5479": {
      "fn": "token_exchange.getFee",
      "offset": [
        3392,
        3415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5480": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15B0"
    },
    "5483": {
      "fn": "token_exchange.getFee",
      "offset": [
        3383,
        3386
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5484": {
      "fn": "token_exchange.getFee",
      "offset": [
        3379,
        3381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "5486": {
      "fn": "token_exchange.getFee",
      "offset": [
        3379,
        3386
      ],
      "op": "EXP",
      "path": "16"
    },
    "5487": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B2"
    },
    "5490": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "5492": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3372
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x158C"
    },
    "5495": {
      "fn": "token_exchange.getFee",
      "offset": [
        3370,
        3371
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5497": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3358
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "5499": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3365
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5500": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3365
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5501": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3365
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5502": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3365
      ],
      "op": "POP",
      "path": "16"
    },
    "5503": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3369
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "5506": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3369
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5507": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3372
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5508": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3372
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5509": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3372
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5514": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3372
      ],
      "op": "AND",
      "path": "16"
    },
    "5515": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3346,
        3372
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5516": {
      "fn": "token_exchange.getFee",
      "offset": [
        3346,
        3372
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5517": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5518": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5519": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5520": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "LT",
      "path": "16"
    },
    "5521": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1596"
    },
    "5524": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5525": {
      "dev": "Index out of range",
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "INVALID",
      "path": "16"
    },
    "5526": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5527": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5528": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5530": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5531": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5533": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5535": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5536": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "ADD",
      "path": "16"
    },
    "5537": {
      "fn": "token_exchange.getFee",
      "offset": [
        3333,
        3373
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5538": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3328
      ],
      "op": "DUP10",
      "path": "16"
    },
    "5539": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8E"
    },
    "5542": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3332
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5543": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3374
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5544": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5545": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3374
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5550": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3374
      ],
      "op": "AND",
      "path": "16"
    },
    "5551": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3322,
        3374
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5552": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3387
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5553": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3391
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5554": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3416
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5559": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5C"
    },
    "5562": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3416
      ],
      "op": "AND",
      "path": "16"
    },
    "5563": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3322,
        3416
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5564": {
      "fn": "token_exchange.getFee",
      "offset": [
        3322,
        3416
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5565": {
      "fn": "token_exchange.getFee",
      "offset": [
        3315,
        3416
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5566": {
      "fn": "token_exchange.getFee",
      "offset": [
        3315,
        3416
      ],
      "op": "POP",
      "path": "16"
    },
    "5567": {
      "fn": "token_exchange.getFee",
      "offset": [
        3315,
        3416
      ],
      "op": "POP",
      "path": "16"
    },
    "5568": {
      "fn": "token_exchange.getFee",
      "offset": [
        3315,
        3416
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42C"
    },
    "5571": {
      "fn": "token_exchange.getFee",
      "offset": [
        3315,
        3416
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5572": {
      "fn": "token_exchange.getFee",
      "offset": [
        3288,
        3566
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5573": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3555
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 66,
      "value": "0x15BC"
    },
    "5576": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15DE"
    },
    "5579": {
      "fn": "token_exchange.getFee",
      "offset": [
        3549,
        3553
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "5582": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3544
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B2"
    },
    "5585": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3537
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5586": {
      "fn": "token_exchange.getFee",
      "offset": [
        3542,
        3543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "5588": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3544
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5593": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3541
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8E"
    },
    "5596": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3544
      ],
      "op": "AND",
      "path": "16"
    },
    "5597": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3531,
        3544
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5598": {
      "fn": "token_exchange.getFee",
      "offset": [
        3531,
        3554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5599": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3526
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1603"
    },
    "5602": {
      "fn": "token_exchange.getFee",
      "offset": [
        3522,
        3525
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5603": {
      "fn": "token_exchange.getFee",
      "offset": [
        3518,
        3520
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "5605": {
      "fn": "token_exchange.getFee",
      "offset": [
        3518,
        3525
      ],
      "op": "EXP",
      "path": "16"
    },
    "5606": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3513
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B2"
    },
    "5609": {
      "fn": "token_exchange.getFee",
      "offset": [
        3472,
        3484
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "5611": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3511
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x158C"
    },
    "5614": {
      "fn": "token_exchange.getFee",
      "offset": [
        3509,
        3510
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5616": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3497
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "5618": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3504
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5619": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3504
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5620": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5621": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3504
      ],
      "op": "POP",
      "path": "16"
    },
    "5622": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "5625": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3508
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5626": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3511
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5627": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3511
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5628": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3511
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5633": {
      "fn": "token_exchange.getFee",
      "offset": [
        3485,
        3511
      ],
      "op": "AND",
      "path": "16"
    },
    "5634": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3485,
        3511
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5635": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3526
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5636": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3530
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5637": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3555
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "5642": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3530
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC60"
    },
    "5645": {
      "fn": "token_exchange.getFee",
      "offset": [
        3461,
        3555
      ],
      "op": "AND",
      "path": "16"
    },
    "5646": {
      "fn": "token_exchange.getFee",
      "jump": "i",
      "offset": [
        3461,
        3555
      ],
      "op": "JUMP",
      "path": "16"
    }
  },
  "sha1": "8634a9b342a15b8f671fc848985992726bbea745",
  "source": "pragma solidity ^0.5.0;\n\n\nimport \"./PayCoin.sol\";\nimport \"../interfaces/IT_ERC20.sol\";\nimport \"./token_erc20.sol\";\nimport \"./BrokerRole.sol\";\nimport \"./AdminRole.sol\";\n\ncontract token_exchange is BrokerRole, AdminRole {\n    using SafeMath for uint256;\n    using SafeMath for int256; \n\n    IT_ERC20 private token;\n    IT_PayCoin public payCoin;\n\n    uint256 private _openingtime;\n    uint256 private _closingtime;\n    uint8 private _overnightCalls; \n\n    uint256[] private priceHistory;\n\n    uint256 private _start;\n    uint256 private _end;\n\n    //address _addressPC ;\n    //= 0xc429620C4451d820B96FD3E5209FADa0F5a89852\n\n    address private _fss_admin = 0x2b177c1854DE132E96326B454055005E62feBDc7; \n    address private _fss_trading = 0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff ; \n\n    event Buy(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event Sell(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event PriceChange(address indexed who, uint256 indexed id_price, uint256 indexed price); \n    event ChangeStart(address indexed who, uint256 indexed when); \n    event ChangeEnd(address indexed who, uint256 indexed when); \n\n    modifier onlyWhileOpen {\n        require(isOpen(), \"Market is closed\");\n        _;\n    }\n\n    constructor() public {\n\n        payCoin = new PayCoin();\n\n        _openingtime = now ;\n        _closingtime = now + 12 hours ; //TODO Remember to modify it!\n        _start = _openingtime; \n        _end = _start + 7 days + 9 hours; \n\n        _overnightCalls = 0; \n\n        if (!(isAdmin(_fss_admin) && isBroker(_fss_admin))){\n            addAdmin(_fss_admin);\n            addBroker(_fss_admin);\n        }\n    \n    }\n\n    function buy(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        require( now > _start && now < _end , \"The market is close forever.\");\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _buy(_msgSender(), tokenAmount);\n\n        return true;\n    }\n\n    function sell(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        require( now > _start && now < _end , \"The market is close forever.\");\n        //require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _sell(_msgSender(), tokenAmount);\n\n        return true;\n    }\n\n    function _buy(address recipient, uint256 amount) internal {\n        require(recipient != address(0), \"Recipient is the zero address\");\n\n        payCoin.transferFrom(recipient, _fss_trading, getFee(amount, true));\n\n        token.mint(recipient, amount);\n\n        emit Buy(recipient, amount, priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function _sell(address seller, uint256 amount) internal {\n        // token_exchange != team, so it can mint paycoin (these doesn't count vs initial 50k)\n        require(seller != address(0), \"Seller is the zero address\");\n\n        token.burnFrom(seller, amount);\n\n        payCoin.mint(seller, getFee(amount, false));\n\n        emit Sell(address(this), amount, priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function getFee(uint256 amount, bool from_buy) internal returns(uint256){\n        // amount * tk_price / 10^18 +- 2*amount/1000\n        uint256 exp = uint256(token.decimals());\n\n        if (from_buy){\n            return amount.mul(priceHistory[priceHistory.length.sub(1)]).div(10**exp).add(amount.mul(2).div(1000));\n        }\n        else{\n            return amount.mul(priceHistory[priceHistory.length.sub(1)]).div(10**exp).sub(amount.mul(2).div(1000));\n        }\n\n    }\n\n    function isOpen() public view returns (bool) {\n        return now >= _openingtime && now <= _closingtime;\n    }\n\n    function setOpenTime() external onlyAdmin {\n        require(_openingtime < _closingtime, \"Something's wrong, maybe you set the initial _openingtime wrong.\");\n        _openingtime = _closingtime.add(15 hours) ;\n        _closingtime = _openingtime.add(9 hours) ;\n    }\n\n    function lastPrice() external view returns (uint256, uint256){\n        return (priceHistory.length.sub(1), priceHistory[priceHistory.length.sub(1)]);\n    }\n\n    function getHistory(uint256 id_price) external view returns (uint256){\n        return priceHistory[id_price] ;        \n    }\n\n    function setHistory(uint256 price) onlyBroker public {\n        priceHistory.push(price); \n    }\n\n    function setNewPrice(int256 delta_price) onlyBroker public returns (uint256) {\n        uint256 last_price = priceHistory[priceHistory.length.sub(1)]; \n        int256 new_price = int256(last_price) + delta_price; \n        uint256 last_id_price; \n\n        require (new_price > 0, \"Price must be positive!\"); \n        \n        if (isAdmin(_msgSender())) {\n            require(isOpen(), \"Market is closed\"); \n            \n            setHistory(uint256(new_price));\n            last_id_price = priceHistory.length.sub(1);\n            \n            emit PriceChange(_msgSender(), last_id_price, uint256(new_price)); \n        }\n        else{\n            require(_overnightCalls < 4, \"Already calls 4 times this night.\"); \n            require( uint256(new_price) > last_price.sub(last_price.mul(10).div(100)) && uint256(new_price) < last_price.add(last_price.mul(10).div(100)), \"Can't change more than -+10%\" ); \n            \n            setHistory(uint256(new_price));\n            last_id_price = priceHistory.length.sub(1);\n            \n            _overnightCalls += 1; \n        }\n\n        return last_id_price; \n    }\n\n    //TEAMTOKEN & PAYCOIN ADDRESS\n    \n    function setToken(address tokenAddress) onlyAdmin external {\n        token = token_erc20(tokenAddress); \n    }\n    \n    function setPayCoin(address payCoinAddress) onlyAdmin external {\n        payCoin = IT_PayCoin(payCoinAddress); \n    }\n    \n    function changeStart(uint256 start) onlyAdmin external {\n      _start = start;\n      emit ChangeStart(_msgSender(), start);\n    }\n\n    function changeEnd(uint256 end) onlyAdmin external {\n      _end = end;\n      emit ChangeEnd(_msgSender(), end);\n    }\n\n\n\n}\n",
  "sourceMap": "169:5853:16:-;;;625:71;;;-1:-1:-1;;;;;;625:71:16;;;654:42;625:71;;;;703:73;;;;;;734:42;703:73;;;1277:414;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;420:24:10;431:12;-1:-1:-1;;;;;431:10:10;:12;:::i;:::-;-1:-1:-1;;;;;420:10:10;:24;:::i;:::-;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;1319:13:16;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1309:7:16;:23;;-1:-1:-1;;;;;;1309:23:16;-1:-1:-1;;;;;1309:23:16;;;;;;1358:3;1343:12;:18;;;1393:8;1387:14;;1372:12;:29;1442:6;:21;;;1481:25;;1474:4;:32;1518:15;:19;;-1:-1:-1;;1518:19:16;;;1563:10;;1555:19;;1563:10;1555:7;:19::i;:::-;:43;;;;-1:-1:-1;1587:10:16;;1578:20;;-1:-1:-1;;;;;1587:10:16;-1:-1:-1;;;;;1578:8:16;:20;:::i;:::-;1549:131;;1623:10;;1614:20;;-1:-1:-1;;;;;1623:10:16;-1:-1:-1;;;;;1614:8:16;:20;:::i;:::-;1658:10;;1648:21;;-1:-1:-1;;;;;1658:10:16;-1:-1:-1;;;;;1648:9:16;:21;:::i;:::-;169:5853;;788:96:0;867:10;788:96;:::o;888:119:10:-;944:21;957:7;944:8;:12;;;;;;:21;;;;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;587:105::-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;596:107:10:-;652:4;675:21;688:7;675:8;:12;;;;;;:21;;;;:::i;698:87:9:-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;-1:-1:-1;;;;;506:10:10;:12;:::i;:::-;-1:-1:-1;;;;;497:8:10;:22;:::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;-1:-1:-1;;;;;773:10:10;:19;:::i;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;169:5853:16:-;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/token_exchange.sol",
  "type": "contract"
}