{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "payCoinAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenged",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        }
      ],
      "name": "DirectChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "DirectChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_won",
          "type": "uint256"
        }
      ],
      "name": "Overnight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TeamAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        }
      ],
      "name": "TeamChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TeamChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TeamRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "directChallenged",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "overnightCheck",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "new_delta_price",
          "type": "int256"
        }
      ],
      "name": "overnightStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "name": "setExchange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "payCoinAddress",
          "type": "address"
        }
      ],
      "name": "setPayCoin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winDirectChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winTeamChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simonepirota/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simonepirota/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "14": "contracts/TeamRole.sol",
    "15": "contracts/token_challenge.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_challenge.sol",
    "exportedSymbols": {
      "token_challenge": [
        1521
      ]
    },
    "id": 1522,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 736,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "contracts/token_exchange.sol",
        "file": "./token_exchange.sol",
        "id": 737,
        "nodeType": "ImportDirective",
        "scope": 1522,
        "sourceUnit": 2334,
        "src": "106:31:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TeamRole.sol",
        "file": "./TeamRole.sol",
        "id": 738,
        "nodeType": "ImportDirective",
        "scope": 1522,
        "sourceUnit": 735,
        "src": "139:25:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 739,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "195:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$106",
                "typeString": "contract AdminRole"
              }
            },
            "id": 740,
            "nodeType": "InheritanceSpecifier",
            "src": "195:9:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 741,
              "name": "TeamRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 734,
              "src": "206:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TeamRole_$734",
                "typeString": "contract TeamRole"
              }
            },
            "id": 742,
            "nodeType": "InheritanceSpecifier",
            "src": "206:8:15"
          }
        ],
        "contractDependencies": [
          106,
          734,
          2360
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1521,
        "linearizedBaseContracts": [
          1521,
          734,
          106,
          2360
        ],
        "name": "token_challenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 745,
            "name": "_fss_admin",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "255:71:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 743,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "255:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307832623137376331383534444531333245393633323642343534303535303035453632666542446337",
              "id": 744,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "284:42:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x2b177c1854DE132E96326B454055005E62feBDc7"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 748,
            "name": "_fss_trading",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "333:73:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 746,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "333:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307832374334303464344439313135364637303633453864423963433130393730636666664639613643",
              "id": 747,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:42:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x27C404d4D91156F7063E8dB9cC10970cfffF9a6C"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 750,
            "name": "fss_exchange",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "438:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_token_exchange_$2333",
              "typeString": "contract token_exchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 749,
              "name": "token_exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2333,
              "src": "438:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_token_exchange_$2333",
                "typeString": "contract token_exchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 752,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "472:15:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PayCoin_$627",
              "typeString": "contract PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 751,
              "name": "PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 627,
              "src": "472:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PayCoin_$627",
                "typeString": "contract PayCoin"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 755,
            "name": "_teamAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "533:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 753,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "533:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 754,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "533:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 759,
            "name": "Registered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "indexed": true,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "582:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "581:29:15"
            },
            "src": "565:46:15"
          },
          {
            "constant": false,
            "id": 761,
            "name": "_last_id_price",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "650:22:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "650:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 763,
            "name": "_startOvernightChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "679:32:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 762,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 765,
            "name": "_overnightWon",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "717:18:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 764,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "717:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 771,
            "name": "Overnight",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "763:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "indexed": true,
                  "name": "coin_won",
                  "nodeType": "VariableDeclaration",
                  "scope": 771,
                  "src": "787:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:50:15"
            },
            "src": "747:66:15"
          },
          {
            "constant": false,
            "id": 774,
            "name": "_directFlag",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "853:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 772,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "853:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 773,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "853:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 776,
            "name": "_directChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "884:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 775,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "884:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 778,
            "name": "_directChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "916:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 777,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "916:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 782,
            "name": "_directChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "953:45:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 781,
              "keyType": {
                "id": 779,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "962:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "953:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 780,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "973:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 786,
            "name": "_startDirectChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "1004:50:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 785,
              "keyType": {
                "id": 783,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1013:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1004:28:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 784,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1024:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 794,
            "name": "DirectChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "indexed": true,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "1084:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "indexed": true,
                  "name": "challenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "1112:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "indexed": false,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "1140:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1083:71:15"
            },
            "src": "1062:93:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 802,
            "name": "DirectChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1186:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "indexed": true,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1210:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "indexed": true,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1233:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1185:72:15"
            },
            "src": "1161:97:15"
          },
          {
            "constant": false,
            "id": 805,
            "name": "_teamFlag",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "1296:19:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 803,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1296:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 804,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1296:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 807,
            "name": "_teamChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "1322:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 806,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1322:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 810,
            "name": "_teamChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "1352:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 808,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1352:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 809,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1352:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 814,
            "name": "_startTeamChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "1388:48:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 813,
              "keyType": {
                "id": 811,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1397:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1388:28:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 812,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1408:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 818,
            "name": "_teamChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 1521,
            "src": "1443:43:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 817,
              "keyType": {
                "id": 815,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1443:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 816,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1463:4:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 824,
            "name": "TeamChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "indexed": true,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1518:26:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "indexed": false,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1546:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1517:43:15"
            },
            "src": "1498:63:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 832,
            "name": "TeamChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1589:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "indexed": true,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1613:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "indexed": true,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1636:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1588:72:15"
            },
            "src": "1566:95:15"
          },
          {
            "body": {
              "id": 879,
              "nodeType": "Block",
              "src": "1756:320:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 839,
                      "name": "fss_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "1766:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$2333",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 841,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "1796:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 840,
                        "name": "token_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2333,
                        "src": "1781:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_exchange_$2333_$",
                          "typeString": "type(contract token_exchange)"
                        }
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1781:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$2333",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "src": "1766:46:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_token_exchange_$2333",
                      "typeString": "contract token_exchange"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:46:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 845,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "1822:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$627",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 847,
                          "name": "payCoinAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "1840:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 846,
                        "name": "PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1832:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PayCoin_$627_$",
                          "typeString": "type(contract PayCoin)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1832:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$627",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "src": "1822:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PayCoin_$627",
                      "typeString": "contract PayCoin"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:33:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1870:22:15",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 852,
                              "name": "_fss_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "1880:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 851,
                            "name": "isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1872:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1872:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 854,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1871:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 861,
                  "nodeType": "IfStatement",
                  "src": "1866:72:15",
                  "trueBody": {
                    "id": 860,
                    "nodeType": "Block",
                    "src": "1893:45:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 857,
                              "name": "_fss_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "1916:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 856,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1907:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1907:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "1907:20:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1952:24:15",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 863,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "1962:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 862,
                            "name": "isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1954:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1954:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 865,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1953:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 872,
                  "nodeType": "IfStatement",
                  "src": "1948:76:15",
                  "trueBody": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "1977:47:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "2000:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 867,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1991:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1991:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 870,
                        "nodeType": "ExpressionStatement",
                        "src": "1991:22:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 876,
                        "name": "_fss_trading",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "2054:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "2034:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2034:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 878,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:33:15"
                }
              ]
            },
            "documentation": null,
            "id": 880,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "name": "exchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "1700:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "name": "payCoinAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "1725:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1699:49:15"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:15"
            },
            "scope": 1521,
            "src": "1687:389:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "2168:641:15",
              "statements": [
                {
                  "assignments": [
                    886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 886,
                      "name": "_alreadyRegistered",
                      "nodeType": "VariableDeclaration",
                      "scope": 958,
                      "src": "2178:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 885,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2178:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 888,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2204:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2178:31:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2229:24:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 890,
                                  "name": "fss_exchange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 750,
                                  "src": "2231:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_token_exchange_$2333",
                                    "typeString": "contract token_exchange"
                                  }
                                },
                                "id": 891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isOpen",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1991,
                                "src": "2231:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                  "typeString": "function () view external returns (bool)"
                                }
                              },
                              "id": 892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2231:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 893,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2230:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d61726b6574206973207374696c6c206f70656e2c20636f6d65206261636b206c61746572",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2255:43:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b1f33a6cd40e41050185e9852bcfb0d64fe1d7c80b1029f0cf607bd1686f396",
                          "typeString": "literal_string \"The market is still open, come back later\""
                        },
                        "value": "The market is still open, come back later"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b1f33a6cd40e41050185e9852bcfb0d64fe1d7c80b1029f0cf607bd1686f396",
                          "typeString": "literal_string \"The market is still open, come back later\""
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "2221:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:78:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:78:15"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "2360:119:15",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "2377:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 911,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 910,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "2392:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2377:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 912,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 882,
                            "src": "2398:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2377:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 919,
                        "nodeType": "IfStatement",
                        "src": "2374:95:15",
                        "trueBody": {
                          "id": 918,
                          "nodeType": "Block",
                          "src": "2410:59:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 914,
                                  "name": "_alreadyRegistered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 886,
                                  "src": "2428:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2449:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2428:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 917,
                              "nodeType": "ExpressionStatement",
                              "src": "2428:25:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "2329:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "2333:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2333:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2329:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 921,
                  "initializationExpression": {
                    "assignments": [
                      899
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 899,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "2314:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2314:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 901,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2314:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2356:3:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 906,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "2356:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 908,
                    "nodeType": "ExpressionStatement",
                    "src": "2356:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "2310:169:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 923,
                          "name": "_alreadyRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "2496:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2518:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2496:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7527726520616c726561647920726567697374657265642e",
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:28:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        },
                        "value": "You're already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        }
                      ],
                      "id": 922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "2488:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:66:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 932,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "2586:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 929,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "2566:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2566:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:32:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2612:22:15",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 936,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "2621:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 935,
                            "name": "isTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 680,
                            "src": "2614:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2614:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 938,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2613:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 945,
                  "nodeType": "IfStatement",
                  "src": "2609:71:15",
                  "trueBody": {
                    "id": 944,
                    "nodeType": "Block",
                    "src": "2635:45:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 941,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "2657:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 940,
                            "name": "addTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "2649:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2649:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 943,
                        "nodeType": "ExpressionStatement",
                        "src": "2649:20:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 947,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "2707:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2707:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2732:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "2707:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e79207465616d732e",
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2735:17:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        },
                        "value": "Too many teams."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        }
                      ],
                      "id": 946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "2699:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2699:54:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "2699:54:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "2789:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 954,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "2778:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "EmitStatement",
                  "src": "2773:28:15"
                }
              ]
            },
            "documentation": null,
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "2138:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2137:21:15"
            },
            "returnParameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2168:0:15"
            },
            "scope": 1521,
            "src": "2120:689:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 990,
              "nodeType": "Block",
              "src": "2885:190:15",
              "statements": [
                {
                  "body": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "2945:105:15",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 977,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "2962:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 979,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 978,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "2977:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2962:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 980,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "2983:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2962:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 985,
                        "nodeType": "IfStatement",
                        "src": "2959:81:15",
                        "trueBody": {
                          "id": 984,
                          "nodeType": "Block",
                          "src": "2995:45:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3020:4:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 965,
                              "id": 983,
                              "nodeType": "Return",
                              "src": "3013:11:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 970,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "2914:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "2918:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 972,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2918:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2914:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 987,
                  "initializationExpression": {
                    "assignments": [
                      967
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 967,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 987,
                        "src": "2899:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2899:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 969,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2911:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2899:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2941:3:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 974,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "2941:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 976,
                    "nodeType": "ExpressionStatement",
                    "src": "2941:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "2895:155:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3062:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 965,
                  "id": 989,
                  "nodeType": "Return",
                  "src": "3055:12:15"
                }
              ]
            },
            "documentation": null,
            "id": 991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "2837:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2836:21:15"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "2880:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2879:6:15"
            },
            "scope": 1521,
            "src": "2815:260:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "3171:296:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3189:24:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 999,
                                  "name": "fss_exchange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 750,
                                  "src": "3191:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_token_exchange_$2333",
                                    "typeString": "contract token_exchange"
                                  }
                                },
                                "id": 1000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isOpen",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1991,
                                "src": "3191:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                  "typeString": "function () view external returns (bool)"
                                }
                              },
                              "id": 1001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3191:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1002,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3190:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206d61726b6574206973207374696c6c206f70656e2c20636f6d65206261636b206c61746572",
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3215:43:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b1f33a6cd40e41050185e9852bcfb0d64fe1d7c80b1029f0cf607bd1686f396",
                          "typeString": "literal_string \"The market is still open, come back later\""
                        },
                        "value": "The market is still open, come back later"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b1f33a6cd40e41050185e9852bcfb0d64fe1d7c80b1029f0cf607bd1686f396",
                          "typeString": "literal_string \"The market is still open, come back later\""
                        }
                      ],
                      "id": 998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "3181:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:78:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:78:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1007,
                      "name": "_startOvernightChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "3278:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1008,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3418,
                      "src": "3305:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3278:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:30:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1011,
                      "name": "_last_id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "3319:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1014,
                          "name": "new_delta_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "3361:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1012,
                          "name": "fss_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "3336:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_exchange_$2333",
                            "typeString": "contract token_exchange"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setNewPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2268,
                        "src": "3336:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int256_$returns$_t_uint256_$",
                          "typeString": "function (int256) external returns (uint256)"
                        }
                      },
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3336:41:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3319:58:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:58:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "_overnightWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "3387:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3403:5:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3387:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "3387:21:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1025,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "3437:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3437:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030653138",
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3451:6:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1022,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "3420:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PayCoin_$627",
                          "typeString": "contract PayCoin"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2697,
                      "src": "3420:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3420:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "3420:38:15"
                }
              ]
            },
            "documentation": null,
            "id": 1031,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 996,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 995,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39,
                  "src": "3152:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3152:9:15"
              }
            ],
            "name": "overnightStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "name": "new_delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "3128:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3127:24:15"
            },
            "returnParameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3171:0:15"
            },
            "scope": 1521,
            "src": "3104:363:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "3533:531:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1039,
                          "name": "id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "3552:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "_last_id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "3564:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3552:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e672069642070726963652e",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3580:17:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        },
                        "value": "Wrong id price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "3544:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3544:54:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "3544:54:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1045,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "3613:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1046,
                        "name": "_startOvernightChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "3619:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3613:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1048,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "3647:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1049,
                          "name": "_startOvernightChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "3653:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3680:7:15",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "1"
                        },
                        "src": "3653:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3647:40:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3613:74:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1092,
                    "nodeType": "Block",
                    "src": "3936:113:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1083,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "3963:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3977:7:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1080,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "3950:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PayCoin_$627",
                                "typeString": "contract PayCoin"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2783,
                            "src": "3950:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3950:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1086,
                        "nodeType": "ExpressionStatement",
                        "src": "3950:35:15"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1088,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "4015:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4029:7:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "id": 1087,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "4005:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4005:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1091,
                        "nodeType": "EmitStatement",
                        "src": "4000:37:15"
                      }
                    ]
                  },
                  "id": 1093,
                  "nodeType": "IfStatement",
                  "src": "3609:440:15",
                  "trueBody": {
                    "id": 1079,
                    "nodeType": "Block",
                    "src": "3688:234:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1055,
                                "name": "_overnightWon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "3710:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 1056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3727:5:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3710:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3734:37:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 1054,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3419,
                              3420
                            ],
                            "referencedDeclaration": 3420,
                            "src": "3702:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3702:70:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "3702:70:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1064,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2348,
                                "src": "3801:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3801:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 1066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3815:7:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1061,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "3788:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PayCoin_$627",
                                "typeString": "contract PayCoin"
                              }
                            },
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2783,
                            "src": "3788:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3788:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1068,
                        "nodeType": "ExpressionStatement",
                        "src": "3788:35:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1069,
                            "name": "_overnightWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "3838:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3854:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3838:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1072,
                        "nodeType": "ExpressionStatement",
                        "src": "3838:20:15"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1074,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2348,
                                "src": "3887:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3887:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 1076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3901:7:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "id": 1073,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "3877:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3877:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1078,
                        "nodeType": "EmitStatement",
                        "src": "3872:37:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1095,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1036,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1035,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "3515:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3515:8:15"
              }
            ],
            "name": "overnightCheck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "3497:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3497:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3496:18:15"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3533:0:15"
            },
            "scope": 1521,
            "src": "3473:591:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1152,
              "nodeType": "Block",
              "src": "4180:451:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1105,
                        "name": "_directFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "4200:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1106,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "4213:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1104,
                      "name": "checkFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "4190:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4190:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "4190:28:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1110,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2348,
                            "src": "4238:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4238:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1112,
                          "name": "directChallenged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1097,
                          "src": "4254:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4238:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520616464726573736573206d75737420626520646966666572656e742e",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4272:34:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        },
                        "value": "The addresses must be different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        }
                      ],
                      "id": 1109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "4230:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4230:77:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:77:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1117,
                        "name": "_startDirectChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "4320:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1119,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "4342:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4320:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1120,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3418,
                      "src": "4350:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4320:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "4320:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1123,
                      "name": "_directChallenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "4363:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1124,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2348,
                        "src": "4383:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4383:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4363:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "4363:32:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1128,
                      "name": "_directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "4406:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1129,
                      "name": "directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1097,
                      "src": "4426:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4406:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "4406:36:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1132,
                        "name": "_directChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4453:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1134,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "4473:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4453:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4481:5:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4453:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "4453:33:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1139,
                        "name": "_directChallenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "4519:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "_directChallenged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "4538:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1141,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "4557:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1138,
                      "name": "DirectChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "4503:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4503:59:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "EmitStatement",
                  "src": "4498:64:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1147,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "4589:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4603:5:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1144,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "4572:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PayCoin_$627",
                          "typeString": "contract PayCoin"
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2697,
                      "src": "4572:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4572:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:37:15"
                }
              ]
            },
            "documentation": null,
            "id": 1153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1102,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1101,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "4162:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4162:8:15"
              }
            ],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "name": "directChallenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "4122:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4122:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "4148:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4121:40:15"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4180:0:15"
            },
            "scope": 1521,
            "src": "4098:533:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1236,
              "nodeType": "Block",
              "src": "4711:705:15",
              "statements": [
                {
                  "assignments": [
                    1163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1163,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 1236,
                      "src": "4721:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1162,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4721:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1165,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4739:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4721:23:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1169,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "4773:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4773:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4787:5:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1166,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "4756:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PayCoin_$627",
                          "typeString": "contract PayCoin"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2697,
                      "src": "4756:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1173,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "4820:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4820:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1177,
                            "name": "_directChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "4836:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4820:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1179,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "4857:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4857:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1181,
                            "name": "_directChallenged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "4873:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4857:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4820:70:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e",
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4892:54:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        },
                        "value": "You must be either the challenger or the challenged."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        }
                      ],
                      "id": 1174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "4812:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:135:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1186,
                  "nodeType": "ExpressionStatement",
                  "src": "4812:135:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1187,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3418,
                      "src": "4961:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1188,
                          "name": "_startDirectChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 786,
                          "src": "4968:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1190,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1189,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1155,
                          "src": "4990:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4968:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4998:9:15",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "4968:39:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4961:46:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1234,
                    "nodeType": "Block",
                    "src": "5371:38:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5392:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1161,
                        "id": 1233,
                        "nodeType": "Return",
                        "src": "5385:12:15"
                      }
                    ]
                  },
                  "id": 1235,
                  "nodeType": "IfStatement",
                  "src": "4958:451:15",
                  "trueBody": {
                    "id": 1231,
                    "nodeType": "Block",
                    "src": "5008:349:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1195,
                                  "name": "_directChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "5031:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 1197,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1196,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1155,
                                  "src": "5051:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5031:25:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5060:5:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "5031:34:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5067:37:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 1194,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3419,
                              3420
                            ],
                            "referencedDeclaration": 3420,
                            "src": "5023:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5023:82:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1202,
                        "nodeType": "ExpressionStatement",
                        "src": "5023:82:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1204,
                              "name": "_directFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "5135:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1205,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1155,
                              "src": "5148:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1203,
                            "name": "matchFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "5125:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5125:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "5125:28:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1211,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2348,
                                "src": "5182:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5182:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5196:7:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1208,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "5169:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PayCoin_$627",
                                "typeString": "contract PayCoin"
                              }
                            },
                            "id": 1210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2783,
                            "src": "5169:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5169:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "5169:35:15"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1217,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2348,
                                "src": "5242:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5242:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1155,
                              "src": "5256:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5262:7:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "id": 1216,
                            "name": "DirectChallengeWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "5223:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5223:47:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1222,
                        "nodeType": "EmitStatement",
                        "src": "5218:52:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1223,
                              "name": "_directChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "5285:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1225,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1224,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1155,
                              "src": "5305:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5285:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5313:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5285:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "5285:32:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5341:4:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1161,
                        "id": 1230,
                        "nodeType": "Return",
                        "src": "5334:11:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1237,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1157,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "4679:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4679:8:15"
              }
            ],
            "name": "winDirectChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "4665:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4664:14:15"
            },
            "returnParameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "4705:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4704:6:15"
            },
            "scope": 1521,
            "src": "4637:779:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "5508:607:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "_teamFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "5533:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1246,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "5544:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1244,
                      "name": "checkFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "5523:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:26:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1249,
                        "name": "_startTeamChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "5561:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1251,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "5581:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5561:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1252,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3418,
                      "src": "5589:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5561:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "5561:31:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1255,
                        "name": "_teamChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "5602:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1257,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1256,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "5620:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5602:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5628:5:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5602:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "5602:31:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1262,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "5653:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5653:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5678:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5653:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e",
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5681:50:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        },
                        "value": "Challenge can't start until all teams regitered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        }
                      ],
                      "id": 1261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "5645:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5645:87:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "5645:87:15"
                },
                {
                  "body": {
                    "id": 1302,
                    "nodeType": "Block",
                    "src": "5793:215:15",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1280,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "5810:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5810:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1282,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "5826:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1284,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1283,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1270,
                              "src": "5841:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5826:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5810:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1300,
                          "nodeType": "Block",
                          "src": "5925:73:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1295,
                                      "name": "_teamAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 755,
                                      "src": "5964:14:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1297,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1296,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1270,
                                      "src": "5979:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5964:17:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1292,
                                    "name": "_teamChallenged",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 810,
                                    "src": "5943:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5943:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5943:39:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1299,
                              "nodeType": "ExpressionStatement",
                              "src": "5943:39:15"
                            }
                          ]
                        },
                        "id": 1301,
                        "nodeType": "IfStatement",
                        "src": "5807:191:15",
                        "trueBody": {
                          "id": 1291,
                          "nodeType": "Block",
                          "src": "5844:64:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1286,
                                  "name": "_teamChallenger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "5862:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1287,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2348,
                                    "src": "5880:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                      "typeString": "function () view returns (address payable)"
                                    }
                                  },
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5880:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "5862:30:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1290,
                              "nodeType": "ExpressionStatement",
                              "src": "5862:30:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1273,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "5762:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1274,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "5766:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5766:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5762:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1303,
                  "initializationExpression": {
                    "assignments": [
                      1270
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1270,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "5747:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5747:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1272,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5759:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5747:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5789:3:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1277,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "5789:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1279,
                    "nodeType": "ExpressionStatement",
                    "src": "5789:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "5743:265:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1305,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "6037:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6037:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1307,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "6051:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1304,
                      "name": "TeamChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 824,
                      "src": "6023:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6023:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "EmitStatement",
                  "src": "6018:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1313,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "6085:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6085:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6099:6:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1310,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "6068:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PayCoin_$627",
                          "typeString": "contract PayCoin"
                        }
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2697,
                      "src": "6068:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6068:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "6068:38:15"
                }
              ]
            },
            "documentation": null,
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1242,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1241,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "5490:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5490:8:15"
              }
            ],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1239,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "5476:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5476:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5475:14:15"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5508:0:15"
            },
            "scope": 1521,
            "src": "5452:663:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1411,
              "nodeType": "Block",
              "src": "6193:786:15",
              "statements": [
                {
                  "assignments": [
                    1329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1329,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "6207:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1328,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6207:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1331,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6225:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6207:23:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1335,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "6259:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6259:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 1337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6273:6:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "6242:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PayCoin_$627",
                          "typeString": "contract PayCoin"
                        }
                      },
                      "id": 1334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2697,
                      "src": "6242:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1339,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:38:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1340,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3418,
                      "src": "6295:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1341,
                          "name": "_startTeamChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 814,
                          "src": "6302:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1343,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1342,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "6322:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6302:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6330:9:15",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "6302:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6295:44:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1409,
                    "nodeType": "Block",
                    "src": "6935:38:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6956:5:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1327,
                        "id": 1408,
                        "nodeType": "Return",
                        "src": "6949:12:15"
                      }
                    ]
                  },
                  "id": 1410,
                  "nodeType": "IfStatement",
                  "src": "6292:681:15",
                  "trueBody": {
                    "id": 1406,
                    "nodeType": "Block",
                    "src": "6340:581:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1348,
                                  "name": "_teamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 818,
                                  "src": "6362:17:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 1350,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1349,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1321,
                                  "src": "6380:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6362:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 1351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6389:5:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "6362:32:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6396:37:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 1347,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3419,
                              3420
                            ],
                            "referencedDeclaration": 3420,
                            "src": "6354:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6354:80:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1355,
                        "nodeType": "ExpressionStatement",
                        "src": "6354:80:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1357,
                              "name": "_teamFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "6468:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1358,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1321,
                              "src": "6479:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1356,
                            "name": "matchFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "6458:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6458:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "6458:26:15"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1361,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "6503:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6503:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1363,
                            "name": "_teamChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "6519:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6503:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1396,
                          "nodeType": "Block",
                          "src": "6688:136:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1384,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2348,
                                      "src": "6719:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 1385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6719:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 1386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6733:7:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1381,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "6706:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PayCoin_$627",
                                      "typeString": "contract PayCoin"
                                    }
                                  },
                                  "id": 1383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2783,
                                  "src": "6706:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6706:35:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1388,
                              "nodeType": "ExpressionStatement",
                              "src": "6706:35:15"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1390,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2348,
                                      "src": "6781:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 1391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6781:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1392,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1321,
                                    "src": "6795:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 1393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6801:7:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "id": 1389,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 832,
                                  "src": "6764:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 1394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6764:45:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1395,
                              "nodeType": "EmitStatement",
                              "src": "6759:50:15"
                            }
                          ]
                        },
                        "id": 1397,
                        "nodeType": "IfStatement",
                        "src": "6500:324:15",
                        "trueBody": {
                          "id": 1380,
                          "nodeType": "Block",
                          "src": "6535:136:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1368,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2348,
                                      "src": "6566:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 1369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6566:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 1370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6580:7:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1365,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "6553:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PayCoin_$627",
                                      "typeString": "contract PayCoin"
                                    }
                                  },
                                  "id": 1367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2783,
                                  "src": "6553:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6553:35:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1372,
                              "nodeType": "ExpressionStatement",
                              "src": "6553:35:15"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1374,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2348,
                                      "src": "6628:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 1375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6628:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1376,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1321,
                                    "src": "6642:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 1377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6648:7:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "id": 1373,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 832,
                                  "src": "6611:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 1378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6611:45:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1379,
                              "nodeType": "EmitStatement",
                              "src": "6606:50:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1398,
                              "name": "_teamChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "6851:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1400,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1399,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1321,
                              "src": "6869:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6851:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6877:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6851:30:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1403,
                        "nodeType": "ExpressionStatement",
                        "src": "6851:30:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6905:4:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1327,
                        "id": 1405,
                        "nodeType": "Return",
                        "src": "6898:11:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1323,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 667,
                  "src": "6161:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6161:8:15"
              }
            ],
            "name": "winTeamChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "6147:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6147:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6146:14:15"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "6187:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6187:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6186:6:15"
            },
            "scope": 1521,
            "src": "6121:858:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1448,
              "nodeType": "Block",
              "src": "7080:164:15",
              "statements": [
                {
                  "body": {
                    "id": 1440,
                    "nodeType": "Block",
                    "src": "7133:75:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1432,
                                  "name": "_flags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "7155:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[] storage pointer"
                                  }
                                },
                                "id": 1434,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1433,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "7162:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7155:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1435,
                                "name": "_flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1417,
                                "src": "7168:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7155:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "466c616720616c7265616479207573656421",
                              "id": 1437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7176:20:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              },
                              "value": "Flag already used!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              }
                            ],
                            "id": 1431,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3419,
                              3420
                            ],
                            "referencedDeclaration": 3420,
                            "src": "7147:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7147:50:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1439,
                        "nodeType": "ExpressionStatement",
                        "src": "7147:50:15"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1424,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "7110:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1425,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "7114:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 1426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7114:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7110:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1441,
                  "initializationExpression": {
                    "assignments": [
                      1421
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1421,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1441,
                        "src": "7095:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7095:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1423,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7107:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7095:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7129:3:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "7129:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1430,
                    "nodeType": "ExpressionStatement",
                    "src": "7129:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "7091:117:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1445,
                        "name": "_flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "7230:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1442,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1415,
                        "src": "7218:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 1444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7218:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7218:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1447,
                  "nodeType": "ExpressionStatement",
                  "src": "7218:18:15"
                }
              ]
            },
            "documentation": null,
            "id": 1449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "7030:24:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1413,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7030:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1414,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7030:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1417,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "7056:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7056:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7029:41:15"
            },
            "returnParameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7080:0:15"
            },
            "scope": 1521,
            "src": "7011:233:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1491,
              "nodeType": "Block",
              "src": "7319:297:15",
              "statements": [
                {
                  "assignments": [
                    1458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1458,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 1491,
                      "src": "7329:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1457,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7329:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1460,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7347:5:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7329:23:15"
                },
                {
                  "body": {
                    "id": 1484,
                    "nodeType": "Block",
                    "src": "7405:143:15",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1472,
                              "name": "_flags",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1452,
                              "src": "7427:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[] storage pointer"
                              }
                            },
                            "id": 1474,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1473,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "7434:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7427:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1475,
                            "name": "_flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "7440:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7427:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1483,
                        "nodeType": "IfStatement",
                        "src": "7423:111:15",
                        "trueBody": {
                          "id": 1482,
                          "nodeType": "Block",
                          "src": "7447:87:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1477,
                                  "name": "_flagFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1458,
                                  "src": "7469:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 1478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7482:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "7469:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1480,
                              "nodeType": "ExpressionStatement",
                              "src": "7469:17:15"
                            },
                            {
                              "id": 1481,
                              "nodeType": "Break",
                              "src": "7509:5:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1465,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1462,
                      "src": "7382:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1466,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "7386:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 1467,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7386:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7382:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1485,
                  "initializationExpression": {
                    "assignments": [
                      1462
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1462,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "7367:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7367:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1464,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7379:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7367:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7401:3:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "7401:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1471,
                    "nodeType": "ExpressionStatement",
                    "src": "7401:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "7363:185:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1487,
                        "name": "_flagFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "7569:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c646e27742066696e642079756f7220666c616721",
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7581:26:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                          "typeString": "literal_string \"Couldn't find yuor flag!\""
                        },
                        "value": "Couldn't find yuor flag!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                          "typeString": "literal_string \"Couldn't find yuor flag!\""
                        }
                      ],
                      "id": 1486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3419,
                        3420
                      ],
                      "referencedDeclaration": 3420,
                      "src": "7561:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7561:47:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "7561:47:15"
                }
              ]
            },
            "documentation": null,
            "id": 1492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "matchFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1452,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "7269:24:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1450,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7269:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1451,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7269:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1454,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "7295:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7295:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7268:41:15"
            },
            "returnParameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7319:0:15"
            },
            "scope": 1521,
            "src": "7250:366:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "7720:64:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1499,
                      "name": "fss_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "7730:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$2333",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1501,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1494,
                          "src": "7760:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1500,
                        "name": "token_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2333,
                        "src": "7745:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_exchange_$2333_$",
                          "typeString": "type(contract token_exchange)"
                        }
                      },
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7745:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$2333",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "src": "7730:46:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_token_exchange_$2333",
                      "typeString": "contract token_exchange"
                    }
                  },
                  "id": 1504,
                  "nodeType": "ExpressionStatement",
                  "src": "7730:46:15"
                }
              ]
            },
            "documentation": null,
            "id": 1506,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1496,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39,
                  "src": "7701:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7701:9:15"
              }
            ],
            "name": "setExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1494,
                  "name": "exchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "7676:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7676:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7675:25:15"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7720:0:15"
            },
            "scope": 1521,
            "src": "7655:129:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1519,
              "nodeType": "Block",
              "src": "7857:51:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1513,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "7867:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$627",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1515,
                          "name": "payCoinAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1508,
                          "src": "7885:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1514,
                        "name": "PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "7877:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PayCoin_$627_$",
                          "typeString": "type(contract PayCoin)"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7877:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PayCoin_$627",
                        "typeString": "contract PayCoin"
                      }
                    },
                    "src": "7867:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PayCoin_$627",
                      "typeString": "contract PayCoin"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "7867:33:15"
                }
              ]
            },
            "documentation": null,
            "id": 1520,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1511,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1510,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 39,
                  "src": "7838:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7838:9:15"
              }
            ],
            "name": "setPayCoin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1508,
                  "name": "payCoinAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1520,
                  "src": "7814:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7814:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7813:24:15"
            },
            "returnParameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7857:0:15"
            },
            "scope": 1521,
            "src": "7794:114:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1522,
        "src": "167:7749:15"
      }
    ],
    "src": "0:7916:15"
  },
  "bytecode": "6080604052600280546001600160a01b0319908116732b177c1854de132e96326b454055005e62febdc717909155600380549091167327c404d4d91156f7063e8db9cc10970cffff9a6c1790553480156200005957600080fd5b506040516200201038038062002010833981810160405260408110156200007f57600080fd5b508051602090910151620000ae6200009f6001600160e01b03620001de16565b6001600160e01b03620001e216565b620000d4620000c56001600160e01b03620001de16565b6001600160e01b036200023416565b600480546001600160a01b038085166001600160a01b0319928316179092556005805484841692169190911790556002546200011a91166001600160e01b036200028616565b6200013f576002546200013f906001600160a01b03166001600160e01b03620002a916565b6003546200015f906001600160a01b03166001600160e01b036200028616565b620001845760035462000184906001600160a01b03166001600160e01b03620002a916565b5050600354600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0390921691909117905562000419565b3390565b620001fd8160006200032360201b6200192d1790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b6200024f8160016200032360201b6200192d1790919060201c565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b6000620002a3826000620003b060201b620016811790919060201c565b92915050565b620002cf620002c06001600160e01b03620001de16565b6001600160e01b036200028616565b6200030c5760405162461bcd60e51b815260040180806020018281038252602e81526020018062001fe2602e913960400191505060405180910390fd5b62000320816001600160e01b03620001e216565b50565b6200033882826001600160e01b03620003b016565b156200038b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620003f95760405162461bcd60e51b815260040180806020018281038252602281526020018062001fc06022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611b9780620004296000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806378591bfd11610097578063b463a75c11610066578063b463a75c146102a7578063c3c5a547146102cd578063d5d35f95146102f3578063d9a431b31461031057610100565b806378591bfd1461023f5780638bad0c0a1461025c5780639f986fbb14610264578063a5c6a0221461028a57610100565b8063612b7543116100d3578063612b7543146101aa57806367b1f5df146101d657806370480275146101fc57806376a9e7b31461022257610100565b8063248519141461010557806324d7806c1461013f5780634420e48614610165578063561675e11461018d575b600080fd5b61012b6004803603602081101561011b57600080fd5b50356001600160a01b0316610318565b604080519115158252519081900360200190f35b61012b6004803603602081101561015557600080fd5b50356001600160a01b0316610333565b61018b6004803603602081101561017b57600080fd5b50356001600160a01b0316610345565b005b61012b600480360360208110156101a357600080fd5b5035610576565b61018b600480360360408110156101c057600080fd5b506001600160a01b0381351690602001356108e7565b61018b600480360360208110156101ec57600080fd5b50356001600160a01b0316610ace565b61018b6004803603602081101561021257600080fd5b50356001600160a01b0316610b3b565b61018b6004803603602081101561023857600080fd5b5035610b8d565b61012b6004803603602081101561025557600080fd5b5035610d93565b61018b611064565b61018b6004803603602081101561027a57600080fd5b50356001600160a01b0316611076565b61018b600480360360208110156102a057600080fd5b50356110de565b61018b600480360360208110156102bd57600080fd5b50356001600160a01b0316611314565b61012b600480360360208110156102e357600080fd5b50356001600160a01b0316611363565b61018b6004803603602081101561030957600080fd5b50356113be565b61018b611671565b600061032b60018363ffffffff61168116565b90505b919050565b600061032b818363ffffffff61168116565b60048054604080516347535d7b60e01b815290516000936001600160a01b03909316926347535d7b92808201926020929091829003018186803b15801561038b57600080fd5b505afa15801561039f573d6000803e3d6000fd5b505050506040513d60208110156103b557600080fd5b5051156103f35760405162461bcd60e51b8152600401808060200182810382526029815260200180611a676029913960400191505060405180910390fd5b60005b60065481101561043f57826001600160a01b03166006828154811061041757fe5b6000918252602090912001546001600160a01b0316141561043757600191505b6001016103f6565b508015610493576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384161790556104e782610318565b6104f4576104f482611314565b6006546003101561053e576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b60006105886105836116e8565b610318565b6105c35760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b6005546000906001600160a01b03166379cc67906105df6116e8565b68056bc75e2d631000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561063857600080fd5b505af115801561064c573d6000803e3d6000fd5b50505060008481526012602052604090205461012c01421090506108dd5760008381526013602052604090205460ff16156106b85760405162461bcd60e51b8152600401808060200182810382526023815260200180611b146023913960400191505060405180910390fd5b6106c3600f846116ec565b6010546001600160a01b03166106d76116e8565b6001600160a01b031614156107d2576005546001600160a01b03166340c10f196106ff6116e8565b685150ae84a8cdf000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561075857600080fd5b505af115801561076c573d6000803e3d6000fd5b505050506040513d602081101561078257600080fd5b50685150ae84a8cdf000009050836107986116e8565b6001600160a01b03167ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802960405160405180910390a46108ba565b6005546001600160a01b03166340c10f196107eb6116e8565b683635c9adc5dea000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561084457600080fd5b505af1158015610858573d6000803e3d6000fd5b505050506040513d602081101561086e57600080fd5b50683635c9adc5dea000009050836108846116e8565b6001600160a01b03167ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802960405160405180910390a45b50506000818152601360205260409020805460ff1916600190811790915561032e565b600091505061032e565b6108f26105836116e8565b61092d5760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b610938600a82611780565b816001600160a01b031661094a6116e8565b6001600160a01b031614156109a6576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b6000818152600e602052604090204290556109bf6116e8565b600b80546001600160a01b03199081166001600160a01b03938416178255600c80549091168584161781556000848152600d6020908152604091829020805460ff1916905591549254815186815291519385169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106929181900390910190a36005546001600160a01b03166379cc6790610a596116e8565b6802b5e3af16b18800006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610ab257600080fd5b505af1158015610ac6573d6000803e3d6000fd5b505050505050565b610ade610ad96116e8565b610333565b610b195760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610b46610ad96116e8565b610b815760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b610b8a8161180d565b50565b610b98610ad96116e8565b610bd35760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b60048054604080516347535d7b60e01b815290516001600160a01b03909216926347535d7b928282019260209290829003018186803b158015610c1557600080fd5b505afa158015610c29573d6000803e3d6000fd5b505050506040513d6020811015610c3f57600080fd5b505115610c7d5760405162461bcd60e51b8152600401808060200182810382526029815260200180611a676029913960400191505060405180910390fd5b42600855600480546040805163a967119360e01b8152928301849052516001600160a01b039091169163a96711939160248083019260209291908290030181600087803b158015610ccd57600080fd5b505af1158015610ce1573d6000803e3d6000fd5b505050506040513d6020811015610cf757600080fd5b50516007556009805460ff191690556005546001600160a01b03166379cc6790610d1f6116e8565b680ad78ebc5ac62000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b5050505050565b6000610da06105836116e8565b610ddb5760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b6005546000906001600160a01b03166379cc6790610df76116e8565b6802b5e3af16b18800006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610e5057600080fd5b505af1158015610e64573d6000803e3d6000fd5b5050600b546001600160a01b03169150610e7e90506116e8565b6001600160a01b03161480610ead5750600c546001600160a01b0316610ea26116e8565b6001600160a01b0316145b610ee85760405162461bcd60e51b8152600401808060200182810382526034815260200180611ab26034913960400191505060405180910390fd5b6000838152600e602052604090205461012c0142106108dd576000838152600d602052604090205460ff1615610f4f5760405162461bcd60e51b8152600401808060200182810382526023815260200180611b146023913960400191505060405180910390fd5b610f5a600a846116ec565b6005546001600160a01b03166340c10f19610f736116e8565b683635c9adc5dea000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610fcc57600080fd5b505af1158015610fe0573d6000803e3d6000fd5b505050506040513d6020811015610ff657600080fd5b50683635c9adc5dea0000090508361100c6116e8565b6001600160a01b03167f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd60405160405180910390a450506000818152600d60205260409020805460ff1916600190811790915561032e565b61107461106f6116e8565b611855565b565b611081610ad96116e8565b6110bc5760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6110e96105836116e8565b6111245760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b61112f600f82611780565b600081815260126020908152604080832042905560139091529020805460ff191690556006546003146111935760405162461bcd60e51b8152600401808060200182810382526030815260200180611a166030913960400191505060405180910390fd5b60005b60065481101561125957600681815481106111ad57fe5b6000918252602090912001546001600160a01b03166111ca6116e8565b6001600160a01b03161415611206576111e16116e8565b601080546001600160a01b0319166001600160a01b0392909216919091179055611251565b60116006828154811061121557fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b600101611196565b506112626116e8565b6001600160a01b03167f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373826040518082815260200191505060405180910390a26005546001600160a01b03166379cc67906112bb6116e8565b68056bc75e2d631000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610d7857600080fd5b61131f6105836116e8565b61135a5760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b610b8a8161189d565b6000805b6006548110156113b557826001600160a01b03166006828154811061138857fe5b6000918252602090912001546001600160a01b031614156113ad57600191505061032e565b600101611367565b50600092915050565b6113c96105836116e8565b6114045760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b600754811461144c576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b600854421180156114625750600854610e100142105b156115a05760095460ff16156114a95760405162461bcd60e51b8152600401808060200182810382526023815260200180611b146023913960400191505060405180910390fd5b6005546001600160a01b03166340c10f196114c26116e8565b68410d586a20a4c000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b505050506040513d602081101561154557600080fd5b50506009805460ff1916600117905568410d586a20a4c000006115666116e8565b6001600160a01b03167f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86060405160405180910390a3610b8a565b600554600354604080516340c10f1960e01b81526001600160a01b039283166004820152686c6b935b8bbd4000006024820152905191909216916340c10f199160448083019260209291908290030181600087803b15801561160157600080fd5b505af1158015611615573d6000803e3d6000fd5b505050506040513d602081101561162b57600080fd5b5050600354604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b61107461167c6116e8565b6118e5565b60006001600160a01b0382166116c85760405162461bcd60e51b8152600401808060200182810382526022815260200180611a906022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b6000805b8354811015611728578284828154811061170657fe5b906000526020600020015414156117205760019150611728565b6001016116f0565b508061177b576040805162461bcd60e51b815260206004820152601860248201527f436f756c646e27742066696e642079756f7220666c6167210000000000000000604482015290519081900360640190fd5b505050565b60005b82548110156117f4578183828154811061179957fe5b906000526020600020015414156117ec576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b600101611783565b5081546001810183556000928352602090922090910155565b61181e60008263ffffffff61192d16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61186660008263ffffffff6119ae16565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6118ae60018263ffffffff61192d16565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b6118f660018263ffffffff6119ae16565b6040516001600160a01b038216907f26b6063d78aefcf96f02ff06bc9822b5a623278253add7fffa5fb453db39981090600090a250565b6119378282611681565b15611989576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6119b88282611681565b6119f35760405162461bcd60e51b8152600401808060200182810382526021815260200180611a466021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65546865206d61726b6574206973207374696c6c206f70656e2c20636f6d65206261636b206c61746572526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e5465616d526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205465616d20726f6c65a265627a7a7231582030185a12e24099d679ed4f65273cde9aab22ad7ac5335077511717620229633264736f6c63430005110032526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_challenge",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "112": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "111": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "113": [
            589,
            607,
            true
          ]
        }
      },
      "14": {},
      "15": {
        "token_challenge.challengeStart": {
          "95": [
            4238,
            4270,
            true
          ],
          "101": [
            5653,
            5679,
            true
          ],
          "102": [
            5810,
            5843,
            false
          ]
        },
        "token_challenge.checkFlag": {
          "110": [
            7155,
            7173,
            true
          ]
        },
        "token_challenge.isRegistered": {
          "103": [
            2962,
            2994,
            false
          ]
        },
        "token_challenge.matchFlag": {
          "108": [
            7427,
            7445,
            false
          ],
          "109": [
            7569,
            7579,
            true
          ]
        },
        "token_challenge.overnightCheck": {
          "104": [
            3552,
            3578,
            true
          ],
          "105": [
            3613,
            3643,
            false
          ],
          "106": [
            3647,
            3687,
            false
          ],
          "107": [
            3710,
            3732,
            true
          ]
        },
        "token_challenge.overnightStart": {
          "96": [
            3189,
            3213,
            true
          ]
        },
        "token_challenge.register": {
          "88": [
            2229,
            2253,
            true
          ],
          "89": [
            2377,
            2409,
            false
          ],
          "90": [
            2496,
            2523,
            true
          ],
          "91": [
            2707,
            2733,
            true
          ]
        },
        "token_challenge.winDirectChallenge": {
          "97": [
            4820,
            4853,
            true
          ],
          "98": [
            4857,
            4890,
            true
          ],
          "99": [
            4961,
            5007,
            false
          ],
          "100": [
            5031,
            5065,
            true
          ]
        },
        "token_challenge.winTeamChallenge": {
          "92": [
            6295,
            6339,
            false
          ],
          "93": [
            6362,
            6394,
            true
          ],
          "94": [
            6503,
            6534,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "68": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "84": [
            328,
            391
          ],
          "85": [
            401,
            428
          ]
        },
        "Roles.has": {
          "66": [
            867,
            935
          ],
          "67": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "86": [
            581,
            645
          ],
          "87": [
            655,
            683
          ]
        }
      },
      "14": {
        "TeamRole._addTeam": {
          "80": [
            910,
            929
          ],
          "81": [
            939,
            962
          ]
        },
        "TeamRole._removeTeam": {
          "82": [
            1032,
            1054
          ],
          "83": [
            1064,
            1089
          ]
        },
        "TeamRole.addTeam": {
          "54": [
            747,
            764
          ]
        },
        "TeamRole.isTeam": {
          "0": [
            648,
            674
          ]
        },
        "TeamRole.renounceTeam": {
          "65": [
            818,
            843
          ]
        }
      },
      "15": {
        "token_challenge.challengeStart": {
          "20": [
            4190,
            4218
          ],
          "21": [
            4230,
            4307
          ],
          "22": [
            4320,
            4353
          ],
          "23": [
            4363,
            4395
          ],
          "24": [
            4406,
            4442
          ],
          "25": [
            4453,
            4486
          ],
          "26": [
            4498,
            4562
          ],
          "27": [
            4572,
            4609
          ],
          "45": [
            5523,
            5549
          ],
          "46": [
            5561,
            5592
          ],
          "47": [
            5602,
            5633
          ],
          "48": [
            5645,
            5732
          ],
          "49": [
            5862,
            5892
          ],
          "50": [
            5943,
            5982
          ],
          "51": [
            5789,
            5792
          ],
          "52": [
            6018,
            6056
          ],
          "53": [
            6068,
            6106
          ]
        },
        "token_challenge.checkFlag": {
          "73": [
            7147,
            7197
          ],
          "74": [
            7129,
            7132
          ],
          "75": [
            7218,
            7236
          ]
        },
        "token_challenge.isRegistered": {
          "55": [
            3013,
            3024
          ],
          "56": [
            2941,
            2944
          ],
          "57": [
            3055,
            3067
          ]
        },
        "token_challenge.matchFlag": {
          "69": [
            7469,
            7486
          ],
          "70": [
            7509,
            7514
          ],
          "71": [
            7401,
            7404
          ],
          "72": [
            7561,
            7608
          ]
        },
        "token_challenge.overnightCheck": {
          "58": [
            3544,
            3598
          ],
          "59": [
            3702,
            3772
          ],
          "60": [
            3788,
            3823
          ],
          "61": [
            3838,
            3858
          ],
          "62": [
            3872,
            3909
          ],
          "63": [
            3950,
            3985
          ],
          "64": [
            4000,
            4037
          ]
        },
        "token_challenge.overnightStart": {
          "30": [
            3181,
            3259
          ],
          "31": [
            3278,
            3308
          ],
          "32": [
            3319,
            3377
          ],
          "33": [
            3387,
            3408
          ],
          "34": [
            3420,
            3458
          ]
        },
        "token_challenge.register": {
          "2": [
            2221,
            2299
          ],
          "3": [
            2428,
            2453
          ],
          "4": [
            2356,
            2359
          ],
          "5": [
            2488,
            2554
          ],
          "6": [
            2566,
            2598
          ],
          "7": [
            2649,
            2669
          ],
          "8": [
            2699,
            2753
          ],
          "9": [
            2773,
            2801
          ]
        },
        "token_challenge.setExchange": {
          "28": [
            7730,
            7776
          ]
        },
        "token_challenge.setPayCoin": {
          "44": [
            7867,
            7900
          ]
        },
        "token_challenge.winDirectChallenge": {
          "35": [
            4756,
            4793
          ],
          "36": [
            4812,
            4947
          ],
          "37": [
            5023,
            5105
          ],
          "38": [
            5125,
            5153
          ],
          "39": [
            5169,
            5204
          ],
          "40": [
            5218,
            5270
          ],
          "41": [
            5285,
            5317
          ],
          "42": [
            5334,
            5345
          ]
        },
        "token_challenge.winTeamChallenge": {
          "10": [
            6242,
            6280
          ],
          "11": [
            6354,
            6434
          ],
          "12": [
            6458,
            6484
          ],
          "13": [
            6553,
            6588
          ],
          "14": [
            6606,
            6656
          ],
          "15": [
            6706,
            6741
          ],
          "16": [
            6759,
            6809
          ],
          "17": [
            6851,
            6881
          ],
          "18": [
            6898,
            6909
          ],
          "19": [
            6949,
            6961
          ]
        }
      },
      "9": {
        "AdminRole._addAdmin": {
          "76": [
            927,
            947
          ],
          "77": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "78": [
            1052,
            1075
          ],
          "79": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "29": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "1": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "43": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "Context",
    "Roles",
    "TeamRole"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c806378591bfd11610097578063b463a75c11610066578063b463a75c146102a7578063c3c5a547146102cd578063d5d35f95146102f3578063d9a431b31461031057610100565b806378591bfd1461023f5780638bad0c0a1461025c5780639f986fbb14610264578063a5c6a0221461028a57610100565b8063612b7543116100d3578063612b7543146101aa57806367b1f5df146101d657806370480275146101fc57806376a9e7b31461022257610100565b8063248519141461010557806324d7806c1461013f5780634420e48614610165578063561675e11461018d575b600080fd5b61012b6004803603602081101561011b57600080fd5b50356001600160a01b0316610318565b604080519115158252519081900360200190f35b61012b6004803603602081101561015557600080fd5b50356001600160a01b0316610333565b61018b6004803603602081101561017b57600080fd5b50356001600160a01b0316610345565b005b61012b600480360360208110156101a357600080fd5b5035610576565b61018b600480360360408110156101c057600080fd5b506001600160a01b0381351690602001356108e7565b61018b600480360360208110156101ec57600080fd5b50356001600160a01b0316610ace565b61018b6004803603602081101561021257600080fd5b50356001600160a01b0316610b3b565b61018b6004803603602081101561023857600080fd5b5035610b8d565b61012b6004803603602081101561025557600080fd5b5035610d93565b61018b611064565b61018b6004803603602081101561027a57600080fd5b50356001600160a01b0316611076565b61018b600480360360208110156102a057600080fd5b50356110de565b61018b600480360360208110156102bd57600080fd5b50356001600160a01b0316611314565b61012b600480360360208110156102e357600080fd5b50356001600160a01b0316611363565b61018b6004803603602081101561030957600080fd5b50356113be565b61018b611671565b600061032b60018363ffffffff61168116565b90505b919050565b600061032b818363ffffffff61168116565b60048054604080516347535d7b60e01b815290516000936001600160a01b03909316926347535d7b92808201926020929091829003018186803b15801561038b57600080fd5b505afa15801561039f573d6000803e3d6000fd5b505050506040513d60208110156103b557600080fd5b5051156103f35760405162461bcd60e51b8152600401808060200182810382526029815260200180611a676029913960400191505060405180910390fd5b60005b60065481101561043f57826001600160a01b03166006828154811061041757fe5b6000918252602090912001546001600160a01b0316141561043757600191505b6001016103f6565b508015610493576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384161790556104e782610318565b6104f4576104f482611314565b6006546003101561053e576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b60006105886105836116e8565b610318565b6105c35760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b6005546000906001600160a01b03166379cc67906105df6116e8565b68056bc75e2d631000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561063857600080fd5b505af115801561064c573d6000803e3d6000fd5b50505060008481526012602052604090205461012c01421090506108dd5760008381526013602052604090205460ff16156106b85760405162461bcd60e51b8152600401808060200182810382526023815260200180611b146023913960400191505060405180910390fd5b6106c3600f846116ec565b6010546001600160a01b03166106d76116e8565b6001600160a01b031614156107d2576005546001600160a01b03166340c10f196106ff6116e8565b685150ae84a8cdf000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561075857600080fd5b505af115801561076c573d6000803e3d6000fd5b505050506040513d602081101561078257600080fd5b50685150ae84a8cdf000009050836107986116e8565b6001600160a01b03167ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802960405160405180910390a46108ba565b6005546001600160a01b03166340c10f196107eb6116e8565b683635c9adc5dea000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561084457600080fd5b505af1158015610858573d6000803e3d6000fd5b505050506040513d602081101561086e57600080fd5b50683635c9adc5dea000009050836108846116e8565b6001600160a01b03167ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802960405160405180910390a45b50506000818152601360205260409020805460ff1916600190811790915561032e565b600091505061032e565b6108f26105836116e8565b61092d5760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b610938600a82611780565b816001600160a01b031661094a6116e8565b6001600160a01b031614156109a6576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b6000818152600e602052604090204290556109bf6116e8565b600b80546001600160a01b03199081166001600160a01b03938416178255600c80549091168584161781556000848152600d6020908152604091829020805460ff1916905591549254815186815291519385169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106929181900390910190a36005546001600160a01b03166379cc6790610a596116e8565b6802b5e3af16b18800006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610ab257600080fd5b505af1158015610ac6573d6000803e3d6000fd5b505050505050565b610ade610ad96116e8565b610333565b610b195760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610b46610ad96116e8565b610b815760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b610b8a8161180d565b50565b610b98610ad96116e8565b610bd35760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b60048054604080516347535d7b60e01b815290516001600160a01b03909216926347535d7b928282019260209290829003018186803b158015610c1557600080fd5b505afa158015610c29573d6000803e3d6000fd5b505050506040513d6020811015610c3f57600080fd5b505115610c7d5760405162461bcd60e51b8152600401808060200182810382526029815260200180611a676029913960400191505060405180910390fd5b42600855600480546040805163a967119360e01b8152928301849052516001600160a01b039091169163a96711939160248083019260209291908290030181600087803b158015610ccd57600080fd5b505af1158015610ce1573d6000803e3d6000fd5b505050506040513d6020811015610cf757600080fd5b50516007556009805460ff191690556005546001600160a01b03166379cc6790610d1f6116e8565b680ad78ebc5ac62000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b5050505050565b6000610da06105836116e8565b610ddb5760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b6005546000906001600160a01b03166379cc6790610df76116e8565b6802b5e3af16b18800006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610e5057600080fd5b505af1158015610e64573d6000803e3d6000fd5b5050600b546001600160a01b03169150610e7e90506116e8565b6001600160a01b03161480610ead5750600c546001600160a01b0316610ea26116e8565b6001600160a01b0316145b610ee85760405162461bcd60e51b8152600401808060200182810382526034815260200180611ab26034913960400191505060405180910390fd5b6000838152600e602052604090205461012c0142106108dd576000838152600d602052604090205460ff1615610f4f5760405162461bcd60e51b8152600401808060200182810382526023815260200180611b146023913960400191505060405180910390fd5b610f5a600a846116ec565b6005546001600160a01b03166340c10f19610f736116e8565b683635c9adc5dea000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610fcc57600080fd5b505af1158015610fe0573d6000803e3d6000fd5b505050506040513d6020811015610ff657600080fd5b50683635c9adc5dea0000090508361100c6116e8565b6001600160a01b03167f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd60405160405180910390a450506000818152600d60205260409020805460ff1916600190811790915561032e565b61107461106f6116e8565b611855565b565b611081610ad96116e8565b6110bc5760405162461bcd60e51b815260040180806020018281038252602e815260200180611ae6602e913960400191505060405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6110e96105836116e8565b6111245760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b61112f600f82611780565b600081815260126020908152604080832042905560139091529020805460ff191690556006546003146111935760405162461bcd60e51b8152600401808060200182810382526030815260200180611a166030913960400191505060405180910390fd5b60005b60065481101561125957600681815481106111ad57fe5b6000918252602090912001546001600160a01b03166111ca6116e8565b6001600160a01b03161415611206576111e16116e8565b601080546001600160a01b0319166001600160a01b0392909216919091179055611251565b60116006828154811061121557fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b600101611196565b506112626116e8565b6001600160a01b03167f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373826040518082815260200191505060405180910390a26005546001600160a01b03166379cc67906112bb6116e8565b68056bc75e2d631000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610d7857600080fd5b61131f6105836116e8565b61135a5760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b610b8a8161189d565b6000805b6006548110156113b557826001600160a01b03166006828154811061138857fe5b6000918252602090912001546001600160a01b031614156113ad57600191505061032e565b600101611367565b50600092915050565b6113c96105836116e8565b6114045760405162461bcd60e51b815260040180806020018281038252602c815260200180611b37602c913960400191505060405180910390fd5b600754811461144c576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b600854421180156114625750600854610e100142105b156115a05760095460ff16156114a95760405162461bcd60e51b8152600401808060200182810382526023815260200180611b146023913960400191505060405180910390fd5b6005546001600160a01b03166340c10f196114c26116e8565b68410d586a20a4c000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561151b57600080fd5b505af115801561152f573d6000803e3d6000fd5b505050506040513d602081101561154557600080fd5b50506009805460ff1916600117905568410d586a20a4c000006115666116e8565b6001600160a01b03167f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86060405160405180910390a3610b8a565b600554600354604080516340c10f1960e01b81526001600160a01b039283166004820152686c6b935b8bbd4000006024820152905191909216916340c10f199160448083019260209291908290030181600087803b15801561160157600080fd5b505af1158015611615573d6000803e3d6000fd5b505050506040513d602081101561162b57600080fd5b5050600354604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b61107461167c6116e8565b6118e5565b60006001600160a01b0382166116c85760405162461bcd60e51b8152600401808060200182810382526022815260200180611a906022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b6000805b8354811015611728578284828154811061170657fe5b906000526020600020015414156117205760019150611728565b6001016116f0565b508061177b576040805162461bcd60e51b815260206004820152601860248201527f436f756c646e27742066696e642079756f7220666c6167210000000000000000604482015290519081900360640190fd5b505050565b60005b82548110156117f4578183828154811061179957fe5b906000526020600020015414156117ec576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b600101611783565b5081546001810183556000928352602090922090910155565b61181e60008263ffffffff61192d16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61186660008263ffffffff6119ae16565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6118ae60018263ffffffff61192d16565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b6118f660018263ffffffff6119ae16565b6040516001600160a01b038216907f26b6063d78aefcf96f02ff06bc9822b5a623278253add7fffa5fb453db39981090600090a250565b6119378282611681565b15611989576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6119b88282611681565b6119f35760405162461bcd60e51b8152600401808060200182810382526021815260200180611a466021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65546865206d61726b6574206973207374696c6c206f70656e2c20636f6d65206261636b206c61746572526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e5465616d526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205465616d20726f6c65a265627a7a7231582030185a12e24099d679ed4f65273cde9aab22ad7ac5335077511717620229633264736f6c63430005110032",
  "deployedSourceMap": "167:7749:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:7749:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:103:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;578:103:14;-1:-1:-1;;;;;578:103:14;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;2120:689:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2120:689:15;-1:-1:-1;;;;;2120:689:15;;:::i;:::-;;6121:858;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6121:858:15;;:::i;4098:533::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4098:533:15;;;;;;;;:::i;7655:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7655:129:15;-1:-1:-1;;;;;7655:129:15;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;3104:363:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3104:363:15;;:::i;4637:779::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4637:779:15;;:::i;791:75:9:-;;;:::i;7794:114:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7794:114:15;-1:-1:-1;;;;;7794:114:15;;:::i;5452:663::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5452:663:15;;:::i;687:84:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;687:84:14;-1:-1:-1;;;;;687:84:14;;:::i;2815:260:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2815:260:15;-1:-1:-1;;;;;2815:260:15;;:::i;3473:591::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3473:591:15;;:::i;777:73:14:-;;;:::i;578:103::-;632:4;655:19;:6;666:7;655:19;:10;:19;:::i;:::-;648:26;;578:103;;;;:::o;587:105:9:-;642:4;665:20;642:4;677:7;665:20;:11;:20;:::i;2120:689:15:-;2231:12;;;:21;;;-1:-1:-1;;;2231:21:15;;;;2178:23;;-1:-1:-1;;;;;2231:12:15;;;;:19;;:21;;;;;;;;;;;;;:12;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;2231:21:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2231:21:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2231:21:15;2229:24;2221:78;;;;-1:-1:-1;;;2221:78:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:9;2310:169;2333:14;:21;2329:25;;2310:169;;;2398:11;-1:-1:-1;;;;;2377:32:15;:14;2392:1;2377:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2377:17:15;:32;2374:95;;;2449:4;2428:25;;2374:95;2356:3;;2310:169;;;-1:-1:-1;2496:27:15;;2488:66;;;;;-1:-1:-1;;;2488:66:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:14;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2566:32:15;;;;;;;;-1:-1:-1;;;;;;2566:32:15;-1:-1:-1;;;;;2566:32:15;;;;;2614:19;2566:32;2614:6;:19::i;:::-;2609:71;;2649:20;2657:11;2649:7;:20::i;:::-;2707:14;:21;2732:1;-1:-1:-1;2707:26:15;2699:54;;;;;-1:-1:-1;;;2699:54:15;;;;;;;;;;;;-1:-1:-1;;;2699:54:15;;;;;;;;;;;;;;;2778:23;;-1:-1:-1;;;;;2778:23:15;;;;;;;;2120:689;;:::o;6121:858::-;6187:4;485:20:14;492:12;:10;:12::i;:::-;485:6;:20::i;:::-;477:77;;;;-1:-1:-1;;;477:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6242:7:15;;6207:15;;-1:-1:-1;;;;;6242:7:15;:16;6259:12;:10;:12::i;:::-;6273:6;6242:38;;;;;;;;;;;;;-1:-1:-1;;;;;6242:38:15;-1:-1:-1;;;;;6242:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6242:38:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;6302:25:15;;;;:19;:25;;;;;;6330:9;6302:37;6295:3;:44;;-1:-1:-1;6292:681:15;;6362:23;;;;:17;:23;;;;;;;;:32;6354:80;;;;-1:-1:-1;;;6354:80:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6458:26;6468:9;6479:4;6458:9;:26::i;:::-;6519:15;;-1:-1:-1;;;;;6519:15:15;6503:12;:10;:12::i;:::-;-1:-1:-1;;;;;6503:31:15;;6500:324;;;6553:7;;-1:-1:-1;;;;;6553:7:15;:12;6566;:10;:12::i;:::-;6580:7;6553:35;;;;;;;;;;;;;-1:-1:-1;;;;;6553:35:15;-1:-1:-1;;;;;6553:35:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6553:35:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6553:35:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6648:7:15;;-1:-1:-1;6642:4:15;6628:12;:10;:12::i;:::-;-1:-1:-1;;;;;6611:45:15;;;;;;;;;;;6500:324;;;6706:7;;-1:-1:-1;;;;;6706:7:15;:12;6719;:10;:12::i;:::-;6733:7;6706:35;;;;;;;;;;;;;-1:-1:-1;;;;;6706:35:15;-1:-1:-1;;;;;6706:35:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6706:35:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6706:35:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6801:7:15;;-1:-1:-1;6795:4:15;6781:12;:10;:12::i;:::-;-1:-1:-1;;;;;6764:45:15;;;;;;;;;;;6500:324;-1:-1:-1;;6851:23:15;;;;:17;:23;;;;;:30;;-1:-1:-1;;6851:30:15;6877:4;6851:30;;;;;;6898:11;;6292:681;6956:5;6949:12;;;;;4098:533;485:20:14;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4190:28:15;4200:11;4213:4;4190:9;:28::i;:::-;4254:16;-1:-1:-1;;;;;4238:32:15;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4238:32:15;;;4230:77;;;;;-1:-1:-1;;;4230:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4320:27;;;;:21;:27;;;;;4350:3;4320:33;;4383:12;:10;:12::i;:::-;4363:17;:32;;-1:-1:-1;;;;;;4363:32:15;;;-1:-1:-1;;;;;4363:32:15;;;;;;4406:17;:36;;;;;;;;;;;-1:-1:-1;4453:25:15;;;:19;:25;;;;;;;;;:33;;-1:-1:-1;;4453:33:15;;;4538:17;;4519;;4503:59;;;;;;;4538:17;;;;4519;;4503:59;;;;;;;;;;;4572:7;;-1:-1:-1;;;;;4572:7:15;:16;4589:12;:10;:12::i;:::-;4603:5;4572:37;;;;;;;;;;;;;-1:-1:-1;;;;;4572:37:15;-1:-1:-1;;;;;4572:37:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4572:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4572:37:15;;;;4098:533;;:::o;7655:129::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7730:12:15;:46;;-1:-1:-1;;;;;;7730:46:15;-1:-1:-1;;;;;7730:46:15;;;;;;;;;;7655:129::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;3104:363:15:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:12:15;;;:21;;;-1:-1:-1;;;3191:21:15;;;;-1:-1:-1;;;;;3191:12:15;;;;:19;;:21;;;;;;;;;;;;:12;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;3191:21:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3191:21:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3191:21:15;3189:24;3181:78;;;;-1:-1:-1;;;3181:78:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:3;3278:24;:30;3336:12;;;:41;;;-1:-1:-1;;;3336:41:15;;;;;;;;;-1:-1:-1;;;;;3336:12:15;;;;:24;;:41;;;;;;;;;;;;;;:12;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;3336:41:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3336:41:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3336:41:15;3319:14;:58;3387:13;:21;;-1:-1:-1;;3387:21:15;;;3420:7;;-1:-1:-1;;;;;3420:7:15;:16;3437:12;:10;:12::i;:::-;3451:6;3420:38;;;;;;;;;;;;;-1:-1:-1;;;;;3420:38:15;-1:-1:-1;;;;;3420:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3420:38:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3420:38:15;;;;3104:363;:::o;4637:779::-;4705:4;485:20:14;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4756:7:15;;4721:15;;-1:-1:-1;;;;;4756:7:15;:16;4773:12;:10;:12::i;:::-;4787:5;4756:37;;;;;;;;;;;;;-1:-1:-1;;;;;4756:37:15;-1:-1:-1;;;;;4756:37:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4756:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4836:17:15;;-1:-1:-1;;;;;4836:17:15;;-1:-1:-1;4820:12:15;;-1:-1:-1;4820:10:15;:12::i;:::-;-1:-1:-1;;;;;4820:33:15;;:70;;;-1:-1:-1;4873:17:15;;-1:-1:-1;;;;;4873:17:15;4857:12;:10;:12::i;:::-;-1:-1:-1;;;;;4857:33:15;;4820:70;4812:135;;;;-1:-1:-1;;;4812:135:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4968:27;;;;:21;:27;;;;;;4998:9;4968:39;4961:3;:46;4958:451;;5031:25;;;;:19;:25;;;;;;;;:34;5023:82;;;;-1:-1:-1;;;5023:82:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5125:28;5135:11;5148:4;5125:9;:28::i;:::-;5169:7;;-1:-1:-1;;;;;5169:7:15;:12;5182;:10;:12::i;:::-;5196:7;5169:35;;;;;;;;;;;;;-1:-1:-1;;;;;5169:35:15;-1:-1:-1;;;;;5169:35:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5169:35:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5169:35:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5262:7:15;;-1:-1:-1;5256:4:15;5242:12;:10;:12::i;:::-;-1:-1:-1;;;;;5223:47:15;;;;;;;;;;;-1:-1:-1;;5285:25:15;;;;:19;:25;;;;;:32;;-1:-1:-1;;5285:32:15;5313:4;5285:32;;;;;;5334:11;;791:75:9;833:26;846:12;:10;:12::i;:::-;833;:26::i;:::-;791:75::o;7794:114:15:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7867:7:15;:33;;-1:-1:-1;;;;;;7867:33:15;-1:-1:-1;;;;;7867:33:15;;;;;;;;;;7794:114::o;5452:663::-;485:20:14;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5523:26:15;5533:9;5544:4;5523:9;:26::i;:::-;5561:25;;;;:19;:25;;;;;;;;5589:3;5561:31;;5602:17;:23;;;;;:31;;-1:-1:-1;;5602:31:15;;;5653:14;:21;5678:1;5653:26;5645:87;;;;-1:-1:-1;;;5645:87:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5747:9;5743:265;5766:14;:21;5762:25;;5743:265;;;5826:14;5841:1;5826:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5826:17:15;5810:12;:10;:12::i;:::-;-1:-1:-1;;;;;5810:33:15;;5807:191;;;5880:12;:10;:12::i;:::-;5862:15;:30;;-1:-1:-1;;;;;;5862:30:15;-1:-1:-1;;;;;5862:30:15;;;;;;;;;;5807:191;;;5943:15;5964:14;5979:1;5964:17;;;;;;;;;;;;;;;;;;;;27:10:-1;;5964:17:15;23:18:-1;;45:23;;5943:39:15;;;;;;;;;;-1:-1:-1;;;;;;5943:39:15;-1:-1:-1;;;;;5964:17:15;;;5943:39;;;;;;5807:191;5789:3;;5743:265;;;;6037:12;:10;:12::i;:::-;-1:-1:-1;;;;;6023:33:15;;6051:4;6023:33;;;;;;;;;;;;;;;;;;6068:7;;-1:-1:-1;;;;;6068:7:15;:16;6085:12;:10;:12::i;:::-;6099:6;6068:38;;;;;;;;;;;;;-1:-1:-1;;;;;6068:38:15;-1:-1:-1;;;;;6068:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;687:84:14;485:20;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:17;756:7;747:8;:17::i;2815:260:15:-;2880:4;;2895:155;2918:14;:21;2914:25;;2895:155;;;2983:11;-1:-1:-1;;;;;2962:32:15;:14;2977:1;2962:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2962:17:15;:32;2959:81;;;3020:4;3013:11;;;;;2959:81;2941:3;;2895:155;;;-1:-1:-1;3062:5:15;;2815:260;-1:-1:-1;;2815:260:15:o;3473:591::-;485:20:14;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3564:14:15;;3552:8;:26;3544:54;;;;;-1:-1:-1;;;3544:54:15;;;;;;;;;;;;-1:-1:-1;;;3544:54:15;;;;;;;;;;;;;;;3619:24;;3613:3;:30;:74;;;;;3653:24;;3680:7;3653:34;3647:3;:40;3613:74;3609:440;;;3710:13;;;;:22;3702:70;;;;-1:-1:-1;;;3702:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3788:7;;-1:-1:-1;;;;;3788:7:15;:12;3801;:10;:12::i;:::-;3815:7;3788:35;;;;;;;;;;;;;-1:-1:-1;;;;;3788:35:15;-1:-1:-1;;;;;3788:35:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3788:35:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3788:35:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3838:13:15;:20;;-1:-1:-1;;3838:20:15;3854:4;3838:20;;;3901:7;3887:12;:10;:12::i;:::-;-1:-1:-1;;;;;3877:32:15;;;;;;;;;;;3609:440;;;3950:7;;3963:12;;3950:35;;;-1:-1:-1;;;3950:35:15;;-1:-1:-1;;;;;3963:12:15;;;3950:35;;;;3977:7;3950:35;;;;;;:7;;;;;:12;;:35;;;;;;;;;;;;;;:7;;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;3950:35:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3950:35:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;4015:12:15;;4005:32;;4029:7;;-1:-1:-1;;;;;4015:12:15;;4005:32;;4015:12;;4005:32;3473:591;:::o;777:73:14:-;818:25;830:12;:10;:12::i;:::-;818:11;:25::i;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;7250:366:15:-;7329:15;;7363:185;7386:13;;7382:17;;7363:185;;;7440:5;7427:6;7434:1;7427:9;;;;;;;;;;;;;;;;:18;7423:111;;;7482:4;7469:17;;7509:5;;7423:111;7401:3;;7363:185;;;;7569:10;7561:47;;;;;-1:-1:-1;;;7561:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;7250:366;;;:::o;7011:233::-;7095:9;7091:117;7114:13;;7110:17;;7091:117;;;7168:5;7155:6;7162:1;7155:9;;;;;;;;;;;;;;;;:18;;7147:50;;;;;-1:-1:-1;;;7147:50:15;;;;;;;;;;;;-1:-1:-1;;;7147:50:15;;;;;;;;;;;;;;;7129:3;;7091:117;;;-1:-1:-1;27:10;;39:1;23:18;;45:23;;-1:-1;7218:18:15;;;;;;;;;;;7011:233::o;872:116:9:-;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;994:124::-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;856:113:14:-;910:19;:6;921:7;910:19;:10;:19;:::i;:::-;944:18;;-1:-1:-1;;;;;944:18:14;;;;;;;;856:113;:::o;975:121::-;1032:22;:6;1046:7;1032:22;:13;:22;:::i;:::-;1069:20;;-1:-1:-1;;;;;1069:20:14;;;;;;;;975:121;:::o;260:175:1:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    167,
    7916
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78591BFD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB463A75C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB463A75C EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD5D35F95 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xD9A431B3 EQ PUSH2 0x310 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x78591BFD EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x9F986FBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA5C6A022 EQ PUSH2 0x28A JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x612B7543 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x612B7543 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x67B1F5DF EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x76A9E7B3 EQ PUSH2 0x222 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x24851914 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x561675E1 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x333 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x576 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xACE JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1076 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1363 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1681 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1681 AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x47535D7B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x47535D7B SWAP3 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A67 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x43F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x417 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x437 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3F6 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920726567697374657265642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x4E7 DUP3 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x4F4 JUMPI PUSH2 0x4F4 DUP3 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x3 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2A37B79036B0B73C903A32B0B6B997 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x588 PUSH2 0x583 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B37 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0x5DF PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C ADD TIMESTAMP LT SWAP1 POP PUSH2 0x8DD JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B14 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C3 PUSH1 0xF DUP5 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D7 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0x6FF PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x5150AE84A8CDF00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH9 0x5150AE84A8CDF00000 SWAP1 POP DUP4 PUSH2 0x798 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0x7EB PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH9 0x3635C9ADC5DEA00000 SWAP1 POP DUP4 PUSH2 0x884 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x32E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0x583 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B37 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x938 PUSH1 0xA DUP3 PUSH2 0x1780 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x94A PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616464726573736573206D75737420626520646966666572656E742E PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0x9BF PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR DUP3 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND DUP6 DUP5 AND OR DUP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 SLOAD SWAP3 SLOAD DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 DUP6 AND SWAP5 AND SWAP3 PUSH32 0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0xA59 PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xADE PUSH2 0xAD9 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH2 0xB19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB46 PUSH2 0xAD9 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8A DUP2 PUSH2 0x180D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB98 PUSH2 0xAD9 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x47535D7B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x47535D7B SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A67 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9671193 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9671193 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0xD1F PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0xAD78EBC5AC6200000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA0 PUSH2 0x583 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0xDDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B37 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0xDF7 PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xE7E SWAP1 POP PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEAD JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEA2 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AB2 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C ADD TIMESTAMP LT PUSH2 0x8DD JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B14 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5A PUSH1 0xA DUP5 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0xF73 PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH9 0x3635C9ADC5DEA00000 SWAP1 POP DUP4 PUSH2 0x100C PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x32E JUMP JUMPDEST PUSH2 0x1074 PUSH2 0x106F PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1855 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1081 PUSH2 0xAD9 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10E9 PUSH2 0x583 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B37 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112F PUSH1 0xF DUP3 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x3 EQ PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A16 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11AD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11CA PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1206 JUMPI PUSH2 0x11E1 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1215 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x1196 JUMP JUMPDEST POP PUSH2 0x1262 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0x12BB PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131F PUSH2 0x583 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x135A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B37 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8A DUP2 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x13B5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1388 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x13AD JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1367 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C9 PUSH2 0x583 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B37 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 EQ PUSH2 0x144C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2BB937B7339034B210383934B1B297 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1462 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0xE10 ADD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B14 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0x14C2 PUSH2 0x16E8 JUMP JUMPDEST PUSH9 0x410D586A20A4C00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x152F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH9 0x410D586A20A4C00000 PUSH2 0x1566 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x6C6B935B8BBD400000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH9 0x6C6B935B8BBD400000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x1074 PUSH2 0x167C PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A90 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x1728 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1706 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x1720 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16F0 JUMP JUMPDEST POP DUP1 PUSH2 0x177B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756C646E27742066696E642079756F7220666C6167210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x17F4 JUMPI DUP2 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1799 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x17EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x466C616720616C7265616479207573656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x1783 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x181E PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x192D AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1866 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x19AE AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x18AE PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x192D AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x3F5F1DB80208F0D453083A86E16909CECC1E95E2618D5D927C93ACE22B8200FC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x18F6 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x19AE AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x26B6063D78AEFCF96F02FF06BC9822B5A623278253ADD7FFFA5FB453DB399810 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1937 DUP3 DUP3 PUSH2 0x1681 JUMP JUMPDEST ISZERO PUSH2 0x1989 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x19B8 DUP3 DUP3 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A46 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID NUMBER PUSH9 0x616C6C656E67652063 PUSH2 0x6E27 PUSH21 0x20737461727420756E74696C20616C6C207465616D PUSH20 0x207265676974657265642E526F6C65733A206163 PUSH4 0x6F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65546865206D PUSH2 0x726B PUSH6 0x742069732073 PUSH21 0x696C6C206F70656E2C20636F6D65206261636B206C PUSH2 0x7465 PUSH19 0x526F6C65733A206163636F756E742069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737359 PUSH16 0x75206D75737420626520656974686572 KECCAK256 PUSH21 0x6865206368616C6C656E676572206F722074686520 PUSH4 0x68616C6C PUSH6 0x6E6765642E41 PUSH5 0x6D696E526F PUSH13 0x653A2063616C6C657220646F65 PUSH20 0x206E6F742068617665207468652041646D696E20 PUSH19 0x6F6C65546865206368616C6C656E6765206861 PUSH20 0x20616C7265616479206265656E20776F6E2E5465 PUSH2 0x6D52 PUSH16 0x6C653A2063616C6C657220646F657320 PUSH15 0x6F7420686176652074686520546561 PUSH14 0x20726F6C65A265627A7A72315820 ADDRESS XOR GAS SLT 0xE2 BLOCKHASH SWAP10 0xD6 PUSH26 0xED4F65273CDE9AAB22AD7AC5335077511717620229633264736F PUSH13 0x63430005110032000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        167,
        7916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        167,
        7916
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x78591BFD"
    },
    "38": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB463A75C"
    },
    "49": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "GT",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB463A75C"
    },
    "60": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A7"
    },
    "64": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC3C5A547"
    },
    "71": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CD"
    },
    "75": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD5D35F95"
    },
    "82": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F3"
    },
    "86": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD9A431B3"
    },
    "93": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "94": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x310"
    },
    "97": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "98": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "101": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMP",
      "path": "15"
    },
    "102": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "103": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "104": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x78591BFD"
    },
    "109": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23F"
    },
    "113": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "114": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "115": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8BAD0C0A"
    },
    "120": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "121": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25C"
    },
    "124": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9F986FBB"
    },
    "131": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x264"
    },
    "135": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA5C6A022"
    },
    "142": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "143": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28A"
    },
    "146": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "147": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "150": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMP",
      "path": "15"
    },
    "151": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "152": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "153": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x612B7543"
    },
    "158": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "GT",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "163": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "164": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x612B7543"
    },
    "169": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "170": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AA"
    },
    "173": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "174": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "175": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x67B1F5DF"
    },
    "180": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "181": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D6"
    },
    "184": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "185": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "186": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70480275"
    },
    "191": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "192": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FC"
    },
    "195": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "196": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x76A9E7B3"
    },
    "202": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "203": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x222"
    },
    "206": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "207": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "210": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMP",
      "path": "15"
    },
    "211": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "212": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "213": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x24851914"
    },
    "218": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "223": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "224": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x24D7806C"
    },
    "229": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "230": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13F"
    },
    "233": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "234": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "235": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4420E486"
    },
    "240": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "241": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x165"
    },
    "244": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "245": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "246": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x561675E1"
    },
    "251": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "EQ",
      "path": "15"
    },
    "252": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18D"
    },
    "255": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "256": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "257": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "DUP1",
      "path": "15"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        167,
        7916
      ],
      "op": "REVERT",
      "path": "15"
    },
    "261": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "262": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12B"
    },
    "265": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "267": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP1",
      "path": "14"
    },
    "268": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "269": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SUB",
      "path": "14"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "LT"
    },
    "274": {
      "op": "ISZERO"
    },
    "275": {
      "op": "PUSH2",
      "value": "0x11B"
    },
    "278": {
      "op": "JUMPI"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "281": {
      "op": "DUP1"
    },
    "282": {
      "op": "REVERT"
    },
    "283": {
      "op": "JUMPDEST"
    },
    "284": {
      "op": "POP"
    },
    "285": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "AND",
      "path": "14"
    },
    "295": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x318"
    },
    "298": {
      "fn": "TeamRole.isTeam",
      "jump": "i",
      "offset": [
        578,
        681
      ],
      "op": "JUMP",
      "path": "14"
    },
    "299": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "300": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "302": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP1",
      "path": "14"
    },
    "303": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "304": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "305": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "306": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "307": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP3",
      "path": "14"
    },
    "308": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "309": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "310": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "311": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP2",
      "path": "14"
    },
    "312": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "313": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SUB",
      "path": "14"
    },
    "314": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "316": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ADD",
      "path": "14"
    },
    "317": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "318": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "RETURN",
      "path": "14"
    },
    "319": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "320": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12B"
    },
    "323": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "325": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "326": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "327": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "DUP2"
    },
    "331": {
      "op": "LT"
    },
    "332": {
      "op": "ISZERO"
    },
    "333": {
      "op": "PUSH2",
      "value": "0x155"
    },
    "336": {
      "op": "JUMPI"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "339": {
      "op": "DUP1"
    },
    "340": {
      "op": "REVERT"
    },
    "341": {
      "op": "JUMPDEST"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "350": {
      "op": "SHL"
    },
    "351": {
      "op": "SUB"
    },
    "352": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "353": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x333"
    },
    "356": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "357": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "358": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "361": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "363": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "DUP1",
      "path": "15"
    },
    "364": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "365": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "SUB",
      "path": "15"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "op": "DUP2"
    },
    "369": {
      "op": "LT"
    },
    "370": {
      "op": "ISZERO"
    },
    "371": {
      "op": "PUSH2",
      "value": "0x17B"
    },
    "374": {
      "op": "JUMPI"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "377": {
      "op": "DUP1"
    },
    "378": {
      "op": "REVERT"
    },
    "379": {
      "op": "JUMPDEST"
    },
    "380": {
      "op": "POP"
    },
    "381": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "AND",
      "path": "15"
    },
    "391": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x345"
    },
    "394": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2120,
        2809
      ],
      "op": "JUMP",
      "path": "15"
    },
    "395": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "396": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "STOP",
      "path": "15"
    },
    "397": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "398": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B"
    },
    "401": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "403": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "DUP1",
      "path": "15"
    },
    "404": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "405": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "SUB",
      "path": "15"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "408": {
      "op": "DUP2"
    },
    "409": {
      "op": "LT"
    },
    "410": {
      "op": "ISZERO"
    },
    "411": {
      "op": "PUSH2",
      "value": "0x1A3"
    },
    "414": {
      "op": "JUMPI"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "417": {
      "op": "DUP1"
    },
    "418": {
      "op": "REVERT"
    },
    "419": {
      "op": "JUMPDEST"
    },
    "420": {
      "op": "POP"
    },
    "421": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "422": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x576"
    },
    "425": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6121,
        6979
      ],
      "op": "JUMP",
      "path": "15"
    },
    "426": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "427": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "430": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "432": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "DUP1",
      "path": "15"
    },
    "433": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "434": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "SUB",
      "path": "15"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "437": {
      "op": "DUP2"
    },
    "438": {
      "op": "LT"
    },
    "439": {
      "op": "ISZERO"
    },
    "440": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "443": {
      "op": "JUMPI"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "446": {
      "op": "DUP1"
    },
    "447": {
      "op": "REVERT"
    },
    "448": {
      "op": "JUMPDEST"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "SUB"
    },
    "458": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "DUP2",
      "path": "15"
    },
    "459": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "460": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "AND",
      "path": "15"
    },
    "461": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "462": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "464": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "ADD",
      "path": "15"
    },
    "465": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "466": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8E7"
    },
    "469": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4098,
        4631
      ],
      "op": "JUMP",
      "path": "15"
    },
    "470": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "471": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "474": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "476": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "DUP1",
      "path": "15"
    },
    "477": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "478": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "SUB",
      "path": "15"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "481": {
      "op": "DUP2"
    },
    "482": {
      "op": "LT"
    },
    "483": {
      "op": "ISZERO"
    },
    "484": {
      "op": "PUSH2",
      "value": "0x1EC"
    },
    "487": {
      "op": "JUMPI"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "op": "REVERT"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "AND",
      "path": "15"
    },
    "504": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xACE"
    },
    "507": {
      "fn": "token_challenge.setExchange",
      "jump": "i",
      "offset": [
        7655,
        7784
      ],
      "op": "JUMP",
      "path": "15"
    },
    "508": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "509": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18B"
    },
    "512": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "514": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "515": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "516": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "519": {
      "op": "DUP2"
    },
    "520": {
      "op": "LT"
    },
    "521": {
      "op": "ISZERO"
    },
    "522": {
      "op": "PUSH2",
      "value": "0x212"
    },
    "525": {
      "op": "JUMPI"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "528": {
      "op": "DUP1"
    },
    "529": {
      "op": "REVERT"
    },
    "530": {
      "op": "JUMPDEST"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "542": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3B"
    },
    "545": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "546": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "547": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "550": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "552": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "DUP1",
      "path": "15"
    },
    "553": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "554": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "SUB",
      "path": "15"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "557": {
      "op": "DUP2"
    },
    "558": {
      "op": "LT"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "563": {
      "op": "JUMPI"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "566": {
      "op": "DUP1"
    },
    "567": {
      "op": "REVERT"
    },
    "568": {
      "op": "JUMPDEST"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "571": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB8D"
    },
    "574": {
      "fn": "token_challenge.overnightStart",
      "jump": "i",
      "offset": [
        3104,
        3467
      ],
      "op": "JUMP",
      "path": "15"
    },
    "575": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "576": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B"
    },
    "579": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "581": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "DUP1",
      "path": "15"
    },
    "582": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "583": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "SUB",
      "path": "15"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "LT"
    },
    "588": {
      "op": "ISZERO"
    },
    "589": {
      "op": "PUSH2",
      "value": "0x255"
    },
    "592": {
      "op": "JUMPI"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "595": {
      "op": "DUP1"
    },
    "596": {
      "op": "REVERT"
    },
    "597": {
      "op": "JUMPDEST"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "600": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD93"
    },
    "603": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4637,
        5416
      ],
      "op": "JUMP",
      "path": "15"
    },
    "604": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "605": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18B"
    },
    "608": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1064"
    },
    "611": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "612": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "613": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "616": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "618": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "DUP1",
      "path": "15"
    },
    "619": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "620": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "SUB",
      "path": "15"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "623": {
      "op": "DUP2"
    },
    "624": {
      "op": "LT"
    },
    "625": {
      "op": "ISZERO"
    },
    "626": {
      "op": "PUSH2",
      "value": "0x27A"
    },
    "629": {
      "op": "JUMPI"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "REVERT"
    },
    "634": {
      "op": "JUMPDEST"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "AND",
      "path": "15"
    },
    "646": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1076"
    },
    "649": {
      "fn": "token_challenge.setPayCoin",
      "jump": "i",
      "offset": [
        7794,
        7908
      ],
      "op": "JUMP",
      "path": "15"
    },
    "650": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "651": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "654": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "656": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "DUP1",
      "path": "15"
    },
    "657": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "658": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "SUB",
      "path": "15"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "DUP2"
    },
    "662": {
      "op": "LT"
    },
    "663": {
      "op": "ISZERO"
    },
    "664": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "667": {
      "op": "JUMPI"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "670": {
      "op": "DUP1"
    },
    "671": {
      "op": "REVERT"
    },
    "672": {
      "op": "JUMPDEST"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "675": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10DE"
    },
    "678": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5452,
        6115
      ],
      "op": "JUMP",
      "path": "15"
    },
    "679": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "680": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "683": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "685": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "DUP1",
      "path": "14"
    },
    "686": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "687": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "SUB",
      "path": "14"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "690": {
      "op": "DUP2"
    },
    "691": {
      "op": "LT"
    },
    "692": {
      "op": "ISZERO"
    },
    "693": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "696": {
      "op": "JUMPI"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "699": {
      "op": "DUP1"
    },
    "700": {
      "op": "REVERT"
    },
    "701": {
      "op": "JUMPDEST"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "710": {
      "op": "SHL"
    },
    "711": {
      "op": "SUB"
    },
    "712": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "AND",
      "path": "14"
    },
    "713": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1314"
    },
    "716": {
      "fn": "TeamRole.addTeam",
      "jump": "i",
      "offset": [
        687,
        771
      ],
      "op": "JUMP",
      "path": "14"
    },
    "717": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "718": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B"
    },
    "721": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "723": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "DUP1",
      "path": "15"
    },
    "724": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "725": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "SUB",
      "path": "15"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "728": {
      "op": "DUP2"
    },
    "729": {
      "op": "LT"
    },
    "730": {
      "op": "ISZERO"
    },
    "731": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "734": {
      "op": "JUMPI"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "op": "DUP1"
    },
    "738": {
      "op": "REVERT"
    },
    "739": {
      "op": "JUMPDEST"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "AND",
      "path": "15"
    },
    "751": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1363"
    },
    "754": {
      "fn": "token_challenge.isRegistered",
      "jump": "i",
      "offset": [
        2815,
        3075
      ],
      "op": "JUMP",
      "path": "15"
    },
    "755": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "756": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B"
    },
    "759": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "761": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "DUP1",
      "path": "15"
    },
    "762": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "763": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "SUB",
      "path": "15"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "766": {
      "op": "DUP2"
    },
    "767": {
      "op": "LT"
    },
    "768": {
      "op": "ISZERO"
    },
    "769": {
      "op": "PUSH2",
      "value": "0x309"
    },
    "772": {
      "op": "JUMPI"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "775": {
      "op": "DUP1"
    },
    "776": {
      "op": "REVERT"
    },
    "777": {
      "op": "JUMPDEST"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "780": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "783": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3473,
        4064
      ],
      "op": "JUMP",
      "path": "15"
    },
    "784": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "785": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "788": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1671"
    },
    "791": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        777,
        850
      ],
      "op": "JUMP",
      "path": "14"
    },
    "792": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "793": {
      "fn": "TeamRole.isTeam",
      "offset": [
        632,
        636
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "795": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 0,
      "value": "0x32B"
    },
    "798": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        661
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "800": {
      "fn": "TeamRole.isTeam",
      "offset": [
        666,
        673
      ],
      "op": "DUP4",
      "path": "14"
    },
    "801": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "806": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        665
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1681"
    },
    "809": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "AND",
      "path": "14"
    },
    "810": {
      "fn": "TeamRole.isTeam",
      "jump": "i",
      "offset": [
        655,
        674
      ],
      "op": "JUMP",
      "path": "14"
    },
    "811": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "812": {
      "fn": "TeamRole.isTeam",
      "offset": [
        648,
        674
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "813": {
      "fn": "TeamRole.isTeam",
      "offset": [
        648,
        674
      ],
      "op": "POP",
      "path": "14"
    },
    "814": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "815": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "816": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "817": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "POP",
      "path": "14"
    },
    "818": {
      "fn": "TeamRole.isTeam",
      "jump": "o",
      "offset": [
        578,
        681
      ],
      "op": "JUMP",
      "path": "14"
    },
    "819": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "820": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "822": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 1,
      "value": "0x32B"
    },
    "825": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "826": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "827": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "832": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1681"
    },
    "835": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "836": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "837": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "838": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 2,
      "value": "0x4"
    },
    "840": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "DUP1",
      "path": "15"
    },
    "841": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "842": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "844": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP1",
      "path": "15"
    },
    "845": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "846": {
      "op": "PUSH4",
      "value": "0x47535D7B"
    },
    "851": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "853": {
      "op": "SHL"
    },
    "854": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP2",
      "path": "15"
    },
    "855": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "856": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "857": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "858": {
      "fn": "token_challenge.register",
      "offset": [
        2178,
        2201
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "860": {
      "fn": "token_challenge.register",
      "offset": [
        2178,
        2201
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "870": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "871": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "AND",
      "path": "15"
    },
    "872": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "873": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2250
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x47535D7B"
    },
    "878": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2250
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "879": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP1",
      "path": "15"
    },
    "880": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP3",
      "path": "15"
    },
    "881": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "ADD",
      "path": "15"
    },
    "882": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "883": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "885": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "886": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "887": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "888": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP3",
      "path": "15"
    },
    "889": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "890": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "SUB",
      "path": "15"
    },
    "891": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "ADD",
      "path": "15"
    },
    "892": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP2",
      "path": "15"
    },
    "893": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2243
      ],
      "op": "DUP7",
      "path": "15"
    },
    "894": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "DUP1",
      "path": "15"
    },
    "895": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "896": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "897": {
      "op": "DUP1"
    },
    "898": {
      "op": "ISZERO"
    },
    "899": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "902": {
      "op": "JUMPI"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "905": {
      "op": "DUP1"
    },
    "906": {
      "op": "REVERT"
    },
    "907": {
      "op": "JUMPDEST"
    },
    "908": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "POP",
      "path": "15"
    },
    "909": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "GAS",
      "path": "15"
    },
    "910": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "911": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "912": {
      "op": "DUP1"
    },
    "913": {
      "op": "ISZERO"
    },
    "914": {
      "op": "PUSH2",
      "value": "0x39F"
    },
    "917": {
      "op": "JUMPI"
    },
    "918": {
      "op": "RETURNDATASIZE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "921": {
      "op": "DUP1"
    },
    "922": {
      "op": "RETURNDATACOPY"
    },
    "923": {
      "op": "RETURNDATASIZE"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "926": {
      "op": "REVERT"
    },
    "927": {
      "op": "JUMPDEST"
    },
    "928": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "POP",
      "path": "15"
    },
    "929": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "POP",
      "path": "15"
    },
    "930": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "POP",
      "path": "15"
    },
    "931": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "POP",
      "path": "15"
    },
    "932": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "934": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "935": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "938": {
      "op": "DUP2"
    },
    "939": {
      "op": "LT"
    },
    "940": {
      "op": "ISZERO"
    },
    "941": {
      "op": "PUSH2",
      "value": "0x3B5"
    },
    "944": {
      "op": "JUMPI"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "947": {
      "op": "DUP1"
    },
    "948": {
      "op": "REVERT"
    },
    "949": {
      "op": "JUMPDEST"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "fn": "token_challenge.register",
      "offset": [
        2231,
        2252
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "952": {
      "branch": 88,
      "fn": "token_challenge.register",
      "offset": [
        2229,
        2253
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "953": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F3"
    },
    "956": {
      "branch": 88,
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "957": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "959": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP2",
      "path": "15"
    },
    "968": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "969": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "971": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "ADD",
      "path": "15"
    },
    "972": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP1",
      "path": "15"
    },
    "973": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP1",
      "path": "15"
    },
    "974": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "976": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "ADD",
      "path": "15"
    },
    "977": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP3",
      "path": "15"
    },
    "978": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP2",
      "path": "15"
    },
    "979": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "SUB",
      "path": "15"
    },
    "980": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP3",
      "path": "15"
    },
    "981": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "982": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x29"
    },
    "984": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP2",
      "path": "15"
    },
    "985": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "986": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "988": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "ADD",
      "path": "15"
    },
    "989": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP1",
      "path": "15"
    },
    "990": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A67"
    },
    "993": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x29"
    },
    "995": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "996": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "997": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "999": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "ADD",
      "path": "15"
    },
    "1000": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1001": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "POP",
      "path": "15"
    },
    "1002": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "POP",
      "path": "15"
    },
    "1003": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1005": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1006": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1007": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1008": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "SUB",
      "path": "15"
    },
    "1009": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1010": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1011": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2299
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1012": {
      "fn": "token_challenge.register",
      "offset": [
        2314,
        2323
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1014": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1015": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1017": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2354
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1018": {
      "fn": "token_challenge.register",
      "offset": [
        2329,
        2354
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1019": {
      "fn": "token_challenge.register",
      "offset": [
        2329,
        2354
      ],
      "op": "LT",
      "path": "15"
    },
    "1020": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1021": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43F"
    },
    "1024": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1025": {
      "fn": "token_challenge.register",
      "offset": [
        2398,
        2409
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1032": {
      "op": "SHL"
    },
    "1033": {
      "op": "SUB"
    },
    "1034": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2409
      ],
      "op": "AND",
      "path": "15"
    },
    "1035": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1037": {
      "fn": "token_challenge.register",
      "offset": [
        2392,
        2393
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1038": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1039": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1040": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1041": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "LT",
      "path": "15"
    },
    "1042": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x417"
    },
    "1045": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1046": {
      "dev": "Index out of range",
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1047": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1048": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1050": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1051": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1052": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1053": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1055": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1056": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1057": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1058": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "ADD",
      "path": "15"
    },
    "1059": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "op": "SUB"
    },
    "1068": {
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2394
      ],
      "op": "AND",
      "path": "15"
    },
    "1069": {
      "branch": 89,
      "fn": "token_challenge.register",
      "offset": [
        2377,
        2409
      ],
      "op": "EQ",
      "path": "15"
    },
    "1070": {
      "fn": "token_challenge.register",
      "offset": [
        2374,
        2469
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1071": {
      "fn": "token_challenge.register",
      "offset": [
        2374,
        2469
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x437"
    },
    "1074": {
      "branch": 89,
      "fn": "token_challenge.register",
      "offset": [
        2374,
        2469
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1075": {
      "fn": "token_challenge.register",
      "offset": [
        2449,
        2453
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0x1"
    },
    "1077": {
      "fn": "token_challenge.register",
      "offset": [
        2428,
        2453
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1078": {
      "fn": "token_challenge.register",
      "offset": [
        2428,
        2453
      ],
      "op": "POP",
      "path": "15"
    },
    "1079": {
      "fn": "token_challenge.register",
      "offset": [
        2374,
        2469
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1080": {
      "fn": "token_challenge.register",
      "offset": [
        2356,
        2359
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x1"
    },
    "1082": {
      "fn": "token_challenge.register",
      "offset": [
        2356,
        2359
      ],
      "op": "ADD",
      "path": "15"
    },
    "1083": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F6"
    },
    "1086": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1087": {
      "fn": "token_challenge.register",
      "offset": [
        2310,
        2479
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "fn": "token_challenge.register",
      "offset": [
        2496,
        2523
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 5
    },
    "1090": {
      "branch": 90,
      "fn": "token_challenge.register",
      "offset": [
        2496,
        2523
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1091": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x493"
    },
    "1094": {
      "branch": 90,
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1095": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1097": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1098": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1107": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1108": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1110": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1112": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1113": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "ADD",
      "path": "15"
    },
    "1114": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1115": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1A"
    },
    "1117": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1119": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1120": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "ADD",
      "path": "15"
    },
    "1121": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1122": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x596F7527726520616C726561647920726567697374657265642E000000000000"
    },
    "1155": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1157": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1158": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "ADD",
      "path": "15"
    },
    "1159": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1160": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1161": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1162": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1163": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1164": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1165": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "SUB",
      "path": "15"
    },
    "1166": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1168": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "ADD",
      "path": "15"
    },
    "1169": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1170": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1171": {
      "fn": "token_challenge.register",
      "offset": [
        2488,
        2554
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1172": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2580
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 6,
      "value": "0x6"
    },
    "1174": {
      "op": "DUP1"
    },
    "1175": {
      "op": "SLOAD"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "DUP3"
    },
    "1181": {
      "op": "SSTORE"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1184": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1185": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1186": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1187": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1188": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1221": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "ADD",
      "path": "15"
    },
    "1222": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1223": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1230": {
      "op": "SHL"
    },
    "1231": {
      "op": "SUB"
    },
    "1232": {
      "op": "NOT"
    },
    "1233": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "AND",
      "path": "15"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1243": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "AND",
      "path": "15"
    },
    "1244": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "OR",
      "path": "15"
    },
    "1245": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1246": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1247": {
      "fn": "token_challenge.register",
      "offset": [
        2614,
        2633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4E7"
    },
    "1250": {
      "fn": "token_challenge.register",
      "offset": [
        2566,
        2598
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1251": {
      "fn": "token_challenge.register",
      "offset": [
        2614,
        2620
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x318"
    },
    "1254": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2614,
        2633
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1255": {
      "fn": "token_challenge.register",
      "offset": [
        2614,
        2633
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1256": {
      "fn": "token_challenge.register",
      "offset": [
        2609,
        2680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4F4"
    },
    "1259": {
      "fn": "token_challenge.register",
      "offset": [
        2609,
        2680
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1260": {
      "fn": "token_challenge.register",
      "offset": [
        2649,
        2669
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 7,
      "value": "0x4F4"
    },
    "1263": {
      "fn": "token_challenge.register",
      "offset": [
        2657,
        2668
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1264": {
      "fn": "token_challenge.register",
      "offset": [
        2649,
        2656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1314"
    },
    "1267": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2649,
        2669
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1268": {
      "fn": "token_challenge.register",
      "offset": [
        2649,
        2669
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1269": {
      "fn": "token_challenge.register",
      "offset": [
        2707,
        2721
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 8,
      "value": "0x6"
    },
    "1271": {
      "fn": "token_challenge.register",
      "offset": [
        2707,
        2728
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1272": {
      "fn": "token_challenge.register",
      "offset": [
        2732,
        2733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1274": {
      "op": "LT"
    },
    "1275": {
      "branch": 91,
      "fn": "token_challenge.register",
      "offset": [
        2707,
        2733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1276": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x53E"
    },
    "1279": {
      "branch": 91,
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1280": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1282": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1283": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1292": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1293": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1295": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1297": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1298": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "ADD",
      "path": "15"
    },
    "1299": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1300": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "1302": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1304": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1305": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "ADD",
      "path": "15"
    },
    "1306": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1307": {
      "op": "PUSH15",
      "value": "0x2A37B79036B0B73C903A32B0B6B997"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1328": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1329": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "ADD",
      "path": "15"
    },
    "1330": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1331": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1332": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1333": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1334": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1335": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1336": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "SUB",
      "path": "15"
    },
    "1337": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1339": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "ADD",
      "path": "15"
    },
    "1340": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1341": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1342": {
      "fn": "token_challenge.register",
      "offset": [
        2699,
        2753
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1343": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 9,
      "value": "0x40"
    },
    "1345": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1355": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "AND",
      "path": "15"
    },
    "1356": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1357": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9"
    },
    "1390": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1391": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1393": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1394": {
      "fn": "token_challenge.register",
      "offset": [
        2778,
        2801
      ],
      "op": "LOG2",
      "path": "15"
    },
    "1395": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "POP",
      "path": "15"
    },
    "1396": {
      "fn": "token_challenge.register",
      "offset": [
        2120,
        2809
      ],
      "op": "POP",
      "path": "15"
    },
    "1397": {
      "fn": "token_challenge.register",
      "jump": "o",
      "offset": [
        2120,
        2809
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1398": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6121,
        6979
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1399": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6187,
        6191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1401": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x588"
    },
    "1404": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "1407": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "1410": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1411": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        492,
        504
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1412": {
      "offset": [
        485,
        491
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x318"
    },
    "1415": {
      "jump": "i",
      "offset": [
        485,
        505
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1416": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1417": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5C3"
    },
    "1420": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1421": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1423": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1432": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1433": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1435": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "1436": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1437": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1438": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1440": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "1441": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1442": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1443": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "1444": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1445": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1446": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "1448": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1449": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1450": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1452": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "1453": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1454": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B37"
    },
    "1457": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "1459": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1460": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "1461": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1463": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "1464": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1465": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "1466": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "1467": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1469": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1470": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1471": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1472": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "1473": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1474": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1475": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1476": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6249
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 10,
      "value": "0x5"
    },
    "1478": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6249
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1479": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6207,
        6222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1481": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6207,
        6222
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6249
      ],
      "op": "AND",
      "path": "15"
    },
    "1491": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6258
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x79CC6790"
    },
    "1496": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6259,
        6271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5DF"
    },
    "1499": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6259,
        6269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "1502": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6259,
        6271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1503": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6259,
        6271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1504": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6273,
        6279
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x56BC75E2D63100000"
    },
    "1514": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1516": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1517": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1518": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1523": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "AND",
      "path": "15"
    },
    "1524": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1526": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "SHL",
      "path": "15"
    },
    "1527": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1528": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1529": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1531": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "ADD",
      "path": "15"
    },
    "1532": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1533": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "AND",
      "path": "15"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "AND",
      "path": "15"
    },
    "1552": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1553": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1554": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1556": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "ADD",
      "path": "15"
    },
    "1557": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1558": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1559": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1560": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1562": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "ADD",
      "path": "15"
    },
    "1563": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1564": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "POP",
      "path": "15"
    },
    "1565": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "POP",
      "path": "15"
    },
    "1566": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "POP",
      "path": "15"
    },
    "1567": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1569": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1571": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1572": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1573": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1574": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "SUB",
      "path": "15"
    },
    "1575": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1576": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1578": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1579": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1580": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1581": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1582": {
      "op": "DUP1"
    },
    "1583": {
      "op": "ISZERO"
    },
    "1584": {
      "op": "PUSH2",
      "value": "0x638"
    },
    "1587": {
      "op": "JUMPI"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1590": {
      "op": "DUP1"
    },
    "1591": {
      "op": "REVERT"
    },
    "1592": {
      "op": "JUMPDEST"
    },
    "1593": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "POP",
      "path": "15"
    },
    "1594": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "GAS",
      "path": "15"
    },
    "1595": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "CALL",
      "path": "15"
    },
    "1596": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6242,
        6280
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1597": {
      "op": "DUP1"
    },
    "1598": {
      "op": "ISZERO"
    },
    "1599": {
      "op": "PUSH2",
      "value": "0x64C"
    },
    "1602": {
      "op": "JUMPI"
    },
    "1603": {
      "op": "RETURNDATASIZE"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1606": {
      "op": "DUP1"
    },
    "1607": {
      "op": "RETURNDATACOPY"
    },
    "1608": {
      "op": "RETURNDATASIZE"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1611": {
      "op": "REVERT"
    },
    "1612": {
      "op": "JUMPDEST"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1618": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1619": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1620": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1621": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6321
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "1623": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1625": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1626": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1628": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1629": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1630": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6327
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1631": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6330,
        6339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C"
    },
    "1634": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6302,
        6339
      ],
      "op": "ADD",
      "path": "15"
    },
    "1635": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6295,
        6298
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "1636": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6295,
        6339
      ],
      "op": "LT",
      "path": "15"
    },
    "1637": {
      "branch": 92,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6295,
        6339
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6292,
        6973
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8DD"
    },
    "1642": {
      "branch": 92,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6292,
        6973
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1643": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 11,
      "value": "0x0"
    },
    "1645": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1646": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1647": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1648": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6379
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x13"
    },
    "1650": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1652": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1653": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1655": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1656": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1657": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1658": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1660": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6385
      ],
      "op": "AND",
      "path": "15"
    },
    "1661": {
      "branch": 93,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6362,
        6394
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1662": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B8"
    },
    "1665": {
      "branch": 93,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1666": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1668": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1677": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1678": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1680": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "ADD",
      "path": "15"
    },
    "1681": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1682": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1683": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1685": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "ADD",
      "path": "15"
    },
    "1686": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1687": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1688": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "SUB",
      "path": "15"
    },
    "1689": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1690": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1691": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x23"
    },
    "1693": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1694": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1695": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1697": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "ADD",
      "path": "15"
    },
    "1698": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1699": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B14"
    },
    "1702": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x23"
    },
    "1704": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1705": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "1706": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1708": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "ADD",
      "path": "15"
    },
    "1709": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1710": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "POP",
      "path": "15"
    },
    "1711": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "POP",
      "path": "15"
    },
    "1712": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1714": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1715": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1716": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1717": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "SUB",
      "path": "15"
    },
    "1718": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1719": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1720": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6354,
        6434
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1721": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6458,
        6484
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 12,
      "value": "0x6C3"
    },
    "1724": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6468,
        6477
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "1726": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6479,
        6483
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1727": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6458,
        6467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16EC"
    },
    "1730": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6458,
        6484
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1731": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6458,
        6484
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1732": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6519,
        6534
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "1734": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6519,
        6534
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6519,
        6534
      ],
      "op": "AND",
      "path": "15"
    },
    "1744": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6503,
        6515
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6D7"
    },
    "1747": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6503,
        6513
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "1750": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6503,
        6515
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1751": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6503,
        6515
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6503,
        6534
      ],
      "op": "AND",
      "path": "15"
    },
    "1761": {
      "branch": 94,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6503,
        6534
      ],
      "op": "EQ",
      "path": "15"
    },
    "1762": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1763": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7D2"
    },
    "1766": {
      "branch": 94,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1767": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6560
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 13,
      "value": "0x5"
    },
    "1769": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6560
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6560
      ],
      "op": "AND",
      "path": "15"
    },
    "1779": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6565
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "1784": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6566,
        6578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6FF"
    },
    "1787": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6566,
        6576
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "1790": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6566,
        6578
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1791": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6566,
        6578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1792": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6580,
        6587
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x5150AE84A8CDF00000"
    },
    "1802": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1804": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1805": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1806": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1811": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "AND",
      "path": "15"
    },
    "1812": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1814": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "SHL",
      "path": "15"
    },
    "1815": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1816": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1817": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1819": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "ADD",
      "path": "15"
    },
    "1820": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1821": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "AND",
      "path": "15"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1837": {
      "op": "SHL"
    },
    "1838": {
      "op": "SUB"
    },
    "1839": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "AND",
      "path": "15"
    },
    "1840": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1841": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1842": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1844": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "ADD",
      "path": "15"
    },
    "1845": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1846": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1847": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1848": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1850": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "ADD",
      "path": "15"
    },
    "1851": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1852": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1853": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1854": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1855": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1857": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1859": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1860": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1861": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1862": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "SUB",
      "path": "15"
    },
    "1863": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1864": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1866": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1867": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1868": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1869": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1870": {
      "op": "DUP1"
    },
    "1871": {
      "op": "ISZERO"
    },
    "1872": {
      "op": "PUSH2",
      "value": "0x758"
    },
    "1875": {
      "op": "JUMPI"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1878": {
      "op": "DUP1"
    },
    "1879": {
      "op": "REVERT"
    },
    "1880": {
      "op": "JUMPDEST"
    },
    "1881": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1882": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "GAS",
      "path": "15"
    },
    "1883": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "CALL",
      "path": "15"
    },
    "1884": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1885": {
      "op": "DUP1"
    },
    "1886": {
      "op": "ISZERO"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "1890": {
      "op": "JUMPI"
    },
    "1891": {
      "op": "RETURNDATASIZE"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1894": {
      "op": "DUP1"
    },
    "1895": {
      "op": "RETURNDATACOPY"
    },
    "1896": {
      "op": "RETURNDATASIZE"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1899": {
      "op": "REVERT"
    },
    "1900": {
      "op": "JUMPDEST"
    },
    "1901": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1902": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1903": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1904": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "POP",
      "path": "15"
    },
    "1905": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1907": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1908": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6553,
        6588
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "LT"
    },
    "1913": {
      "op": "ISZERO"
    },
    "1914": {
      "op": "PUSH2",
      "value": "0x782"
    },
    "1917": {
      "op": "JUMPI"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1920": {
      "op": "DUP1"
    },
    "1921": {
      "op": "REVERT"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6648,
        6655
      ],
      "op": "PUSH9",
      "path": "15",
      "statement": 14,
      "value": "0x5150AE84A8CDF00000"
    },
    "1934": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6648,
        6655
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6642,
        6646
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1937": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6628,
        6640
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x798"
    },
    "1940": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6628,
        6638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "1943": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6628,
        6640
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1944": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6628,
        6640
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "op": "SUB"
    },
    "1953": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "AND",
      "path": "15"
    },
    "1954": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "1987": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1989": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1990": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1992": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1993": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1994": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1995": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "SUB",
      "path": "15"
    },
    "1996": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1997": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6611,
        6656
      ],
      "op": "LOG4",
      "path": "15"
    },
    "1998": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BA"
    },
    "2001": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2002": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2003": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6713
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 15,
      "value": "0x5"
    },
    "2005": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6713
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "op": "SUB"
    },
    "2014": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6713
      ],
      "op": "AND",
      "path": "15"
    },
    "2015": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6718
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "2020": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6719,
        6731
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7EB"
    },
    "2023": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6719,
        6729
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "2026": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6719,
        6731
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2027": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6719,
        6731
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2028": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6733,
        6740
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x3635C9ADC5DEA00000"
    },
    "2038": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2040": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2041": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2042": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2047": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "AND",
      "path": "15"
    },
    "2048": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2050": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "SHL",
      "path": "15"
    },
    "2051": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2052": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2053": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2055": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "ADD",
      "path": "15"
    },
    "2056": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2057": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "AND",
      "path": "15"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "op": "SUB"
    },
    "2075": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "AND",
      "path": "15"
    },
    "2076": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2077": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2078": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2080": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "ADD",
      "path": "15"
    },
    "2081": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2082": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2083": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2084": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2086": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "ADD",
      "path": "15"
    },
    "2087": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2088": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2089": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2090": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2091": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2093": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2095": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2096": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2097": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2098": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "SUB",
      "path": "15"
    },
    "2099": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2100": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2102": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2103": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2104": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2105": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2106": {
      "op": "DUP1"
    },
    "2107": {
      "op": "ISZERO"
    },
    "2108": {
      "op": "PUSH2",
      "value": "0x844"
    },
    "2111": {
      "op": "JUMPI"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2114": {
      "op": "DUP1"
    },
    "2115": {
      "op": "REVERT"
    },
    "2116": {
      "op": "JUMPDEST"
    },
    "2117": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2118": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "GAS",
      "path": "15"
    },
    "2119": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "CALL",
      "path": "15"
    },
    "2120": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2121": {
      "op": "DUP1"
    },
    "2122": {
      "op": "ISZERO"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x858"
    },
    "2126": {
      "op": "JUMPI"
    },
    "2127": {
      "op": "RETURNDATASIZE"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2130": {
      "op": "DUP1"
    },
    "2131": {
      "op": "RETURNDATACOPY"
    },
    "2132": {
      "op": "RETURNDATASIZE"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2135": {
      "op": "REVERT"
    },
    "2136": {
      "op": "JUMPDEST"
    },
    "2137": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2138": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2139": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2140": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "POP",
      "path": "15"
    },
    "2141": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2143": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2144": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6706,
        6741
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2147": {
      "op": "DUP2"
    },
    "2148": {
      "op": "LT"
    },
    "2149": {
      "op": "ISZERO"
    },
    "2150": {
      "op": "PUSH2",
      "value": "0x86E"
    },
    "2153": {
      "op": "JUMPI"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2156": {
      "op": "DUP1"
    },
    "2157": {
      "op": "REVERT"
    },
    "2158": {
      "op": "JUMPDEST"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6801,
        6808
      ],
      "op": "PUSH9",
      "path": "15",
      "statement": 16,
      "value": "0x3635C9ADC5DEA00000"
    },
    "2170": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6801,
        6808
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6795,
        6799
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2173": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6781,
        6793
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x884"
    },
    "2176": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6781,
        6791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "2179": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6781,
        6793
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2180": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6781,
        6793
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2187": {
      "op": "SHL"
    },
    "2188": {
      "op": "SUB"
    },
    "2189": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "AND",
      "path": "15"
    },
    "2190": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "2223": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2225": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2226": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2228": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2229": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2230": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2231": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "SUB",
      "path": "15"
    },
    "2232": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2233": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6764,
        6809
      ],
      "op": "LOG4",
      "path": "15"
    },
    "2234": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2235": {
      "op": "POP"
    },
    "2236": {
      "op": "POP"
    },
    "2237": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 17,
      "value": "0x0"
    },
    "2239": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2240": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2241": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2242": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6868
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x13"
    },
    "2244": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2246": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2247": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2249": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2250": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6874
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2251": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2252": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2255": {
      "op": "NOT"
    },
    "2256": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "AND",
      "path": "15"
    },
    "2257": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6877,
        6881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2259": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2260": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2261": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "OR",
      "path": "15"
    },
    "2262": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2263": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2264": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6851,
        6881
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2265": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6898,
        6909
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 18,
      "value": "0x32E"
    },
    "2268": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6898,
        6909
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2269": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6292,
        6973
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2270": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6956,
        6961
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 19,
      "value": "0x0"
    },
    "2272": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6949,
        6961
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2273": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6949,
        6961
      ],
      "op": "POP",
      "path": "15"
    },
    "2274": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6949,
        6961
      ],
      "op": "POP",
      "path": "15"
    },
    "2275": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6949,
        6961
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32E"
    },
    "2278": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6949,
        6961
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2279": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2280": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8F2"
    },
    "2283": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "2286": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "2289": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2290": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2291": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92D"
    },
    "2294": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2295": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2297": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2306": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2307": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2309": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "2310": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2311": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2312": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2314": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "2315": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2316": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2317": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "2318": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2319": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2320": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "2322": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2323": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2324": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2326": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "2327": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2328": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B37"
    },
    "2331": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "2333": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2334": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "2335": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2337": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "2338": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2339": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "2340": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "2341": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2343": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2344": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2345": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2346": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "2347": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2348": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2349": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2350": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4190,
        4218
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 20,
      "value": "0x938"
    },
    "2353": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4200,
        4211
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "2355": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4213,
        4217
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2356": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4190,
        4199
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1780"
    },
    "2359": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4190,
        4218
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2360": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4190,
        4218
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2361": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4254,
        4270
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 21
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2368": {
      "op": "SHL"
    },
    "2369": {
      "op": "SUB"
    },
    "2370": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4270
      ],
      "op": "AND",
      "path": "15"
    },
    "2371": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x94A"
    },
    "2374": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4248
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "2377": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4238,
        4250
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2378": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4250
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2385": {
      "op": "SHL"
    },
    "2386": {
      "op": "SUB"
    },
    "2387": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4270
      ],
      "op": "AND",
      "path": "15"
    },
    "2388": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4270
      ],
      "op": "EQ",
      "path": "15"
    },
    "2389": {
      "branch": 95,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4238,
        4270
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2390": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9A6"
    },
    "2393": {
      "branch": 95,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2394": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2396": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2397": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2406": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2407": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2409": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2411": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2412": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "ADD",
      "path": "15"
    },
    "2413": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2414": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2415": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2416": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2418": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2419": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "ADD",
      "path": "15"
    },
    "2420": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2421": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x54686520616464726573736573206D75737420626520646966666572656E742E"
    },
    "2454": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2456": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2457": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "ADD",
      "path": "15"
    },
    "2458": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2459": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2460": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2461": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2462": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2463": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2464": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "SUB",
      "path": "15"
    },
    "2465": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2467": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "ADD",
      "path": "15"
    },
    "2468": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2469": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2470": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4230,
        4307
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2471": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x0"
    },
    "2473": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2474": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2475": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2476": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "2478": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2480": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2481": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2483": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2484": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4347
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2485": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4350,
        4353
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2486": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2487": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4320,
        4353
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2488": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4383,
        4395
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 23,
      "value": "0x9BF"
    },
    "2491": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4383,
        4393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "2494": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4383,
        4395
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2495": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4383,
        4395
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2496": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4380
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "2498": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2499": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2506": {
      "op": "SHL"
    },
    "2507": {
      "op": "SUB"
    },
    "2508": {
      "op": "NOT"
    },
    "2509": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2510": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2511": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "AND",
      "path": "15"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2521": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2522": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "AND",
      "path": "15"
    },
    "2523": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "OR",
      "path": "15"
    },
    "2524": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2525": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4363,
        4395
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2526": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4423
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0xC"
    },
    "2528": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2529": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2530": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2531": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2532": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "AND",
      "path": "15"
    },
    "2533": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2534": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2535": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "AND",
      "path": "15"
    },
    "2536": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "OR",
      "path": "15"
    },
    "2537": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2538": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4406,
        4442
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2541": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 25
    },
    "2542": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2543": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2544": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "2546": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2548": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2549": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2550": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2551": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2553": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2554": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2555": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2556": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4478
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2557": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2558": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4486
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2561": {
      "op": "NOT"
    },
    "2562": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4486
      ],
      "op": "AND",
      "path": "15"
    },
    "2563": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4486
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2564": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4453,
        4486
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2565": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4538,
        4555
      ],
      "op": "SWAP2",
      "path": "15",
      "statement": 26
    },
    "2566": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4538,
        4555
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2567": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4519,
        4536
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2568": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4519,
        4536
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2569": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2570": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2571": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2572": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2573": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2574": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2575": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2576": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4538,
        4555
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2577": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4538,
        4555
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2578": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4538,
        4555
      ],
      "op": "AND",
      "path": "15"
    },
    "2579": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4538,
        4555
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2580": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4519,
        4536
      ],
      "op": "AND",
      "path": "15"
    },
    "2581": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4519,
        4536
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2582": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106"
    },
    "2615": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2616": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2617": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2618": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2619": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SUB",
      "path": "15"
    },
    "2620": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2621": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2622": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "ADD",
      "path": "15"
    },
    "2623": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2624": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4503,
        4562
      ],
      "op": "LOG3",
      "path": "15"
    },
    "2625": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4579
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 27,
      "value": "0x5"
    },
    "2627": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4579
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "op": "SUB"
    },
    "2636": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4579
      ],
      "op": "AND",
      "path": "15"
    },
    "2637": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4588
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x79CC6790"
    },
    "2642": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4589,
        4601
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA59"
    },
    "2645": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4589,
        4599
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "2648": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4589,
        4601
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2649": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4589,
        4601
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2650": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4603,
        4608
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x2B5E3AF16B1880000"
    },
    "2660": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2662": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2663": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2664": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2669": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "AND",
      "path": "15"
    },
    "2670": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2672": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "SHL",
      "path": "15"
    },
    "2673": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2674": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2675": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2677": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "ADD",
      "path": "15"
    },
    "2678": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2679": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "op": "SUB"
    },
    "2688": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "AND",
      "path": "15"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2695": {
      "op": "SHL"
    },
    "2696": {
      "op": "SUB"
    },
    "2697": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "AND",
      "path": "15"
    },
    "2698": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2699": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2700": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2702": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "ADD",
      "path": "15"
    },
    "2703": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2704": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2705": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2706": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2708": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "ADD",
      "path": "15"
    },
    "2709": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2710": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2711": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2712": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2713": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2715": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2717": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2718": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2719": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2720": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "SUB",
      "path": "15"
    },
    "2721": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2722": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2724": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2725": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2726": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2727": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2728": {
      "op": "DUP1"
    },
    "2729": {
      "op": "ISZERO"
    },
    "2730": {
      "op": "PUSH2",
      "value": "0xAB2"
    },
    "2733": {
      "op": "JUMPI"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2736": {
      "op": "DUP1"
    },
    "2737": {
      "op": "REVERT"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2740": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "GAS",
      "path": "15"
    },
    "2741": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "CALL",
      "path": "15"
    },
    "2742": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2743": {
      "op": "DUP1"
    },
    "2744": {
      "op": "ISZERO"
    },
    "2745": {
      "op": "PUSH2",
      "value": "0xAC6"
    },
    "2748": {
      "op": "JUMPI"
    },
    "2749": {
      "op": "RETURNDATASIZE"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2752": {
      "op": "DUP1"
    },
    "2753": {
      "op": "RETURNDATACOPY"
    },
    "2754": {
      "op": "RETURNDATASIZE"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2757": {
      "op": "REVERT"
    },
    "2758": {
      "op": "JUMPDEST"
    },
    "2759": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2760": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2761": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2762": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4572,
        4609
      ],
      "op": "POP",
      "path": "15"
    },
    "2763": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "POP",
      "path": "15"
    },
    "2764": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4631
      ],
      "op": "POP",
      "path": "15"
    },
    "2765": {
      "fn": "token_challenge.challengeStart",
      "jump": "o",
      "offset": [
        4098,
        4631
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2766": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7655,
        7784
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2767": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xADE"
    },
    "2770": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD9"
    },
    "2773": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E8"
    },
    "2776": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2777": {
      "fn": "token_challenge.setExchange",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2778": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x333"
    },
    "2781": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2782": {
      "fn": "token_challenge.setExchange",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2783": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB19"
    },
    "2786": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2787": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2789": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2796": {
      "op": "SHL"
    },
    "2797": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2798": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2799": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2801": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2802": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2803": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2804": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2806": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2807": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2808": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2809": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2810": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2811": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2812": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2814": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2815": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2816": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2818": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2819": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2820": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE6"
    },
    "2823": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2825": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2826": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2827": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2829": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2830": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2831": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2832": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2833": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2835": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2836": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2837": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2838": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2839": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2840": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2841": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2842": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7742
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 28,
      "value": "0x4"
    },
    "2844": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2845": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "op": "SUB"
    },
    "2854": {
      "op": "NOT"
    },
    "2855": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "AND",
      "path": "15"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2862": {
      "op": "SHL"
    },
    "2863": {
      "op": "SUB"
    },
    "2864": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2865": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2866": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2867": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "AND",
      "path": "15"
    },
    "2868": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2869": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2870": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2871": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "OR",
      "path": "15"
    },
    "2872": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2873": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7730,
        7776
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2874": {
      "fn": "token_challenge.setExchange",
      "jump": "o",
      "offset": [
        7655,
        7784
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2875": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2876": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB46"
    },
    "2879": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD9"
    },
    "2882": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E8"
    },
    "2885": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2886": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2887": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB81"
    },
    "2890": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2891": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2893": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2900": {
      "op": "SHL"
    },
    "2901": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2902": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2903": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2905": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2906": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2907": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2908": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2910": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2911": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2912": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2913": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2914": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2915": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2916": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2918": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2919": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2920": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2922": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2923": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2924": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE6"
    },
    "2927": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2929": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2930": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2931": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2933": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2934": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2935": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2936": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2937": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2939": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2940": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2941": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2942": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2943": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2944": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2945": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2946": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 29,
      "value": "0xB8A"
    },
    "2949": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2950": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x180D"
    },
    "2953": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2954": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2955": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "2956": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2957": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2958": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB98"
    },
    "2961": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD9"
    },
    "2964": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E8"
    },
    "2967": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2968": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2969": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBD3"
    },
    "2972": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2973": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2975": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2984": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2985": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2987": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2988": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2989": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2990": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2992": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2993": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2994": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2995": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2996": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2997": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2998": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "3000": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3001": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3002": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3004": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "3005": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3006": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE6"
    },
    "3009": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "3011": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3012": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "3013": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3015": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "3016": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3017": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "3018": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "3019": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3021": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3022": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3023": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3024": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "3025": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3026": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3027": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3028": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 30,
      "value": "0x4"
    },
    "3030": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3031": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3032": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3034": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3035": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3036": {
      "op": "PUSH4",
      "value": "0x47535D7B"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3045": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3046": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3047": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "op": "SUB"
    },
    "3056": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3057": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3058": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "AND",
      "path": "15"
    },
    "3059": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3060": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3210
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x47535D7B"
    },
    "3065": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3210
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3066": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3067": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3068": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "ADD",
      "path": "15"
    },
    "3069": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3070": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3072": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3073": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3074": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3075": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3076": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "SUB",
      "path": "15"
    },
    "3077": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "ADD",
      "path": "15"
    },
    "3078": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3079": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3203
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3080": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3081": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3082": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3083": {
      "op": "DUP1"
    },
    "3084": {
      "op": "ISZERO"
    },
    "3085": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3088": {
      "op": "JUMPI"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3091": {
      "op": "DUP1"
    },
    "3092": {
      "op": "REVERT"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "POP",
      "path": "15"
    },
    "3095": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "GAS",
      "path": "15"
    },
    "3096": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3097": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3098": {
      "op": "DUP1"
    },
    "3099": {
      "op": "ISZERO"
    },
    "3100": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3103": {
      "op": "JUMPI"
    },
    "3104": {
      "op": "RETURNDATASIZE"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3107": {
      "op": "DUP1"
    },
    "3108": {
      "op": "RETURNDATACOPY"
    },
    "3109": {
      "op": "RETURNDATASIZE"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3112": {
      "op": "REVERT"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "POP",
      "path": "15"
    },
    "3115": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "POP",
      "path": "15"
    },
    "3116": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "POP",
      "path": "15"
    },
    "3117": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "POP",
      "path": "15"
    },
    "3118": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3120": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3121": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "LT"
    },
    "3126": {
      "op": "ISZERO"
    },
    "3127": {
      "op": "PUSH2",
      "value": "0xC3F"
    },
    "3130": {
      "op": "JUMPI"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3133": {
      "op": "DUP1"
    },
    "3134": {
      "op": "REVERT"
    },
    "3135": {
      "op": "JUMPDEST"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3191,
        3212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3138": {
      "branch": 96,
      "fn": "token_challenge.overnightStart",
      "offset": [
        3189,
        3213
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3139": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC7D"
    },
    "3142": {
      "branch": 96,
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3143": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3145": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3154": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3155": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3157": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "ADD",
      "path": "15"
    },
    "3158": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3159": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3160": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3162": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "ADD",
      "path": "15"
    },
    "3163": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3164": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3165": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "SUB",
      "path": "15"
    },
    "3166": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3167": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3168": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x29"
    },
    "3170": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3171": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3172": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3174": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "ADD",
      "path": "15"
    },
    "3175": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3176": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A67"
    },
    "3179": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x29"
    },
    "3181": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3182": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "3183": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3185": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "ADD",
      "path": "15"
    },
    "3186": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3187": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "POP",
      "path": "15"
    },
    "3188": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "POP",
      "path": "15"
    },
    "3189": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3191": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3192": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3193": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3194": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "SUB",
      "path": "15"
    },
    "3195": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3196": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3197": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3181,
        3259
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3198": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3305,
        3308
      ],
      "op": "TIMESTAMP",
      "path": "15",
      "statement": 31
    },
    "3199": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3278,
        3302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "3201": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3278,
        3308
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3202": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 32,
      "value": "0x4"
    },
    "3204": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3205": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3206": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3208": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3209": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3210": {
      "op": "PUSH4",
      "value": "0xA9671193"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3219": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3220": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3221": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3222": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3223": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3224": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3225": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3226": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3233": {
      "op": "SHL"
    },
    "3234": {
      "op": "SUB"
    },
    "3235": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3236": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3237": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "AND",
      "path": "15"
    },
    "3238": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3239": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3360
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9671193"
    },
    "3244": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3360
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3245": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3247": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3248": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3249": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3250": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3251": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3253": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3254": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3255": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3256": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3257": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3258": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "SUB",
      "path": "15"
    },
    "3259": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3260": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3261": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3263": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3348
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3264": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3265": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3266": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3267": {
      "op": "DUP1"
    },
    "3268": {
      "op": "ISZERO"
    },
    "3269": {
      "op": "PUSH2",
      "value": "0xCCD"
    },
    "3272": {
      "op": "JUMPI"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3275": {
      "op": "DUP1"
    },
    "3276": {
      "op": "REVERT"
    },
    "3277": {
      "op": "JUMPDEST"
    },
    "3278": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "POP",
      "path": "15"
    },
    "3279": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "GAS",
      "path": "15"
    },
    "3280": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "CALL",
      "path": "15"
    },
    "3281": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3282": {
      "op": "DUP1"
    },
    "3283": {
      "op": "ISZERO"
    },
    "3284": {
      "op": "PUSH2",
      "value": "0xCE1"
    },
    "3287": {
      "op": "JUMPI"
    },
    "3288": {
      "op": "RETURNDATASIZE"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3291": {
      "op": "DUP1"
    },
    "3292": {
      "op": "RETURNDATACOPY"
    },
    "3293": {
      "op": "RETURNDATASIZE"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3296": {
      "op": "REVERT"
    },
    "3297": {
      "op": "JUMPDEST"
    },
    "3298": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "POP",
      "path": "15"
    },
    "3299": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "POP",
      "path": "15"
    },
    "3300": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "POP",
      "path": "15"
    },
    "3301": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "POP",
      "path": "15"
    },
    "3302": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3304": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3305": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3308": {
      "op": "DUP2"
    },
    "3309": {
      "op": "LT"
    },
    "3310": {
      "op": "ISZERO"
    },
    "3311": {
      "op": "PUSH2",
      "value": "0xCF7"
    },
    "3314": {
      "op": "JUMPI"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3317": {
      "op": "DUP1"
    },
    "3318": {
      "op": "REVERT"
    },
    "3319": {
      "op": "JUMPDEST"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3377
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3322": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3319,
        3333
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3324": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3319,
        3377
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3325": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3387,
        3400
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 33,
      "value": "0x9"
    },
    "3327": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3387,
        3408
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3328": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3387,
        3408
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3331": {
      "op": "NOT"
    },
    "3332": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3387,
        3408
      ],
      "op": "AND",
      "path": "15"
    },
    "3333": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3387,
        3408
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3334": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3387,
        3408
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3335": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3427
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 34,
      "value": "0x5"
    },
    "3337": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3427
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "op": "SUB"
    },
    "3346": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3427
      ],
      "op": "AND",
      "path": "15"
    },
    "3347": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3436
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x79CC6790"
    },
    "3352": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3437,
        3449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD1F"
    },
    "3355": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3437,
        3447
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "3358": {
      "fn": "token_challenge.overnightStart",
      "jump": "i",
      "offset": [
        3437,
        3449
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3359": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3437,
        3449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3360": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3457
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0xAD78EBC5AC6200000"
    },
    "3370": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3372": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3373": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3374": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3379": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "AND",
      "path": "15"
    },
    "3380": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3382": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "SHL",
      "path": "15"
    },
    "3383": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3384": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3385": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3387": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "ADD",
      "path": "15"
    },
    "3388": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3389": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3396": {
      "op": "SHL"
    },
    "3397": {
      "op": "SUB"
    },
    "3398": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "AND",
      "path": "15"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "op": "SUB"
    },
    "3407": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "AND",
      "path": "15"
    },
    "3408": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3409": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3410": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3412": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "ADD",
      "path": "15"
    },
    "3413": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3414": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3415": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3416": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3418": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "ADD",
      "path": "15"
    },
    "3419": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3420": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3421": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3422": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3423": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3425": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3427": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3428": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3429": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3430": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "SUB",
      "path": "15"
    },
    "3431": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3432": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3434": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3435": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3436": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3437": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3438": {
      "op": "DUP1"
    },
    "3439": {
      "op": "ISZERO"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD78"
    },
    "3443": {
      "op": "JUMPI"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3446": {
      "op": "DUP1"
    },
    "3447": {
      "op": "REVERT"
    },
    "3448": {
      "op": "JUMPDEST"
    },
    "3449": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3450": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "GAS",
      "path": "15"
    },
    "3451": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "CALL",
      "path": "15"
    },
    "3452": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3453": {
      "op": "DUP1"
    },
    "3454": {
      "op": "ISZERO"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3458": {
      "op": "JUMPI"
    },
    "3459": {
      "op": "RETURNDATASIZE"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3462": {
      "op": "DUP1"
    },
    "3463": {
      "op": "RETURNDATACOPY"
    },
    "3464": {
      "op": "RETURNDATASIZE"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3467": {
      "op": "REVERT"
    },
    "3468": {
      "op": "JUMPDEST"
    },
    "3469": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3470": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3471": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3472": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3420,
        3458
      ],
      "op": "POP",
      "path": "15"
    },
    "3473": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3104,
        3467
      ],
      "op": "POP",
      "path": "15"
    },
    "3474": {
      "fn": "token_challenge.overnightStart",
      "jump": "o",
      "offset": [
        3104,
        3467
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3475": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4637,
        5416
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3476": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4705,
        4709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3478": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDA0"
    },
    "3481": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "3484": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "3487": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3488": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3489": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDDB"
    },
    "3492": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3493": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3495": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3502": {
      "op": "SHL"
    },
    "3503": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3504": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3505": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3507": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "3508": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3509": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3510": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3512": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "3513": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3514": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3515": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "3516": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3517": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3518": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "3520": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3521": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3522": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3524": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "3525": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3526": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B37"
    },
    "3529": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "3531": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3532": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "3533": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3535": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "3536": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3537": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "3538": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "3539": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3541": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3542": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3543": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3544": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "3545": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3546": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3547": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3548": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4763
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 35,
      "value": "0x5"
    },
    "3550": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4763
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3551": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4721,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3553": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4721,
        4736
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4763
      ],
      "op": "AND",
      "path": "15"
    },
    "3563": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4772
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x79CC6790"
    },
    "3568": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4773,
        4785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF7"
    },
    "3571": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4773,
        4783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "3574": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4773,
        4785
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3575": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4773,
        4785
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3576": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4787,
        4792
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x2B5E3AF16B1880000"
    },
    "3586": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3588": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3589": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3590": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3595": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "AND",
      "path": "15"
    },
    "3596": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3598": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "SHL",
      "path": "15"
    },
    "3599": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3600": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3601": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3603": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "ADD",
      "path": "15"
    },
    "3604": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3605": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "AND",
      "path": "15"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "SUB"
    },
    "3623": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "AND",
      "path": "15"
    },
    "3624": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3625": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3626": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3628": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "ADD",
      "path": "15"
    },
    "3629": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3630": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3631": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3632": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3634": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "ADD",
      "path": "15"
    },
    "3635": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3636": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "POP",
      "path": "15"
    },
    "3637": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "POP",
      "path": "15"
    },
    "3638": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "POP",
      "path": "15"
    },
    "3639": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3641": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3643": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3644": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3645": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3646": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "SUB",
      "path": "15"
    },
    "3647": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3648": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3650": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3651": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3652": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3653": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3654": {
      "op": "DUP1"
    },
    "3655": {
      "op": "ISZERO"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3659": {
      "op": "JUMPI"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "REVERT"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "POP",
      "path": "15"
    },
    "3666": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "GAS",
      "path": "15"
    },
    "3667": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "CALL",
      "path": "15"
    },
    "3668": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4756,
        4793
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3669": {
      "op": "DUP1"
    },
    "3670": {
      "op": "ISZERO"
    },
    "3671": {
      "op": "PUSH2",
      "value": "0xE64"
    },
    "3674": {
      "op": "JUMPI"
    },
    "3675": {
      "op": "RETURNDATASIZE"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3678": {
      "op": "DUP1"
    },
    "3679": {
      "op": "RETURNDATACOPY"
    },
    "3680": {
      "op": "RETURNDATASIZE"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3683": {
      "op": "REVERT"
    },
    "3684": {
      "op": "JUMPDEST"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4836,
        4853
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 36,
      "value": "0xB"
    },
    "3689": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4836,
        4853
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3696": {
      "op": "SHL"
    },
    "3697": {
      "op": "SUB"
    },
    "3698": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4836,
        4853
      ],
      "op": "AND",
      "path": "15"
    },
    "3699": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4836,
        4853
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE7E"
    },
    "3704": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4832
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "3709": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4820,
        4832
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3710": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4832
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3717": {
      "op": "SHL"
    },
    "3718": {
      "op": "SUB"
    },
    "3719": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4853
      ],
      "op": "AND",
      "path": "15"
    },
    "3720": {
      "branch": 97,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4853
      ],
      "op": "EQ",
      "path": "15"
    },
    "3721": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4890
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3722": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4890
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEAD"
    },
    "3725": {
      "branch": 97,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4890
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3726": {
      "op": "POP"
    },
    "3727": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4873,
        4890
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "3729": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4873,
        4890
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3736": {
      "op": "SHL"
    },
    "3737": {
      "op": "SUB"
    },
    "3738": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4873,
        4890
      ],
      "op": "AND",
      "path": "15"
    },
    "3739": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4857,
        4869
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEA2"
    },
    "3742": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4857,
        4867
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "3745": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4857,
        4869
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3746": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4857,
        4869
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4857,
        4890
      ],
      "op": "AND",
      "path": "15"
    },
    "3756": {
      "branch": 98,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4857,
        4890
      ],
      "op": "EQ",
      "path": "15"
    },
    "3757": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4890
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3758": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEE8"
    },
    "3761": {
      "branch": 98,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3762": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3764": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3773": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3774": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3776": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "ADD",
      "path": "15"
    },
    "3777": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3778": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3779": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3781": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "ADD",
      "path": "15"
    },
    "3782": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3783": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3784": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "SUB",
      "path": "15"
    },
    "3785": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3786": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3787": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x34"
    },
    "3789": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3790": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3791": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3793": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "ADD",
      "path": "15"
    },
    "3794": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3795": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AB2"
    },
    "3798": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x34"
    },
    "3800": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3801": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "3802": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3804": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "ADD",
      "path": "15"
    },
    "3805": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3806": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "POP",
      "path": "15"
    },
    "3807": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "POP",
      "path": "15"
    },
    "3808": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3810": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3811": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3812": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3813": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "SUB",
      "path": "15"
    },
    "3814": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3815": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3816": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4812,
        4947
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3817": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3819": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3820": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3821": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3822": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4989
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE"
    },
    "3824": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3826": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3827": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3829": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3830": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3831": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        4995
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3832": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4998,
        5007
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C"
    },
    "3835": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4968,
        5007
      ],
      "op": "ADD",
      "path": "15"
    },
    "3836": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4961,
        4964
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "3837": {
      "branch": 99,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4961,
        5007
      ],
      "op": "LT",
      "path": "15"
    },
    "3838": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4958,
        5409
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8DD"
    },
    "3841": {
      "branch": 99,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4958,
        5409
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3842": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 37,
      "value": "0x0"
    },
    "3844": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3845": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3846": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3847": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5050
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "3849": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3851": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3852": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3854": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3855": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3856": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3857": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3859": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5056
      ],
      "op": "AND",
      "path": "15"
    },
    "3860": {
      "branch": 100,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5031,
        5065
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3861": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF4F"
    },
    "3864": {
      "branch": 100,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3865": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3867": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3874": {
      "op": "SHL"
    },
    "3875": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3876": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3877": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3879": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "ADD",
      "path": "15"
    },
    "3880": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3881": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3882": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3884": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "ADD",
      "path": "15"
    },
    "3885": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3886": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3887": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "SUB",
      "path": "15"
    },
    "3888": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3889": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3890": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x23"
    },
    "3892": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3893": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3894": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3896": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "ADD",
      "path": "15"
    },
    "3897": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3898": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B14"
    },
    "3901": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x23"
    },
    "3903": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3904": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "3905": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3907": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "ADD",
      "path": "15"
    },
    "3908": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3909": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "POP",
      "path": "15"
    },
    "3910": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "POP",
      "path": "15"
    },
    "3911": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3913": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3914": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3915": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3916": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "SUB",
      "path": "15"
    },
    "3917": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3918": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3919": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5023,
        5105
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3920": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 38,
      "value": "0xF5A"
    },
    "3923": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        5146
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "3925": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5148,
        5152
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3926": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5125,
        5134
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16EC"
    },
    "3929": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5125,
        5153
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3930": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5125,
        5153
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3931": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5176
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 39,
      "value": "0x5"
    },
    "3933": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5176
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "op": "SUB"
    },
    "3942": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5176
      ],
      "op": "AND",
      "path": "15"
    },
    "3943": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5181
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "3948": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5182,
        5194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF73"
    },
    "3951": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5182,
        5192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "3954": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5182,
        5194
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3955": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5182,
        5194
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3956": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5196,
        5203
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x3635C9ADC5DEA00000"
    },
    "3966": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3968": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3969": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3970": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3975": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "AND",
      "path": "15"
    },
    "3976": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3978": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "SHL",
      "path": "15"
    },
    "3979": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3980": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3981": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3983": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "ADD",
      "path": "15"
    },
    "3984": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3985": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3992": {
      "op": "SHL"
    },
    "3993": {
      "op": "SUB"
    },
    "3994": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "AND",
      "path": "15"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "op": "SUB"
    },
    "4003": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "AND",
      "path": "15"
    },
    "4004": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4005": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4006": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4008": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "ADD",
      "path": "15"
    },
    "4009": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4010": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4011": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4012": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4014": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "ADD",
      "path": "15"
    },
    "4015": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4016": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4017": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4018": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4019": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4021": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4023": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4024": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4025": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4026": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "SUB",
      "path": "15"
    },
    "4027": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4028": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4030": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4031": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4032": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4033": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4034": {
      "op": "DUP1"
    },
    "4035": {
      "op": "ISZERO"
    },
    "4036": {
      "op": "PUSH2",
      "value": "0xFCC"
    },
    "4039": {
      "op": "JUMPI"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4042": {
      "op": "DUP1"
    },
    "4043": {
      "op": "REVERT"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4046": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "GAS",
      "path": "15"
    },
    "4047": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "CALL",
      "path": "15"
    },
    "4048": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4049": {
      "op": "DUP1"
    },
    "4050": {
      "op": "ISZERO"
    },
    "4051": {
      "op": "PUSH2",
      "value": "0xFE0"
    },
    "4054": {
      "op": "JUMPI"
    },
    "4055": {
      "op": "RETURNDATASIZE"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4058": {
      "op": "DUP1"
    },
    "4059": {
      "op": "RETURNDATACOPY"
    },
    "4060": {
      "op": "RETURNDATASIZE"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4063": {
      "op": "REVERT"
    },
    "4064": {
      "op": "JUMPDEST"
    },
    "4065": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4066": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4067": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4068": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "POP",
      "path": "15"
    },
    "4069": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4071": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4072": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5169,
        5204
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4075": {
      "op": "DUP2"
    },
    "4076": {
      "op": "LT"
    },
    "4077": {
      "op": "ISZERO"
    },
    "4078": {
      "op": "PUSH2",
      "value": "0xFF6"
    },
    "4081": {
      "op": "JUMPI"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4084": {
      "op": "DUP1"
    },
    "4085": {
      "op": "REVERT"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "POP"
    },
    "4088": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5262,
        5269
      ],
      "op": "PUSH9",
      "path": "15",
      "statement": 40,
      "value": "0x3635C9ADC5DEA00000"
    },
    "4098": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5262,
        5269
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5256,
        5260
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4101": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5242,
        5254
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100C"
    },
    "4104": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5242,
        5252
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "4107": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5242,
        5254
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4108": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5242,
        5254
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4115": {
      "op": "SHL"
    },
    "4116": {
      "op": "SUB"
    },
    "4117": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "AND",
      "path": "15"
    },
    "4118": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD"
    },
    "4151": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4153": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4154": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4156": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4157": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4158": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4159": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "SUB",
      "path": "15"
    },
    "4160": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4161": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5223,
        5270
      ],
      "op": "LOG4",
      "path": "15"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x0"
    },
    "4166": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4167": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4168": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4169": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5304
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xD"
    },
    "4171": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4173": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4174": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4176": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4177": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5310
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4178": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4179": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4182": {
      "op": "NOT"
    },
    "4183": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "AND",
      "path": "15"
    },
    "4184": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5313,
        5317
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4186": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4187": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4188": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "OR",
      "path": "15"
    },
    "4189": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4190": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4191": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5285,
        5317
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4192": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5334,
        5345
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 42,
      "value": "0x32E"
    },
    "4195": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5334,
        5345
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4196": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4197": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 43,
      "value": "0x1074"
    },
    "4200": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x106F"
    },
    "4203": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E8"
    },
    "4206": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4207": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4208": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1855"
    },
    "4211": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4212": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4213": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "o",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4214": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7794,
        7908
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4215": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1081"
    },
    "4218": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD9"
    },
    "4221": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E8"
    },
    "4224": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4225": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4226": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10BC"
    },
    "4229": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4230": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4232": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4239": {
      "op": "SHL"
    },
    "4240": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4241": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4242": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4244": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "4245": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4246": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4247": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4249": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "4250": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4251": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4252": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "4253": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4254": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4255": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "4257": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4258": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4259": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4261": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "4262": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4263": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE6"
    },
    "4266": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "4268": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4269": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "4270": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4272": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "4273": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4274": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "4275": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "4276": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4278": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4279": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4280": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4281": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "4282": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4283": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4284": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4285": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7874
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0x5"
    },
    "4287": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4288": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4295": {
      "op": "SHL"
    },
    "4296": {
      "op": "SUB"
    },
    "4297": {
      "op": "NOT"
    },
    "4298": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "AND",
      "path": "15"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4305": {
      "op": "SHL"
    },
    "4306": {
      "op": "SUB"
    },
    "4307": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4308": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4309": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4310": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "AND",
      "path": "15"
    },
    "4311": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4312": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4313": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4314": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "OR",
      "path": "15"
    },
    "4315": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4316": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7867,
        7900
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4317": {
      "fn": "token_challenge.setPayCoin",
      "jump": "o",
      "offset": [
        7794,
        7908
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4318": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5452,
        6115
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4319": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10E9"
    },
    "4322": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "4325": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "4328": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4329": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4330": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1124"
    },
    "4333": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4334": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4336": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4345": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4346": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4348": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4349": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4350": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4351": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4353": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4354": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4355": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4356": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "4357": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4358": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4359": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "4361": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4362": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4363": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4365": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4366": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4367": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B37"
    },
    "4370": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "4372": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4373": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "4374": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4376": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4377": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4378": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "4379": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "4380": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4382": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4383": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4384": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4385": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "4386": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4387": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4388": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4389": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5523,
        5549
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 45,
      "value": "0x112F"
    },
    "4392": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5533,
        5542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "4394": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5544,
        5548
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4395": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5523,
        5532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1780"
    },
    "4398": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5523,
        5549
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4399": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5523,
        5549
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4400": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 46,
      "value": "0x0"
    },
    "4402": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4403": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4404": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4405": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5580
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "4407": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4409": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4410": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4411": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4412": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4414": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4415": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4416": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5586
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4417": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5589,
        5592
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "4418": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5592
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4419": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5561,
        5592
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4420": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5619
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 47,
      "value": "0x13"
    },
    "4422": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5625
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4423": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5625
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4424": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5625
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4425": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5625
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4426": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5625
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4427": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5633
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4428": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5633
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4431": {
      "op": "NOT"
    },
    "4432": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5633
      ],
      "op": "AND",
      "path": "15"
    },
    "4433": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5633
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4434": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5602,
        5633
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4435": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5653,
        5667
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x6"
    },
    "4437": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5653,
        5674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4438": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5678,
        5679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4440": {
      "branch": 101,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5653,
        5679
      ],
      "op": "EQ",
      "path": "15"
    },
    "4441": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1193"
    },
    "4444": {
      "branch": 101,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4445": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4447": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4454": {
      "op": "SHL"
    },
    "4455": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4456": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4457": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4459": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "ADD",
      "path": "15"
    },
    "4460": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4461": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4462": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4464": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "ADD",
      "path": "15"
    },
    "4465": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4466": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4467": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "SUB",
      "path": "15"
    },
    "4468": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4469": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4470": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x30"
    },
    "4472": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4473": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4474": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4476": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "ADD",
      "path": "15"
    },
    "4477": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4478": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A16"
    },
    "4481": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x30"
    },
    "4483": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4484": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "4485": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4487": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "ADD",
      "path": "15"
    },
    "4488": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4489": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "POP",
      "path": "15"
    },
    "4490": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "POP",
      "path": "15"
    },
    "4491": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4493": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4494": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4495": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4496": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "SUB",
      "path": "15"
    },
    "4497": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4498": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4499": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5732
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4500": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5747,
        5756
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4502": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4503": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5766,
        5780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "4505": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5766,
        5787
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4506": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5762,
        5787
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4507": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5762,
        5787
      ],
      "op": "LT",
      "path": "15"
    },
    "4508": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4509": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1259"
    },
    "4512": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4513": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "4515": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5841,
        5842
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4516": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4517": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4518": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4519": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "LT",
      "path": "15"
    },
    "4520": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11AD"
    },
    "4523": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4524": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "INVALID",
      "path": "15"
    },
    "4525": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4526": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4528": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4529": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4530": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4531": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4533": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4534": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4535": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4536": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "ADD",
      "path": "15"
    },
    "4537": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4544": {
      "op": "SHL"
    },
    "4545": {
      "op": "SUB"
    },
    "4546": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5826,
        5843
      ],
      "op": "AND",
      "path": "15"
    },
    "4547": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5810,
        5822
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11CA"
    },
    "4550": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5810,
        5820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "4553": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5810,
        5822
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4554": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5810,
        5822
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4561": {
      "op": "SHL"
    },
    "4562": {
      "op": "SUB"
    },
    "4563": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5810,
        5843
      ],
      "op": "AND",
      "path": "15"
    },
    "4564": {
      "branch": 102,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5810,
        5843
      ],
      "op": "EQ",
      "path": "15"
    },
    "4565": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4566": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1206"
    },
    "4569": {
      "branch": 102,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4570": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 49,
      "value": "0x11E1"
    },
    "4573": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5880,
        5890
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "4576": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5880,
        5892
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4577": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5880,
        5892
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4578": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x10"
    },
    "4580": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4581": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "SUB"
    },
    "4590": {
      "op": "NOT"
    },
    "4591": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "AND",
      "path": "15"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "op": "SUB"
    },
    "4600": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4601": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4602": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4603": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "AND",
      "path": "15"
    },
    "4604": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4605": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4606": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4607": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "OR",
      "path": "15"
    },
    "4608": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4609": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5862,
        5892
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4610": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1251"
    },
    "4613": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4614": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4615": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5958
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 50,
      "value": "0x11"
    },
    "4617": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5978
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "4619": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5979,
        5980
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4620": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4621": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4622": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4623": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "LT",
      "path": "15"
    },
    "4624": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1215"
    },
    "4627": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4628": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "INVALID",
      "path": "15"
    },
    "4629": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4630": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4632": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4633": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4634": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4635": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4637": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4638": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4639": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4640": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4641": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4642": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "ADD",
      "path": "15"
    },
    "4643": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4644": {
      "op": "DUP4"
    },
    "4645": {
      "op": "SLOAD"
    },
    "4646": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4648": {
      "op": "DUP2"
    },
    "4649": {
      "op": "ADD"
    },
    "4650": {
      "op": "DUP6"
    },
    "4651": {
      "op": "SSTORE"
    },
    "4652": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4653": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4654": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4655": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4656": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4657": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4658": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4659": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "ADD",
      "path": "15"
    },
    "4660": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4661": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4668": {
      "op": "SHL"
    },
    "4669": {
      "op": "SUB"
    },
    "4670": {
      "op": "NOT"
    },
    "4671": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "AND",
      "path": "15"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4678": {
      "op": "SHL"
    },
    "4679": {
      "op": "SUB"
    },
    "4680": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4681": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4682": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5964,
        5981
      ],
      "op": "AND",
      "path": "15"
    },
    "4683": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4684": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4685": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4686": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "OR",
      "path": "15"
    },
    "4687": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4688": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5943,
        5982
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4689": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5807,
        5998
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4690": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5789,
        5792
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 51,
      "value": "0x1"
    },
    "4692": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5789,
        5792
      ],
      "op": "ADD",
      "path": "15"
    },
    "4693": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1196"
    },
    "4696": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4697": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4698": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5743,
        6008
      ],
      "op": "POP",
      "path": "15"
    },
    "4699": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6037,
        6049
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 52,
      "value": "0x1262"
    },
    "4702": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6037,
        6047
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "4705": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6037,
        6049
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4706": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6037,
        6049
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4713": {
      "op": "SHL"
    },
    "4714": {
      "op": "SUB"
    },
    "4715": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "AND",
      "path": "15"
    },
    "4716": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373"
    },
    "4749": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6051,
        6055
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4750": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4752": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4753": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4754": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4755": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4756": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4757": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4759": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "ADD",
      "path": "15"
    },
    "4760": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4761": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "POP",
      "path": "15"
    },
    "4762": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "POP",
      "path": "15"
    },
    "4763": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4765": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4766": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4767": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4768": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "SUB",
      "path": "15"
    },
    "4769": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4770": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6023,
        6056
      ],
      "op": "LOG2",
      "path": "15"
    },
    "4771": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6075
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 53,
      "value": "0x5"
    },
    "4773": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6075
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4780": {
      "op": "SHL"
    },
    "4781": {
      "op": "SUB"
    },
    "4782": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6075
      ],
      "op": "AND",
      "path": "15"
    },
    "4783": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6084
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x79CC6790"
    },
    "4788": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6085,
        6097
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12BB"
    },
    "4791": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6085,
        6095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "4794": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6085,
        6097
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4795": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6085,
        6097
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4796": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6099,
        6105
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x56BC75E2D63100000"
    },
    "4806": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4808": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4809": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4810": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4815": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "AND",
      "path": "15"
    },
    "4816": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4818": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "SHL",
      "path": "15"
    },
    "4819": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4820": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4821": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4823": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "ADD",
      "path": "15"
    },
    "4824": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4825": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4832": {
      "op": "SHL"
    },
    "4833": {
      "op": "SUB"
    },
    "4834": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "AND",
      "path": "15"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "SUB"
    },
    "4843": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "AND",
      "path": "15"
    },
    "4844": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4845": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4846": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4848": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "ADD",
      "path": "15"
    },
    "4849": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4850": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4851": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4852": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4854": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "ADD",
      "path": "15"
    },
    "4855": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4856": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "POP",
      "path": "15"
    },
    "4857": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "POP",
      "path": "15"
    },
    "4858": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "POP",
      "path": "15"
    },
    "4859": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4861": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4863": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4864": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4865": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4866": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "SUB",
      "path": "15"
    },
    "4867": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4868": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4870": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4871": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4872": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4873": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6068,
        6106
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4874": {
      "op": "DUP1"
    },
    "4875": {
      "op": "ISZERO"
    },
    "4876": {
      "op": "PUSH2",
      "value": "0xD78"
    },
    "4879": {
      "op": "JUMPI"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "DUP1"
    },
    "4883": {
      "op": "REVERT"
    },
    "4884": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4885": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x131F"
    },
    "4888": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "4891": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "4894": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4895": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4896": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x135A"
    },
    "4899": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4900": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4902": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4909": {
      "op": "SHL"
    },
    "4910": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4911": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4912": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4914": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4915": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4916": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4917": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4919": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4920": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4921": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4922": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "4923": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4924": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4925": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "4927": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4928": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4929": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4931": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4932": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4933": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B37"
    },
    "4936": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "4938": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4939": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "4940": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4942": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "4943": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4944": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "4945": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "4946": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4948": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4949": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4950": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4951": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "4952": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4953": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4954": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4955": {
      "fn": "TeamRole.addTeam",
      "offset": [
        747,
        764
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 54,
      "value": "0xB8A"
    },
    "4958": {
      "fn": "TeamRole.addTeam",
      "offset": [
        756,
        763
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4959": {
      "fn": "TeamRole.addTeam",
      "offset": [
        747,
        755
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x189D"
    },
    "4962": {
      "fn": "TeamRole.addTeam",
      "jump": "i",
      "offset": [
        747,
        764
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4963": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4964": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2880,
        2884
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4966": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2880,
        2884
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4967": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4968": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        2932
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "4970": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        2939
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4971": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2914,
        2939
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4972": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2914,
        2939
      ],
      "op": "LT",
      "path": "15"
    },
    "4973": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4974": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13B5"
    },
    "4977": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4978": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2983,
        2994
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4985": {
      "op": "SHL"
    },
    "4986": {
      "op": "SUB"
    },
    "4987": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2994
      ],
      "op": "AND",
      "path": "15"
    },
    "4988": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2976
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "4990": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2977,
        2978
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4991": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4992": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4993": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4994": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "LT",
      "path": "15"
    },
    "4995": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1388"
    },
    "4998": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4999": {
      "dev": "Index out of range",
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "INVALID",
      "path": "15"
    },
    "5000": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5001": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5003": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5004": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5005": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5006": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5008": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5009": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5010": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5011": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "ADD",
      "path": "15"
    },
    "5012": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5019": {
      "op": "SHL"
    },
    "5020": {
      "op": "SUB"
    },
    "5021": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2979
      ],
      "op": "AND",
      "path": "15"
    },
    "5022": {
      "branch": 103,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2962,
        2994
      ],
      "op": "EQ",
      "path": "15"
    },
    "5023": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2959,
        3040
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5024": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2959,
        3040
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13AD"
    },
    "5027": {
      "branch": 103,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2959,
        3040
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5028": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3020,
        3024
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 55,
      "value": "0x1"
    },
    "5030": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3013,
        3024
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5031": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3013,
        3024
      ],
      "op": "POP",
      "path": "15"
    },
    "5032": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3013,
        3024
      ],
      "op": "POP",
      "path": "15"
    },
    "5033": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3013,
        3024
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32E"
    },
    "5036": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3013,
        3024
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5037": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2959,
        3040
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5038": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2941,
        2944
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0x1"
    },
    "5040": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2941,
        2944
      ],
      "op": "ADD",
      "path": "15"
    },
    "5041": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1367"
    },
    "5044": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5045": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2895,
        3050
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5046": {
      "op": "POP"
    },
    "5047": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3062,
        3067
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 57,
      "value": "0x0"
    },
    "5049": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3062,
        3067
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5050": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2815,
        3075
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5051": {
      "op": "POP"
    },
    "5052": {
      "op": "POP"
    },
    "5053": {
      "fn": "token_challenge.isRegistered",
      "jump": "o",
      "offset": [
        2815,
        3075
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5054": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5055": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13C9"
    },
    "5058": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x583"
    },
    "5061": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "5064": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5065": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5066": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1404"
    },
    "5069": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5070": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5072": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5079": {
      "op": "SHL"
    },
    "5080": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5081": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5082": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5084": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "5085": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5086": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5087": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5089": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "5090": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5091": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5092": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "5093": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5094": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5095": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "5097": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5098": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5099": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5101": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "5102": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5103": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B37"
    },
    "5106": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2C"
    },
    "5108": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5109": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "5110": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5112": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "14"
    },
    "5113": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5114": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "5115": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "14"
    },
    "5116": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5118": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5119": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5120": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5121": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "14"
    },
    "5122": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5123": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5124": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5125": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3564,
        3578
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 58,
      "value": "0x7"
    },
    "5127": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3564,
        3578
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5128": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3552,
        3560
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5129": {
      "branch": 104,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3552,
        3578
      ],
      "op": "EQ",
      "path": "15"
    },
    "5130": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x144C"
    },
    "5133": {
      "branch": 104,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5134": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5136": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5137": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5144": {
      "op": "SHL"
    },
    "5145": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5146": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5147": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5149": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5151": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5152": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "ADD",
      "path": "15"
    },
    "5153": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5154": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF"
    },
    "5156": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5158": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5159": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "ADD",
      "path": "15"
    },
    "5160": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5161": {
      "op": "PUSH15",
      "value": "0x2BB937B7339034B210383934B1B297"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "5179": {
      "op": "SHL"
    },
    "5180": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5182": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5183": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "ADD",
      "path": "15"
    },
    "5184": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5185": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5186": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5187": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5188": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5189": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5190": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "SUB",
      "path": "15"
    },
    "5191": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5193": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "ADD",
      "path": "15"
    },
    "5194": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5195": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5196": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3544,
        3598
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5197": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3619,
        3643
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5199": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3619,
        3643
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5200": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3616
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "5201": {
      "branch": 105,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3643
      ],
      "op": "GT",
      "path": "15"
    },
    "5202": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3687
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5203": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3687
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5204": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3687
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1462"
    },
    "5207": {
      "branch": 105,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3687
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5208": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3687
      ],
      "op": "POP",
      "path": "15"
    },
    "5209": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3653,
        3677
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5211": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3653,
        3677
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5212": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3680,
        3687
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE10"
    },
    "5215": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3653,
        3687
      ],
      "op": "ADD",
      "path": "15"
    },
    "5216": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3647,
        3650
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "5217": {
      "branch": 106,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3647,
        3687
      ],
      "op": "LT",
      "path": "15"
    },
    "5218": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3613,
        3687
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5219": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3609,
        4049
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5220": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3609,
        4049
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A0"
    },
    "5223": {
      "branch": 106,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3609,
        4049
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5224": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3710,
        3723
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 59,
      "value": "0x9"
    },
    "5226": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3710,
        3723
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5227": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3710,
        3723
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5229": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3710,
        3723
      ],
      "op": "AND",
      "path": "15"
    },
    "5230": {
      "branch": 107,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3710,
        3732
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5231": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A9"
    },
    "5234": {
      "branch": 107,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5235": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5237": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5244": {
      "op": "SHL"
    },
    "5245": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5246": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5247": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5249": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "ADD",
      "path": "15"
    },
    "5250": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5251": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5252": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5254": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "ADD",
      "path": "15"
    },
    "5255": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5256": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5257": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "SUB",
      "path": "15"
    },
    "5258": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5259": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5260": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x23"
    },
    "5262": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5263": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5264": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5266": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "ADD",
      "path": "15"
    },
    "5267": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5268": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B14"
    },
    "5271": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x23"
    },
    "5273": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5274": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "5275": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5277": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "ADD",
      "path": "15"
    },
    "5278": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5279": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "POP",
      "path": "15"
    },
    "5280": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "POP",
      "path": "15"
    },
    "5281": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5283": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5284": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5285": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5286": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "SUB",
      "path": "15"
    },
    "5287": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5288": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5289": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3702,
        3772
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5290": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3795
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 60,
      "value": "0x5"
    },
    "5292": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3795
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5299": {
      "op": "SHL"
    },
    "5300": {
      "op": "SUB"
    },
    "5301": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3795
      ],
      "op": "AND",
      "path": "15"
    },
    "5302": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3800
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "5307": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3801,
        3813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14C2"
    },
    "5310": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3801,
        3811
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "5313": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3801,
        3813
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5314": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3801,
        3813
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5315": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3815,
        3822
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x410D586A20A4C00000"
    },
    "5325": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5327": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5328": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5329": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "5334": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "AND",
      "path": "15"
    },
    "5335": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "5337": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "SHL",
      "path": "15"
    },
    "5338": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5339": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5340": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5342": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "ADD",
      "path": "15"
    },
    "5343": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5344": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5351": {
      "op": "SHL"
    },
    "5352": {
      "op": "SUB"
    },
    "5353": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "AND",
      "path": "15"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5360": {
      "op": "SHL"
    },
    "5361": {
      "op": "SUB"
    },
    "5362": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "AND",
      "path": "15"
    },
    "5363": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5364": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5365": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5367": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "ADD",
      "path": "15"
    },
    "5368": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5369": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5370": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5371": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5373": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "ADD",
      "path": "15"
    },
    "5374": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5375": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5376": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5377": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5378": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5380": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5382": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5383": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5384": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5385": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "SUB",
      "path": "15"
    },
    "5386": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5387": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5389": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5390": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5391": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "5392": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5393": {
      "op": "DUP1"
    },
    "5394": {
      "op": "ISZERO"
    },
    "5395": {
      "op": "PUSH2",
      "value": "0x151B"
    },
    "5398": {
      "op": "JUMPI"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5401": {
      "op": "DUP1"
    },
    "5402": {
      "op": "REVERT"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5405": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "GAS",
      "path": "15"
    },
    "5406": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "CALL",
      "path": "15"
    },
    "5407": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5408": {
      "op": "DUP1"
    },
    "5409": {
      "op": "ISZERO"
    },
    "5410": {
      "op": "PUSH2",
      "value": "0x152F"
    },
    "5413": {
      "op": "JUMPI"
    },
    "5414": {
      "op": "RETURNDATASIZE"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5417": {
      "op": "DUP1"
    },
    "5418": {
      "op": "RETURNDATACOPY"
    },
    "5419": {
      "op": "RETURNDATASIZE"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5422": {
      "op": "REVERT"
    },
    "5423": {
      "op": "JUMPDEST"
    },
    "5424": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5425": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5426": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5427": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "POP",
      "path": "15"
    },
    "5428": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5430": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5431": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3788,
        3823
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5434": {
      "op": "DUP2"
    },
    "5435": {
      "op": "LT"
    },
    "5436": {
      "op": "ISZERO"
    },
    "5437": {
      "op": "PUSH2",
      "value": "0x1545"
    },
    "5440": {
      "op": "JUMPI"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5443": {
      "op": "DUP1"
    },
    "5444": {
      "op": "REVERT"
    },
    "5445": {
      "op": "JUMPDEST"
    },
    "5446": {
      "op": "POP"
    },
    "5447": {
      "op": "POP"
    },
    "5448": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3851
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 61,
      "value": "0x9"
    },
    "5450": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3858
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5451": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3858
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5454": {
      "op": "NOT"
    },
    "5455": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3858
      ],
      "op": "AND",
      "path": "15"
    },
    "5456": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3854,
        3858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5458": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3858
      ],
      "op": "OR",
      "path": "15"
    },
    "5459": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5460": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3838,
        3858
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5461": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3901,
        3908
      ],
      "op": "PUSH9",
      "path": "15",
      "statement": 62,
      "value": "0x410D586A20A4C00000"
    },
    "5471": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3887,
        3899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1566"
    },
    "5474": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3887,
        3897
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "5477": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3887,
        3899
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5478": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3887,
        3899
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "op": "SUB"
    },
    "5487": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "AND",
      "path": "15"
    },
    "5488": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "5521": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5523": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5524": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5526": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5527": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5528": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5529": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "SUB",
      "path": "15"
    },
    "5530": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5531": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3877,
        3909
      ],
      "op": "LOG3",
      "path": "15"
    },
    "5532": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3609,
        4049
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB8A"
    },
    "5535": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3609,
        4049
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5536": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3609,
        4049
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5537": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x5"
    },
    "5539": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5540": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3963,
        3975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "5542": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3963,
        3975
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5543": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5545": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5546": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5547": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5554": {
      "op": "SHL"
    },
    "5555": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5556": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5563": {
      "op": "SHL"
    },
    "5564": {
      "op": "SUB"
    },
    "5565": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3963,
        3975
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5566": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3963,
        3975
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5567": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3963,
        3975
      ],
      "op": "AND",
      "path": "15"
    },
    "5568": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5570": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5571": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "ADD",
      "path": "15"
    },
    "5572": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5573": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3977,
        3984
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x6C6B935B8BBD400000"
    },
    "5583": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5585": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5586": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "ADD",
      "path": "15"
    },
    "5587": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5588": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5589": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5590": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5591": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5592": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5593": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "AND",
      "path": "15"
    },
    "5594": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5595": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3962
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "5600": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3962
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5601": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5603": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5604": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5605": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "ADD",
      "path": "15"
    },
    "5606": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5607": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5609": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5610": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5611": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5612": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5613": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5614": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "SUB",
      "path": "15"
    },
    "5615": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "ADD",
      "path": "15"
    },
    "5616": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5617": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5619": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3957
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5620": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5621": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "5622": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5623": {
      "op": "DUP1"
    },
    "5624": {
      "op": "ISZERO"
    },
    "5625": {
      "op": "PUSH2",
      "value": "0x1601"
    },
    "5628": {
      "op": "JUMPI"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5631": {
      "op": "DUP1"
    },
    "5632": {
      "op": "REVERT"
    },
    "5633": {
      "op": "JUMPDEST"
    },
    "5634": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "POP",
      "path": "15"
    },
    "5635": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "GAS",
      "path": "15"
    },
    "5636": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "CALL",
      "path": "15"
    },
    "5637": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5638": {
      "op": "DUP1"
    },
    "5639": {
      "op": "ISZERO"
    },
    "5640": {
      "op": "PUSH2",
      "value": "0x1615"
    },
    "5643": {
      "op": "JUMPI"
    },
    "5644": {
      "op": "RETURNDATASIZE"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5647": {
      "op": "DUP1"
    },
    "5648": {
      "op": "RETURNDATACOPY"
    },
    "5649": {
      "op": "RETURNDATASIZE"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5652": {
      "op": "REVERT"
    },
    "5653": {
      "op": "JUMPDEST"
    },
    "5654": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "POP",
      "path": "15"
    },
    "5655": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "POP",
      "path": "15"
    },
    "5656": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "POP",
      "path": "15"
    },
    "5657": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "POP",
      "path": "15"
    },
    "5658": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5660": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5661": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3950,
        3985
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5664": {
      "op": "DUP2"
    },
    "5665": {
      "op": "LT"
    },
    "5666": {
      "op": "ISZERO"
    },
    "5667": {
      "op": "PUSH2",
      "value": "0x162B"
    },
    "5670": {
      "op": "JUMPI"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5673": {
      "op": "DUP1"
    },
    "5674": {
      "op": "REVERT"
    },
    "5675": {
      "op": "JUMPDEST"
    },
    "5676": {
      "op": "POP"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4015,
        4027
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 64,
      "value": "0x3"
    },
    "5680": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4015,
        4027
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5681": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4005,
        4037
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5683": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4005,
        4037
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5684": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4029,
        4036
      ],
      "op": "PUSH9",
      "path": "15",
      "value": "0x6C6B935B8BBD400000"
    },
    "5694": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4029,
        4036
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5701": {
      "op": "SHL"
    },
    "5702": {
      "op": "SUB"
    },
    "5703": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4015,
        4027
      ],
      "op": "AND",
      "path": "15"
    },
    "5704": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4015,
        4027
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5705": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4005,
        4037
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "5738": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4005,
        4037
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5739": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4015,
        4027
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5741": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4015,
        4027
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5742": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4005,
        4037
      ],
      "op": "LOG3",
      "path": "15"
    },
    "5743": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3473,
        4064
      ],
      "op": "POP",
      "path": "15"
    },
    "5744": {
      "fn": "token_challenge.overnightCheck",
      "jump": "o",
      "offset": [
        3473,
        4064
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5745": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5746": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        818,
        843
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 65,
      "value": "0x1074"
    },
    "5749": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        842
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x167C"
    },
    "5752": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        840
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16E8"
    },
    "5755": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        830,
        842
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5756": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        842
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5757": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        818,
        829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18E5"
    },
    "5760": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        818,
        843
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5761": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5762": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5770": {
      "op": "SHL"
    },
    "5771": {
      "op": "SUB"
    },
    "5772": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 66
    },
    "5773": {
      "branch": 111,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "5774": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C8"
    },
    "5777": {
      "branch": 111,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5778": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5780": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5787": {
      "op": "SHL"
    },
    "5788": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5789": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5790": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5792": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5793": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5794": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5795": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5797": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5798": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5799": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5800": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "5801": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5802": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5803": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "5805": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5806": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5807": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5809": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5810": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5811": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A90"
    },
    "5814": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "5816": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5817": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5818": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5820": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5821": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5822": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "5823": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "5824": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5826": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5827": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5828": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5829": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "5830": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5831": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5832": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5840": {
      "op": "SHL"
    },
    "5841": {
      "op": "SUB"
    },
    "5842": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 67
    },
    "5843": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5845": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5846": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5847": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5848": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5850": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5851": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5852": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5853": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5854": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5856": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5857": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5858": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5859": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5861": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "5862": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5863": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5864": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5865": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 68
    },
    "5866": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5867": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5868": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7250,
        7616
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5869": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7329,
        7344
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5871": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7329,
        7344
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5872": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5873": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7386,
        7399
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5874": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7386,
        7399
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5875": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7382,
        7399
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5876": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7382,
        7399
      ],
      "op": "LT",
      "path": "15"
    },
    "5877": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5878": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1728"
    },
    "5881": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5882": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7440,
        7445
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5883": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7433
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5884": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7434,
        7435
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5885": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5886": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5887": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5888": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "LT",
      "path": "15"
    },
    "5889": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1706"
    },
    "5892": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5893": {
      "dev": "Index out of range",
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "INVALID",
      "path": "15"
    },
    "5894": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5895": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5896": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5898": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5899": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5901": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5903": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5904": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "ADD",
      "path": "15"
    },
    "5905": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7436
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5906": {
      "branch": 108,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7427,
        7445
      ],
      "op": "EQ",
      "path": "15"
    },
    "5907": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7423,
        7534
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5908": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7423,
        7534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1720"
    },
    "5911": {
      "branch": 108,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7423,
        7534
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5912": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7482,
        7486
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 69,
      "value": "0x1"
    },
    "5914": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7469,
        7486
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5915": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7469,
        7486
      ],
      "op": "POP",
      "path": "15"
    },
    "5916": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7509,
        7514
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 70,
      "value": "0x1728"
    },
    "5919": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7509,
        7514
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5920": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7423,
        7534
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5921": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7401,
        7404
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 71,
      "value": "0x1"
    },
    "5923": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7401,
        7404
      ],
      "op": "ADD",
      "path": "15"
    },
    "5924": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16F0"
    },
    "5927": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5928": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5929": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7363,
        7548
      ],
      "op": "POP",
      "path": "15"
    },
    "5930": {
      "branch": 109,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7569,
        7579
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 72
    },
    "5931": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x177B"
    },
    "5934": {
      "branch": 109,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5935": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5937": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5938": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5945": {
      "op": "SHL"
    },
    "5946": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5947": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5948": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5950": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5952": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5953": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5954": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5955": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x18"
    },
    "5957": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5959": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5960": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5961": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5962": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x436F756C646E27742066696E642079756F7220666C6167210000000000000000"
    },
    "5995": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5997": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5998": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5999": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6000": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6001": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6002": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6003": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6004": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6005": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "SUB",
      "path": "15"
    },
    "6006": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "6008": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "ADD",
      "path": "15"
    },
    "6009": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6010": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "REVERT",
      "path": "15"
    },
    "6011": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7608
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6012": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7250,
        7616
      ],
      "op": "POP",
      "path": "15"
    },
    "6013": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7250,
        7616
      ],
      "op": "POP",
      "path": "15"
    },
    "6014": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7250,
        7616
      ],
      "op": "POP",
      "path": "15"
    },
    "6015": {
      "fn": "token_challenge.matchFlag",
      "jump": "o",
      "offset": [
        7250,
        7616
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6016": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7011,
        7244
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6017": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7095,
        7104
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6019": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6020": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7114,
        7127
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6021": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7114,
        7127
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6022": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7110,
        7127
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6023": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7110,
        7127
      ],
      "op": "LT",
      "path": "15"
    },
    "6024": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6025": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17F4"
    },
    "6028": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6029": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7168,
        7173
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 73
    },
    "6030": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7161
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6031": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7162,
        7163
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6032": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6033": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6034": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6035": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "LT",
      "path": "15"
    },
    "6036": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1799"
    },
    "6039": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6040": {
      "dev": "Index out of range",
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "INVALID",
      "path": "15"
    },
    "6041": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6042": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6043": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6045": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6046": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6048": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6050": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6051": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "ADD",
      "path": "15"
    },
    "6052": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6053": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7173
      ],
      "op": "EQ",
      "path": "15"
    },
    "6054": {
      "branch": 110,
      "fn": "token_challenge.checkFlag",
      "offset": [
        7155,
        7173
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6055": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17EC"
    },
    "6058": {
      "branch": 110,
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6059": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6061": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6062": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6069": {
      "op": "SHL"
    },
    "6070": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6071": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6072": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6074": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6076": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6077": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "ADD",
      "path": "15"
    },
    "6078": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6079": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "6081": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "6083": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6084": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "ADD",
      "path": "15"
    },
    "6085": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6086": {
      "op": "PUSH18",
      "value": "0x466C616720616C7265616479207573656421"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6107": {
      "op": "SHL"
    },
    "6108": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "6110": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6111": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "ADD",
      "path": "15"
    },
    "6112": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6113": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6114": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6115": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6116": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6117": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6118": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "SUB",
      "path": "15"
    },
    "6119": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "6121": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "ADD",
      "path": "15"
    },
    "6122": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6123": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "REVERT",
      "path": "15"
    },
    "6124": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7147,
        7197
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6125": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7129,
        7132
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 74,
      "value": "0x1"
    },
    "6127": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7129,
        7132
      ],
      "op": "ADD",
      "path": "15"
    },
    "6128": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1783"
    },
    "6131": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6132": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7091,
        7208
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6133": {
      "op": "POP"
    },
    "6134": {
      "op": "DUP2"
    },
    "6135": {
      "op": "SLOAD"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6138": {
      "op": "DUP2"
    },
    "6139": {
      "op": "ADD"
    },
    "6140": {
      "op": "DUP4"
    },
    "6141": {
      "op": "SSTORE"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6144": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "SWAP3",
      "path": "15",
      "statement": 75
    },
    "6145": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6146": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6147": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6149": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6150": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6151": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6152": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6153": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6154": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "ADD",
      "path": "15"
    },
    "6155": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7218,
        7236
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6156": {
      "fn": "token_challenge.checkFlag",
      "jump": "o",
      "offset": [
        7011,
        7244
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6157": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6158": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 76,
      "value": "0x181E"
    },
    "6161": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6163": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6164": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "6169": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x192D"
    },
    "6172": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "6173": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6174": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6175": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 77,
      "value": "0x40"
    },
    "6177": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "op": "SUB"
    },
    "6186": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6187": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "6188": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6189": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "6222": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6223": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6225": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6226": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "6227": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "6228": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6229": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6230": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 78,
      "value": "0x1866"
    },
    "6233": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6235": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6236": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "6241": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19AE"
    },
    "6244": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "6245": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6246": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6247": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 79,
      "value": "0x40"
    },
    "6249": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6256": {
      "op": "SHL"
    },
    "6257": {
      "op": "SUB"
    },
    "6258": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6259": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "6260": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6261": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "6294": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6295": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6297": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6298": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "6299": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "6300": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6301": {
      "fn": "TeamRole._addTeam",
      "offset": [
        856,
        969
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6302": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 80,
      "value": "0x18AE"
    },
    "6305": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        916
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6307": {
      "fn": "TeamRole._addTeam",
      "offset": [
        921,
        928
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6308": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "6313": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        920
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x192D"
    },
    "6316": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "AND",
      "path": "14"
    },
    "6317": {
      "fn": "TeamRole._addTeam",
      "jump": "i",
      "offset": [
        910,
        929
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6318": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6319": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 81,
      "value": "0x40"
    },
    "6321": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6328": {
      "op": "SHL"
    },
    "6329": {
      "op": "SUB"
    },
    "6330": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6331": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "AND",
      "path": "14"
    },
    "6332": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6333": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x3F5F1DB80208F0D453083A86E16909CECC1E95E2618D5D927C93ACE22B8200FC"
    },
    "6366": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6367": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6369": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6370": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "LOG2",
      "path": "14"
    },
    "6371": {
      "fn": "TeamRole._addTeam",
      "offset": [
        856,
        969
      ],
      "op": "POP",
      "path": "14"
    },
    "6372": {
      "fn": "TeamRole._addTeam",
      "jump": "o",
      "offset": [
        856,
        969
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6373": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        975,
        1096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6374": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 82,
      "value": "0x18F6"
    },
    "6377": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1038
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6379": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1046,
        1053
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6380": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "6385": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1045
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19AE"
    },
    "6388": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "AND",
      "path": "14"
    },
    "6389": {
      "fn": "TeamRole._removeTeam",
      "jump": "i",
      "offset": [
        1032,
        1054
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6390": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6391": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 83,
      "value": "0x40"
    },
    "6393": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6400": {
      "op": "SHL"
    },
    "6401": {
      "op": "SUB"
    },
    "6402": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6403": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "AND",
      "path": "14"
    },
    "6404": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6405": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x26B6063D78AEFCF96F02FF06BC9822B5A623278253ADD7FFFA5FB453DB399810"
    },
    "6438": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6439": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6441": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6442": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "LOG2",
      "path": "14"
    },
    "6443": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        975,
        1096
      ],
      "op": "POP",
      "path": "14"
    },
    "6444": {
      "fn": "TeamRole._removeTeam",
      "jump": "o",
      "offset": [
        975,
        1096
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6445": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6446": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 84,
      "value": "0x1937"
    },
    "6449": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6450": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6451": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1681"
    },
    "6454": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6455": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6456": {
      "branch": 112,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6457": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1989"
    },
    "6460": {
      "branch": 112,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6461": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6463": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6464": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6471": {
      "op": "SHL"
    },
    "6472": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6473": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6474": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6476": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6478": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6479": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6480": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6481": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6483": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6485": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6486": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6487": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6488": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "6521": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6523": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6524": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6525": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6526": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6527": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6528": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6529": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6530": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6531": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "6532": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "6534": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6535": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6536": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6537": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6544": {
      "op": "SHL"
    },
    "6545": {
      "op": "SUB"
    },
    "6546": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 85
    },
    "6547": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6549": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6550": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6551": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6552": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6554": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6555": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6556": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6557": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6558": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6560": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6561": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6562": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6563": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6566": {
      "op": "NOT"
    },
    "6567": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "6568": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6570": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "6571": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6572": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6573": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6574": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6575": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 86,
      "value": "0x19B8"
    },
    "6578": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6579": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6580": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1681"
    },
    "6583": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6584": {
      "branch": 113,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6585": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19F3"
    },
    "6588": {
      "branch": 113,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6589": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6591": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6600": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6601": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6603": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6604": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6605": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6606": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6608": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6609": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6610": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6611": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "6612": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6613": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6614": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6616": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6617": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6618": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6620": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6621": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6622": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A46"
    },
    "6625": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6627": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6628": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "6629": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6631": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6632": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6633": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "6634": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "6635": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6637": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6638": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6639": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6640": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "6641": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6642": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6643": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6650": {
      "op": "SHL"
    },
    "6651": {
      "op": "SUB"
    },
    "6652": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 87
    },
    "6653": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6655": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6656": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6657": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6658": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6660": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6661": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6662": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6663": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6664": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6666": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6667": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6668": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6669": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6672": {
      "op": "NOT"
    },
    "6673": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "6674": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6675": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6676": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "78de5cd7a2c1c48252c69d61b4dabcdd811d6849",
  "source": "pragma solidity ^0.5.0;\n\n// import \"OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol\";\nimport \"./token_exchange.sol\" ; \nimport \"./TeamRole.sol\" ; \n\ncontract token_challenge is AdminRole, TeamRole {\n\n    //address _exchangeAddress; \n    address private _fss_admin = 0x2b177c1854DE132E96326B454055005E62feBDc7; \n    address private _fss_trading = 0x27C404d4D91156F7063E8dB9cC10970cfffF9a6C;\n\n    //EXCHANGE & PAYCOIN\n    token_exchange fss_exchange; \n    PayCoin payCoin; \n\n    //SIGNING UP & CHECKING VARIABLES\n    address[] _teamAddresses; \n\n    event Registered(address indexed teamAddress); \n\n    //PRICE OVERNIGHT VARIABLES\n    uint256 _last_id_price; \n    uint256 _startOvernightChallenge;\n    bool _overnightWon; \n    \n    event Overnight(address indexed winner, uint256 indexed coin_won); \n\n    //DIRECT CHALLENGE VARIABLES\n    uint256[] _directFlag;    \n    address _directChallenger; \n    address _directChallenged; \n    \n    mapping (uint256 => bool) _directChallengeWon;\n    mapping (uint256 => uint256) _startDirectChallenge; \n\n    event DirectChallenge(address indexed challenger, address indexed challenged, uint256 _flag); \n    event DirectChallengeWon(address indexed winner, uint256 indexed _flag, uint256 indexed _amount); \n\n    //TEAM CHALLENGE VARIABLES\n    uint256[] _teamFlag; \n    address _teamChallenger; \n    address[] _teamChallenged;\n    \n    mapping (uint256 => uint256) _startTeamChallenge; \n    mapping (uint256 => bool) _teamChallengeWon; \n    \n    event TeamChallenge(address indexed challenger, uint256 _flag);\n    event TeamChallengeWon(address indexed winner, uint256 indexed _flag, uint256 indexed _amount);  \n\n    //CONSTRUCTOR\n    constructor (address exchangeAddress, address payCoinAddress) public {\n        fss_exchange = token_exchange(exchangeAddress);\n        payCoin = PayCoin(payCoinAddress);\n\n        if (!(isAdmin(_fss_admin))){\n            addAdmin(_fss_admin);\n        }\n\n        if (!(isAdmin(_fss_trading))){\n            addAdmin(_fss_trading);\n        }\n\n        _teamAddresses.push(_fss_trading); \n\n    }\n\n    //SIGNING UP & CHECKING FUNCTIONS\n    function register(address teamAddress) external {\n        bool _alreadyRegistered = false; \n\n        require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                _alreadyRegistered = true; \n            }\n        }\n        require(_alreadyRegistered == false, \"You're already registered.\"); \n\n        _teamAddresses.push(teamAddress); \n        if(!(isTeam(teamAddress))){\n            addTeam(teamAddress);\n        }\n         \n        require(_teamAddresses.length <= 3, \"Too many teams.\"); \n        \n        emit Registered(teamAddress); \n    }\n\n    function isRegistered(address teamAddress) external view returns(bool){\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                return true; \n            }\n        }\n    return false; \n    }\n\n    //PRICE OVERNIGHT\n\n    function overnightStart(int256 new_delta_price) onlyAdmin external {\n        require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n        \n        _startOvernightChallenge = now; \n        _last_id_price = fss_exchange.setNewPrice(new_delta_price);\n        _overnightWon = false;  \n        payCoin.burnFrom(_msgSender(), 200e18); \n\n    }\n\n    function overnightCheck(uint256 id_price) onlyTeam external {\n\n        require(id_price == _last_id_price, \"Wrong id price.\"); \n        if( now > _startOvernightChallenge && now < _startOvernightChallenge + 1 hours){\n            require(_overnightWon == false, \"The challenge has already been won.\"); \n\n            payCoin.mint(_msgSender(), 1200e18); \n            _overnightWon = true;\n            emit Overnight(_msgSender(), 1200e18); \n\n        }\n\n        else{\n            payCoin.mint(_fss_trading, 2000e18); \n            emit Overnight(_fss_trading, 2000e18); \n        }\n        \n    }\n\n    //DIRECT CHALLENGE\n    \n    function challengeStart(address directChallenged, uint256 flag) onlyTeam external {\n        checkFlag(_directFlag, flag); \n\n        require(_msgSender() != directChallenged, \"The addresses must be different.\");  \n\n        _startDirectChallenge[flag] = now;\n        _directChallenger = _msgSender(); \n        _directChallenged = directChallenged; \n        _directChallengeWon[flag] = false; \n\n        emit DirectChallenge(_directChallenger, _directChallenged, flag);\n        payCoin.burnFrom(_msgSender(), 50e18);          \n    \n    }\n\n    function winDirectChallenge(uint256 flag) onlyTeam external returns(bool) {\n        bool _flagFound = false; \n\n        payCoin.burnFrom(_msgSender(), 50e18);\n        \n        require(_msgSender() == _directChallenger || _msgSender() == _directChallenged, \"You must be either the challenger or the challenged.\"); \n        if(now >= _startDirectChallenge[flag] + 5 minutes){ \n            require(_directChallengeWon[flag] == false, \"The challenge has already been won.\"); \n    \n            matchFlag(_directFlag, flag); \n\n            payCoin.mint(_msgSender(), 1000e18);\n            emit DirectChallengeWon(_msgSender(), flag, 1000e18); \n            _directChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n\n    }\n    \n    //TEAM CHALLENGE\n    \n    function challengeStart(uint256 flag) onlyTeam external {\n    \n        checkFlag(_teamFlag, flag); \n\n        _startTeamChallenge[flag] = now;\n        _teamChallengeWon[flag] = false; \n\n        require(_teamAddresses.length == 3, \"Challenge can't start until all teams regitered.\"); \n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_msgSender() == _teamAddresses[i]){\n                _teamChallenger = _msgSender(); \n            }\n            else{\n                _teamChallenged.push(_teamAddresses[i]); \n            }\n        }\n\n        emit TeamChallenge(_msgSender(), flag); \n\n        payCoin.burnFrom(_msgSender(), 100e18); \n\n    }\n\n    function winTeamChallenge(uint256 flag) onlyTeam external returns(bool) {    \n        bool _flagFound = false; \n\n        payCoin.burnFrom(_msgSender(), 100e18);\n \n        if(now >= _startTeamChallenge[flag] + 5 minutes){\n            require(_teamChallengeWon[flag] == false, \"The challenge has already been won.\"); \n        \n            matchFlag(_teamFlag, flag); \n\n            if(_msgSender() == _teamChallenger){\n                payCoin.mint(_msgSender(), 1500e18);\n                emit TeamChallengeWon(_msgSender(), flag, 1500e18);\n            }\n            else{\n                payCoin.mint(_msgSender(), 1000e18);\n                emit TeamChallengeWon(_msgSender(), flag, 1000e18);\n            }\n             \n            _teamChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n    }\n\n\n    //INTERNAL FUNCTION\n\n    function checkFlag(uint256[] storage _flags, uint256 _flag) internal {\n\n        for(uint256 i = 0; i < _flags.length; i++){\n            require(_flags[i] != _flag , \"Flag already used!\");\n        }\n\n        _flags.push(_flag);\n\n    }\n\n    function matchFlag(uint256[] storage _flags, uint256 _flag) internal {\n        bool _flagFound = false;\n\n        for(uint256 i = 0; i < _flags.length; i++){\n                if (_flags[i] == _flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\");\n\n    }\n\n    //EXCHANGE & PAYCOIN ADDRESS\n    function setExchange(address exchangeAddress) onlyAdmin external {\n        fss_exchange = token_exchange(exchangeAddress); \n    }\n    \n    function setPayCoin(address payCoinAddress) onlyAdmin external {\n        payCoin = PayCoin(payCoinAddress); \n    }\n    \n\n}",
  "sourceMap": "167:7749:15:-;;;255:71;;;-1:-1:-1;;;;;;255:71:15;;;284:42;255:71;;;;333:73;;;;;;364:42;333:73;;;1687:389;5:2:-1;;;;30:1;27;20:12;5:2;1687:389:15;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1687:389:15;;;;;;;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;412:22:14;421:12;-1:-1:-1;;;;;421:10:14;:12;:::i;:::-;-1:-1:-1;;;;;412:8:14;:22;:::i;:::-;1766:12:15;:46;;-1:-1:-1;;;;;1766:46:15;;;-1:-1:-1;;;;;;1766:46:15;;;;;;;1822:7;:33;;;;;;;;;;;;;1880:10;;1872:19;;1880:10;-1:-1:-1;;;;;1872:7:15;:19;:::i;:::-;1866:72;;1916:10;;1907:20;;-1:-1:-1;;;;;1916:10:15;-1:-1:-1;;;;;1907:8:15;:20;:::i;:::-;1962:12;;1954:21;;-1:-1:-1;;;;;1962:12:15;-1:-1:-1;;;;;1954:7:15;:21;:::i;:::-;1948:76;;2000:12;;1991:22;;-1:-1:-1;;;;;2000:12:15;-1:-1:-1;;;;;1991:8:15;:22;:::i;:::-;-1:-1:-1;;2054:12:15;;2034:14;27:10:-1;;2054:12:15;23:18:-1;;45:23;;2054:12:15;2034:33;;;;;;;;-1:-1:-1;;;;;;2034:33:15;-1:-1:-1;;;;;2054:12:15;;;2034:33;;;;;;167:7749;;788:96:0;867:10;788:96;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;856:113:14:-;910:19;921:7;910:6;:10;;;;;;:19;;;;:::i;:::-;944:18;;-1:-1:-1;;;;;944:18:14;;;;;;;;856:113;:::o;587:105:9:-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;698:87::-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;167:7749:15:-;;;;;;;",
  "sourcePath": "contracts/token_challenge.sol",
  "type": "contract"
}