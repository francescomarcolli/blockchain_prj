{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenged",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        }
      ],
      "name": "DirectChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "DirectChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_won",
          "type": "uint256"
        }
      ],
      "name": "Overnight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TeamAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        }
      ],
      "name": "TeamChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_flag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TeamChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TeamRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "directChallenged",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "overnightCheck",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "new_delta_price",
          "type": "int256"
        }
      ],
      "name": "overnightStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "name": "setExchange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "payCoinAddress",
          "type": "address"
        }
      ],
      "name": "setPayCoin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winDirectChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winTeamChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "13": "contracts/TeamRole.sol",
    "14": "contracts/token_challenge.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_challenge.sol",
    "exportedSymbols": {
      "token_challenge": [
        842
      ]
    },
    "id": 843,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 81,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "contracts/token_exchange.sol",
        "file": "./token_exchange.sol",
        "id": 82,
        "nodeType": "ImportDirective",
        "scope": 843,
        "sourceUnit": 1497,
        "src": "106:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TeamRole.sol",
        "file": "./TeamRole.sol",
        "id": 83,
        "nodeType": "ImportDirective",
        "scope": 843,
        "sourceUnit": 1866,
        "src": "139:25:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 84,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1972,
              "src": "195:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$1972",
                "typeString": "contract AdminRole"
              }
            },
            "id": 85,
            "nodeType": "InheritanceSpecifier",
            "src": "195:9:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 86,
              "name": "TeamRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1865,
              "src": "206:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TeamRole_$1865",
                "typeString": "contract TeamRole"
              }
            },
            "id": 87,
            "nodeType": "InheritanceSpecifier",
            "src": "206:8:14"
          }
        ],
        "contractDependencies": [
          1523,
          1865,
          1972
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 842,
        "linearizedBaseContracts": [
          842,
          1865,
          1972,
          1523
        ],
        "name": "token_challenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 90,
            "name": "_fss_admin",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "255:71:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "255:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307832623137376331383534444531333245393633323642343534303535303035453632666542446337",
              "id": 89,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "284:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x2b177c1854DE132E96326B454055005E62feBDc7"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 93,
            "name": "_fss_trading",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "333:73:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 91,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "333:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838354138643732343146666666656537323930353031343733413942313142466441324165394666",
              "id": 92,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 95,
            "name": "fss_exchange",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "439:27:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_token_exchange_$1496",
              "typeString": "contract token_exchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 94,
              "name": "token_exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1496,
              "src": "439:14:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_token_exchange_$1496",
                "typeString": "contract token_exchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 97,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "473:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 96,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1758,
              "src": "473:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 100,
            "name": "_teamAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "537:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 98,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 99,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "537:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 104,
            "name": "Registered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "indexed": true,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "586:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "585:29:14"
            },
            "src": "569:46:14"
          },
          {
            "constant": false,
            "id": 106,
            "name": "_last_id_price",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "654:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 108,
            "name": "_startOvernightChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "683:32:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "683:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 110,
            "name": "_overnightWon",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "721:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 109,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "721:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 116,
            "name": "Overnight",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "767:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "indexed": true,
                  "name": "coin_won",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "791:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "766:50:14"
            },
            "src": "751:66:14"
          },
          {
            "constant": false,
            "id": 119,
            "name": "_directFlag",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "857:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 117,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "857:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 118,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "857:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 121,
            "name": "_directChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "888:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 120,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "888:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 123,
            "name": "_directChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "920:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 122,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "920:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 127,
            "name": "_directChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "957:45:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 126,
              "keyType": {
                "id": 124,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 125,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "977:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 131,
            "name": "_startDirectChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "1008:50:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 130,
              "keyType": {
                "id": 128,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1017:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1008:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 129,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1028:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 139,
            "name": "DirectChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "indexed": true,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1088:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "indexed": true,
                  "name": "challenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1116:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "indexed": false,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1144:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1087:71:14"
            },
            "src": "1066:93:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 147,
            "name": "DirectChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1190:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "indexed": true,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1214:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "indexed": true,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1237:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:72:14"
            },
            "src": "1165:97:14"
          },
          {
            "constant": false,
            "id": 150,
            "name": "_teamFlag",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "1300:19:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 148,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1300:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 149,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1300:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 152,
            "name": "_teamChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "1326:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 151,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1326:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 155,
            "name": "_teamChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "1356:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 153,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1356:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 154,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1356:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 159,
            "name": "_startTeamChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "1392:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 158,
              "keyType": {
                "id": 156,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1401:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1392:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 157,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1412:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "name": "_teamChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 842,
            "src": "1447:43:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 162,
              "keyType": {
                "id": 160,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1456:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1447:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 161,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1467:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 169,
            "name": "TeamChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "indexed": true,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1522:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "indexed": false,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1550:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1521:43:14"
            },
            "src": "1502:63:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 177,
            "name": "TeamChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1593:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "indexed": true,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1617:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": true,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1640:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1592:72:14"
            },
            "src": "1570:95:14"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "1736:322:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "fss_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1746:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1496",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 184,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "1776:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 183,
                        "name": "token_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "1761:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_exchange_$1496_$",
                          "typeString": "type(contract token_exchange)"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1761:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1496",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "src": "1746:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_token_exchange_$1496",
                      "typeString": "contract token_exchange"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:46:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1802:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 190,
                              "name": "fss_exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 95,
                              "src": "1823:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_token_exchange_$1496",
                                "typeString": "contract token_exchange"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payCoin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 863,
                            "src": "1823:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IT_PayCoin_$1758_$",
                              "typeString": "function () view external returns (contract IT_PayCoin)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1823:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                            "typeString": "contract IT_PayCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                            "typeString": "contract IT_PayCoin"
                          }
                        ],
                        "id": 189,
                        "name": "IT_PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1758,
                        "src": "1812:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IT_PayCoin_$1758_$",
                          "typeString": "type(contract IT_PayCoin)"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1812:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "src": "1802:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:44:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1861:22:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "_fss_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1871:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 196,
                            "name": "isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "1863:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1863:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 199,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1862:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 206,
                  "nodeType": "IfStatement",
                  "src": "1857:72:14",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "1884:45:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "_fss_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1907:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 201,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "1898:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1898:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "1898:20:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1943:24:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1953:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 207,
                            "name": "isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "1945:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1945:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 210,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1944:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 217,
                  "nodeType": "IfStatement",
                  "src": "1939:76:14",
                  "trueBody": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "1968:47:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 213,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1991:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 212,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "1982:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1982:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "1982:22:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "name": "exchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "1704:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:25:14"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:14"
            },
            "scope": 842,
            "src": "1691:367:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "2150:682:14",
              "statements": [
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "name": "_alreadyRegistered",
                      "nodeType": "VariableDeclaration",
                      "scope": 288,
                      "src": "2160:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2160:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 227,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2186:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2160:31:14"
                },
                {
                  "body": {
                    "id": 250,
                    "nodeType": "Block",
                    "src": "2383:119:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 239,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "2400:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 241,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 240,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "2415:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2400:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 242,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "2421:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2400:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 249,
                        "nodeType": "IfStatement",
                        "src": "2397:95:14",
                        "trueBody": {
                          "id": 248,
                          "nodeType": "Block",
                          "src": "2433:59:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 244,
                                  "name": "_alreadyRegistered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 225,
                                  "src": "2451:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2472:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2451:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 247,
                              "nodeType": "ExpressionStatement",
                              "src": "2451:25:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 232,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "2352:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2356:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2356:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2352:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "initializationExpression": {
                    "assignments": [
                      229
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 229,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "2337:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2337:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 231,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2349:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2337:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2379:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2379:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 238,
                    "nodeType": "ExpressionStatement",
                    "src": "2379:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2333:169:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 253,
                          "name": "_alreadyRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "2519:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2541:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2519:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7527726520616c726561647920726567697374657265642e",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2548:28:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        },
                        "value": "You're already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2511:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:66:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:66:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2609:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2589:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2589:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:32:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2635:22:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 266,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "2644:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 265,
                            "name": "isTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1811,
                            "src": "2637:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2637:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 268,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2636:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 275,
                  "nodeType": "IfStatement",
                  "src": "2632:71:14",
                  "trueBody": {
                    "id": 274,
                    "nodeType": "Block",
                    "src": "2658:45:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 271,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "2680:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 270,
                            "name": "addTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1823,
                            "src": "2672:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2672:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 273,
                        "nodeType": "ExpressionStatement",
                        "src": "2672:20:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "2730:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2730:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2755:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "2730:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e79207465616d732e",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2758:17:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        },
                        "value": "Too many teams."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2722:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:54:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2812:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 284,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2801:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "EmitStatement",
                  "src": "2796:28:14"
                }
              ]
            },
            "documentation": null,
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "2120:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2119:21:14"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2150:0:14"
            },
            "scope": 842,
            "src": "2102:730:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "2908:190:14",
              "statements": [
                {
                  "body": {
                    "id": 316,
                    "nodeType": "Block",
                    "src": "2968:105:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 307,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "2985:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 308,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "3000:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2985:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 310,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3006:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2985:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 315,
                        "nodeType": "IfStatement",
                        "src": "2982:81:14",
                        "trueBody": {
                          "id": 314,
                          "nodeType": "Block",
                          "src": "3018:45:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3043:4:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 295,
                              "id": 313,
                              "nodeType": "Return",
                              "src": "3036:11:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 300,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "2937:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2941:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2941:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2937:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 317,
                  "initializationExpression": {
                    "assignments": [
                      297
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 297,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "2922:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2922:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 299,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2934:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2922:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2964:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 304,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "2964:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 306,
                    "nodeType": "ExpressionStatement",
                    "src": "2964:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2918:155:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3085:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 295,
                  "id": 319,
                  "nodeType": "Return",
                  "src": "3078:12:14"
                }
              ]
            },
            "documentation": null,
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "2860:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2859:21:14"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "2903:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2902:6:14"
            },
            "scope": 842,
            "src": "2838:260:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "3194:337:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 328,
                      "name": "_startOvernightChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3342:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 329,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "3369:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3342:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3342:30:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_last_id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "3383:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "new_delta_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "3425:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 333,
                          "name": "fss_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "3400:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_exchange_$1496",
                            "typeString": "contract token_exchange"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setNewPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1431,
                        "src": "3400:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int256_$returns$_t_uint256_$",
                          "typeString": "function (int256) external returns (uint256)"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3400:41:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3383:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:58:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "_overnightWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "3451:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3467:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3451:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3451:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 346,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "3501:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3501:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030653138",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3515:6:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "3484:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1757,
                      "src": "3484:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "3484:38:14"
                }
              ]
            },
            "documentation": null,
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 325,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "3175:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3175:9:14"
              }
            ],
            "name": "overnightStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "name": "new_delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "3151:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3150:24:14"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3194:0:14"
            },
            "scope": 842,
            "src": "3127:404:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "3597:531:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 354,
                          "src": "3616:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 361,
                          "name": "_last_id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "3628:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3616:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e672069642070726963652e",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3644:17:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        },
                        "value": "Wrong id price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        }
                      ],
                      "id": 359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3608:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "3608:54:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3089,
                        "src": "3677:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "_startOvernightChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3683:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3677:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3089,
                        "src": "3711:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "_startOvernightChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "3717:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3744:7:14",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "1"
                        },
                        "src": "3717:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3711:40:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3677:74:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 413,
                    "nodeType": "Block",
                    "src": "4000:113:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "4027:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4041:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 401,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "4014:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2777,
                            "src": "4014:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4014:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "4014:35:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "_fss_trading",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "4079:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4093:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "id": 408,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "4069:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4069:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 412,
                        "nodeType": "EmitStatement",
                        "src": "4064:37:14"
                      }
                    ]
                  },
                  "id": 414,
                  "nodeType": "IfStatement",
                  "src": "3673:440:14",
                  "trueBody": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "3752:234:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 376,
                                "name": "_overnightWon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "3774:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3791:5:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3774:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3798:37:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 375,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "3766:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3766:70:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 381,
                        "nodeType": "ExpressionStatement",
                        "src": "3766:70:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 385,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1511,
                                "src": "3865:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3865:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3879:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 382,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "3852:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2777,
                            "src": "3852:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3852:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "3852:35:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 390,
                            "name": "_overnightWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "3902:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3918:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3902:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "3902:20:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 395,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1511,
                                "src": "3951:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3951:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3965:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "id": 394,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "3941:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3941:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 399,
                        "nodeType": "EmitStatement",
                        "src": "3936:37:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 357,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 356,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "3579:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3579:8:14"
              }
            ],
            "name": "overnightCheck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3561:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3560:18:14"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3597:0:14"
            },
            "scope": 842,
            "src": "3537:591:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 473,
              "nodeType": "Block",
              "src": "4244:451:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "_directFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "4264:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "4277:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 425,
                      "name": "checkFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "4254:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4254:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "4254:28:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 431,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "4302:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4302:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 433,
                          "name": "directChallenged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "4318:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4302:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520616464726573736573206d75737420626520646966666572656e742e",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4336:34:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        },
                        "value": "The addresses must be different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4294:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:77:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4294:77:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 438,
                        "name": "_startDirectChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "4384:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 440,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "4406:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4384:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 441,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "4414:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4384:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4384:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "_directChallenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "4427:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 445,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
                        "src": "4447:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4447:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4427:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "4427:32:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 449,
                      "name": "_directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "4470:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 450,
                      "name": "directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "4490:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4470:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4470:36:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 453,
                        "name": "_directChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "4517:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 455,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "4537:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4517:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4545:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4517:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:33:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "_directChallenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "4583:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 461,
                        "name": "_directChallenged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "4602:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "4621:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 459,
                      "name": "DirectChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "4567:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4567:59:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "EmitStatement",
                  "src": "4562:64:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 468,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "4653:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4653:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4667:5:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "4636:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1757,
                      "src": "4636:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:37:14"
                }
              ]
            },
            "documentation": null,
            "id": 474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 423,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 422,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "4226:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4226:8:14"
              }
            ],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "directChallenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "4186:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4186:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "4212:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4212:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4185:40:14"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4244:0:14"
            },
            "scope": 842,
            "src": "4162:533:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "4775:742:14",
              "statements": [
                {
                  "assignments": [
                    484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 484,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 557,
                      "src": "4785:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 483,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4785:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4803:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4785:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 490,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "4837:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4837:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4851:5:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "4820:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1757,
                      "src": "4820:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4820:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "4820:37:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 496,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1511,
                              "src": "4884:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4884:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "_directChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "4900:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4884:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 500,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1511,
                              "src": "4921:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4921:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 502,
                            "name": "_directChallenged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "4937:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4921:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4884:70:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e",
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4956:54:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        },
                        "value": "You must be either the challenger or the challenged."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4876:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4876:135:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "4876:135:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "5025:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 509,
                          "name": "_startDirectChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "5032:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 511,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "5054:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5032:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5062:9:14",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "5032:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5025:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 555,
                    "nodeType": "Block",
                    "src": "5472:38:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5493:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 482,
                        "id": 554,
                        "nodeType": "Return",
                        "src": "5486:12:14"
                      }
                    ]
                  },
                  "id": 556,
                  "nodeType": "IfStatement",
                  "src": "5022:488:14",
                  "trueBody": {
                    "id": 552,
                    "nodeType": "Block",
                    "src": "5072:386:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 516,
                                  "name": "_directChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "5132:19:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 518,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 517,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 476,
                                  "src": "5152:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5132:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5161:5:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "5132:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5168:37:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 515,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "5124:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5124:82:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "5124:82:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 525,
                              "name": "_directFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "5236:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 526,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "5249:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 524,
                            "name": "matchFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "5226:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5226:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 528,
                        "nodeType": "ExpressionStatement",
                        "src": "5226:28:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 532,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1511,
                                "src": "5283:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5283:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5297:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 529,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "5270:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2777,
                            "src": "5270:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5270:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "5270:35:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 538,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1511,
                                "src": "5343:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5343:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 540,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "5357:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5363:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "id": 537,
                            "name": "DirectChallengeWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "5324:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5324:47:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 543,
                        "nodeType": "EmitStatement",
                        "src": "5319:52:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 544,
                              "name": "_directChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "5386:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 546,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 545,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "5406:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5386:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5414:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5386:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 549,
                        "nodeType": "ExpressionStatement",
                        "src": "5386:32:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5442:4:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 482,
                        "id": 551,
                        "nodeType": "Return",
                        "src": "5435:11:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 479,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 478,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "4743:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4743:8:14"
              }
            ],
            "name": "winDirectChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "4729:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4728:14:14"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "4769:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4769:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4768:6:14"
            },
            "scope": 842,
            "src": "4701:816:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "5609:607:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 566,
                        "name": "_teamFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "5634:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "5645:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 565,
                      "name": "checkFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "5624:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5624:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "5624:26:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 570,
                        "name": "_startTeamChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "5662:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 572,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 571,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "5682:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5662:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 573,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "5690:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5662:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5662:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "_teamChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "5703:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 578,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 577,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "5721:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5703:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5729:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5703:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "5703:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 583,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "5754:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5754:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5779:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5754:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5782:50:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        },
                        "value": "Challenge can't start until all teams regitered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        }
                      ],
                      "id": 582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "5746:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5746:87:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "5746:87:14"
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "5894:215:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 601,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1511,
                              "src": "5911:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5911:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 603,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "5927:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 605,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 604,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "5942:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5927:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5911:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 621,
                          "nodeType": "Block",
                          "src": "6026:73:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 616,
                                      "name": "_teamAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 100,
                                      "src": "6065:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 618,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 617,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 591,
                                      "src": "6080:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6065:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 613,
                                    "name": "_teamChallenged",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 155,
                                    "src": "6044:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6044:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6044:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 620,
                              "nodeType": "ExpressionStatement",
                              "src": "6044:39:14"
                            }
                          ]
                        },
                        "id": 622,
                        "nodeType": "IfStatement",
                        "src": "5908:191:14",
                        "trueBody": {
                          "id": 612,
                          "nodeType": "Block",
                          "src": "5945:64:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 607,
                                  "name": "_teamChallenger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 152,
                                  "src": "5963:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 608,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1511,
                                    "src": "5981:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                      "typeString": "function () view returns (address payable)"
                                    }
                                  },
                                  "id": 609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5981:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "5963:30:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 611,
                              "nodeType": "ExpressionStatement",
                              "src": "5963:30:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "5863:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "5867:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5867:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5863:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "initializationExpression": {
                    "assignments": [
                      591
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 591,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "5848:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5848:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 593,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5860:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5848:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5890:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "5890:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 600,
                    "nodeType": "ExpressionStatement",
                    "src": "5890:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "5844:265:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 626,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "6138:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6138:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "6152:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 625,
                      "name": "TeamChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "6124:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6124:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "EmitStatement",
                  "src": "6119:38:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 634,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "6186:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6186:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6200:6:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 631,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "6169:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1757,
                      "src": "6169:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6169:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "6169:38:14"
                }
              ]
            },
            "documentation": null,
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 563,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 562,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "5591:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5591:8:14"
              }
            ],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "5577:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5577:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5576:14:14"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:14"
            },
            "scope": 842,
            "src": "5553:663:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 732,
              "nodeType": "Block",
              "src": "6294:823:14",
              "statements": [
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 732,
                      "src": "6308:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6308:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 652,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6326:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6308:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 656,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "6360:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6360:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6374:6:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "6343:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1757,
                      "src": "6343:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6343:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "6343:38:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "6396:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 662,
                          "name": "_startTeamChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "6403:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 664,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 663,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "6423:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6403:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:9:14",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "6403:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6396:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 730,
                    "nodeType": "Block",
                    "src": "7073:38:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7094:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 648,
                        "id": 729,
                        "nodeType": "Return",
                        "src": "7087:12:14"
                      }
                    ]
                  },
                  "id": 731,
                  "nodeType": "IfStatement",
                  "src": "6393:718:14",
                  "trueBody": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "6441:618:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 669,
                                  "name": "_teamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "6500:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 671,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 670,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 642,
                                  "src": "6518:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6500:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6527:5:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "6500:32:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6534:37:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 668,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "6492:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6492:80:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "6492:80:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 678,
                              "name": "_teamFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "6606:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 679,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "6617:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 677,
                            "name": "matchFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "6596:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6596:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "6596:26:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 682,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1511,
                              "src": "6641:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6641:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 684,
                            "name": "_teamChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "6657:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6641:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 717,
                          "nodeType": "Block",
                          "src": "6826:136:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 705,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1511,
                                      "src": "6857:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6857:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6871:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 702,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97,
                                    "src": "6844:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                                      "typeString": "contract IT_PayCoin"
                                    }
                                  },
                                  "id": 704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2777,
                                  "src": "6844:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6844:35:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 709,
                              "nodeType": "ExpressionStatement",
                              "src": "6844:35:14"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 711,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1511,
                                      "src": "6919:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6919:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 713,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 642,
                                    "src": "6933:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6939:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "id": 710,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 177,
                                  "src": "6902:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6902:45:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 716,
                              "nodeType": "EmitStatement",
                              "src": "6897:50:14"
                            }
                          ]
                        },
                        "id": 718,
                        "nodeType": "IfStatement",
                        "src": "6638:324:14",
                        "trueBody": {
                          "id": 701,
                          "nodeType": "Block",
                          "src": "6673:136:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 689,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1511,
                                      "src": "6704:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 690,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6704:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6718:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 686,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 97,
                                    "src": "6691:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                                      "typeString": "contract IT_PayCoin"
                                    }
                                  },
                                  "id": 688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2777,
                                  "src": "6691:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6691:35:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 693,
                              "nodeType": "ExpressionStatement",
                              "src": "6691:35:14"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 695,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1511,
                                      "src": "6766:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6766:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 697,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 642,
                                    "src": "6780:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 698,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6786:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "id": 694,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 177,
                                  "src": "6749:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6749:45:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 700,
                              "nodeType": "EmitStatement",
                              "src": "6744:50:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 719,
                              "name": "_teamChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "6989:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 721,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 720,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "7007:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6989:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7015:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6989:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "6989:30:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7043:4:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 648,
                        "id": 726,
                        "nodeType": "Return",
                        "src": "7036:11:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 645,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 644,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "6262:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6262:8:14"
              }
            ],
            "name": "winTeamChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "6248:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6248:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6247:14:14"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "6288:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6288:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6287:6:14"
            },
            "scope": 842,
            "src": "6222:895:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "7218:164:14",
              "statements": [
                {
                  "body": {
                    "id": 761,
                    "nodeType": "Block",
                    "src": "7271:75:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 753,
                                  "name": "_flags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 736,
                                  "src": "7293:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[] storage pointer"
                                  }
                                },
                                "id": 755,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 754,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 742,
                                  "src": "7300:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7293:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 756,
                                "name": "_flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "7306:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7293:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "466c616720616c7265616479207573656421",
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7314:20:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              },
                              "value": "Flag already used!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              }
                            ],
                            "id": 752,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3090,
                              3091
                            ],
                            "referencedDeclaration": 3091,
                            "src": "7285:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7285:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "7285:50:14"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 745,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "7248:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "7252:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7252:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7248:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 762,
                  "initializationExpression": {
                    "assignments": [
                      742
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 742,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "7233:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7233:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 744,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7245:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7233:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7267:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "7267:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 751,
                    "nodeType": "ExpressionStatement",
                    "src": "7267:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "7229:117:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 766,
                        "name": "_flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "7368:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "7356:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7356:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7356:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "7356:18:14"
                }
              ]
            },
            "documentation": null,
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "7168:24:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 734,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7168:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 735,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7168:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "7194:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7194:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7167:41:14"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7218:0:14"
            },
            "scope": 842,
            "src": "7149:233:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "7457:297:14",
              "statements": [
                {
                  "assignments": [
                    779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 779,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 812,
                      "src": "7467:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7467:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 781,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7485:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7467:23:14"
                },
                {
                  "body": {
                    "id": 805,
                    "nodeType": "Block",
                    "src": "7543:143:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 793,
                              "name": "_flags",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "7565:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[] storage pointer"
                              }
                            },
                            "id": 795,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 794,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 783,
                              "src": "7572:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7565:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 796,
                            "name": "_flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "7578:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7565:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 804,
                        "nodeType": "IfStatement",
                        "src": "7561:111:14",
                        "trueBody": {
                          "id": 803,
                          "nodeType": "Block",
                          "src": "7585:87:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 798,
                                  "name": "_flagFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 779,
                                  "src": "7607:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7620:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "7607:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 801,
                              "nodeType": "ExpressionStatement",
                              "src": "7607:17:14"
                            },
                            {
                              "id": 802,
                              "nodeType": "Break",
                              "src": "7647:5:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 786,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "7520:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 787,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "7524:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7524:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7520:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 806,
                  "initializationExpression": {
                    "assignments": [
                      783
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 783,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "7505:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7505:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 785,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7517:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7505:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7539:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "7539:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 792,
                    "nodeType": "ExpressionStatement",
                    "src": "7539:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "7501:185:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "_flagFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "7707:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c646e27742066696e642079756f7220666c616721",
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7719:26:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                          "typeString": "literal_string \"Couldn't find yuor flag!\""
                        },
                        "value": "Couldn't find yuor flag!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                          "typeString": "literal_string \"Couldn't find yuor flag!\""
                        }
                      ],
                      "id": 807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3091
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7699:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7699:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "7699:47:14"
                }
              ]
            },
            "documentation": null,
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "matchFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "7407:24:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 771,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7407:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 772,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7407:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "7433:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7433:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7406:41:14"
            },
            "returnParameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:0:14"
            },
            "scope": 842,
            "src": "7388:366:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "7858:64:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 820,
                      "name": "fss_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "7868:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1496",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 822,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "7898:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 821,
                        "name": "token_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "7883:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_exchange_$1496_$",
                          "typeString": "type(contract token_exchange)"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7883:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1496",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "src": "7868:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_token_exchange_$1496",
                      "typeString": "contract token_exchange"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "7868:46:14"
                }
              ]
            },
            "documentation": null,
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 818,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 817,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "7839:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7839:9:14"
              }
            ],
            "name": "setExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "name": "exchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "7814:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7814:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7813:25:14"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7858:0:14"
            },
            "scope": 842,
            "src": "7793:129:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "7995:54:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 834,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "8005:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 836,
                          "name": "payCoinAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "8026:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 835,
                        "name": "IT_PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1758,
                        "src": "8015:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IT_PayCoin_$1758_$",
                          "typeString": "type(contract IT_PayCoin)"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8015:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "src": "8005:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$1758",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "8005:36:14"
                }
              ]
            },
            "documentation": null,
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 832,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 831,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1905,
                  "src": "7976:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7976:9:14"
              }
            ],
            "name": "setPayCoin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "name": "payCoinAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "7952:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7952:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7951:24:14"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7995:0:14"
            },
            "scope": 842,
            "src": "7932:117:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 843,
        "src": "167:7890:14"
      }
    ],
    "src": "0:8057:14"
  },
  "bytecode": "6080604052600280546001600160a01b0319908116732b177c1854de132e96326b454055005e62febdc717909155600380549091167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200005957600080fd5b5060405162001ea538038062001ea5833981810160405260208110156200007f57600080fd5b5051620000a7620000986001600160e01b03620001f316565b6001600160e01b03620001f716565b620000cd620000be6001600160e01b03620001f316565b6001600160e01b036200024916565b600480546001600160a01b0319166001600160a01b0383811691909117808355604080516001624b1f8b60e01b031981529051919092169263ffb4e07592808201926020929091829003018186803b1580156200012957600080fd5b505afa1580156200013e573d6000803e3d6000fd5b505050506040513d60208110156200015557600080fd5b5051600580546001600160a01b0319166001600160a01b039283161790556002546200018291166200029b565b620001a757600254620001a7906001600160a01b03166001600160e01b03620002be16565b600354620001c7906001600160a01b03166001600160e01b036200029b16565b620001ec57600354620001ec906001600160a01b03166001600160e01b03620002be16565b506200042e565b3390565b620002128160006200033860201b620017d61790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b620002648160016200033860201b620017d61790919060201c565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b6000620002b8826000620003c560201b6200152a1790919060201c565b92915050565b620002e4620002d56001600160e01b03620001f316565b6001600160e01b036200029b16565b620003215760405162461bcd60e51b815260040180806020018281038252602e81526020018062001e77602e913960400191505060405180910390fd5b62000335816001600160e01b03620001f716565b50565b6200034d82826001600160e01b03620003c516565b15620003a0576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200040e5760405162461bcd60e51b815260040180806020018281038252602281526020018062001e556022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611a17806200043e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806378591bfd11610097578063b463a75c11610066578063b463a75c146102a7578063c3c5a547146102cd578063d5d35f95146102f3578063d9a431b31461031057610100565b806378591bfd1461023f5780638bad0c0a1461025c5780639f986fbb14610264578063a5c6a0221461028a57610100565b8063612b7543116100d3578063612b7543146101aa57806367b1f5df146101d657806370480275146101fc57806376a9e7b31461022257610100565b8063248519141461010557806324d7806c1461013f5780634420e48614610165578063561675e11461018d575b600080fd5b61012b6004803603602081101561011b57600080fd5b50356001600160a01b0316610318565b604080519115158252519081900360200190f35b61012b6004803603602081101561015557600080fd5b50356001600160a01b0316610333565b61018b6004803603602081101561017b57600080fd5b50356001600160a01b0316610345565b005b61012b600480360360208110156101a357600080fd5b50356104c9565b61018b600480360360408110156101c057600080fd5b506001600160a01b03813516906020013561083a565b61018b600480360360208110156101ec57600080fd5b50356001600160a01b0316610a21565b61018b6004803603602081101561021257600080fd5b50356001600160a01b0316610a8e565b61018b6004803603602081101561023857600080fd5b5035610ae0565b61012b6004803603602081101561025557600080fd5b5035610c3c565b61018b610f0d565b61018b6004803603602081101561027a57600080fd5b50356001600160a01b0316610f1f565b61018b600480360360208110156102a057600080fd5b5035610f87565b61018b600480360360208110156102bd57600080fd5b50356001600160a01b03166111bd565b61012b600480360360208110156102e357600080fd5b50356001600160a01b031661120c565b61018b6004803603602081101561030957600080fd5b5035611267565b61018b61151a565b600061032b60018363ffffffff61152a16565b90505b919050565b600061032b818363ffffffff61152a16565b6000805b60065481101561039257826001600160a01b03166006828154811061036a57fe5b6000918252602090912001546001600160a01b0316141561038a57600191505b600101610349565b5080156103e6576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b03841617905561043a82610318565b61044757610447826111bd565b60065460031015610491576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b60006104db6104d6611591565b610318565b6105165760405162461bcd60e51b815260040180806020018281038252602c8152602001806119b7602c913960400191505060405180910390fd5b6005546000906001600160a01b03166379cc6790610532611591565b68056bc75e2d631000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b50505060008481526012602052604090205461012c01421090506108305760008381526013602052604090205460ff161561060b5760405162461bcd60e51b81526004018080602001828103825260238152602001806119946023913960400191505060405180910390fd5b610616600f84611595565b6010546001600160a01b031661062a611591565b6001600160a01b03161415610725576005546001600160a01b03166340c10f19610652611591565b685150ae84a8cdf000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b505050506040513d60208110156106d557600080fd5b50685150ae84a8cdf000009050836106eb611591565b6001600160a01b03167ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802960405160405180910390a461080d565b6005546001600160a01b03166340c10f1961073e611591565b683635c9adc5dea000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561079757600080fd5b505af11580156107ab573d6000803e3d6000fd5b505050506040513d60208110156107c157600080fd5b50683635c9adc5dea000009050836107d7611591565b6001600160a01b03167ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802960405160405180910390a45b50506000818152601360205260409020805460ff1916600190811790915561032e565b600091505061032e565b6108456104d6611591565b6108805760405162461bcd60e51b815260040180806020018281038252602c8152602001806119b7602c913960400191505060405180910390fd5b61088b600a82611629565b816001600160a01b031661089d611591565b6001600160a01b031614156108f9576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b6000818152600e60205260409020429055610912611591565b600b80546001600160a01b03199081166001600160a01b03938416178255600c80549091168584161781556000848152600d6020908152604091829020805460ff1916905591549254815186815291519385169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106929181900390910190a36005546001600160a01b03166379cc67906109ac611591565b6802b5e3af16b18800006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610a0557600080fd5b505af1158015610a19573d6000803e3d6000fd5b505050505050565b610a31610a2c611591565b610333565b610a6c5760405162461bcd60e51b815260040180806020018281038252602e815260200180611966602e913960400191505060405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610a99610a2c611591565b610ad45760405162461bcd60e51b815260040180806020018281038252602e815260200180611966602e913960400191505060405180910390fd5b610add816116b6565b50565b610aeb610a2c611591565b610b265760405162461bcd60e51b815260040180806020018281038252602e815260200180611966602e913960400191505060405180910390fd5b42600855600480546040805163a967119360e01b8152928301849052516001600160a01b039091169163a96711939160248083019260209291908290030181600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d6020811015610ba057600080fd5b50516007556009805460ff191690556005546001600160a01b03166379cc6790610bc8611591565b680ad78ebc5ac62000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b5050505050565b6000610c496104d6611591565b610c845760405162461bcd60e51b815260040180806020018281038252602c8152602001806119b7602c913960400191505060405180910390fd5b6005546000906001600160a01b03166379cc6790610ca0611591565b6802b5e3af16b18800006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b5050600b546001600160a01b03169150610d279050611591565b6001600160a01b03161480610d565750600c546001600160a01b0316610d4b611591565b6001600160a01b0316145b610d915760405162461bcd60e51b81526004018080602001828103825260348152602001806119326034913960400191505060405180910390fd5b6000838152600e602052604090205461012c014210610830576000838152600d602052604090205460ff1615610df85760405162461bcd60e51b81526004018080602001828103825260238152602001806119946023913960400191505060405180910390fd5b610e03600a84611595565b6005546001600160a01b03166340c10f19610e1c611591565b683635c9adc5dea000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b505050506040513d6020811015610e9f57600080fd5b50683635c9adc5dea00000905083610eb5611591565b6001600160a01b03167f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd60405160405180910390a450506000818152600d60205260409020805460ff1916600190811790915561032e565b610f1d610f18611591565b6116fe565b565b610f2a610a2c611591565b610f655760405162461bcd60e51b815260040180806020018281038252602e815260200180611966602e913960400191505060405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b610f926104d6611591565b610fcd5760405162461bcd60e51b815260040180806020018281038252602c8152602001806119b7602c913960400191505060405180910390fd5b610fd8600f82611629565b600081815260126020908152604080832042905560139091529020805460ff1916905560065460031461103c5760405162461bcd60e51b81526004018080602001828103825260308152602001806118bf6030913960400191505060405180910390fd5b60005b600654811015611102576006818154811061105657fe5b6000918252602090912001546001600160a01b0316611073611591565b6001600160a01b031614156110af5761108a611591565b601080546001600160a01b0319166001600160a01b03929092169190911790556110fa565b6011600682815481106110be57fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b60010161103f565b5061110b611591565b6001600160a01b03167f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373826040518082815260200191505060405180910390a26005546001600160a01b03166379cc6790611164611591565b68056bc75e2d631000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610c2157600080fd5b6111c86104d6611591565b6112035760405162461bcd60e51b815260040180806020018281038252602c8152602001806119b7602c913960400191505060405180910390fd5b610add81611746565b6000805b60065481101561125e57826001600160a01b03166006828154811061123157fe5b6000918252602090912001546001600160a01b0316141561125657600191505061032e565b600101611210565b50600092915050565b6112726104d6611591565b6112ad5760405162461bcd60e51b815260040180806020018281038252602c8152602001806119b7602c913960400191505060405180910390fd5b60075481146112f5576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b6008544211801561130b5750600854610e100142105b156114495760095460ff16156113525760405162461bcd60e51b81526004018080602001828103825260238152602001806119946023913960400191505060405180910390fd5b6005546001600160a01b03166340c10f1961136b611591565b68410d586a20a4c000006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156113c457600080fd5b505af11580156113d8573d6000803e3d6000fd5b505050506040513d60208110156113ee57600080fd5b50506009805460ff1916600117905568410d586a20a4c0000061140f611591565b6001600160a01b03167f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86060405160405180910390a3610add565b600554600354604080516340c10f1960e01b81526001600160a01b039283166004820152686c6b935b8bbd4000006024820152905191909216916340c10f199160448083019260209291908290030181600087803b1580156114aa57600080fd5b505af11580156114be573d6000803e3d6000fd5b505050506040513d60208110156114d457600080fd5b5050600354604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b610f1d611525611591565b61178e565b60006001600160a01b0382166115715760405162461bcd60e51b81526004018080602001828103825260228152602001806119106022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b6000805b83548110156115d157828482815481106115af57fe5b906000526020600020015414156115c957600191506115d1565b600101611599565b5080611624576040805162461bcd60e51b815260206004820152601860248201527f436f756c646e27742066696e642079756f7220666c6167210000000000000000604482015290519081900360640190fd5b505050565b60005b825481101561169d578183828154811061164257fe5b90600052602060002001541415611695576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b60010161162c565b5081546001810183556000928352602090922090910155565b6116c760008263ffffffff6117d616565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61170f60008263ffffffff61185716565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b61175760018263ffffffff6117d616565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b61179f60018263ffffffff61185716565b6040516001600160a01b038216907f26b6063d78aefcf96f02ff06bc9822b5a623278253add7fffa5fb453db39981090600090a250565b6117e0828261152a565b15611832576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b611861828261152a565b61189c5760405162461bcd60e51b81526004018080602001828103825260218152602001806118ef6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e5465616d526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205465616d20726f6c65a265627a7a7231582031848323f537c00ec33c135d285811e06b811d5b110003004c918b6206897d9764736f6c63430005110032526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_challenge",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "108": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "107": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "109": [
            589,
            607,
            true
          ]
        }
      },
      "13": {},
      "14": {
        "token_challenge.challengeStart": {
          "92": [
            4302,
            4334,
            true
          ],
          "97": [
            5754,
            5780,
            true
          ],
          "98": [
            5911,
            5944,
            false
          ]
        },
        "token_challenge.checkFlag": {
          "106": [
            7293,
            7311,
            true
          ]
        },
        "token_challenge.isRegistered": {
          "99": [
            2985,
            3017,
            false
          ]
        },
        "token_challenge.matchFlag": {
          "104": [
            7565,
            7583,
            false
          ],
          "105": [
            7707,
            7717,
            true
          ]
        },
        "token_challenge.overnightCheck": {
          "100": [
            3616,
            3642,
            true
          ],
          "101": [
            3677,
            3707,
            false
          ],
          "102": [
            3711,
            3751,
            false
          ],
          "103": [
            3774,
            3796,
            true
          ]
        },
        "token_challenge.register": {
          "86": [
            2400,
            2432,
            false
          ],
          "87": [
            2519,
            2546,
            true
          ],
          "88": [
            2730,
            2756,
            true
          ]
        },
        "token_challenge.winDirectChallenge": {
          "93": [
            4884,
            4917,
            true
          ],
          "94": [
            4921,
            4954,
            true
          ],
          "95": [
            5025,
            5071,
            false
          ],
          "96": [
            5132,
            5166,
            true
          ]
        },
        "token_challenge.winTeamChallenge": {
          "89": [
            6396,
            6440,
            false
          ],
          "90": [
            6500,
            6532,
            true
          ],
          "91": [
            6641,
            6672,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "66": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "82": [
            328,
            391
          ],
          "83": [
            401,
            428
          ]
        },
        "Roles.has": {
          "64": [
            867,
            935
          ],
          "65": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "84": [
            581,
            645
          ],
          "85": [
            655,
            683
          ]
        }
      },
      "13": {
        "TeamRole._addTeam": {
          "78": [
            910,
            929
          ],
          "79": [
            939,
            962
          ]
        },
        "TeamRole._removeTeam": {
          "80": [
            1032,
            1054
          ],
          "81": [
            1064,
            1089
          ]
        },
        "TeamRole.addTeam": {
          "52": [
            747,
            764
          ]
        },
        "TeamRole.isTeam": {
          "0": [
            648,
            674
          ]
        },
        "TeamRole.renounceTeam": {
          "63": [
            818,
            843
          ]
        }
      },
      "14": {
        "token_challenge.challengeStart": {
          "19": [
            4254,
            4282
          ],
          "20": [
            4294,
            4371
          ],
          "21": [
            4384,
            4417
          ],
          "22": [
            4427,
            4459
          ],
          "23": [
            4470,
            4506
          ],
          "24": [
            4517,
            4550
          ],
          "25": [
            4562,
            4626
          ],
          "26": [
            4636,
            4673
          ],
          "43": [
            5624,
            5650
          ],
          "44": [
            5662,
            5693
          ],
          "45": [
            5703,
            5734
          ],
          "46": [
            5746,
            5833
          ],
          "47": [
            5963,
            5993
          ],
          "48": [
            6044,
            6083
          ],
          "49": [
            5890,
            5893
          ],
          "50": [
            6119,
            6157
          ],
          "51": [
            6169,
            6207
          ]
        },
        "token_challenge.checkFlag": {
          "71": [
            7285,
            7335
          ],
          "72": [
            7267,
            7270
          ],
          "73": [
            7356,
            7374
          ]
        },
        "token_challenge.isRegistered": {
          "53": [
            3036,
            3047
          ],
          "54": [
            2964,
            2967
          ],
          "55": [
            3078,
            3090
          ]
        },
        "token_challenge.matchFlag": {
          "67": [
            7607,
            7624
          ],
          "68": [
            7647,
            7652
          ],
          "69": [
            7539,
            7542
          ],
          "70": [
            7699,
            7746
          ]
        },
        "token_challenge.overnightCheck": {
          "56": [
            3608,
            3662
          ],
          "57": [
            3766,
            3836
          ],
          "58": [
            3852,
            3887
          ],
          "59": [
            3902,
            3922
          ],
          "60": [
            3936,
            3973
          ],
          "61": [
            4014,
            4049
          ],
          "62": [
            4064,
            4101
          ]
        },
        "token_challenge.overnightStart": {
          "29": [
            3342,
            3372
          ],
          "30": [
            3383,
            3441
          ],
          "31": [
            3451,
            3472
          ],
          "32": [
            3484,
            3522
          ]
        },
        "token_challenge.register": {
          "2": [
            2451,
            2476
          ],
          "3": [
            2379,
            2382
          ],
          "4": [
            2511,
            2577
          ],
          "5": [
            2589,
            2621
          ],
          "6": [
            2672,
            2692
          ],
          "7": [
            2722,
            2776
          ],
          "8": [
            2796,
            2824
          ]
        },
        "token_challenge.setExchange": {
          "27": [
            7868,
            7914
          ]
        },
        "token_challenge.setPayCoin": {
          "42": [
            8005,
            8041
          ]
        },
        "token_challenge.winDirectChallenge": {
          "33": [
            4820,
            4857
          ],
          "34": [
            4876,
            5011
          ],
          "35": [
            5124,
            5206
          ],
          "36": [
            5226,
            5254
          ],
          "37": [
            5270,
            5305
          ],
          "38": [
            5319,
            5371
          ],
          "39": [
            5386,
            5418
          ],
          "40": [
            5435,
            5446
          ]
        },
        "token_challenge.winTeamChallenge": {
          "9": [
            6343,
            6381
          ],
          "10": [
            6492,
            6572
          ],
          "11": [
            6596,
            6622
          ],
          "12": [
            6691,
            6726
          ],
          "13": [
            6744,
            6794
          ],
          "14": [
            6844,
            6879
          ],
          "15": [
            6897,
            6947
          ],
          "16": [
            6989,
            7019
          ],
          "17": [
            7036,
            7047
          ],
          "18": [
            7087,
            7099
          ]
        }
      },
      "9": {
        "AdminRole._addAdmin": {
          "74": [
            927,
            947
          ],
          "75": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "76": [
            1052,
            1075
          ],
          "77": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "28": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "1": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "41": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "Context",
    "Roles",
    "TeamRole"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "167:7890:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:7890:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:103:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;578:103:13;-1:-1:-1;;;;;578:103:13;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;2102:730:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2102:730:14;-1:-1:-1;;;;;2102:730:14;;:::i;:::-;;6222:895;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6222:895:14;;:::i;4162:533::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4162:533:14;;;;;;;;:::i;7793:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7793:129:14;-1:-1:-1;;;;;7793:129:14;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;3127:404:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3127:404:14;;:::i;4701:816::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4701:816:14;;:::i;791:75:9:-;;;:::i;7932:117:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7932:117:14;-1:-1:-1;;;;;7932:117:14;;:::i;5553:663::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5553:663:14;;:::i;687:84:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;687:84:13;-1:-1:-1;;;;;687:84:13;;:::i;2838:260:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2838:260:14;-1:-1:-1;;;;;2838:260:14;;:::i;3537:591::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3537:591:14;;:::i;777:73:13:-;;;:::i;578:103::-;632:4;655:19;:6;666:7;655:19;:10;:19;:::i;:::-;648:26;;578:103;;;;:::o;587:105:9:-;642:4;665:20;642:4;677:7;665:20;:11;:20;:::i;2102:730:14:-;2160:23;;2333:169;2356:14;:21;2352:25;;2333:169;;;2421:11;-1:-1:-1;;;;;2400:32:14;:14;2415:1;2400:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:17:14;:32;2397:95;;;2472:4;2451:25;;2397:95;2379:3;;2333:169;;;-1:-1:-1;2519:27:14;;2511:66;;;;;-1:-1:-1;;;2511:66:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;2589:14;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2589:32:14;;;;;;;;-1:-1:-1;;;;;;2589:32:14;-1:-1:-1;;;;;2589:32:14;;;;;2637:19;2589:32;2637:6;:19::i;:::-;2632:71;;2672:20;2680:11;2672:7;:20::i;:::-;2730:14;:21;2755:1;-1:-1:-1;2730:26:14;2722:54;;;;;-1:-1:-1;;;2722:54:14;;;;;;;;;;;;-1:-1:-1;;;2722:54:14;;;;;;;;;;;;;;;2801:23;;-1:-1:-1;;;;;2801:23:14;;;;;;;;2102:730;;:::o;6222:895::-;6288:4;485:20:13;492:12;:10;:12::i;:::-;485:6;:20::i;:::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6343:7:14;;6308:15;;-1:-1:-1;;;;;6343:7:14;:16;6360:12;:10;:12::i;:::-;6374:6;6343:38;;;;;;;;;;;;;-1:-1:-1;;;;;6343:38:14;-1:-1:-1;;;;;6343:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6343:38:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;6403:25:14;;;;:19;:25;;;;;;6431:9;6403:37;6396:3;:44;;-1:-1:-1;6393:718:14;;6500:23;;;;:17;:23;;;;;;;;:32;6492:80;;;;-1:-1:-1;;;6492:80:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6596:26;6606:9;6617:4;6596:9;:26::i;:::-;6657:15;;-1:-1:-1;;;;;6657:15:14;6641:12;:10;:12::i;:::-;-1:-1:-1;;;;;6641:31:14;;6638:324;;;6691:7;;-1:-1:-1;;;;;6691:7:14;:12;6704;:10;:12::i;:::-;6718:7;6691:35;;;;;;;;;;;;;-1:-1:-1;;;;;6691:35:14;-1:-1:-1;;;;;6691:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6691:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6691:35:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6786:7:14;;-1:-1:-1;6780:4:14;6766:12;:10;:12::i;:::-;-1:-1:-1;;;;;6749:45:14;;;;;;;;;;;6638:324;;;6844:7;;-1:-1:-1;;;;;6844:7:14;:12;6857;:10;:12::i;:::-;6871:7;6844:35;;;;;;;;;;;;;-1:-1:-1;;;;;6844:35:14;-1:-1:-1;;;;;6844:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6844:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6844:35:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6939:7:14;;-1:-1:-1;6933:4:14;6919:12;:10;:12::i;:::-;-1:-1:-1;;;;;6902:45:14;;;;;;;;;;;6638:324;-1:-1:-1;;6989:23:14;;;;:17;:23;;;;;:30;;-1:-1:-1;;6989:30:14;7015:4;6989:30;;;;;;7036:11;;6393:718;7094:5;7087:12;;;;;4162:533;485:20:13;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4254:28:14;4264:11;4277:4;4254:9;:28::i;:::-;4318:16;-1:-1:-1;;;;;4302:32:14;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4302:32:14;;;4294:77;;;;;-1:-1:-1;;;4294:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4384:27;;;;:21;:27;;;;;4414:3;4384:33;;4447:12;:10;:12::i;:::-;4427:17;:32;;-1:-1:-1;;;;;;4427:32:14;;;-1:-1:-1;;;;;4427:32:14;;;;;;4470:17;:36;;;;;;;;;;;-1:-1:-1;4517:25:14;;;:19;:25;;;;;;;;;:33;;-1:-1:-1;;4517:33:14;;;4602:17;;4583;;4567:59;;;;;;;4602:17;;;;4583;;4567:59;;;;;;;;;;;4636:7;;-1:-1:-1;;;;;4636:7:14;:16;4653:12;:10;:12::i;:::-;4667:5;4636:37;;;;;;;;;;;;;-1:-1:-1;;;;;4636:37:14;-1:-1:-1;;;;;4636:37:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4636:37:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4636:37:14;;;;4162:533;;:::o;7793:129::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7868:12:14;:46;;-1:-1:-1;;;;;;7868:46:14;-1:-1:-1;;;;;7868:46:14;;;;;;;;;;7793:129::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;3127:404:14:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:3:14;3342:24;:30;3400:12;;;:41;;;-1:-1:-1;;;3400:41:14;;;;;;;;;-1:-1:-1;;;;;3400:12:14;;;;:24;;:41;;;;;;;;;;;;;;:12;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;3400:41:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3400:41:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3400:41:14;3383:14;:58;3451:13;:21;;-1:-1:-1;;3451:21:14;;;3484:7;;-1:-1:-1;;;;;3484:7:14;:16;3501:12;:10;:12::i;:::-;3515:6;3484:38;;;;;;;;;;;;;-1:-1:-1;;;;;3484:38:14;-1:-1:-1;;;;;3484:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3484:38:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3484:38:14;;;;3127:404;:::o;4701:816::-;4769:4;485:20:13;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4820:7:14;;4785:15;;-1:-1:-1;;;;;4820:7:14;:16;4837:12;:10;:12::i;:::-;4851:5;4820:37;;;;;;;;;;;;;-1:-1:-1;;;;;4820:37:14;-1:-1:-1;;;;;4820:37:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4820:37:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4900:17:14;;-1:-1:-1;;;;;4900:17:14;;-1:-1:-1;4884:12:14;;-1:-1:-1;4884:10:14;:12::i;:::-;-1:-1:-1;;;;;4884:33:14;;:70;;;-1:-1:-1;4937:17:14;;-1:-1:-1;;;;;4937:17:14;4921:12;:10;:12::i;:::-;-1:-1:-1;;;;;4921:33:14;;4884:70;4876:135;;;;-1:-1:-1;;;4876:135:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5032:27;;;;:21;:27;;;;;;5062:9;5032:39;5025:3;:46;5022:488;;5132:25;;;;:19;:25;;;;;;;;:34;5124:82;;;;-1:-1:-1;;;5124:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5226:28;5236:11;5249:4;5226:9;:28::i;:::-;5270:7;;-1:-1:-1;;;;;5270:7:14;:12;5283;:10;:12::i;:::-;5297:7;5270:35;;;;;;;;;;;;;-1:-1:-1;;;;;5270:35:14;-1:-1:-1;;;;;5270:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5270:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5270:35:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5363:7:14;;-1:-1:-1;5357:4:14;5343:12;:10;:12::i;:::-;-1:-1:-1;;;;;5324:47:14;;;;;;;;;;;-1:-1:-1;;5386:25:14;;;;:19;:25;;;;;:32;;-1:-1:-1;;5386:32:14;5414:4;5386:32;;;;;;5435:11;;791:75:9;833:26;846:12;:10;:12::i;:::-;833;:26::i;:::-;791:75::o;7932:117:14:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8005:7:14;:36;;-1:-1:-1;;;;;;8005:36:14;-1:-1:-1;;;;;8005:36:14;;;;;;;;;;7932:117::o;5553:663::-;485:20:13;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:26:14;5634:9;5645:4;5624:9;:26::i;:::-;5662:25;;;;:19;:25;;;;;;;;5690:3;5662:31;;5703:17;:23;;;;;:31;;-1:-1:-1;;5703:31:14;;;5754:14;:21;5779:1;5754:26;5746:87;;;;-1:-1:-1;;;5746:87:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5848:9;5844:265;5867:14;:21;5863:25;;5844:265;;;5927:14;5942:1;5927:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5927:17:14;5911:12;:10;:12::i;:::-;-1:-1:-1;;;;;5911:33:14;;5908:191;;;5981:12;:10;:12::i;:::-;5963:15;:30;;-1:-1:-1;;;;;;5963:30:14;-1:-1:-1;;;;;5963:30:14;;;;;;;;;;5908:191;;;6044:15;6065:14;6080:1;6065:17;;;;;;;;;;;;;;;;;;;;27:10:-1;;6065:17:14;23:18:-1;;45:23;;6044:39:14;;;;;;;;;;-1:-1:-1;;;;;;6044:39:14;-1:-1:-1;;;;;6065:17:14;;;6044:39;;;;;;5908:191;5890:3;;5844:265;;;;6138:12;:10;:12::i;:::-;-1:-1:-1;;;;;6124:33:14;;6152:4;6124:33;;;;;;;;;;;;;;;;;;6169:7;;-1:-1:-1;;;;;6169:7:14;:16;6186:12;:10;:12::i;:::-;6200:6;6169:38;;;;;;;;;;;;;-1:-1:-1;;;;;6169:38:14;-1:-1:-1;;;;;6169:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;687:84:13;485:20;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:17;756:7;747:8;:17::i;2838:260:14:-;2903:4;;2918:155;2941:14;:21;2937:25;;2918:155;;;3006:11;-1:-1:-1;;;;;2985:32:14;:14;3000:1;2985:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2985:17:14;:32;2982:81;;;3043:4;3036:11;;;;;2982:81;2964:3;;2918:155;;;-1:-1:-1;3085:5:14;;2838:260;-1:-1:-1;;2838:260:14:o;3537:591::-;485:20:13;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3628:14:14;;3616:8;:26;3608:54;;;;;-1:-1:-1;;;3608:54:14;;;;;;;;;;;;-1:-1:-1;;;3608:54:14;;;;;;;;;;;;;;;3683:24;;3677:3;:30;:74;;;;;3717:24;;3744:7;3717:34;3711:3;:40;3677:74;3673:440;;;3774:13;;;;:22;3766:70;;;;-1:-1:-1;;;3766:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3852:7;;-1:-1:-1;;;;;3852:7:14;:12;3865;:10;:12::i;:::-;3879:7;3852:35;;;;;;;;;;;;;-1:-1:-1;;;;;3852:35:14;-1:-1:-1;;;;;3852:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3852:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3852:35:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3902:13:14;:20;;-1:-1:-1;;3902:20:14;3918:4;3902:20;;;3965:7;3951:12;:10;:12::i;:::-;-1:-1:-1;;;;;3941:32:14;;;;;;;;;;;3673:440;;;4014:7;;4027:12;;4014:35;;;-1:-1:-1;;;4014:35:14;;-1:-1:-1;;;;;4027:12:14;;;4014:35;;;;4041:7;4014:35;;;;;;:7;;;;;:12;;:35;;;;;;;;;;;;;;:7;;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;4014:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4014:35:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;4079:12:14;;4069:32;;4093:7;;-1:-1:-1;;;;;4079:12:14;;4069:32;;4079:12;;4069:32;3537:591;:::o;777:73:13:-;818:25;830:12;:10;:12::i;:::-;818:11;:25::i;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;7388:366:14:-;7467:15;;7501:185;7524:13;;7520:17;;7501:185;;;7578:5;7565:6;7572:1;7565:9;;;;;;;;;;;;;;;;:18;7561:111;;;7620:4;7607:17;;7647:5;;7561:111;7539:3;;7501:185;;;;7707:10;7699:47;;;;;-1:-1:-1;;;7699:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:366;;;:::o;7149:233::-;7233:9;7229:117;7252:13;;7248:17;;7229:117;;;7306:5;7293:6;7300:1;7293:9;;;;;;;;;;;;;;;;:18;;7285:50;;;;;-1:-1:-1;;;7285:50:14;;;;;;;;;;;;-1:-1:-1;;;7285:50:14;;;;;;;;;;;;;;;7267:3;;7229:117;;;-1:-1:-1;27:10;;39:1;23:18;;45:23;;-1:-1;7356:18:14;;;;;;;;;;;7149:233::o;872:116:9:-;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;994:124::-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;856:113:13:-;910:19;:6;921:7;910:19;:10;:19;:::i;:::-;944:18;;-1:-1:-1;;;;;944:18:13;;;;;;;;856:113;:::o;975:121::-;1032:22;:6;1046:7;1032:22;:13;:22;:::i;:::-;1069:20;;-1:-1:-1;;;;;1069:20:13;;;;;;;;975:121;:::o;260:175:1:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    167,
    8057
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78591BFD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB463A75C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB463A75C EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD5D35F95 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xD9A431B3 EQ PUSH2 0x310 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x78591BFD EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x9F986FBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA5C6A022 EQ PUSH2 0x28A JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x612B7543 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x612B7543 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x67B1F5DF EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x76A9E7B3 EQ PUSH2 0x222 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x24851914 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x561675E1 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x333 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x83A JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAE0 JUMP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x18B PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120C JUMP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x151A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x152A AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x152A AND JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x392 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x36A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x38A JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x349 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920726567697374657265642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x43A DUP3 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x447 JUMPI PUSH2 0x447 DUP3 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x3 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2A37B79036B0B73C903A32B0B6B997 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB PUSH2 0x4D6 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19B7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0x532 PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C ADD TIMESTAMP LT SWAP1 POP PUSH2 0x830 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1994 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x616 PUSH1 0xF DUP5 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62A PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x725 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0x652 PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x5150AE84A8CDF00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH9 0x5150AE84A8CDF00000 SWAP1 POP DUP4 PUSH2 0x6EB PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0x73E PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH9 0x3635C9ADC5DEA00000 SWAP1 POP DUP4 PUSH2 0x7D7 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x32E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x32E JUMP JUMPDEST PUSH2 0x845 PUSH2 0x4D6 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19B7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88B PUSH1 0xA DUP3 PUSH2 0x1629 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89D PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616464726573736573206D75737420626520646966666572656E742E PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0x912 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR DUP3 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND DUP6 DUP5 AND OR DUP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 SLOAD SWAP3 SLOAD DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 DUP6 AND SWAP5 AND SWAP3 PUSH32 0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0x9AC PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA31 PUSH2 0xA2C PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1966 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xA2C PUSH2 0x1591 JUMP JUMPDEST PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1966 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADD DUP2 PUSH2 0x16B6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAEB PUSH2 0xA2C PUSH2 0x1591 JUMP JUMPDEST PUSH2 0xB26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1966 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9671193 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9671193 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0xBC8 PUSH2 0x1591 JUMP JUMPDEST PUSH9 0xAD78EBC5AC6200000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC49 PUSH2 0x4D6 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19B7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0xCA0 PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xD27 SWAP1 POP PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD56 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4B PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1932 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C ADD TIMESTAMP LT PUSH2 0x830 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1994 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE03 PUSH1 0xA DUP5 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0xE1C PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH9 0x3635C9ADC5DEA00000 SWAP1 POP DUP4 PUSH2 0xEB5 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x32E JUMP JUMPDEST PUSH2 0xF1D PUSH2 0xF18 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x16FE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF2A PUSH2 0xA2C PUSH2 0x1591 JUMP JUMPDEST PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1966 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF92 PUSH2 0x4D6 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19B7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD8 PUSH1 0xF DUP3 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x3 EQ PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18BF PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1102 JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1056 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1073 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10AF JUMPI PUSH2 0x108A PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x11 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10BE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x103F JUMP JUMPDEST POP PUSH2 0x110B PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 PUSH2 0x1164 PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C8 PUSH2 0x4D6 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19B7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADD DUP2 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x125E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1231 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1256 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1210 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1272 PUSH2 0x4D6 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19B7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2BB937B7339034B210383934B1B297 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x130B JUMPI POP PUSH1 0x8 SLOAD PUSH2 0xE10 ADD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x1449 JUMPI PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1994 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 PUSH2 0x136B PUSH2 0x1591 JUMP JUMPDEST PUSH9 0x410D586A20A4C00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH9 0x410D586A20A4C00000 PUSH2 0x140F PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x6C6B935B8BBD400000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH9 0x6C6B935B8BBD400000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xF1D PUSH2 0x1525 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x178E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1910 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x15D1 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15AF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x15D1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1599 JUMP JUMPDEST POP DUP1 PUSH2 0x1624 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756C646E27742066696E642079756F7220666C6167210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x169D JUMPI DUP2 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1642 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x1695 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x466C616720616C7265616479207573656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x162C JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x16C7 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D6 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x170F PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1857 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1757 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D6 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x3F5F1DB80208F0D453083A86E16909CECC1E95E2618D5D927C93ACE22B8200FC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x179F PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1857 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x26B6063D78AEFCF96F02FF06BC9822B5A623278253ADD7FFFA5FB453DB399810 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x17E0 DUP3 DUP3 PUSH2 0x152A JUMP JUMPDEST ISZERO PUSH2 0x1832 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1861 DUP3 DUP3 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x189C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18EF PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID NUMBER PUSH9 0x616C6C656E67652063 PUSH2 0x6E27 PUSH21 0x20737461727420756E74696C20616C6C207465616D PUSH20 0x207265676974657265642E526F6C65733A206163 PUSH4 0x6F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65526F6C6573 GASPRICE KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373596F75206D7573742062652065697468 PUSH6 0x722074686520 PUSH4 0x68616C6C PUSH6 0x6E676572206F PUSH19 0x20746865206368616C6C656E6765642E41646D PUSH10 0x6E526F6C653A2063616C PUSH13 0x657220646F6573206E6F742068 PUSH2 0x7665 KECCAK256 PUSH21 0x68652041646D696E20726F6C65546865206368616C PUSH13 0x656E67652068617320616C7265 PUSH2 0x6479 KECCAK256 PUSH3 0x65656E KECCAK256 PUSH24 0x6F6E2E5465616D526F6C653A2063616C6C657220646F6573 KECCAK256 PUSH15 0x6F7420686176652074686520546561 PUSH14 0x20726F6C65A265627A7A72315820 BALANCE DUP5 DUP4 0x23 CREATE2 CALLDATACOPY 0xC0 0xE 0xC3 EXTCODECOPY SGT 0x5D 0x28 PC GT 0xE0 PUSH12 0x811D5B110003004C918B6206 DUP10 PUSH30 0x9764736F6C63430005110032000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        167,
        8057
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        167,
        8057
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78591BFD"
    },
    "38": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB463A75C"
    },
    "49": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "GT",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB463A75C"
    },
    "60": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A7"
    },
    "64": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3C5A547"
    },
    "71": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2CD"
    },
    "75": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD5D35F95"
    },
    "82": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2F3"
    },
    "86": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD9A431B3"
    },
    "93": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x310"
    },
    "97": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "101": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMP",
      "path": "14"
    },
    "102": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "104": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78591BFD"
    },
    "109": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23F"
    },
    "113": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8BAD0C0A"
    },
    "120": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25C"
    },
    "124": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9F986FBB"
    },
    "131": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x264"
    },
    "135": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "137": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA5C6A022"
    },
    "142": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x28A"
    },
    "146": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "147": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "150": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMP",
      "path": "14"
    },
    "151": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "152": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "153": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x612B7543"
    },
    "158": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "GT",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "163": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "164": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x612B7543"
    },
    "169": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AA"
    },
    "173": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "175": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x67B1F5DF"
    },
    "180": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "181": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D6"
    },
    "184": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "185": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "186": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70480275"
    },
    "191": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "192": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FC"
    },
    "195": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "196": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "197": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x76A9E7B3"
    },
    "202": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "203": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x222"
    },
    "206": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "207": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "210": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMP",
      "path": "14"
    },
    "211": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "213": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x24851914"
    },
    "218": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "224": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x24D7806C"
    },
    "229": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "230": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13F"
    },
    "233": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "235": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4420E486"
    },
    "240": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "241": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x165"
    },
    "244": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "245": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "246": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x561675E1"
    },
    "251": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "EQ",
      "path": "14"
    },
    "252": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18D"
    },
    "255": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "256": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "257": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "DUP1",
      "path": "14"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        167,
        8057
      ],
      "op": "REVERT",
      "path": "14"
    },
    "261": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "262": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12B"
    },
    "265": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "267": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP1",
      "path": "13"
    },
    "268": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "269": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SUB",
      "path": "13"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "LT"
    },
    "274": {
      "op": "ISZERO"
    },
    "275": {
      "op": "PUSH2",
      "value": "0x11B"
    },
    "278": {
      "op": "JUMPI"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "281": {
      "op": "DUP1"
    },
    "282": {
      "op": "REVERT"
    },
    "283": {
      "op": "JUMPDEST"
    },
    "284": {
      "op": "POP"
    },
    "285": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "AND",
      "path": "13"
    },
    "295": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x318"
    },
    "298": {
      "fn": "TeamRole.isTeam",
      "jump": "i",
      "offset": [
        578,
        681
      ],
      "op": "JUMP",
      "path": "13"
    },
    "299": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "300": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "302": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP1",
      "path": "13"
    },
    "303": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "304": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "305": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "306": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "307": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP3",
      "path": "13"
    },
    "308": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "309": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "310": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "311": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP2",
      "path": "13"
    },
    "312": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "313": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SUB",
      "path": "13"
    },
    "314": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "316": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ADD",
      "path": "13"
    },
    "317": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "318": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "RETURN",
      "path": "13"
    },
    "319": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "320": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12B"
    },
    "323": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "325": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "326": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "327": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "DUP2"
    },
    "331": {
      "op": "LT"
    },
    "332": {
      "op": "ISZERO"
    },
    "333": {
      "op": "PUSH2",
      "value": "0x155"
    },
    "336": {
      "op": "JUMPI"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "339": {
      "op": "DUP1"
    },
    "340": {
      "op": "REVERT"
    },
    "341": {
      "op": "JUMPDEST"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "350": {
      "op": "SHL"
    },
    "351": {
      "op": "SUB"
    },
    "352": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "353": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x333"
    },
    "356": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "357": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "358": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "361": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "363": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "DUP1",
      "path": "14"
    },
    "364": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "365": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "SUB",
      "path": "14"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "op": "DUP2"
    },
    "369": {
      "op": "LT"
    },
    "370": {
      "op": "ISZERO"
    },
    "371": {
      "op": "PUSH2",
      "value": "0x17B"
    },
    "374": {
      "op": "JUMPI"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "377": {
      "op": "DUP1"
    },
    "378": {
      "op": "REVERT"
    },
    "379": {
      "op": "JUMPDEST"
    },
    "380": {
      "op": "POP"
    },
    "381": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "AND",
      "path": "14"
    },
    "391": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x345"
    },
    "394": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2102,
        2832
      ],
      "op": "JUMP",
      "path": "14"
    },
    "395": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "396": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "STOP",
      "path": "14"
    },
    "397": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "398": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12B"
    },
    "401": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "403": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "DUP1",
      "path": "14"
    },
    "404": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "405": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "SUB",
      "path": "14"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "408": {
      "op": "DUP2"
    },
    "409": {
      "op": "LT"
    },
    "410": {
      "op": "ISZERO"
    },
    "411": {
      "op": "PUSH2",
      "value": "0x1A3"
    },
    "414": {
      "op": "JUMPI"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "417": {
      "op": "DUP1"
    },
    "418": {
      "op": "REVERT"
    },
    "419": {
      "op": "JUMPDEST"
    },
    "420": {
      "op": "POP"
    },
    "421": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "422": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4C9"
    },
    "425": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6222,
        7117
      ],
      "op": "JUMP",
      "path": "14"
    },
    "426": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "427": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "430": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "432": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "DUP1",
      "path": "14"
    },
    "433": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "434": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "SUB",
      "path": "14"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "437": {
      "op": "DUP2"
    },
    "438": {
      "op": "LT"
    },
    "439": {
      "op": "ISZERO"
    },
    "440": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "443": {
      "op": "JUMPI"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "446": {
      "op": "DUP1"
    },
    "447": {
      "op": "REVERT"
    },
    "448": {
      "op": "JUMPDEST"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "SUB"
    },
    "458": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "DUP2",
      "path": "14"
    },
    "459": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "460": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "AND",
      "path": "14"
    },
    "461": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "462": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "464": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "ADD",
      "path": "14"
    },
    "465": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "466": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x83A"
    },
    "469": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4162,
        4695
      ],
      "op": "JUMP",
      "path": "14"
    },
    "470": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "471": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "474": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "476": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "DUP1",
      "path": "14"
    },
    "477": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "478": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "SUB",
      "path": "14"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "481": {
      "op": "DUP2"
    },
    "482": {
      "op": "LT"
    },
    "483": {
      "op": "ISZERO"
    },
    "484": {
      "op": "PUSH2",
      "value": "0x1EC"
    },
    "487": {
      "op": "JUMPI"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "op": "REVERT"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "AND",
      "path": "14"
    },
    "504": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA21"
    },
    "507": {
      "fn": "token_challenge.setExchange",
      "jump": "i",
      "offset": [
        7793,
        7922
      ],
      "op": "JUMP",
      "path": "14"
    },
    "508": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "509": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18B"
    },
    "512": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "514": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "515": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "516": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "519": {
      "op": "DUP2"
    },
    "520": {
      "op": "LT"
    },
    "521": {
      "op": "ISZERO"
    },
    "522": {
      "op": "PUSH2",
      "value": "0x212"
    },
    "525": {
      "op": "JUMPI"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "528": {
      "op": "DUP1"
    },
    "529": {
      "op": "REVERT"
    },
    "530": {
      "op": "JUMPDEST"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "542": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA8E"
    },
    "545": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "546": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "547": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "550": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "552": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "DUP1",
      "path": "14"
    },
    "553": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "554": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "SUB",
      "path": "14"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "557": {
      "op": "DUP2"
    },
    "558": {
      "op": "LT"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "563": {
      "op": "JUMPI"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "566": {
      "op": "DUP1"
    },
    "567": {
      "op": "REVERT"
    },
    "568": {
      "op": "JUMPDEST"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "571": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAE0"
    },
    "574": {
      "fn": "token_challenge.overnightStart",
      "jump": "i",
      "offset": [
        3127,
        3531
      ],
      "op": "JUMP",
      "path": "14"
    },
    "575": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "576": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12B"
    },
    "579": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "581": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "DUP1",
      "path": "14"
    },
    "582": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "583": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "SUB",
      "path": "14"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "LT"
    },
    "588": {
      "op": "ISZERO"
    },
    "589": {
      "op": "PUSH2",
      "value": "0x255"
    },
    "592": {
      "op": "JUMPI"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "595": {
      "op": "DUP1"
    },
    "596": {
      "op": "REVERT"
    },
    "597": {
      "op": "JUMPDEST"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "600": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3C"
    },
    "603": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4701,
        5517
      ],
      "op": "JUMP",
      "path": "14"
    },
    "604": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "605": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18B"
    },
    "608": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF0D"
    },
    "611": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "612": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "613": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "616": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "618": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "DUP1",
      "path": "14"
    },
    "619": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "620": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "SUB",
      "path": "14"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "623": {
      "op": "DUP2"
    },
    "624": {
      "op": "LT"
    },
    "625": {
      "op": "ISZERO"
    },
    "626": {
      "op": "PUSH2",
      "value": "0x27A"
    },
    "629": {
      "op": "JUMPI"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "REVERT"
    },
    "634": {
      "op": "JUMPDEST"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "AND",
      "path": "14"
    },
    "646": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF1F"
    },
    "649": {
      "fn": "token_challenge.setPayCoin",
      "jump": "i",
      "offset": [
        7932,
        8049
      ],
      "op": "JUMP",
      "path": "14"
    },
    "650": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "651": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "654": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "656": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "DUP1",
      "path": "14"
    },
    "657": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "658": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "SUB",
      "path": "14"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "DUP2"
    },
    "662": {
      "op": "LT"
    },
    "663": {
      "op": "ISZERO"
    },
    "664": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "667": {
      "op": "JUMPI"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "670": {
      "op": "DUP1"
    },
    "671": {
      "op": "REVERT"
    },
    "672": {
      "op": "JUMPDEST"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "675": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF87"
    },
    "678": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5553,
        6216
      ],
      "op": "JUMP",
      "path": "14"
    },
    "679": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "680": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x18B"
    },
    "683": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "685": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "DUP1",
      "path": "13"
    },
    "686": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "687": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "SUB",
      "path": "13"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "690": {
      "op": "DUP2"
    },
    "691": {
      "op": "LT"
    },
    "692": {
      "op": "ISZERO"
    },
    "693": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "696": {
      "op": "JUMPI"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "699": {
      "op": "DUP1"
    },
    "700": {
      "op": "REVERT"
    },
    "701": {
      "op": "JUMPDEST"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "710": {
      "op": "SHL"
    },
    "711": {
      "op": "SUB"
    },
    "712": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "AND",
      "path": "13"
    },
    "713": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11BD"
    },
    "716": {
      "fn": "TeamRole.addTeam",
      "jump": "i",
      "offset": [
        687,
        771
      ],
      "op": "JUMP",
      "path": "13"
    },
    "717": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "718": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12B"
    },
    "721": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "723": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "DUP1",
      "path": "14"
    },
    "724": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "725": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "SUB",
      "path": "14"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "728": {
      "op": "DUP2"
    },
    "729": {
      "op": "LT"
    },
    "730": {
      "op": "ISZERO"
    },
    "731": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "734": {
      "op": "JUMPI"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "737": {
      "op": "DUP1"
    },
    "738": {
      "op": "REVERT"
    },
    "739": {
      "op": "JUMPDEST"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "AND",
      "path": "14"
    },
    "751": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x120C"
    },
    "754": {
      "fn": "token_challenge.isRegistered",
      "jump": "i",
      "offset": [
        2838,
        3098
      ],
      "op": "JUMP",
      "path": "14"
    },
    "755": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "756": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18B"
    },
    "759": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "761": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "DUP1",
      "path": "14"
    },
    "762": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "763": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "SUB",
      "path": "14"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "766": {
      "op": "DUP2"
    },
    "767": {
      "op": "LT"
    },
    "768": {
      "op": "ISZERO"
    },
    "769": {
      "op": "PUSH2",
      "value": "0x309"
    },
    "772": {
      "op": "JUMPI"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "775": {
      "op": "DUP1"
    },
    "776": {
      "op": "REVERT"
    },
    "777": {
      "op": "JUMPDEST"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "780": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1267"
    },
    "783": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3537,
        4128
      ],
      "op": "JUMP",
      "path": "14"
    },
    "784": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "785": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x18B"
    },
    "788": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x151A"
    },
    "791": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        777,
        850
      ],
      "op": "JUMP",
      "path": "13"
    },
    "792": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "793": {
      "fn": "TeamRole.isTeam",
      "offset": [
        632,
        636
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "795": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 0,
      "value": "0x32B"
    },
    "798": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "800": {
      "fn": "TeamRole.isTeam",
      "offset": [
        666,
        673
      ],
      "op": "DUP4",
      "path": "13"
    },
    "801": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "806": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        665
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x152A"
    },
    "809": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "AND",
      "path": "13"
    },
    "810": {
      "fn": "TeamRole.isTeam",
      "jump": "i",
      "offset": [
        655,
        674
      ],
      "op": "JUMP",
      "path": "13"
    },
    "811": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "812": {
      "fn": "TeamRole.isTeam",
      "offset": [
        648,
        674
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "813": {
      "fn": "TeamRole.isTeam",
      "offset": [
        648,
        674
      ],
      "op": "POP",
      "path": "13"
    },
    "814": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "815": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "816": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "817": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "POP",
      "path": "13"
    },
    "818": {
      "fn": "TeamRole.isTeam",
      "jump": "o",
      "offset": [
        578,
        681
      ],
      "op": "JUMP",
      "path": "13"
    },
    "819": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "820": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "822": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 1,
      "value": "0x32B"
    },
    "825": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "826": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "827": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "832": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x152A"
    },
    "835": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "836": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "837": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "838": {
      "fn": "token_challenge.register",
      "offset": [
        2160,
        2183
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "840": {
      "fn": "token_challenge.register",
      "offset": [
        2160,
        2183
      ],
      "op": "DUP1",
      "path": "14"
    },
    "841": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "842": {
      "fn": "token_challenge.register",
      "offset": [
        2356,
        2370
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "844": {
      "fn": "token_challenge.register",
      "offset": [
        2356,
        2377
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "845": {
      "fn": "token_challenge.register",
      "offset": [
        2352,
        2377
      ],
      "op": "DUP2",
      "path": "14"
    },
    "846": {
      "fn": "token_challenge.register",
      "offset": [
        2352,
        2377
      ],
      "op": "LT",
      "path": "14"
    },
    "847": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "848": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x392"
    },
    "851": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "852": {
      "fn": "token_challenge.register",
      "offset": [
        2421,
        2432
      ],
      "op": "DUP3",
      "path": "14"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2432
      ],
      "op": "AND",
      "path": "14"
    },
    "862": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "864": {
      "fn": "token_challenge.register",
      "offset": [
        2415,
        2416
      ],
      "op": "DUP3",
      "path": "14"
    },
    "865": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "DUP2",
      "path": "14"
    },
    "866": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "867": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "DUP2",
      "path": "14"
    },
    "868": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "LT",
      "path": "14"
    },
    "869": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x36A"
    },
    "872": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "873": {
      "dev": "Index out of range",
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "INVALID",
      "path": "14"
    },
    "874": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "875": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "877": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "878": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "DUP3",
      "path": "14"
    },
    "879": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "880": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "882": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "883": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "884": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "885": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "ADD",
      "path": "14"
    },
    "886": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "893": {
      "op": "SHL"
    },
    "894": {
      "op": "SUB"
    },
    "895": {
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2417
      ],
      "op": "AND",
      "path": "14"
    },
    "896": {
      "branch": 86,
      "fn": "token_challenge.register",
      "offset": [
        2400,
        2432
      ],
      "op": "EQ",
      "path": "14"
    },
    "897": {
      "fn": "token_challenge.register",
      "offset": [
        2397,
        2492
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "898": {
      "fn": "token_challenge.register",
      "offset": [
        2397,
        2492
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x38A"
    },
    "901": {
      "branch": 86,
      "fn": "token_challenge.register",
      "offset": [
        2397,
        2492
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "902": {
      "fn": "token_challenge.register",
      "offset": [
        2472,
        2476
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 2,
      "value": "0x1"
    },
    "904": {
      "fn": "token_challenge.register",
      "offset": [
        2451,
        2476
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "905": {
      "fn": "token_challenge.register",
      "offset": [
        2451,
        2476
      ],
      "op": "POP",
      "path": "14"
    },
    "906": {
      "fn": "token_challenge.register",
      "offset": [
        2397,
        2492
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "907": {
      "fn": "token_challenge.register",
      "offset": [
        2379,
        2382
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x1"
    },
    "909": {
      "fn": "token_challenge.register",
      "offset": [
        2379,
        2382
      ],
      "op": "ADD",
      "path": "14"
    },
    "910": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x349"
    },
    "913": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "JUMP",
      "path": "14"
    },
    "914": {
      "fn": "token_challenge.register",
      "offset": [
        2333,
        2502
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "fn": "token_challenge.register",
      "offset": [
        2519,
        2546
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 4
    },
    "917": {
      "branch": 87,
      "fn": "token_challenge.register",
      "offset": [
        2519,
        2546
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "918": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E6"
    },
    "921": {
      "branch": 87,
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "922": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "924": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "DUP1",
      "path": "14"
    },
    "925": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "DUP2",
      "path": "14"
    },
    "934": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "935": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "937": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "939": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "DUP3",
      "path": "14"
    },
    "940": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "ADD",
      "path": "14"
    },
    "941": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "942": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "944": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "946": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "DUP3",
      "path": "14"
    },
    "947": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "ADD",
      "path": "14"
    },
    "948": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "949": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x596F7527726520616C726561647920726567697374657265642E000000000000"
    },
    "982": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "984": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "DUP3",
      "path": "14"
    },
    "985": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "ADD",
      "path": "14"
    },
    "986": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "987": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "988": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "989": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "990": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "DUP2",
      "path": "14"
    },
    "991": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "992": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "SUB",
      "path": "14"
    },
    "993": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "995": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "ADD",
      "path": "14"
    },
    "996": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "997": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "REVERT",
      "path": "14"
    },
    "998": {
      "fn": "token_challenge.register",
      "offset": [
        2511,
        2577
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "999": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2603
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 5,
      "value": "0x6"
    },
    "1001": {
      "op": "DUP1"
    },
    "1002": {
      "op": "SLOAD"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "DUP2"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "op": "DUP3"
    },
    "1008": {
      "op": "SSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1011": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1012": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1013": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1014": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1015": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1048": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "ADD",
      "path": "14"
    },
    "1049": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1050": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "SUB"
    },
    "1059": {
      "op": "NOT"
    },
    "1060": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "AND",
      "path": "14"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "op": "SUB"
    },
    "1069": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1070": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "AND",
      "path": "14"
    },
    "1071": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "OR",
      "path": "14"
    },
    "1072": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1073": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1074": {
      "fn": "token_challenge.register",
      "offset": [
        2637,
        2656
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "1077": {
      "fn": "token_challenge.register",
      "offset": [
        2589,
        2621
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1078": {
      "fn": "token_challenge.register",
      "offset": [
        2637,
        2643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x318"
    },
    "1081": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2637,
        2656
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1082": {
      "fn": "token_challenge.register",
      "offset": [
        2637,
        2656
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1083": {
      "fn": "token_challenge.register",
      "offset": [
        2632,
        2703
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x447"
    },
    "1086": {
      "fn": "token_challenge.register",
      "offset": [
        2632,
        2703
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1087": {
      "fn": "token_challenge.register",
      "offset": [
        2672,
        2692
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 6,
      "value": "0x447"
    },
    "1090": {
      "fn": "token_challenge.register",
      "offset": [
        2680,
        2691
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1091": {
      "fn": "token_challenge.register",
      "offset": [
        2672,
        2679
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11BD"
    },
    "1094": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2672,
        2692
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1095": {
      "fn": "token_challenge.register",
      "offset": [
        2672,
        2692
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1096": {
      "fn": "token_challenge.register",
      "offset": [
        2730,
        2744
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x6"
    },
    "1098": {
      "fn": "token_challenge.register",
      "offset": [
        2730,
        2751
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1099": {
      "fn": "token_challenge.register",
      "offset": [
        2755,
        2756
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1101": {
      "op": "LT"
    },
    "1102": {
      "branch": 88,
      "fn": "token_challenge.register",
      "offset": [
        2730,
        2756
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1103": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x491"
    },
    "1106": {
      "branch": 88,
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1107": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1109": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1110": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1117": {
      "op": "SHL"
    },
    "1118": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1119": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1120": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1122": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1124": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1125": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "ADD",
      "path": "14"
    },
    "1126": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1127": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "1129": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1131": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1132": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "ADD",
      "path": "14"
    },
    "1133": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1134": {
      "op": "PUSH15",
      "value": "0x2A37B79036B0B73C903A32B0B6B997"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1155": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1156": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "ADD",
      "path": "14"
    },
    "1157": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1158": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1159": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1160": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1161": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1162": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1163": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "SUB",
      "path": "14"
    },
    "1164": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1166": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "ADD",
      "path": "14"
    },
    "1167": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1168": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1169": {
      "fn": "token_challenge.register",
      "offset": [
        2722,
        2776
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1170": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 8,
      "value": "0x40"
    },
    "1172": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1179": {
      "op": "SHL"
    },
    "1180": {
      "op": "SUB"
    },
    "1181": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1182": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "AND",
      "path": "14"
    },
    "1183": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1184": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9"
    },
    "1217": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1218": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1220": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1221": {
      "fn": "token_challenge.register",
      "offset": [
        2801,
        2824
      ],
      "op": "LOG2",
      "path": "14"
    },
    "1222": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "POP",
      "path": "14"
    },
    "1223": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2832
      ],
      "op": "POP",
      "path": "14"
    },
    "1224": {
      "fn": "token_challenge.register",
      "jump": "o",
      "offset": [
        2102,
        2832
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1225": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6222,
        7117
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1226": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6288,
        6292
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1228": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4DB"
    },
    "1231": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D6"
    },
    "1234": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "1237": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1238": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        492,
        504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1239": {
      "offset": [
        485,
        491
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x318"
    },
    "1242": {
      "jump": "i",
      "offset": [
        485,
        505
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1243": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1244": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x516"
    },
    "1247": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1248": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1250": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1257": {
      "op": "SHL"
    },
    "1258": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1259": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1260": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1262": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1263": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1264": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1265": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1267": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1268": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1269": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1270": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "1271": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1272": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1273": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "1275": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1276": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1277": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1279": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1280": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1281": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B7"
    },
    "1284": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "1286": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1287": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1288": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1290": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1291": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1292": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "1293": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "1294": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1296": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1297": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1298": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1299": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "1300": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1301": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1302": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1303": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6350
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x5"
    },
    "1305": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6350
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1306": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6308,
        6323
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1308": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6308,
        6323
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6350
      ],
      "op": "AND",
      "path": "14"
    },
    "1318": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6359
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "1323": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6360,
        6372
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x532"
    },
    "1326": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6360,
        6370
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "1329": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6360,
        6372
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1330": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6360,
        6372
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1331": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6374,
        6380
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x56BC75E2D63100000"
    },
    "1341": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1343": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1344": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1345": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1350": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "AND",
      "path": "14"
    },
    "1351": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1353": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "SHL",
      "path": "14"
    },
    "1354": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1355": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1356": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1358": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "ADD",
      "path": "14"
    },
    "1359": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1360": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "op": "SUB"
    },
    "1369": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "AND",
      "path": "14"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "op": "SUB"
    },
    "1378": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "AND",
      "path": "14"
    },
    "1379": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1380": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1381": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1383": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "ADD",
      "path": "14"
    },
    "1384": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1385": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1386": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1387": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1389": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "ADD",
      "path": "14"
    },
    "1390": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1391": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "POP",
      "path": "14"
    },
    "1392": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "POP",
      "path": "14"
    },
    "1393": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "POP",
      "path": "14"
    },
    "1394": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1396": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1398": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1399": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1400": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1401": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "SUB",
      "path": "14"
    },
    "1402": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1403": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1405": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1406": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1407": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1408": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1409": {
      "op": "DUP1"
    },
    "1410": {
      "op": "ISZERO"
    },
    "1411": {
      "op": "PUSH2",
      "value": "0x58B"
    },
    "1414": {
      "op": "JUMPI"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1417": {
      "op": "DUP1"
    },
    "1418": {
      "op": "REVERT"
    },
    "1419": {
      "op": "JUMPDEST"
    },
    "1420": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "POP",
      "path": "14"
    },
    "1421": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "GAS",
      "path": "14"
    },
    "1422": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "CALL",
      "path": "14"
    },
    "1423": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6343,
        6381
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1424": {
      "op": "DUP1"
    },
    "1425": {
      "op": "ISZERO"
    },
    "1426": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1429": {
      "op": "JUMPI"
    },
    "1430": {
      "op": "RETURNDATASIZE"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1433": {
      "op": "DUP1"
    },
    "1434": {
      "op": "RETURNDATACOPY"
    },
    "1435": {
      "op": "RETURNDATASIZE"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1438": {
      "op": "REVERT"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "op": "POP"
    },
    "1443": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1445": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1446": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1447": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1448": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6422
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "1450": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1452": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1453": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1455": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1456": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1457": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6428
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1458": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6431,
        6440
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12C"
    },
    "1461": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6403,
        6440
      ],
      "op": "ADD",
      "path": "14"
    },
    "1462": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6396,
        6399
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "1463": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6396,
        6440
      ],
      "op": "LT",
      "path": "14"
    },
    "1464": {
      "branch": 89,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6396,
        6440
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6393,
        7111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x830"
    },
    "1469": {
      "branch": 89,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6393,
        7111
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1470": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x0"
    },
    "1472": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1473": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1474": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1475": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6517
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "1477": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1479": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1480": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1482": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1483": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1484": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1485": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1487": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6523
      ],
      "op": "AND",
      "path": "14"
    },
    "1488": {
      "branch": 90,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6500,
        6532
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1489": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60B"
    },
    "1492": {
      "branch": 90,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1493": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1495": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1504": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1505": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1507": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "ADD",
      "path": "14"
    },
    "1508": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1509": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1510": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1512": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "ADD",
      "path": "14"
    },
    "1513": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1514": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1515": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "SUB",
      "path": "14"
    },
    "1516": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1517": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1518": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "1520": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1521": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1522": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1524": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "ADD",
      "path": "14"
    },
    "1525": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1526": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1994"
    },
    "1529": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "1531": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1532": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "1533": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1535": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "ADD",
      "path": "14"
    },
    "1536": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1537": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "POP",
      "path": "14"
    },
    "1538": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "POP",
      "path": "14"
    },
    "1539": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1541": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1542": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1543": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1544": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "SUB",
      "path": "14"
    },
    "1545": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1546": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1547": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6492,
        6572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1548": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6596,
        6622
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 11,
      "value": "0x616"
    },
    "1551": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6606,
        6615
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "1553": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6617,
        6621
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1554": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6596,
        6605
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1595"
    },
    "1557": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6596,
        6622
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1558": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6596,
        6622
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1559": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6657,
        6672
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1561": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6657,
        6672
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "op": "SUB"
    },
    "1570": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6657,
        6672
      ],
      "op": "AND",
      "path": "14"
    },
    "1571": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6641,
        6653
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x62A"
    },
    "1574": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6641,
        6651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "1577": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6641,
        6653
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1578": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6641,
        6653
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "op": "SUB"
    },
    "1587": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6641,
        6672
      ],
      "op": "AND",
      "path": "14"
    },
    "1588": {
      "branch": 91,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6641,
        6672
      ],
      "op": "EQ",
      "path": "14"
    },
    "1589": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1590": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x725"
    },
    "1593": {
      "branch": 91,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1594": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0x5"
    },
    "1596": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6698
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6698
      ],
      "op": "AND",
      "path": "14"
    },
    "1606": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6703
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "1611": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6704,
        6716
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x652"
    },
    "1614": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6704,
        6714
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "1617": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6704,
        6716
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1618": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6704,
        6716
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1619": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6718,
        6725
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x5150AE84A8CDF00000"
    },
    "1629": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1631": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1632": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1633": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1638": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "AND",
      "path": "14"
    },
    "1639": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1641": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "SHL",
      "path": "14"
    },
    "1642": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1643": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1644": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1646": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "ADD",
      "path": "14"
    },
    "1647": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1648": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "AND",
      "path": "14"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "op": "SUB"
    },
    "1666": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "AND",
      "path": "14"
    },
    "1667": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1668": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1669": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1671": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "ADD",
      "path": "14"
    },
    "1672": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1673": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1674": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1675": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1677": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "ADD",
      "path": "14"
    },
    "1678": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1679": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1680": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1681": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1682": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1684": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1686": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1687": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1688": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1689": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "SUB",
      "path": "14"
    },
    "1690": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1691": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1693": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1694": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1695": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1696": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1697": {
      "op": "DUP1"
    },
    "1698": {
      "op": "ISZERO"
    },
    "1699": {
      "op": "PUSH2",
      "value": "0x6AB"
    },
    "1702": {
      "op": "JUMPI"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1705": {
      "op": "DUP1"
    },
    "1706": {
      "op": "REVERT"
    },
    "1707": {
      "op": "JUMPDEST"
    },
    "1708": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1709": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "GAS",
      "path": "14"
    },
    "1710": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "CALL",
      "path": "14"
    },
    "1711": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1712": {
      "op": "DUP1"
    },
    "1713": {
      "op": "ISZERO"
    },
    "1714": {
      "op": "PUSH2",
      "value": "0x6BF"
    },
    "1717": {
      "op": "JUMPI"
    },
    "1718": {
      "op": "RETURNDATASIZE"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1721": {
      "op": "DUP1"
    },
    "1722": {
      "op": "RETURNDATACOPY"
    },
    "1723": {
      "op": "RETURNDATASIZE"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1726": {
      "op": "REVERT"
    },
    "1727": {
      "op": "JUMPDEST"
    },
    "1728": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1729": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1730": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1731": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "POP",
      "path": "14"
    },
    "1732": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1734": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1735": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6691,
        6726
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1738": {
      "op": "DUP2"
    },
    "1739": {
      "op": "LT"
    },
    "1740": {
      "op": "ISZERO"
    },
    "1741": {
      "op": "PUSH2",
      "value": "0x6D5"
    },
    "1744": {
      "op": "JUMPI"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1747": {
      "op": "DUP1"
    },
    "1748": {
      "op": "REVERT"
    },
    "1749": {
      "op": "JUMPDEST"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6786,
        6793
      ],
      "op": "PUSH9",
      "path": "14",
      "statement": 13,
      "value": "0x5150AE84A8CDF00000"
    },
    "1761": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6786,
        6793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6780,
        6784
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1764": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6766,
        6778
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6EB"
    },
    "1767": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6766,
        6776
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "1770": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6766,
        6778
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1771": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6766,
        6778
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "op": "SUB"
    },
    "1780": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "AND",
      "path": "14"
    },
    "1781": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "1814": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1816": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1817": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1819": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1820": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1821": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1822": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "SUB",
      "path": "14"
    },
    "1823": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1824": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6749,
        6794
      ],
      "op": "LOG4",
      "path": "14"
    },
    "1825": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x80D"
    },
    "1828": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1829": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1830": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6851
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x5"
    },
    "1832": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6851
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6851
      ],
      "op": "AND",
      "path": "14"
    },
    "1842": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6856
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "1847": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6857,
        6869
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x73E"
    },
    "1850": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6857,
        6867
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "1853": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6857,
        6869
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1854": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6857,
        6869
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1855": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6871,
        6878
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1865": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1867": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1868": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1869": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1874": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "AND",
      "path": "14"
    },
    "1875": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1877": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "SHL",
      "path": "14"
    },
    "1878": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1879": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1880": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1882": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "ADD",
      "path": "14"
    },
    "1883": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1884": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "op": "SUB"
    },
    "1893": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "AND",
      "path": "14"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "AND",
      "path": "14"
    },
    "1903": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1904": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1905": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1907": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "ADD",
      "path": "14"
    },
    "1908": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1909": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1910": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1911": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1913": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "ADD",
      "path": "14"
    },
    "1914": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1915": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1916": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1917": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1918": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1920": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1922": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1923": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1924": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1925": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "SUB",
      "path": "14"
    },
    "1926": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1927": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1929": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1930": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1931": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1932": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1933": {
      "op": "DUP1"
    },
    "1934": {
      "op": "ISZERO"
    },
    "1935": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1938": {
      "op": "JUMPI"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1941": {
      "op": "DUP1"
    },
    "1942": {
      "op": "REVERT"
    },
    "1943": {
      "op": "JUMPDEST"
    },
    "1944": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1945": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "GAS",
      "path": "14"
    },
    "1946": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "CALL",
      "path": "14"
    },
    "1947": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1948": {
      "op": "DUP1"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7AB"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "RETURNDATASIZE"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1957": {
      "op": "DUP1"
    },
    "1958": {
      "op": "RETURNDATACOPY"
    },
    "1959": {
      "op": "RETURNDATASIZE"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1962": {
      "op": "REVERT"
    },
    "1963": {
      "op": "JUMPDEST"
    },
    "1964": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1965": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1966": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1967": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "POP",
      "path": "14"
    },
    "1968": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1970": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1971": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6844,
        6879
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1974": {
      "op": "DUP2"
    },
    "1975": {
      "op": "LT"
    },
    "1976": {
      "op": "ISZERO"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x7C1"
    },
    "1980": {
      "op": "JUMPI"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1983": {
      "op": "DUP1"
    },
    "1984": {
      "op": "REVERT"
    },
    "1985": {
      "op": "JUMPDEST"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6939,
        6946
      ],
      "op": "PUSH9",
      "path": "14",
      "statement": 15,
      "value": "0x3635C9ADC5DEA00000"
    },
    "1997": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6939,
        6946
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6933,
        6937
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2000": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6919,
        6931
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7D7"
    },
    "2003": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6919,
        6929
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "2006": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        6919,
        6931
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2007": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6919,
        6931
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2014": {
      "op": "SHL"
    },
    "2015": {
      "op": "SUB"
    },
    "2016": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "AND",
      "path": "14"
    },
    "2017": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "2050": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2052": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2053": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2055": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2056": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2057": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2058": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "SUB",
      "path": "14"
    },
    "2059": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2060": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6902,
        6947
      ],
      "op": "LOG4",
      "path": "14"
    },
    "2061": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6638,
        6962
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2062": {
      "op": "POP"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x0"
    },
    "2066": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2067": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2068": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2069": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7006
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "2071": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2073": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2074": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2076": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2077": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7012
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2078": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2079": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2082": {
      "op": "NOT"
    },
    "2083": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "AND",
      "path": "14"
    },
    "2084": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7015,
        7019
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2086": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2087": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2088": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "OR",
      "path": "14"
    },
    "2089": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2090": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2091": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6989,
        7019
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2092": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7036,
        7047
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 17,
      "value": "0x32E"
    },
    "2095": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7036,
        7047
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2096": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        6393,
        7111
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2097": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7094,
        7099
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x0"
    },
    "2099": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7087,
        7099
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2100": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7087,
        7099
      ],
      "op": "POP",
      "path": "14"
    },
    "2101": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7087,
        7099
      ],
      "op": "POP",
      "path": "14"
    },
    "2102": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7087,
        7099
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32E"
    },
    "2105": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7087,
        7099
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2106": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2107": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x845"
    },
    "2110": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D6"
    },
    "2113": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "2116": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2117": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2118": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x880"
    },
    "2121": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2122": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2124": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2131": {
      "op": "SHL"
    },
    "2132": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2133": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2134": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2136": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "2137": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2138": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2139": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2141": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "2142": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2143": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2144": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "2145": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2146": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2147": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "2149": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2150": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2151": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2153": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "2154": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2155": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B7"
    },
    "2158": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "2160": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2161": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "2162": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2164": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "2165": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2166": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "2167": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "2168": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2170": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2171": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2172": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2173": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "2174": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2175": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2176": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2177": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4254,
        4282
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 19,
      "value": "0x88B"
    },
    "2180": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4264,
        4275
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2182": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4277,
        4281
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2183": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4254,
        4263
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1629"
    },
    "2186": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4254,
        4282
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2187": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4254,
        4282
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2188": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4318,
        4334
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 20
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "op": "SUB"
    },
    "2197": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4334
      ],
      "op": "AND",
      "path": "14"
    },
    "2198": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4314
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x89D"
    },
    "2201": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4312
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "2204": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4302,
        4314
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2205": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4314
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "op": "SUB"
    },
    "2214": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4334
      ],
      "op": "AND",
      "path": "14"
    },
    "2215": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4334
      ],
      "op": "EQ",
      "path": "14"
    },
    "2216": {
      "branch": 92,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4302,
        4334
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2217": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8F9"
    },
    "2220": {
      "branch": 92,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2221": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2223": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2224": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2233": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2234": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2236": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2238": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2239": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "ADD",
      "path": "14"
    },
    "2240": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2241": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2242": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2243": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2245": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2246": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "ADD",
      "path": "14"
    },
    "2247": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2248": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x54686520616464726573736573206D75737420626520646966666572656E742E"
    },
    "2281": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2283": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2284": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "ADD",
      "path": "14"
    },
    "2285": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2286": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2287": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2288": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2289": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2290": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2291": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "SUB",
      "path": "14"
    },
    "2292": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2294": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "ADD",
      "path": "14"
    },
    "2295": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2296": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2297": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4294,
        4371
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2298": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 21,
      "value": "0x0"
    },
    "2300": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2301": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2302": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2303": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4405
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "2305": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2307": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2308": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2310": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2311": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4411
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2312": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4414,
        4417
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2313": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4417
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2314": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4384,
        4417
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2315": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4447,
        4459
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 22,
      "value": "0x912"
    },
    "2318": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4447,
        4457
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "2321": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4447,
        4459
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2322": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4447,
        4459
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2323": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4444
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2325": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2326": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "op": "NOT"
    },
    "2336": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2337": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2338": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "AND",
      "path": "14"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2345": {
      "op": "SHL"
    },
    "2346": {
      "op": "SUB"
    },
    "2347": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2348": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2349": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "AND",
      "path": "14"
    },
    "2350": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "OR",
      "path": "14"
    },
    "2351": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2352": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4427,
        4459
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2353": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4487
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 23,
      "value": "0xC"
    },
    "2355": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2356": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2357": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2358": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2359": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "AND",
      "path": "14"
    },
    "2360": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2361": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2362": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "AND",
      "path": "14"
    },
    "2363": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "OR",
      "path": "14"
    },
    "2364": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2365": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4470,
        4506
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2368": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 24
    },
    "2369": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2370": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2371": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4536
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "2373": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2375": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2376": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2377": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2378": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2380": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2381": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2382": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2383": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4542
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2384": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4550
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2385": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4550
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2388": {
      "op": "NOT"
    },
    "2389": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4550
      ],
      "op": "AND",
      "path": "14"
    },
    "2390": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4550
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2391": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4517,
        4550
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2392": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4602,
        4619
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 25
    },
    "2393": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4602,
        4619
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2394": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4583,
        4600
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2395": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4583,
        4600
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2396": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2397": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2398": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2399": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2400": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2401": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2402": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2403": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4602,
        4619
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2404": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4602,
        4619
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2405": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4602,
        4619
      ],
      "op": "AND",
      "path": "14"
    },
    "2406": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4602,
        4619
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2407": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4583,
        4600
      ],
      "op": "AND",
      "path": "14"
    },
    "2408": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4583,
        4600
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2409": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106"
    },
    "2442": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2443": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2444": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2445": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2446": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SUB",
      "path": "14"
    },
    "2447": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2448": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2449": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "ADD",
      "path": "14"
    },
    "2450": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2451": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4567,
        4626
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2452": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4643
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 26,
      "value": "0x5"
    },
    "2454": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4643
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4643
      ],
      "op": "AND",
      "path": "14"
    },
    "2464": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4652
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "2469": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4653,
        4665
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AC"
    },
    "2472": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4653,
        4663
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "2475": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4653,
        4665
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2476": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4653,
        4665
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2477": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4667,
        4672
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x2B5E3AF16B1880000"
    },
    "2487": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2489": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2490": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2491": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2496": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "AND",
      "path": "14"
    },
    "2497": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2499": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "SHL",
      "path": "14"
    },
    "2500": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2501": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2502": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2504": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "ADD",
      "path": "14"
    },
    "2505": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2506": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "op": "SUB"
    },
    "2515": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "AND",
      "path": "14"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2522": {
      "op": "SHL"
    },
    "2523": {
      "op": "SUB"
    },
    "2524": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "AND",
      "path": "14"
    },
    "2525": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2526": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2527": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2529": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "ADD",
      "path": "14"
    },
    "2530": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2531": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2532": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2533": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2535": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "ADD",
      "path": "14"
    },
    "2536": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2537": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2538": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2539": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2540": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2542": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2544": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2545": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2546": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2547": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "SUB",
      "path": "14"
    },
    "2548": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2549": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2551": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2552": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2553": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2554": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2555": {
      "op": "DUP1"
    },
    "2556": {
      "op": "ISZERO"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0xA05"
    },
    "2560": {
      "op": "JUMPI"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2563": {
      "op": "DUP1"
    },
    "2564": {
      "op": "REVERT"
    },
    "2565": {
      "op": "JUMPDEST"
    },
    "2566": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2567": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "GAS",
      "path": "14"
    },
    "2568": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "CALL",
      "path": "14"
    },
    "2569": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2570": {
      "op": "DUP1"
    },
    "2571": {
      "op": "ISZERO"
    },
    "2572": {
      "op": "PUSH2",
      "value": "0xA19"
    },
    "2575": {
      "op": "JUMPI"
    },
    "2576": {
      "op": "RETURNDATASIZE"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2579": {
      "op": "DUP1"
    },
    "2580": {
      "op": "RETURNDATACOPY"
    },
    "2581": {
      "op": "RETURNDATASIZE"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2584": {
      "op": "REVERT"
    },
    "2585": {
      "op": "JUMPDEST"
    },
    "2586": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2587": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2588": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2589": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4636,
        4673
      ],
      "op": "POP",
      "path": "14"
    },
    "2590": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "POP",
      "path": "14"
    },
    "2591": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4162,
        4695
      ],
      "op": "POP",
      "path": "14"
    },
    "2592": {
      "fn": "token_challenge.challengeStart",
      "jump": "o",
      "offset": [
        4162,
        4695
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2593": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7793,
        7922
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2594": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA31"
    },
    "2597": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2C"
    },
    "2600": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1591"
    },
    "2603": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2604": {
      "fn": "token_challenge.setExchange",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2605": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x333"
    },
    "2608": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2609": {
      "fn": "token_challenge.setExchange",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2610": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA6C"
    },
    "2613": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2614": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2616": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2623": {
      "op": "SHL"
    },
    "2624": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2625": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2626": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2628": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2629": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2630": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2631": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2633": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2634": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2635": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2636": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2637": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2638": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2639": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2641": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2642": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2643": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2645": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2646": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2647": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1966"
    },
    "2650": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2652": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2653": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2654": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2656": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2657": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2658": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2659": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2660": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2662": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2663": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2664": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2665": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2666": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2667": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2668": {
      "fn": "token_challenge.setExchange",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2669": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7880
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 27,
      "value": "0x4"
    },
    "2671": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2672": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "op": "SUB"
    },
    "2681": {
      "op": "NOT"
    },
    "2682": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "AND",
      "path": "14"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2692": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2693": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2694": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "AND",
      "path": "14"
    },
    "2695": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2696": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2697": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2698": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "OR",
      "path": "14"
    },
    "2699": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2700": {
      "fn": "token_challenge.setExchange",
      "offset": [
        7868,
        7914
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2701": {
      "fn": "token_challenge.setExchange",
      "jump": "o",
      "offset": [
        7793,
        7922
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2702": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2703": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA99"
    },
    "2706": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2C"
    },
    "2709": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1591"
    },
    "2712": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2713": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2714": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD4"
    },
    "2717": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2718": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2720": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2727": {
      "op": "SHL"
    },
    "2728": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2729": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2730": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2732": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2733": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2734": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2735": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2737": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2738": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2739": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2740": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2741": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2742": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2743": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2745": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2746": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2747": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2749": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2750": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2751": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1966"
    },
    "2754": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2756": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2757": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2758": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2760": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2761": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2762": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2763": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2764": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2766": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2767": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2768": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2769": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2770": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2771": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2772": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2773": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 28,
      "value": "0xADD"
    },
    "2776": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2777": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16B6"
    },
    "2780": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2781": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2782": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "2783": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2784": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2785": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAEB"
    },
    "2788": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2C"
    },
    "2791": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1591"
    },
    "2794": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2795": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2796": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB26"
    },
    "2799": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2800": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2802": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2811": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2812": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2814": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2815": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2816": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2817": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2819": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2820": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2821": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2822": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2823": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2824": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2825": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2827": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2828": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2829": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2831": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2832": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2833": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1966"
    },
    "2836": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2838": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2839": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2840": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2842": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2843": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2844": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2845": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2846": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2848": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2849": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2850": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2851": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2852": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2853": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2854": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2855": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3369,
        3372
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 29
    },
    "2856": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3342,
        3366
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2858": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3342,
        3372
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2859": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 30,
      "value": "0x4"
    },
    "2861": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2862": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2863": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2865": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2866": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2867": {
      "op": "PUSH4",
      "value": "0xA9671193"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2876": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2877": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2878": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2879": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "ADD",
      "path": "14"
    },
    "2880": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2881": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2882": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2883": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2893": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2894": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "AND",
      "path": "14"
    },
    "2895": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2896": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3424
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9671193"
    },
    "2901": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3424
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2902": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2904": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2905": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2906": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "ADD",
      "path": "14"
    },
    "2907": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2908": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2910": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2911": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2912": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2913": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2914": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2915": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "SUB",
      "path": "14"
    },
    "2916": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "ADD",
      "path": "14"
    },
    "2917": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2918": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2920": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3412
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2921": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2922": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2923": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2924": {
      "op": "DUP1"
    },
    "2925": {
      "op": "ISZERO"
    },
    "2926": {
      "op": "PUSH2",
      "value": "0xB76"
    },
    "2929": {
      "op": "JUMPI"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2932": {
      "op": "DUP1"
    },
    "2933": {
      "op": "REVERT"
    },
    "2934": {
      "op": "JUMPDEST"
    },
    "2935": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "POP",
      "path": "14"
    },
    "2936": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "GAS",
      "path": "14"
    },
    "2937": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "CALL",
      "path": "14"
    },
    "2938": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2939": {
      "op": "DUP1"
    },
    "2940": {
      "op": "ISZERO"
    },
    "2941": {
      "op": "PUSH2",
      "value": "0xB8A"
    },
    "2944": {
      "op": "JUMPI"
    },
    "2945": {
      "op": "RETURNDATASIZE"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2948": {
      "op": "DUP1"
    },
    "2949": {
      "op": "RETURNDATACOPY"
    },
    "2950": {
      "op": "RETURNDATASIZE"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2953": {
      "op": "REVERT"
    },
    "2954": {
      "op": "JUMPDEST"
    },
    "2955": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "POP",
      "path": "14"
    },
    "2956": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "POP",
      "path": "14"
    },
    "2957": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "POP",
      "path": "14"
    },
    "2958": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "POP",
      "path": "14"
    },
    "2959": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2961": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2962": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2965": {
      "op": "DUP2"
    },
    "2966": {
      "op": "LT"
    },
    "2967": {
      "op": "ISZERO"
    },
    "2968": {
      "op": "PUSH2",
      "value": "0xBA0"
    },
    "2971": {
      "op": "JUMPI"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2974": {
      "op": "DUP1"
    },
    "2975": {
      "op": "REVERT"
    },
    "2976": {
      "op": "JUMPDEST"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3441
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2979": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3383,
        3397
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "2981": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3383,
        3441
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2982": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3464
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 31,
      "value": "0x9"
    },
    "2984": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3472
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2985": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3472
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2988": {
      "op": "NOT"
    },
    "2989": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3472
      ],
      "op": "AND",
      "path": "14"
    },
    "2990": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3472
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2991": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3451,
        3472
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2992": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3491
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 32,
      "value": "0x5"
    },
    "2994": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3491
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3001": {
      "op": "SHL"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3491
      ],
      "op": "AND",
      "path": "14"
    },
    "3004": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3500
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "3009": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3501,
        3513
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBC8"
    },
    "3012": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3501,
        3511
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "3015": {
      "fn": "token_challenge.overnightStart",
      "jump": "i",
      "offset": [
        3501,
        3513
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3016": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3501,
        3513
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3017": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3515,
        3521
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0xAD78EBC5AC6200000"
    },
    "3027": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3029": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3030": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3031": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "3036": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "AND",
      "path": "14"
    },
    "3037": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3039": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "SHL",
      "path": "14"
    },
    "3040": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3041": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3042": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3044": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "ADD",
      "path": "14"
    },
    "3045": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3046": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "op": "SUB"
    },
    "3055": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "AND",
      "path": "14"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3062": {
      "op": "SHL"
    },
    "3063": {
      "op": "SUB"
    },
    "3064": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "AND",
      "path": "14"
    },
    "3065": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3066": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3067": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3069": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "ADD",
      "path": "14"
    },
    "3070": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3071": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3072": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3073": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3075": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "ADD",
      "path": "14"
    },
    "3076": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3077": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3078": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3079": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3080": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3082": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3084": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3085": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3086": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3087": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "SUB",
      "path": "14"
    },
    "3088": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3089": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3091": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3092": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3093": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3094": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3095": {
      "op": "DUP1"
    },
    "3096": {
      "op": "ISZERO"
    },
    "3097": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "3100": {
      "op": "JUMPI"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3103": {
      "op": "DUP1"
    },
    "3104": {
      "op": "REVERT"
    },
    "3105": {
      "op": "JUMPDEST"
    },
    "3106": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3107": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "GAS",
      "path": "14"
    },
    "3108": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "CALL",
      "path": "14"
    },
    "3109": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3110": {
      "op": "DUP1"
    },
    "3111": {
      "op": "ISZERO"
    },
    "3112": {
      "op": "PUSH2",
      "value": "0xC35"
    },
    "3115": {
      "op": "JUMPI"
    },
    "3116": {
      "op": "RETURNDATASIZE"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3119": {
      "op": "DUP1"
    },
    "3120": {
      "op": "RETURNDATACOPY"
    },
    "3121": {
      "op": "RETURNDATASIZE"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3124": {
      "op": "REVERT"
    },
    "3125": {
      "op": "JUMPDEST"
    },
    "3126": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3127": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3128": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3129": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3484,
        3522
      ],
      "op": "POP",
      "path": "14"
    },
    "3130": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3127,
        3531
      ],
      "op": "POP",
      "path": "14"
    },
    "3131": {
      "fn": "token_challenge.overnightStart",
      "jump": "o",
      "offset": [
        3127,
        3531
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3132": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4701,
        5517
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3133": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4769,
        4773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3135": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC49"
    },
    "3138": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D6"
    },
    "3141": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "3144": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3145": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3146": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC84"
    },
    "3149": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3150": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3152": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3153": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3161": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3162": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3164": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3165": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3166": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3167": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3169": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3170": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3171": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3172": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "3173": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3174": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3175": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "3177": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3178": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3179": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3181": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3182": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3183": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B7"
    },
    "3186": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "3188": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3189": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "3190": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3192": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3193": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3194": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "3195": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "3196": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3198": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3199": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3200": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3201": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "3202": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3203": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3204": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3205": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4827
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 33,
      "value": "0x5"
    },
    "3207": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4827
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3208": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4785,
        4800
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3210": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4785,
        4800
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "op": "SUB"
    },
    "3219": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4827
      ],
      "op": "AND",
      "path": "14"
    },
    "3220": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4836
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "3225": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4837,
        4849
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCA0"
    },
    "3228": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4837,
        4847
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "3231": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4837,
        4849
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3232": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4837,
        4849
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3233": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4851,
        4856
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x2B5E3AF16B1880000"
    },
    "3243": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3245": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3246": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3247": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "3252": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "AND",
      "path": "14"
    },
    "3253": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3255": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "SHL",
      "path": "14"
    },
    "3256": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3257": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3258": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3260": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "ADD",
      "path": "14"
    },
    "3261": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3262": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "AND",
      "path": "14"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3278": {
      "op": "SHL"
    },
    "3279": {
      "op": "SUB"
    },
    "3280": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "AND",
      "path": "14"
    },
    "3281": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3282": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3283": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3285": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "ADD",
      "path": "14"
    },
    "3286": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3287": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3288": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3289": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3291": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "ADD",
      "path": "14"
    },
    "3292": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3293": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "POP",
      "path": "14"
    },
    "3294": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "POP",
      "path": "14"
    },
    "3295": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "POP",
      "path": "14"
    },
    "3296": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3298": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3300": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3301": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3302": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3303": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "SUB",
      "path": "14"
    },
    "3304": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3305": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3307": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3308": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3309": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3310": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3311": {
      "op": "DUP1"
    },
    "3312": {
      "op": "ISZERO"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "POP",
      "path": "14"
    },
    "3323": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "GAS",
      "path": "14"
    },
    "3324": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "CALL",
      "path": "14"
    },
    "3325": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4820,
        4857
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3326": {
      "op": "DUP1"
    },
    "3327": {
      "op": "ISZERO"
    },
    "3328": {
      "op": "PUSH2",
      "value": "0xD0D"
    },
    "3331": {
      "op": "JUMPI"
    },
    "3332": {
      "op": "RETURNDATASIZE"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3335": {
      "op": "DUP1"
    },
    "3336": {
      "op": "RETURNDATACOPY"
    },
    "3337": {
      "op": "RETURNDATASIZE"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3340": {
      "op": "REVERT"
    },
    "3341": {
      "op": "JUMPDEST"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4900,
        4917
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 34,
      "value": "0xB"
    },
    "3346": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4900,
        4917
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "op": "SUB"
    },
    "3355": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4900,
        4917
      ],
      "op": "AND",
      "path": "14"
    },
    "3356": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4900,
        4917
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4896
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD27"
    },
    "3361": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4896
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4894
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "3366": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4884,
        4896
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3367": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4896
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "op": "SUB"
    },
    "3376": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4917
      ],
      "op": "AND",
      "path": "14"
    },
    "3377": {
      "branch": 93,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4917
      ],
      "op": "EQ",
      "path": "14"
    },
    "3378": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4954
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3379": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4954
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD56"
    },
    "3382": {
      "branch": 93,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4954
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4937,
        4954
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "3386": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4937,
        4954
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4937,
        4954
      ],
      "op": "AND",
      "path": "14"
    },
    "3396": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4921,
        4933
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD4B"
    },
    "3399": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4921,
        4931
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "3402": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4921,
        4933
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3403": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4921,
        4933
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "op": "SUB"
    },
    "3412": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4921,
        4954
      ],
      "op": "AND",
      "path": "14"
    },
    "3413": {
      "branch": 94,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4921,
        4954
      ],
      "op": "EQ",
      "path": "14"
    },
    "3414": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4884,
        4954
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3415": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD91"
    },
    "3418": {
      "branch": 94,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3419": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3421": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3428": {
      "op": "SHL"
    },
    "3429": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3430": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3431": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3433": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "ADD",
      "path": "14"
    },
    "3434": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3435": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3436": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3438": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "ADD",
      "path": "14"
    },
    "3439": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3440": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3441": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "SUB",
      "path": "14"
    },
    "3442": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3443": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3444": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x34"
    },
    "3446": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3447": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3448": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3450": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "ADD",
      "path": "14"
    },
    "3451": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3452": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1932"
    },
    "3455": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x34"
    },
    "3457": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3458": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "3459": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3461": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "ADD",
      "path": "14"
    },
    "3462": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3463": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "POP",
      "path": "14"
    },
    "3464": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "POP",
      "path": "14"
    },
    "3465": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3467": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3468": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3469": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3470": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "SUB",
      "path": "14"
    },
    "3471": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3472": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3473": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4876,
        5011
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3474": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3476": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3477": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3478": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3479": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5053
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "3481": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3483": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3484": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3486": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3487": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3488": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5059
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3489": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5062,
        5071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12C"
    },
    "3492": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5032,
        5071
      ],
      "op": "ADD",
      "path": "14"
    },
    "3493": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5025,
        5028
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "3494": {
      "branch": 95,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5025,
        5071
      ],
      "op": "LT",
      "path": "14"
    },
    "3495": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5022,
        5510
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x830"
    },
    "3498": {
      "branch": 95,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5022,
        5510
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3499": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 35,
      "value": "0x0"
    },
    "3501": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3502": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3503": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3504": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5151
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "3506": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3508": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3509": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3511": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3512": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3513": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3514": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3516": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5157
      ],
      "op": "AND",
      "path": "14"
    },
    "3517": {
      "branch": 96,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5132,
        5166
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3518": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF8"
    },
    "3521": {
      "branch": 96,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3522": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3524": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3533": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3534": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3536": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "ADD",
      "path": "14"
    },
    "3537": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3538": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3539": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3541": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "ADD",
      "path": "14"
    },
    "3542": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3543": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3544": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "SUB",
      "path": "14"
    },
    "3545": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3546": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3547": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "3549": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3550": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3551": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3553": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "ADD",
      "path": "14"
    },
    "3554": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3555": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1994"
    },
    "3558": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "3560": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3561": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "3562": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3564": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "ADD",
      "path": "14"
    },
    "3565": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3566": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "POP",
      "path": "14"
    },
    "3567": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "POP",
      "path": "14"
    },
    "3568": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3570": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3571": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3572": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3573": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "SUB",
      "path": "14"
    },
    "3574": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3575": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3576": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5124,
        5206
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3577": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5226,
        5254
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 36,
      "value": "0xE03"
    },
    "3580": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5236,
        5247
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3582": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5249,
        5253
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3583": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5226,
        5235
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1595"
    },
    "3586": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5226,
        5254
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3587": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5226,
        5254
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3588": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5277
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 37,
      "value": "0x5"
    },
    "3590": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5277
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "op": "SUB"
    },
    "3599": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5277
      ],
      "op": "AND",
      "path": "14"
    },
    "3600": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5282
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "3605": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5283,
        5295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE1C"
    },
    "3608": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5283,
        5293
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "3611": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5283,
        5295
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3612": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5283,
        5295
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3613": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5297,
        5304
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x3635C9ADC5DEA00000"
    },
    "3623": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3625": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3626": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3627": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "3632": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "AND",
      "path": "14"
    },
    "3633": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3635": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "SHL",
      "path": "14"
    },
    "3636": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3637": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3638": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3640": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "ADD",
      "path": "14"
    },
    "3641": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3642": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3649": {
      "op": "SHL"
    },
    "3650": {
      "op": "SUB"
    },
    "3651": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "AND",
      "path": "14"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "op": "SUB"
    },
    "3660": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "AND",
      "path": "14"
    },
    "3661": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3662": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3663": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3665": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "ADD",
      "path": "14"
    },
    "3666": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3667": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3668": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3669": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3671": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "ADD",
      "path": "14"
    },
    "3672": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3673": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3674": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3675": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3676": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3678": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3680": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3681": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3682": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3683": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "SUB",
      "path": "14"
    },
    "3684": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3685": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3687": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3688": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3689": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3690": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3691": {
      "op": "DUP1"
    },
    "3692": {
      "op": "ISZERO"
    },
    "3693": {
      "op": "PUSH2",
      "value": "0xE75"
    },
    "3696": {
      "op": "JUMPI"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3699": {
      "op": "DUP1"
    },
    "3700": {
      "op": "REVERT"
    },
    "3701": {
      "op": "JUMPDEST"
    },
    "3702": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3703": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "GAS",
      "path": "14"
    },
    "3704": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "CALL",
      "path": "14"
    },
    "3705": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "op": "ISZERO"
    },
    "3708": {
      "op": "PUSH2",
      "value": "0xE89"
    },
    "3711": {
      "op": "JUMPI"
    },
    "3712": {
      "op": "RETURNDATASIZE"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3715": {
      "op": "DUP1"
    },
    "3716": {
      "op": "RETURNDATACOPY"
    },
    "3717": {
      "op": "RETURNDATASIZE"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3720": {
      "op": "REVERT"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3723": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3724": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3725": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "POP",
      "path": "14"
    },
    "3726": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3728": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3729": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5270,
        5305
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3732": {
      "op": "DUP2"
    },
    "3733": {
      "op": "LT"
    },
    "3734": {
      "op": "ISZERO"
    },
    "3735": {
      "op": "PUSH2",
      "value": "0xE9F"
    },
    "3738": {
      "op": "JUMPI"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3741": {
      "op": "DUP1"
    },
    "3742": {
      "op": "REVERT"
    },
    "3743": {
      "op": "JUMPDEST"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5363,
        5370
      ],
      "op": "PUSH9",
      "path": "14",
      "statement": 38,
      "value": "0x3635C9ADC5DEA00000"
    },
    "3755": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5363,
        5370
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5357,
        5361
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3758": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5343,
        5355
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEB5"
    },
    "3761": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5343,
        5353
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "3764": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5343,
        5355
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3765": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5343,
        5355
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "op": "SUB"
    },
    "3774": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "AND",
      "path": "14"
    },
    "3775": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD"
    },
    "3808": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3810": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3811": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3813": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3814": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3815": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3816": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "SUB",
      "path": "14"
    },
    "3817": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3818": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5324,
        5371
      ],
      "op": "LOG4",
      "path": "14"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "op": "POP"
    },
    "3821": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 39,
      "value": "0x0"
    },
    "3823": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3824": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3825": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3826": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5405
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "3828": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3830": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3831": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3833": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3834": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5411
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3835": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3836": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3839": {
      "op": "NOT"
    },
    "3840": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "AND",
      "path": "14"
    },
    "3841": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5414,
        5418
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3843": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3844": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3845": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "OR",
      "path": "14"
    },
    "3846": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3847": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3848": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5386,
        5418
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3849": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5435,
        5446
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 40,
      "value": "0x32E"
    },
    "3852": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5435,
        5446
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3853": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3854": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 41,
      "value": "0xF1D"
    },
    "3857": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF18"
    },
    "3860": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1591"
    },
    "3863": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3864": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3865": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16FE"
    },
    "3868": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3869": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3870": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "o",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3871": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        7932,
        8049
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3872": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF2A"
    },
    "3875": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2C"
    },
    "3878": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1591"
    },
    "3881": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3882": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3883": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF65"
    },
    "3886": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3887": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3889": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3896": {
      "op": "SHL"
    },
    "3897": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3898": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3899": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3901": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "3902": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3903": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3904": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3906": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "3907": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3908": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3909": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "3910": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3911": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3912": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "3914": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3915": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3916": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3918": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "3919": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3920": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1966"
    },
    "3923": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "3925": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3926": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "3927": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3929": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "3930": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3931": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "3932": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "3933": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3935": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3936": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3937": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3938": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "3939": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3940": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3941": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3942": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8012
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 42,
      "value": "0x5"
    },
    "3944": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3945": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3952": {
      "op": "SHL"
    },
    "3953": {
      "op": "SUB"
    },
    "3954": {
      "op": "NOT"
    },
    "3955": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "AND",
      "path": "14"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3965": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3966": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3967": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "AND",
      "path": "14"
    },
    "3968": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3969": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3970": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3971": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "OR",
      "path": "14"
    },
    "3972": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3973": {
      "fn": "token_challenge.setPayCoin",
      "offset": [
        8005,
        8041
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3974": {
      "fn": "token_challenge.setPayCoin",
      "jump": "o",
      "offset": [
        7932,
        8049
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3975": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5553,
        6216
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3976": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF92"
    },
    "3979": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D6"
    },
    "3982": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "3985": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3986": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3987": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFCD"
    },
    "3990": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3991": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3993": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4000": {
      "op": "SHL"
    },
    "4001": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4002": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4003": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4005": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4006": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4007": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4008": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4010": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4011": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4012": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4013": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "4014": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4015": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4016": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "4018": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4019": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4020": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4022": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4023": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4024": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B7"
    },
    "4027": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "4029": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4030": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "4031": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4033": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4034": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4035": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "4036": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "4037": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4039": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4040": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4041": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4042": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "4043": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4044": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4045": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4046": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5624,
        5650
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 43,
      "value": "0xFD8"
    },
    "4049": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5634,
        5643
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "4051": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5645,
        5649
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4052": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5624,
        5633
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1629"
    },
    "4055": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5624,
        5650
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4056": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5624,
        5650
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4057": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0x0"
    },
    "4059": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4060": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4061": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4062": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5681
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "4064": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4066": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4067": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4068": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4069": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4071": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4072": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4073": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5687
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4074": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5690,
        5693
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "4075": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5693
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4076": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5662,
        5693
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4077": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5720
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 45,
      "value": "0x13"
    },
    "4079": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5726
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4080": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5726
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4081": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5726
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4082": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5726
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4083": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5726
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4084": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5734
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4085": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5734
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4088": {
      "op": "NOT"
    },
    "4089": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5734
      ],
      "op": "AND",
      "path": "14"
    },
    "4090": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5734
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4091": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5703,
        5734
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4092": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5754,
        5768
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 46,
      "value": "0x6"
    },
    "4094": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5754,
        5775
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4095": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5779,
        5780
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "4097": {
      "branch": 97,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5754,
        5780
      ],
      "op": "EQ",
      "path": "14"
    },
    "4098": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x103C"
    },
    "4101": {
      "branch": 97,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4102": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4104": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4111": {
      "op": "SHL"
    },
    "4112": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4113": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4114": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4116": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "ADD",
      "path": "14"
    },
    "4117": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4118": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4119": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4121": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "ADD",
      "path": "14"
    },
    "4122": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4123": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4124": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "SUB",
      "path": "14"
    },
    "4125": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4126": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4127": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "4129": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4130": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4131": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4133": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "ADD",
      "path": "14"
    },
    "4134": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4135": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18BF"
    },
    "4138": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "4140": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4141": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "4142": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4144": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "ADD",
      "path": "14"
    },
    "4145": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4146": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "POP",
      "path": "14"
    },
    "4147": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "POP",
      "path": "14"
    },
    "4148": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4150": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4151": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4152": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4153": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "SUB",
      "path": "14"
    },
    "4154": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4155": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4156": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5746,
        5833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4157": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5848,
        5857
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4159": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4160": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5867,
        5881
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "4162": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5867,
        5888
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4163": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5863,
        5888
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4164": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5863,
        5888
      ],
      "op": "LT",
      "path": "14"
    },
    "4165": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4166": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1102"
    },
    "4169": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4170": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5941
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "4172": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5942,
        5943
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4173": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4174": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4175": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4176": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "LT",
      "path": "14"
    },
    "4177": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1056"
    },
    "4180": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4181": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "INVALID",
      "path": "14"
    },
    "4182": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4183": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4185": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4186": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4187": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4188": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4190": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4191": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4192": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4193": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "ADD",
      "path": "14"
    },
    "4194": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4201": {
      "op": "SHL"
    },
    "4202": {
      "op": "SUB"
    },
    "4203": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5927,
        5944
      ],
      "op": "AND",
      "path": "14"
    },
    "4204": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5911,
        5923
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1073"
    },
    "4207": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5911,
        5921
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "4210": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5911,
        5923
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4211": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5911,
        5923
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4218": {
      "op": "SHL"
    },
    "4219": {
      "op": "SUB"
    },
    "4220": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5911,
        5944
      ],
      "op": "AND",
      "path": "14"
    },
    "4221": {
      "branch": 98,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5911,
        5944
      ],
      "op": "EQ",
      "path": "14"
    },
    "4222": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4223": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10AF"
    },
    "4226": {
      "branch": 98,
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4227": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5981,
        5993
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 47,
      "value": "0x108A"
    },
    "4230": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5981,
        5991
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "4233": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        5981,
        5993
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4234": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5981,
        5993
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4235": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5978
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "4237": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4238": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "op": "NOT"
    },
    "4248": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "AND",
      "path": "14"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4255": {
      "op": "SHL"
    },
    "4256": {
      "op": "SUB"
    },
    "4257": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4258": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4259": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4260": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "AND",
      "path": "14"
    },
    "4261": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4262": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4263": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4264": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "OR",
      "path": "14"
    },
    "4265": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4266": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5963,
        5993
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4267": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10FA"
    },
    "4270": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4271": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4272": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6059
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 48,
      "value": "0x11"
    },
    "4274": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6079
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "4276": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6080,
        6081
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4277": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4278": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4279": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4280": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "LT",
      "path": "14"
    },
    "4281": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10BE"
    },
    "4284": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4285": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "INVALID",
      "path": "14"
    },
    "4286": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4287": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4289": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4290": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4291": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4292": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4294": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4295": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4296": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4297": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4298": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4299": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "ADD",
      "path": "14"
    },
    "4300": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4301": {
      "op": "DUP4"
    },
    "4302": {
      "op": "SLOAD"
    },
    "4303": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4305": {
      "op": "DUP2"
    },
    "4306": {
      "op": "ADD"
    },
    "4307": {
      "op": "DUP6"
    },
    "4308": {
      "op": "SSTORE"
    },
    "4309": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4310": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4311": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4312": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4313": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4314": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4315": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4316": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "ADD",
      "path": "14"
    },
    "4317": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4318": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4325": {
      "op": "SHL"
    },
    "4326": {
      "op": "SUB"
    },
    "4327": {
      "op": "NOT"
    },
    "4328": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "AND",
      "path": "14"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4335": {
      "op": "SHL"
    },
    "4336": {
      "op": "SUB"
    },
    "4337": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4338": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4339": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6065,
        6082
      ],
      "op": "AND",
      "path": "14"
    },
    "4340": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4341": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4342": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4343": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "OR",
      "path": "14"
    },
    "4344": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4345": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6044,
        6083
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4346": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5908,
        6099
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4347": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5890,
        5893
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 49,
      "value": "0x1"
    },
    "4349": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5890,
        5893
      ],
      "op": "ADD",
      "path": "14"
    },
    "4350": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x103F"
    },
    "4353": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4354": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4355": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5844,
        6109
      ],
      "op": "POP",
      "path": "14"
    },
    "4356": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6138,
        6150
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 50,
      "value": "0x110B"
    },
    "4359": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6138,
        6148
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "4362": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6138,
        6150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4363": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6138,
        6150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "op": "SUB"
    },
    "4372": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "AND",
      "path": "14"
    },
    "4373": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373"
    },
    "4406": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6152,
        6156
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4407": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4409": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4410": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4411": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4412": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4413": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4414": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4416": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "ADD",
      "path": "14"
    },
    "4417": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4418": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "POP",
      "path": "14"
    },
    "4419": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "POP",
      "path": "14"
    },
    "4420": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4422": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4423": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4424": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4425": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "SUB",
      "path": "14"
    },
    "4426": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4427": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6124,
        6157
      ],
      "op": "LOG2",
      "path": "14"
    },
    "4428": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6176
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 51,
      "value": "0x5"
    },
    "4430": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6176
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4437": {
      "op": "SHL"
    },
    "4438": {
      "op": "SUB"
    },
    "4439": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6176
      ],
      "op": "AND",
      "path": "14"
    },
    "4440": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6185
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "4445": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6186,
        6198
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1164"
    },
    "4448": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6186,
        6196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "4451": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6186,
        6198
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4452": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6186,
        6198
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4453": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6200,
        6206
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x56BC75E2D63100000"
    },
    "4463": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4465": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4466": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4467": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "4472": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "AND",
      "path": "14"
    },
    "4473": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4475": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "SHL",
      "path": "14"
    },
    "4476": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4477": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4478": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4480": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "ADD",
      "path": "14"
    },
    "4481": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4482": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4489": {
      "op": "SHL"
    },
    "4490": {
      "op": "SUB"
    },
    "4491": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "AND",
      "path": "14"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4498": {
      "op": "SHL"
    },
    "4499": {
      "op": "SUB"
    },
    "4500": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "AND",
      "path": "14"
    },
    "4501": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4502": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4503": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4505": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "ADD",
      "path": "14"
    },
    "4506": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4507": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4508": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4509": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4511": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "ADD",
      "path": "14"
    },
    "4512": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4513": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "POP",
      "path": "14"
    },
    "4514": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "POP",
      "path": "14"
    },
    "4515": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "POP",
      "path": "14"
    },
    "4516": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4518": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4520": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4521": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4522": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4523": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "SUB",
      "path": "14"
    },
    "4524": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4525": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4527": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4528": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4529": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4530": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6169,
        6207
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4531": {
      "op": "DUP1"
    },
    "4532": {
      "op": "ISZERO"
    },
    "4533": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "4536": {
      "op": "JUMPI"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "DUP1"
    },
    "4540": {
      "op": "REVERT"
    },
    "4541": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4542": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11C8"
    },
    "4545": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D6"
    },
    "4548": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "4551": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4552": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4553": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1203"
    },
    "4556": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4557": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4559": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4568": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4569": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4571": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4572": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4573": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4574": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4576": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4577": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4578": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4579": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "4580": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4581": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4582": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "4584": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4585": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4586": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4588": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4589": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4590": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B7"
    },
    "4593": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "4595": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4596": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "4597": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4599": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4600": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4601": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "4602": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "4603": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4605": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4606": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4607": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4608": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "4609": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4610": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4611": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4612": {
      "fn": "TeamRole.addTeam",
      "offset": [
        747,
        764
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 52,
      "value": "0xADD"
    },
    "4615": {
      "fn": "TeamRole.addTeam",
      "offset": [
        756,
        763
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4616": {
      "fn": "TeamRole.addTeam",
      "offset": [
        747,
        755
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1746"
    },
    "4619": {
      "fn": "TeamRole.addTeam",
      "jump": "i",
      "offset": [
        747,
        764
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4620": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4621": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2903,
        2907
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4623": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2903,
        2907
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4624": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4625": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2941,
        2955
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "4627": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2941,
        2962
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4628": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2937,
        2962
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4629": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2937,
        2962
      ],
      "op": "LT",
      "path": "14"
    },
    "4630": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4631": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x125E"
    },
    "4634": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4635": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3006,
        3017
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4642": {
      "op": "SHL"
    },
    "4643": {
      "op": "SUB"
    },
    "4644": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3017
      ],
      "op": "AND",
      "path": "14"
    },
    "4645": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        2999
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "4647": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3000,
        3001
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4648": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4649": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4650": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4651": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "LT",
      "path": "14"
    },
    "4652": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1231"
    },
    "4655": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4656": {
      "dev": "Index out of range",
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "INVALID",
      "path": "14"
    },
    "4657": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4658": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4660": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4661": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4662": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4663": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4665": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4666": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4667": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4668": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "ADD",
      "path": "14"
    },
    "4669": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4676": {
      "op": "SHL"
    },
    "4677": {
      "op": "SUB"
    },
    "4678": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3002
      ],
      "op": "AND",
      "path": "14"
    },
    "4679": {
      "branch": 99,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2985,
        3017
      ],
      "op": "EQ",
      "path": "14"
    },
    "4680": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2982,
        3063
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4681": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2982,
        3063
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1256"
    },
    "4684": {
      "branch": 99,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2982,
        3063
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4685": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3043,
        3047
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 53,
      "value": "0x1"
    },
    "4687": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3036,
        3047
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4688": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3036,
        3047
      ],
      "op": "POP",
      "path": "14"
    },
    "4689": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3036,
        3047
      ],
      "op": "POP",
      "path": "14"
    },
    "4690": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3036,
        3047
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32E"
    },
    "4693": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3036,
        3047
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4694": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2982,
        3063
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4695": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2964,
        2967
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 54,
      "value": "0x1"
    },
    "4697": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2964,
        2967
      ],
      "op": "ADD",
      "path": "14"
    },
    "4698": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1210"
    },
    "4701": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4702": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2918,
        3073
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3085,
        3090
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 55,
      "value": "0x0"
    },
    "4706": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        3085,
        3090
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4707": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2838,
        3098
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "fn": "token_challenge.isRegistered",
      "jump": "o",
      "offset": [
        2838,
        3098
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4711": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4712": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1272"
    },
    "4715": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D6"
    },
    "4718": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "4721": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4722": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4723": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12AD"
    },
    "4726": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4727": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4729": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4736": {
      "op": "SHL"
    },
    "4737": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4738": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4739": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4741": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4742": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4743": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4744": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4746": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4747": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4748": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4749": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "4750": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4751": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4752": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "4754": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4755": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4756": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4758": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4759": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4760": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19B7"
    },
    "4763": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "4765": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4766": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "4767": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4769": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "4770": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4771": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "4772": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "4773": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4775": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4776": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4777": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4778": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "4779": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4780": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4781": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4782": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3628,
        3642
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 56,
      "value": "0x7"
    },
    "4784": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3628,
        3642
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4785": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3616,
        3624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4786": {
      "branch": 100,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3616,
        3642
      ],
      "op": "EQ",
      "path": "14"
    },
    "4787": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12F5"
    },
    "4790": {
      "branch": 100,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4791": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4793": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4794": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4795": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4801": {
      "op": "SHL"
    },
    "4802": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4803": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4804": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4806": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4808": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4809": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "ADD",
      "path": "14"
    },
    "4810": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4811": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "4813": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4815": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4816": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "ADD",
      "path": "14"
    },
    "4817": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4818": {
      "op": "PUSH15",
      "value": "0x2BB937B7339034B210383934B1B297"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4836": {
      "op": "SHL"
    },
    "4837": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4839": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4840": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "ADD",
      "path": "14"
    },
    "4841": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4842": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4843": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4844": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4845": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4846": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4847": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "SUB",
      "path": "14"
    },
    "4848": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4850": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "ADD",
      "path": "14"
    },
    "4851": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4852": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4853": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3608,
        3662
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4854": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3683,
        3707
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4856": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3683,
        3707
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4857": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3680
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "4858": {
      "branch": 101,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3707
      ],
      "op": "GT",
      "path": "14"
    },
    "4859": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3751
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4860": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3751
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4861": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3751
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x130B"
    },
    "4864": {
      "branch": 101,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3751
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4865": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3751
      ],
      "op": "POP",
      "path": "14"
    },
    "4866": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3717,
        3741
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4868": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3717,
        3741
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4869": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3744,
        3751
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "4872": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3717,
        3751
      ],
      "op": "ADD",
      "path": "14"
    },
    "4873": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3711,
        3714
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "4874": {
      "branch": 102,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3711,
        3751
      ],
      "op": "LT",
      "path": "14"
    },
    "4875": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3677,
        3751
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4876": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3673,
        4113
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4877": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3673,
        4113
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1449"
    },
    "4880": {
      "branch": 102,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3673,
        4113
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4881": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3774,
        3787
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 57,
      "value": "0x9"
    },
    "4883": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3774,
        3787
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4884": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3774,
        3787
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "4886": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3774,
        3787
      ],
      "op": "AND",
      "path": "14"
    },
    "4887": {
      "branch": 103,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3774,
        3796
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4888": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1352"
    },
    "4891": {
      "branch": 103,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4892": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4894": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4895": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4901": {
      "op": "SHL"
    },
    "4902": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4903": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4904": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4906": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "ADD",
      "path": "14"
    },
    "4907": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4908": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4909": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4911": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "ADD",
      "path": "14"
    },
    "4912": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4913": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4914": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "SUB",
      "path": "14"
    },
    "4915": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4916": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4917": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "4919": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4920": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4921": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4923": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "ADD",
      "path": "14"
    },
    "4924": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4925": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1994"
    },
    "4928": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "4930": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4931": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "4932": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4934": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "ADD",
      "path": "14"
    },
    "4935": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4936": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "POP",
      "path": "14"
    },
    "4937": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "POP",
      "path": "14"
    },
    "4938": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4940": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4941": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4942": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4943": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "SUB",
      "path": "14"
    },
    "4944": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4945": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4946": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3766,
        3836
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4947": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3859
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 58,
      "value": "0x5"
    },
    "4949": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3859
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4956": {
      "op": "SHL"
    },
    "4957": {
      "op": "SUB"
    },
    "4958": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3859
      ],
      "op": "AND",
      "path": "14"
    },
    "4959": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "4964": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3865,
        3877
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x136B"
    },
    "4967": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3865,
        3875
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "4970": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3865,
        3877
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4971": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3865,
        3877
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4972": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3879,
        3886
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x410D586A20A4C00000"
    },
    "4982": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4984": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4985": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4986": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "4991": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "AND",
      "path": "14"
    },
    "4992": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4994": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "SHL",
      "path": "14"
    },
    "4995": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4996": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4997": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4999": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "ADD",
      "path": "14"
    },
    "5000": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5001": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "op": "SUB"
    },
    "5010": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "AND",
      "path": "14"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5017": {
      "op": "SHL"
    },
    "5018": {
      "op": "SUB"
    },
    "5019": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "AND",
      "path": "14"
    },
    "5020": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5021": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5022": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5024": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "ADD",
      "path": "14"
    },
    "5025": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5026": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5027": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5028": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5030": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "ADD",
      "path": "14"
    },
    "5031": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5032": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5033": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5034": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5035": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5037": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5039": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5040": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5041": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5042": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "SUB",
      "path": "14"
    },
    "5043": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5044": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5046": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5047": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5048": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "5049": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5050": {
      "op": "DUP1"
    },
    "5051": {
      "op": "ISZERO"
    },
    "5052": {
      "op": "PUSH2",
      "value": "0x13C4"
    },
    "5055": {
      "op": "JUMPI"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5058": {
      "op": "DUP1"
    },
    "5059": {
      "op": "REVERT"
    },
    "5060": {
      "op": "JUMPDEST"
    },
    "5061": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5062": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "GAS",
      "path": "14"
    },
    "5063": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "CALL",
      "path": "14"
    },
    "5064": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5065": {
      "op": "DUP1"
    },
    "5066": {
      "op": "ISZERO"
    },
    "5067": {
      "op": "PUSH2",
      "value": "0x13D8"
    },
    "5070": {
      "op": "JUMPI"
    },
    "5071": {
      "op": "RETURNDATASIZE"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5074": {
      "op": "DUP1"
    },
    "5075": {
      "op": "RETURNDATACOPY"
    },
    "5076": {
      "op": "RETURNDATASIZE"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5079": {
      "op": "REVERT"
    },
    "5080": {
      "op": "JUMPDEST"
    },
    "5081": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5082": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5083": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5084": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "POP",
      "path": "14"
    },
    "5085": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5087": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5088": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3852,
        3887
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5091": {
      "op": "DUP2"
    },
    "5092": {
      "op": "LT"
    },
    "5093": {
      "op": "ISZERO"
    },
    "5094": {
      "op": "PUSH2",
      "value": "0x13EE"
    },
    "5097": {
      "op": "JUMPI"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5100": {
      "op": "DUP1"
    },
    "5101": {
      "op": "REVERT"
    },
    "5102": {
      "op": "JUMPDEST"
    },
    "5103": {
      "op": "POP"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3915
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 59,
      "value": "0x9"
    },
    "5107": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3922
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5108": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3922
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5111": {
      "op": "NOT"
    },
    "5112": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3922
      ],
      "op": "AND",
      "path": "14"
    },
    "5113": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3918,
        3922
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5115": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3922
      ],
      "op": "OR",
      "path": "14"
    },
    "5116": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3922
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5117": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3902,
        3922
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5118": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3965,
        3972
      ],
      "op": "PUSH9",
      "path": "14",
      "statement": 60,
      "value": "0x410D586A20A4C00000"
    },
    "5128": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3951,
        3963
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x140F"
    },
    "5131": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3951,
        3961
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "5134": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3951,
        3963
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5135": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3951,
        3963
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5142": {
      "op": "SHL"
    },
    "5143": {
      "op": "SUB"
    },
    "5144": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "AND",
      "path": "14"
    },
    "5145": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "5178": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5180": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5181": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5183": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5184": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5185": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5186": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "SUB",
      "path": "14"
    },
    "5187": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5188": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3941,
        3973
      ],
      "op": "LOG3",
      "path": "14"
    },
    "5189": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3673,
        4113
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xADD"
    },
    "5192": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3673,
        4113
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5193": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3673,
        4113
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5194": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 61,
      "value": "0x5"
    },
    "5196": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5197": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4027,
        4039
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5199": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4027,
        4039
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5200": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5202": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5203": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5204": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5211": {
      "op": "SHL"
    },
    "5212": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5213": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5220": {
      "op": "SHL"
    },
    "5221": {
      "op": "SUB"
    },
    "5222": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4027,
        4039
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5223": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4027,
        4039
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5224": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4027,
        4039
      ],
      "op": "AND",
      "path": "14"
    },
    "5225": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5227": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5228": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "ADD",
      "path": "14"
    },
    "5229": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5230": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4041,
        4048
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x6C6B935B8BBD400000"
    },
    "5240": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5242": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5243": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "ADD",
      "path": "14"
    },
    "5244": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5245": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5246": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5247": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5248": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5249": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5250": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "AND",
      "path": "14"
    },
    "5251": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5252": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4026
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "5257": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4026
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5258": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5260": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5261": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5262": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "ADD",
      "path": "14"
    },
    "5263": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5264": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5266": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5267": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5268": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5269": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5270": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5271": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "SUB",
      "path": "14"
    },
    "5272": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "ADD",
      "path": "14"
    },
    "5273": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5274": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5276": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4021
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5277": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5278": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "5279": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5280": {
      "op": "DUP1"
    },
    "5281": {
      "op": "ISZERO"
    },
    "5282": {
      "op": "PUSH2",
      "value": "0x14AA"
    },
    "5285": {
      "op": "JUMPI"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5288": {
      "op": "DUP1"
    },
    "5289": {
      "op": "REVERT"
    },
    "5290": {
      "op": "JUMPDEST"
    },
    "5291": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "POP",
      "path": "14"
    },
    "5292": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "GAS",
      "path": "14"
    },
    "5293": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "CALL",
      "path": "14"
    },
    "5294": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5295": {
      "op": "DUP1"
    },
    "5296": {
      "op": "ISZERO"
    },
    "5297": {
      "op": "PUSH2",
      "value": "0x14BE"
    },
    "5300": {
      "op": "JUMPI"
    },
    "5301": {
      "op": "RETURNDATASIZE"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5304": {
      "op": "DUP1"
    },
    "5305": {
      "op": "RETURNDATACOPY"
    },
    "5306": {
      "op": "RETURNDATASIZE"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5309": {
      "op": "REVERT"
    },
    "5310": {
      "op": "JUMPDEST"
    },
    "5311": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "POP",
      "path": "14"
    },
    "5312": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "POP",
      "path": "14"
    },
    "5313": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "POP",
      "path": "14"
    },
    "5314": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "POP",
      "path": "14"
    },
    "5315": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5317": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5318": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4014,
        4049
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5321": {
      "op": "DUP2"
    },
    "5322": {
      "op": "LT"
    },
    "5323": {
      "op": "ISZERO"
    },
    "5324": {
      "op": "PUSH2",
      "value": "0x14D4"
    },
    "5327": {
      "op": "JUMPI"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5330": {
      "op": "DUP1"
    },
    "5331": {
      "op": "REVERT"
    },
    "5332": {
      "op": "JUMPDEST"
    },
    "5333": {
      "op": "POP"
    },
    "5334": {
      "op": "POP"
    },
    "5335": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4079,
        4091
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 62,
      "value": "0x3"
    },
    "5337": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4079,
        4091
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5338": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4069,
        4101
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5340": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4069,
        4101
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5341": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4093,
        4100
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x6C6B935B8BBD400000"
    },
    "5351": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4093,
        4100
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5358": {
      "op": "SHL"
    },
    "5359": {
      "op": "SUB"
    },
    "5360": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4079,
        4091
      ],
      "op": "AND",
      "path": "14"
    },
    "5361": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4079,
        4091
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5362": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4069,
        4101
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "5395": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4069,
        4101
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5396": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4079,
        4091
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5398": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4079,
        4091
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5399": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4069,
        4101
      ],
      "op": "LOG3",
      "path": "14"
    },
    "5400": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3537,
        4128
      ],
      "op": "POP",
      "path": "14"
    },
    "5401": {
      "fn": "token_challenge.overnightCheck",
      "jump": "o",
      "offset": [
        3537,
        4128
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5402": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5403": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        818,
        843
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 63,
      "value": "0xF1D"
    },
    "5406": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        842
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1525"
    },
    "5409": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        840
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1591"
    },
    "5412": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        830,
        842
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5413": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        842
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5414": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        818,
        829
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x178E"
    },
    "5417": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        818,
        843
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5418": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5419": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "op": "SUB"
    },
    "5429": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 64
    },
    "5430": {
      "branch": 107,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "5431": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1571"
    },
    "5434": {
      "branch": 107,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5435": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5437": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5444": {
      "op": "SHL"
    },
    "5445": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5446": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5447": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5449": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5450": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5451": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5452": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5454": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5455": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5456": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5457": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "5458": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5459": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5460": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "5462": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5463": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5464": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5466": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5467": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5468": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1910"
    },
    "5471": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "5473": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5474": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5475": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5477": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "5478": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5479": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "5480": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "5481": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5483": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5484": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5485": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5486": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "5487": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5488": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5489": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5497": {
      "op": "SHL"
    },
    "5498": {
      "op": "SUB"
    },
    "5499": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 65
    },
    "5500": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5502": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5503": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5504": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5505": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5507": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5508": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5509": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5510": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5511": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5513": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5514": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5515": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5516": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5518": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "5519": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5520": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5521": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5522": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 66
    },
    "5523": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5524": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5525": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7388,
        7754
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5526": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7467,
        7482
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5528": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7467,
        7482
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5529": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5530": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7524,
        7537
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5531": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7524,
        7537
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5532": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7520,
        7537
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5533": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7520,
        7537
      ],
      "op": "LT",
      "path": "14"
    },
    "5534": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5535": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15D1"
    },
    "5538": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5539": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7578,
        7583
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5540": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7571
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5541": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7572,
        7573
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5542": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5543": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5544": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5545": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "LT",
      "path": "14"
    },
    "5546": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15AF"
    },
    "5549": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5550": {
      "dev": "Index out of range",
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "INVALID",
      "path": "14"
    },
    "5551": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5552": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5553": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5555": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5556": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5558": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5560": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5561": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "ADD",
      "path": "14"
    },
    "5562": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7574
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5563": {
      "branch": 104,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7565,
        7583
      ],
      "op": "EQ",
      "path": "14"
    },
    "5564": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7672
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5565": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7672
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15C9"
    },
    "5568": {
      "branch": 104,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7672
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5569": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7620,
        7624
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 67,
      "value": "0x1"
    },
    "5571": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7607,
        7624
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5572": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7607,
        7624
      ],
      "op": "POP",
      "path": "14"
    },
    "5573": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7647,
        7652
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 68,
      "value": "0x15D1"
    },
    "5576": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7647,
        7652
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5577": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7561,
        7672
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5578": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7539,
        7542
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 69,
      "value": "0x1"
    },
    "5580": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7539,
        7542
      ],
      "op": "ADD",
      "path": "14"
    },
    "5581": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1599"
    },
    "5584": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5585": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5586": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7501,
        7686
      ],
      "op": "POP",
      "path": "14"
    },
    "5587": {
      "branch": 105,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7707,
        7717
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 70
    },
    "5588": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1624"
    },
    "5591": {
      "branch": 105,
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5592": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5594": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5595": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5602": {
      "op": "SHL"
    },
    "5603": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5604": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5605": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5607": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5609": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5610": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "ADD",
      "path": "14"
    },
    "5611": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5612": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x18"
    },
    "5614": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5616": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5617": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "ADD",
      "path": "14"
    },
    "5618": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5619": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x436F756C646E27742066696E642079756F7220666C6167210000000000000000"
    },
    "5652": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5654": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5655": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "ADD",
      "path": "14"
    },
    "5656": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5657": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5658": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5659": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5660": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5661": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5662": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "SUB",
      "path": "14"
    },
    "5663": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5665": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "ADD",
      "path": "14"
    },
    "5666": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5667": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5668": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7699,
        7746
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5669": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7388,
        7754
      ],
      "op": "POP",
      "path": "14"
    },
    "5670": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7388,
        7754
      ],
      "op": "POP",
      "path": "14"
    },
    "5671": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        7388,
        7754
      ],
      "op": "POP",
      "path": "14"
    },
    "5672": {
      "fn": "token_challenge.matchFlag",
      "jump": "o",
      "offset": [
        7388,
        7754
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5673": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7149,
        7382
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5674": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7233,
        7242
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5676": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5677": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7252,
        7265
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5678": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7252,
        7265
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5679": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7248,
        7265
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5680": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7248,
        7265
      ],
      "op": "LT",
      "path": "14"
    },
    "5681": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5682": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x169D"
    },
    "5685": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5686": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7306,
        7311
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 71
    },
    "5687": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7299
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5688": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7300,
        7301
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5689": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5690": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5691": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5692": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "LT",
      "path": "14"
    },
    "5693": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1642"
    },
    "5696": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5697": {
      "dev": "Index out of range",
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "INVALID",
      "path": "14"
    },
    "5698": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5699": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5700": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5702": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5703": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5705": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5707": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5708": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "ADD",
      "path": "14"
    },
    "5709": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7302
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5710": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7311
      ],
      "op": "EQ",
      "path": "14"
    },
    "5711": {
      "branch": 106,
      "fn": "token_challenge.checkFlag",
      "offset": [
        7293,
        7311
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5712": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1695"
    },
    "5715": {
      "branch": 106,
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5716": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5718": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5719": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5726": {
      "op": "SHL"
    },
    "5727": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5728": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5729": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5731": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5733": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5734": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "ADD",
      "path": "14"
    },
    "5735": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5736": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "5738": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5740": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5741": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "ADD",
      "path": "14"
    },
    "5742": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5743": {
      "op": "PUSH18",
      "value": "0x466C616720616C7265616479207573656421"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5764": {
      "op": "SHL"
    },
    "5765": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5767": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5768": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "ADD",
      "path": "14"
    },
    "5769": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5770": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5771": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5772": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5773": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5774": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5775": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "SUB",
      "path": "14"
    },
    "5776": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5778": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "ADD",
      "path": "14"
    },
    "5779": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5780": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5781": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7285,
        7335
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5782": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7267,
        7270
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 72,
      "value": "0x1"
    },
    "5784": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7267,
        7270
      ],
      "op": "ADD",
      "path": "14"
    },
    "5785": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x162C"
    },
    "5788": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5789": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7229,
        7346
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5790": {
      "op": "POP"
    },
    "5791": {
      "op": "DUP2"
    },
    "5792": {
      "op": "SLOAD"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "DUP2"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "DUP4"
    },
    "5798": {
      "op": "SSTORE"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5801": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "SWAP3",
      "path": "14",
      "statement": 73
    },
    "5802": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5803": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5804": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5806": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5807": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5808": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5809": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5810": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5811": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "ADD",
      "path": "14"
    },
    "5812": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        7356,
        7374
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5813": {
      "fn": "token_challenge.checkFlag",
      "jump": "o",
      "offset": [
        7149,
        7382
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5814": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5815": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 74,
      "value": "0x16C7"
    },
    "5818": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5820": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5821": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5826": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17D6"
    },
    "5829": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "5830": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5831": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5832": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 75,
      "value": "0x40"
    },
    "5834": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "op": "SUB"
    },
    "5843": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5844": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "5845": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5846": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "5879": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5880": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5882": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5883": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "5884": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "5885": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5886": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5887": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 76,
      "value": "0x170F"
    },
    "5890": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5892": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5893": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5898": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1857"
    },
    "5901": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "5902": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5903": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5904": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 77,
      "value": "0x40"
    },
    "5906": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5913": {
      "op": "SHL"
    },
    "5914": {
      "op": "SUB"
    },
    "5915": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5916": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "5917": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5918": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "5951": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5952": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5954": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5955": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "5956": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "5957": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5958": {
      "fn": "TeamRole._addTeam",
      "offset": [
        856,
        969
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5959": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 78,
      "value": "0x1757"
    },
    "5962": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        916
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5964": {
      "fn": "TeamRole._addTeam",
      "offset": [
        921,
        928
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5965": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "5970": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        920
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x17D6"
    },
    "5973": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "AND",
      "path": "13"
    },
    "5974": {
      "fn": "TeamRole._addTeam",
      "jump": "i",
      "offset": [
        910,
        929
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5975": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5976": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 79,
      "value": "0x40"
    },
    "5978": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5985": {
      "op": "SHL"
    },
    "5986": {
      "op": "SUB"
    },
    "5987": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5988": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "AND",
      "path": "13"
    },
    "5989": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5990": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x3F5F1DB80208F0D453083A86E16909CECC1E95E2618D5D927C93ACE22B8200FC"
    },
    "6023": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6024": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6026": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6027": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "LOG2",
      "path": "13"
    },
    "6028": {
      "fn": "TeamRole._addTeam",
      "offset": [
        856,
        969
      ],
      "op": "POP",
      "path": "13"
    },
    "6029": {
      "fn": "TeamRole._addTeam",
      "jump": "o",
      "offset": [
        856,
        969
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6030": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        975,
        1096
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6031": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 80,
      "value": "0x179F"
    },
    "6034": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1038
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6036": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1046,
        1053
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6037": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "6042": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1857"
    },
    "6045": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "AND",
      "path": "13"
    },
    "6046": {
      "fn": "TeamRole._removeTeam",
      "jump": "i",
      "offset": [
        1032,
        1054
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6047": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6048": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 81,
      "value": "0x40"
    },
    "6050": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6057": {
      "op": "SHL"
    },
    "6058": {
      "op": "SUB"
    },
    "6059": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6060": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "AND",
      "path": "13"
    },
    "6061": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6062": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x26B6063D78AEFCF96F02FF06BC9822B5A623278253ADD7FFFA5FB453DB399810"
    },
    "6095": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6096": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "6098": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6099": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "LOG2",
      "path": "13"
    },
    "6100": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        975,
        1096
      ],
      "op": "POP",
      "path": "13"
    },
    "6101": {
      "fn": "TeamRole._removeTeam",
      "jump": "o",
      "offset": [
        975,
        1096
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6102": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6103": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 82,
      "value": "0x17E0"
    },
    "6106": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6107": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6108": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x152A"
    },
    "6111": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6112": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6113": {
      "branch": 108,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6114": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1832"
    },
    "6117": {
      "branch": 108,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6118": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6120": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6121": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6130": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6131": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6133": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6135": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6136": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6137": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6138": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6140": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6142": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6143": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6144": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6145": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "6178": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6180": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6181": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6182": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6183": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6184": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6185": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6186": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6187": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6188": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "6189": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "6191": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "6192": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6193": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6194": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6201": {
      "op": "SHL"
    },
    "6202": {
      "op": "SUB"
    },
    "6203": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 83
    },
    "6204": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6206": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6207": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6208": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6209": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6211": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6212": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6213": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6214": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6215": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6217": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6218": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6219": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6220": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6223": {
      "op": "NOT"
    },
    "6224": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "6225": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6227": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "6228": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6229": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6230": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6231": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6232": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 84,
      "value": "0x1861"
    },
    "6235": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6236": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6237": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x152A"
    },
    "6240": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6241": {
      "branch": 109,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6242": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x189C"
    },
    "6245": {
      "branch": 109,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6246": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6248": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6255": {
      "op": "SHL"
    },
    "6256": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6257": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6258": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6260": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6261": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6262": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6263": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6265": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6266": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6267": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6268": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "6269": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6270": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6271": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6273": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6274": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6275": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6277": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6278": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6279": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18EF"
    },
    "6282": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6284": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6285": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "6286": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6288": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "6289": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6290": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "6291": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "6292": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6294": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6295": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6296": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6297": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "6298": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6299": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6300": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "op": "SUB"
    },
    "6309": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 85
    },
    "6310": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6312": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6313": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6314": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6315": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6317": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6318": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6319": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6320": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6321": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6323": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6324": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6325": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6326": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6329": {
      "op": "NOT"
    },
    "6330": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "6331": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6332": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6333": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "2e7a36507150cef45f73814263a3e38b47b883eb",
  "source": "pragma solidity ^0.5.0;\n\n// import \"OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol\";\nimport \"./token_exchange.sol\" ; \nimport \"./TeamRole.sol\" ; \n\ncontract token_challenge is AdminRole, TeamRole {\n\n    //address _exchangeAddress; \n    address private _fss_admin = 0x2b177c1854DE132E96326B454055005E62feBDc7; \n    address private _fss_trading = 0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff ;\n\n    //EXCHANGE & PAYCOIN\n    token_exchange fss_exchange; \n    IT_PayCoin payCoin; \n\n    //SIGNING UP & CHECKING VARIABLES\n    address[] _teamAddresses; \n\n    event Registered(address indexed teamAddress); \n\n    //PRICE OVERNIGHT VARIABLES\n    uint256 _last_id_price; \n    uint256 _startOvernightChallenge;\n    bool _overnightWon; \n    \n    event Overnight(address indexed winner, uint256 indexed coin_won); \n\n    //DIRECT CHALLENGE VARIABLES\n    uint256[] _directFlag;    \n    address _directChallenger; \n    address _directChallenged; \n    \n    mapping (uint256 => bool) _directChallengeWon;\n    mapping (uint256 => uint256) _startDirectChallenge; \n\n    event DirectChallenge(address indexed challenger, address indexed challenged, uint256 _flag); \n    event DirectChallengeWon(address indexed winner, uint256 indexed _flag, uint256 indexed _amount); \n\n    //TEAM CHALLENGE VARIABLES\n    uint256[] _teamFlag; \n    address _teamChallenger; \n    address[] _teamChallenged;\n    \n    mapping (uint256 => uint256) _startTeamChallenge; \n    mapping (uint256 => bool) _teamChallengeWon; \n    \n    event TeamChallenge(address indexed challenger, uint256 _flag);\n    event TeamChallengeWon(address indexed winner, uint256 indexed _flag, uint256 indexed _amount);  \n\n    //CONSTRUCTOR\n    constructor (address exchangeAddress) public {\n        fss_exchange = token_exchange(exchangeAddress);\n        payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        if (!(isAdmin(_fss_admin))){\n            addAdmin(_fss_admin);\n        }\n\n        if (!(isAdmin(_fss_trading))){\n            addAdmin(_fss_trading);\n        }\n\n        //register(_fss_trading); \n\n    }\n\n    //SIGNING UP & CHECKING FUNCTIONS\n    function register(address teamAddress) external {\n        bool _alreadyRegistered = false; \n\n        //TODO: Remember to uncomment!\n        //require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                _alreadyRegistered = true; \n            }\n        }\n        require(_alreadyRegistered == false, \"You're already registered.\"); \n\n        _teamAddresses.push(teamAddress); \n        if(!(isTeam(teamAddress))){\n            addTeam(teamAddress);\n        }\n         \n        require(_teamAddresses.length <= 3, \"Too many teams.\"); \n        \n        emit Registered(teamAddress); \n    }\n\n    function isRegistered(address teamAddress) external view returns(bool){\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                return true; \n            }\n        }\n    return false; \n    }\n\n    //PRICE OVERNIGHT\n\n    function overnightStart(int256 new_delta_price) onlyAdmin external {\n        //TODO: Remember to uncomment!\n        //require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n        \n        _startOvernightChallenge = now; \n        _last_id_price = fss_exchange.setNewPrice(new_delta_price);\n        _overnightWon = false;  \n        payCoin.burnFrom(_msgSender(), 200e18); \n\n    }\n\n    function overnightCheck(uint256 id_price) onlyTeam external {\n\n        require(id_price == _last_id_price, \"Wrong id price.\"); \n        if( now > _startOvernightChallenge && now < _startOvernightChallenge + 1 hours){\n            require(_overnightWon == false, \"The challenge has already been won.\"); \n\n            payCoin.mint(_msgSender(), 1200e18); \n            _overnightWon = true;\n            emit Overnight(_msgSender(), 1200e18); \n\n        }\n\n        else{\n            payCoin.mint(_fss_trading, 2000e18); \n            emit Overnight(_fss_trading, 2000e18); \n        }\n        \n    }\n\n    //DIRECT CHALLENGE\n    \n    function challengeStart(address directChallenged, uint256 flag) onlyTeam external {\n        checkFlag(_directFlag, flag); \n\n        require(_msgSender() != directChallenged, \"The addresses must be different.\");  \n\n        _startDirectChallenge[flag] = now;\n        _directChallenger = _msgSender(); \n        _directChallenged = directChallenged; \n        _directChallengeWon[flag] = false; \n\n        emit DirectChallenge(_directChallenger, _directChallenged, flag);\n        payCoin.burnFrom(_msgSender(), 50e18);          \n    \n    }\n\n    function winDirectChallenge(uint256 flag) onlyTeam external returns(bool) {\n        bool _flagFound = false; \n\n        payCoin.burnFrom(_msgSender(), 50e18);\n        \n        require(_msgSender() == _directChallenger || _msgSender() == _directChallenged, \"You must be either the challenger or the challenged.\"); \n        if(now >= _startDirectChallenge[flag] + 5 minutes){ //REMEMBER TO CHANGE BACK TO MINUTES!\n            require(_directChallengeWon[flag] == false, \"The challenge has already been won.\"); \n    \n            matchFlag(_directFlag, flag); \n\n            payCoin.mint(_msgSender(), 1000e18);\n            emit DirectChallengeWon(_msgSender(), flag, 1000e18); \n            _directChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n\n    }\n    \n    //TEAM CHALLENGE\n    \n    function challengeStart(uint256 flag) onlyTeam external {\n    \n        checkFlag(_teamFlag, flag); \n\n        _startTeamChallenge[flag] = now;\n        _teamChallengeWon[flag] = false; \n\n        require(_teamAddresses.length == 3, \"Challenge can't start until all teams regitered.\"); \n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_msgSender() == _teamAddresses[i]){\n                _teamChallenger = _msgSender(); \n            }\n            else{\n                _teamChallenged.push(_teamAddresses[i]); \n            }\n        }\n\n        emit TeamChallenge(_msgSender(), flag); \n\n        payCoin.burnFrom(_msgSender(), 100e18); \n\n    }\n\n    function winTeamChallenge(uint256 flag) onlyTeam external returns(bool) {    \n        bool _flagFound = false; \n\n        payCoin.burnFrom(_msgSender(), 100e18);\n \n        if(now >= _startTeamChallenge[flag] + 5 minutes){//REMEMBER TO CHANGE BACK TO MINUTES!\n            require(_teamChallengeWon[flag] == false, \"The challenge has already been won.\"); \n        \n            matchFlag(_teamFlag, flag); \n\n            if(_msgSender() == _teamChallenger){\n                payCoin.mint(_msgSender(), 1500e18);\n                emit TeamChallengeWon(_msgSender(), flag, 1500e18);\n            }\n            else{\n                payCoin.mint(_msgSender(), 1000e18);\n                emit TeamChallengeWon(_msgSender(), flag, 1000e18);\n            }\n             \n            _teamChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n    }\n\n\n    //INTERNAL FUNCTION\n\n    function checkFlag(uint256[] storage _flags, uint256 _flag) internal {\n\n        for(uint256 i = 0; i < _flags.length; i++){\n            require(_flags[i] != _flag , \"Flag already used!\");\n        }\n\n        _flags.push(_flag);\n\n    }\n\n    function matchFlag(uint256[] storage _flags, uint256 _flag) internal {\n        bool _flagFound = false;\n\n        for(uint256 i = 0; i < _flags.length; i++){\n                if (_flags[i] == _flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\");\n\n    }\n\n    //EXCHANGE & PAYCOIN ADDRESS\n    function setExchange(address exchangeAddress) onlyAdmin external {\n        fss_exchange = token_exchange(exchangeAddress); \n    }\n    \n    function setPayCoin(address payCoinAddress) onlyAdmin external {\n        payCoin = IT_PayCoin(payCoinAddress); \n    }\n    \n\n}",
  "sourceMap": "167:7890:14:-;;;255:71;;;-1:-1:-1;;;;;;255:71:14;;;284:42;255:71;;;;333:73;;;;;;364:42;333:73;;;1691:367;5:2:-1;;;;30:1;27;20:12;5:2;1691:367:14;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1691:367:14;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;412:22:13;421:12;-1:-1:-1;;;;;421:10:13;:12;:::i;:::-;-1:-1:-1;;;;;412:8:13;:22;:::i;:::-;1746:12:14;:46;;-1:-1:-1;;;;;;1746:46:14;-1:-1:-1;;;;;1746:46:14;;;;;;;;;;1823:22;;;-1:-1:-1;;;;;;1823:22:14;;;;:12;;;;;:20;;:22;;;;;;;;;;;;;:12;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;1823:22:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1823:22:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1823:22:14;1802:7;:44;;-1:-1:-1;;;;;;1802:44:14;-1:-1:-1;;;;;1802:44:14;;;;;;1871:10;;1863:19;;1871:10;1863:7;:19::i;:::-;1857:72;;1907:10;;1898:20;;-1:-1:-1;;;;;1907:10:14;-1:-1:-1;;;;;1898:8:14;:20;:::i;:::-;1953:12;;1945:21;;-1:-1:-1;;;;;1953:12:14;-1:-1:-1;;;;;1945:7:14;:21;:::i;:::-;1939:76;;1991:12;;1982:22;;-1:-1:-1;;;;;1991:12:14;-1:-1:-1;;;;;1982:8:14;:22;:::i;:::-;1691:367;167:7890;;788:96:0;867:10;788:96;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;856:113:13:-;910:19;921:7;910:6;:10;;;;;;:19;;;;:::i;:::-;944:18;;-1:-1:-1;;;;;944:18:13;;;;;;;;856:113;:::o;587:105:9:-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;698:87::-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;167:7890:14:-;;;;;;;",
  "sourcePath": "contracts/token_challenge.sol",
  "type": "contract"
}