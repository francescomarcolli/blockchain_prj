{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "directChallenger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "directChallenged",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "directFlag",
          "type": "uint256"
        }
      ],
      "name": "DirectChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "directWinner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "directFlag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_amount",
          "type": "uint256"
        }
      ],
      "name": "DirectChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_won",
          "type": "uint256"
        }
      ],
      "name": "Overnight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TeamAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "teamFlag",
          "type": "uint256"
        }
      ],
      "name": "TeamChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamWinner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamFlag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_amount",
          "type": "uint256"
        }
      ],
      "name": "TeamChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TeamRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "directChallenged",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "overnightCheck",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "new_delta_price",
          "type": "int256"
        }
      ],
      "name": "overnightStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceTeam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winDirectChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winTeamChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "13": "contracts/TeamRole.sol",
    "14": "contracts/token_challenge.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_challenge.sol",
    "exportedSymbols": {
      "token_challenge": [
        703
      ]
    },
    "id": 704,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "contracts/token_exchange.sol",
        "file": "./token_exchange.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 704,
        "sourceUnit": 1370,
        "src": "25:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TeamRole.sol",
        "file": "./TeamRole.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 704,
        "sourceUnit": 811,
        "src": "58:25:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1584,
              "src": "114:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$1584",
                "typeString": "contract AdminRole"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "114:9:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "TeamRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 810,
              "src": "125:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TeamRole_$810",
                "typeString": "contract TeamRole"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "125:8:14"
          }
        ],
        "contractDependencies": [
          810,
          1396,
          1584
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 703,
        "linearizedBaseContracts": [
          703,
          810,
          1584,
          1396
        ],
        "name": "token_challenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10,
            "name": "_fss",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "174:57:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "174:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838354138643732343146666666656537323930353031343733413942313142466441324165394666",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "189:42:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "name": "fss_exchange",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "264:27:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_token_exchange_$1369",
              "typeString": "contract token_exchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "token_exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1369,
              "src": "264:14:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_token_exchange_$1369",
                "typeString": "contract token_exchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "298:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 13,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2144,
              "src": "298:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "_teamAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "362:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "362:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 16,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "362:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21,
            "name": "Registered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "411:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:29:14"
            },
            "src": "394:46:14"
          },
          {
            "constant": false,
            "id": 23,
            "name": "_last_id_price",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "479:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "479:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "name": "_startOvernightChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "508:32:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 27,
            "name": "_overnightWon",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "546:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 26,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "546:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 33,
            "name": "Overnight",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "592:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "coin_won",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "616:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "591:50:14"
            },
            "src": "576:66:14"
          },
          {
            "constant": false,
            "id": 36,
            "name": "_directFlag",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "682:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 34,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "682:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 35,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "682:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 38,
            "name": "_directChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "748:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 40,
            "name": "_directChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "780:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "780:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 44,
            "name": "_directChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "844:45:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "853:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "844:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 42,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "864:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "name": "_startDirectChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "895:50:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "895:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 46,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "915:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 56,
            "name": "DirectChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "name": "directChallenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "975:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "name": "directChallenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1009:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "name": "directFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1043:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "974:88:14"
            },
            "src": "953:110:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 64,
            "name": "DirectChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "name": "directWinner",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1094:28:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": true,
                  "name": "directFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1124:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": true,
                  "name": "coin_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1152:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1093:87:14"
            },
            "src": "1069:112:14"
          },
          {
            "constant": false,
            "id": 67,
            "name": "_teamFlag",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "1219:19:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 65,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1219:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 66,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1219:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "name": "_teamChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "1245:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 68,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1245:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "name": "_teamChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "1275:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1275:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 71,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1275:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 76,
            "name": "_startTeamChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "1311:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 75,
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1320:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1311:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1331:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 80,
            "name": "_teamChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 703,
            "src": "1366:43:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 79,
              "keyType": {
                "id": 77,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1375:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1366:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 78,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1386:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 86,
            "name": "TeamChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "indexed": true,
                  "name": "teamChallenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1441:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": false,
                  "name": "teamFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1473:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1440:50:14"
            },
            "src": "1421:70:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 94,
            "name": "TeamChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "name": "teamWinner",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1519:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": true,
                  "name": "teamFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1547:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": true,
                  "name": "coin_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1573:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1518:83:14"
            },
            "src": "1496:106:14"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1673:117:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "fss_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1683:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1369",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "1713:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 100,
                        "name": "token_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "1698:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_exchange_$1369_$",
                          "typeString": "type(contract token_exchange)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1698:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1369",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "src": "1683:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_token_exchange_$1369",
                      "typeString": "contract token_exchange"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:46:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1739:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 107,
                              "name": "fss_exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1760:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_token_exchange_$1369",
                                "typeString": "contract token_exchange"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payCoin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 831,
                            "src": "1760:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IT_PayCoin_$2144_$",
                              "typeString": "function () view external returns (contract IT_PayCoin)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1760:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                            "typeString": "contract IT_PayCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                            "typeString": "contract IT_PayCoin"
                          }
                        ],
                        "id": 106,
                        "name": "IT_PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "1749:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IT_PayCoin_$2144_$",
                          "typeString": "type(contract IT_PayCoin)"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1749:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "src": "1739:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1739:44:14"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "exchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1641:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1640:25:14"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:14"
            },
            "scope": 703,
            "src": "1628:162:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1882:756:14",
              "statements": [
                {
                  "assignments": [
                    120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120,
                      "name": "_alreadyRegistered",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "1966:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1966:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1992:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1966:31:14"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2189:119:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 134,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2206:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 136,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 135,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "2221:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2206:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 137,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2227:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2206:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 144,
                        "nodeType": "IfStatement",
                        "src": "2203:95:14",
                        "trueBody": {
                          "id": 143,
                          "nodeType": "Block",
                          "src": "2239:59:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 139,
                                  "name": "_alreadyRegistered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 120,
                                  "src": "2257:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2278:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2257:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 142,
                              "nodeType": "ExpressionStatement",
                              "src": "2257:25:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "2158:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2162:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2162:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2158:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 146,
                  "initializationExpression": {
                    "assignments": [
                      124
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 124,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2143:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2143:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 126,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2155:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2143:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2185:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2185:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 133,
                    "nodeType": "ExpressionStatement",
                    "src": "2185:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2139:169:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "_alreadyRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "2325:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2347:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2325:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7527726520616c726561647920726567697374657265642e",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2354:28:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        },
                        "value": "You're already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "2317:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:66:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:66:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2415:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2395:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2395:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2395:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2395:32:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2441:22:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "2450:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "isTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "2443:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2443:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2442:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 170,
                  "nodeType": "IfStatement",
                  "src": "2438:71:14",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "2464:45:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "2486:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 165,
                            "name": "addTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2478:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2478:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "2478:20:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 172,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2536:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2536:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2561:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "2536:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e79207465616d732e",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:17:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        },
                        "value": "Too many teams."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "2528:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2528:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "2528:54:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2618:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2607:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2607:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "EmitStatement",
                  "src": "2602:28:14"
                }
              ]
            },
            "documentation": null,
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1852:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1851:21:14"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1882:0:14"
            },
            "scope": 703,
            "src": "1834:804:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "2714:190:14",
              "statements": [
                {
                  "body": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "2774:105:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2791:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 204,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 203,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "2806:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2791:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "2812:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2791:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 210,
                        "nodeType": "IfStatement",
                        "src": "2788:81:14",
                        "trueBody": {
                          "id": 209,
                          "nodeType": "Block",
                          "src": "2824:45:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2849:4:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 190,
                              "id": 208,
                              "nodeType": "Return",
                              "src": "2842:11:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "2743:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2747:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2747:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2743:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 212,
                  "initializationExpression": {
                    "assignments": [
                      192
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 192,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2728:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 194,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2740:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2728:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2770:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "2770:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 201,
                    "nodeType": "ExpressionStatement",
                    "src": "2770:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2724:155:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2891:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 190,
                  "id": 214,
                  "nodeType": "Return",
                  "src": "2884:12:14"
                }
              ]
            },
            "documentation": null,
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "2666:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2665:21:14"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "2709:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2708:6:14"
            },
            "scope": 703,
            "src": "2644:260:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "3000:478:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "_startOvernightChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3291:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "3318:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3291:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:30:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_last_id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3332:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "new_delta_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "3374:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 228,
                          "name": "fss_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3349:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_exchange_$1369",
                            "typeString": "contract token_exchange"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setNewPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1368,
                        "src": "3349:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int256_$returns$_t_uint256_$",
                          "typeString": "function (int256) external returns (uint256)"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3349:41:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3332:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:58:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 234,
                      "name": "_overnightWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3400:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3416:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3400:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2955,
                          "src": "3450:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3450:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030653138",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3462:6:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3433:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "3433:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3433:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "3433:36:14"
                }
              ]
            },
            "documentation": null,
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 221,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 220,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1517,
                  "src": "2981:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2981:9:14"
              }
            ],
            "name": "overnightStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "name": "new_delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2957:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2956:24:14"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3000:0:14"
            },
            "scope": 703,
            "src": "2933:545:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "3535:655:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 253,
                          "name": "id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "3696:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "_last_id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "3708:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3696:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e672069642070726963652e",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3724:17:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        },
                        "value": "Wrong id price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "3688:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:54:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2957,
                        "src": "3757:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "_startOvernightChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3763:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3757:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2957,
                        "src": "3791:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 263,
                          "name": "_startOvernightChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3797:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3824:9:14",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "3797:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3791:42:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3757:76:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "4078:97:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 297,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "4105:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4111:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 294,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "4092:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2171,
                            "src": "4092:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4092:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 300,
                        "nodeType": "ExpressionStatement",
                        "src": "4092:27:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 302,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "4149:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4155:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "id": 301,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "4139:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4139:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "EmitStatement",
                        "src": "4134:29:14"
                      }
                    ]
                  },
                  "id": 307,
                  "nodeType": "IfStatement",
                  "src": "3753:422:14",
                  "trueBody": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "3834:230:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 269,
                                "name": "_overnightWon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "3856:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3873:5:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3856:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3880:37:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 268,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2958,
                              2959
                            ],
                            "referencedDeclaration": 2959,
                            "src": "3848:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3848:70:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 274,
                        "nodeType": "ExpressionStatement",
                        "src": "3848:70:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 278,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "3947:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3947:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3959:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 275,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "3934:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2171,
                            "src": "3934:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3934:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "3934:33:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "_overnightWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "3982:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3998:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3982:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "3982:20:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "4031:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4031:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4043:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "id": 287,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "4021:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4021:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 292,
                        "nodeType": "EmitStatement",
                        "src": "4016:35:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "overnightCheck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "3508:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3507:18:14"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3535:0:14"
            },
            "scope": 703,
            "src": "3484:706:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "4297:832:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "_directFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4616:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 318,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4629:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 316,
                      "name": "checkFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "4606:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4606:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "4606:28:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 322,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "4654:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4654:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 324,
                          "name": "directChallenged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4668:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4654:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520616464726573736573206d75737420626520646966666572656e742e",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4686:34:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        },
                        "value": "The addresses must be different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        }
                      ],
                      "id": 321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "4646:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:75:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:75:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "_startDirectChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4822:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 331,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 330,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4844:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4822:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "4852:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4822:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "_directChallenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4865:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2955,
                        "src": "4885:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4885:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4865:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4865:30:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 340,
                      "name": "_directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "4906:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "4926:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4906:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "4906:36:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "_directChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4953:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4973:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4953:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4981:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4953:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4953:33:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "_directChallenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "5019:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "_directChallenged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5038:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "5057:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 350,
                      "name": "DirectChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "5003:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5003:59:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "EmitStatement",
                  "src": "4998:64:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2955,
                          "src": "5089:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5089:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5101:5:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 356,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "5072:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "5072:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5072:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5072:35:14"
                }
              ]
            },
            "documentation": null,
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "directChallenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "4248:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "4274:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4274:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4247:40:14"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4297:0:14"
            },
            "scope": 703,
            "src": "4224:905:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "5200:1243:14",
              "statements": [
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 446,
                      "src": "5352:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 372,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5352:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5370:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5352:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 379,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2955,
                          "src": "5404:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5404:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5416:5:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 376,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "5387:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "5387:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5387:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5387:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 385,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2955,
                              "src": "5449:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5449:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 387,
                            "name": "_directChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "5463:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5449:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 389,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2955,
                              "src": "5484:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5484:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "_directChallenged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "5498:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5484:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5449:66:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5517:54:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        },
                        "value": "You must be either the challenger or the challenged."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "5441:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5441:131:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:131:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "5586:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 398,
                          "name": "_startDirectChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "5593:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 400,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "5615:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5593:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5623:9:14",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "5593:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5586:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 444,
                    "nodeType": "Block",
                    "src": "6398:38:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6419:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 371,
                        "id": 443,
                        "nodeType": "Return",
                        "src": "6412:12:14"
                      }
                    ]
                  },
                  "id": 445,
                  "nodeType": "IfStatement",
                  "src": "5583:853:14",
                  "trueBody": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "5633:751:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 405,
                                  "name": "_directChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "5693:19:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 407,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 406,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 367,
                                  "src": "5713:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5693:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5722:5:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "5693:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5729:37:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 404,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2958,
                              2959
                            ],
                            "referencedDeclaration": 2959,
                            "src": "5685:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5685:82:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 412,
                        "nodeType": "ExpressionStatement",
                        "src": "5685:82:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 414,
                              "name": "_directFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "6166:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 415,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "6179:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 413,
                            "name": "matchFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "6156:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6156:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "6156:28:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "6213:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6213:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6225:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 418,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "6200:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2171,
                            "src": "6200:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6200:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 425,
                        "nodeType": "ExpressionStatement",
                        "src": "6200:33:14"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 427,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "6271:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6271:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "6283:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6289:7:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "id": 426,
                            "name": "DirectChallengeWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "6252:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6252:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 432,
                        "nodeType": "EmitStatement",
                        "src": "6247:50:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 433,
                              "name": "_directChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "6312:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 435,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 434,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "6332:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6312:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6340:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6312:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "6312:32:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6368:4:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 371,
                        "id": 440,
                        "nodeType": "Return",
                        "src": "6361:11:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winDirectChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "5163:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5163:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5162:14:14"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "5194:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5194:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5193:6:14"
            },
            "scope": 703,
            "src": "5135:1308:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "6535:977:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "_teamFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "6938:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "6949:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 454,
                      "name": "checkFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "6928:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6928:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "6928:26:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 459,
                        "name": "_startTeamChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "6966:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 461,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "6986:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6966:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 462,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "6994:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6966:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "6966:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "_teamChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "7007:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 467,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 466,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "7025:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7007:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7033:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7007:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "7007:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "7058:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7058:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7083:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "7058:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7086:50:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        },
                        "value": "Challenge can't start until all teams regitered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "7050:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:87:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "7050:87:14"
                },
                {
                  "body": {
                    "id": 512,
                    "nodeType": "Block",
                    "src": "7198:211:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 490,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2955,
                              "src": "7215:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7215:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 492,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "7229:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 494,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 493,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "7244:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7229:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7215:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 510,
                          "nodeType": "Block",
                          "src": "7326:73:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 505,
                                      "name": "_teamAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17,
                                      "src": "7365:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 507,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 506,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 480,
                                      "src": "7380:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7365:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 502,
                                    "name": "_teamChallenged",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "7344:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7344:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7344:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 509,
                              "nodeType": "ExpressionStatement",
                              "src": "7344:39:14"
                            }
                          ]
                        },
                        "id": 511,
                        "nodeType": "IfStatement",
                        "src": "7212:187:14",
                        "trueBody": {
                          "id": 501,
                          "nodeType": "Block",
                          "src": "7247:62:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 496,
                                  "name": "_teamChallenger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "7265:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 497,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2955,
                                    "src": "7283:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7283:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "7265:28:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 500,
                              "nodeType": "ExpressionStatement",
                              "src": "7265:28:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 483,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "7167:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "7171:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7171:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7167:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 513,
                  "initializationExpression": {
                    "assignments": [
                      480
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 480,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "7152:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7152:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 482,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7164:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7152:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7194:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "7194:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 489,
                    "nodeType": "ExpressionStatement",
                    "src": "7194:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "7148:261:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 515,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2955,
                          "src": "7438:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7438:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "7450:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 514,
                      "name": "TeamChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "7424:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7424:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "EmitStatement",
                  "src": "7419:36:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2955,
                          "src": "7484:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7484:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7496:6:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "7467:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "7467:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7467:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:36:14"
                }
              ]
            },
            "documentation": null,
            "id": 529,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 452,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 451,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 743,
                  "src": "6517:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6517:8:14"
              }
            ],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "6503:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6503:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6502:14:14"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6535:0:14"
            },
            "scope": 703,
            "src": "6479:1033:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "7590:1499:14",
              "statements": [
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "7746:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7746:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 541,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7764:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7746:23:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 545,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2955,
                          "src": "7798:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7798:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7810:6:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "7781:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2143,
                      "src": "7781:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:36:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 550,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2957,
                      "src": "8017:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "_startTeamChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "8024:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 553,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 552,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "8044:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8024:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8052:9:14",
                        "subdenomination": "seconds",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "8024:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8017:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 619,
                    "nodeType": "Block",
                    "src": "9045:38:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9066:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 537,
                        "id": 618,
                        "nodeType": "Return",
                        "src": "9059:12:14"
                      }
                    ]
                  },
                  "id": 620,
                  "nodeType": "IfStatement",
                  "src": "8014:1069:14",
                  "trueBody": {
                    "id": 616,
                    "nodeType": "Block",
                    "src": "8062:969:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 558,
                                  "name": "_teamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "8121:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 560,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 559,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 531,
                                  "src": "8139:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8121:23:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8148:5:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "8121:32:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8155:37:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 557,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2958,
                              2959
                            ],
                            "referencedDeclaration": 2959,
                            "src": "8113:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8113:80:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "8113:80:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 567,
                              "name": "_teamFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "8588:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 568,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8599:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 566,
                            "name": "matchFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "8578:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8578:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "8578:26:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 571,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2955,
                              "src": "8623:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8623:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 573,
                            "name": "_teamChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "8637:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8623:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 606,
                          "nodeType": "Block",
                          "src": "8802:132:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 594,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2955,
                                      "src": "8833:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 595,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8833:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8845:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 591,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "8820:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                                      "typeString": "contract IT_PayCoin"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2171,
                                  "src": "8820:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8820:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 598,
                              "nodeType": "ExpressionStatement",
                              "src": "8820:33:14"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 600,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2955,
                                      "src": "8893:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 601,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8893:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 602,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "8905:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8911:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "id": 599,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 94,
                                  "src": "8876:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8876:43:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 605,
                              "nodeType": "EmitStatement",
                              "src": "8871:48:14"
                            }
                          ]
                        },
                        "id": 607,
                        "nodeType": "IfStatement",
                        "src": "8620:314:14",
                        "trueBody": {
                          "id": 590,
                          "nodeType": "Block",
                          "src": "8653:132:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 578,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2955,
                                      "src": "8684:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8684:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8696:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 575,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "8671:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IT_PayCoin_$2144",
                                      "typeString": "contract IT_PayCoin"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2171,
                                  "src": "8671:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8671:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 582,
                              "nodeType": "ExpressionStatement",
                              "src": "8671:33:14"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 584,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2955,
                                      "src": "8744:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8744:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 586,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "8756:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8762:7:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "id": 583,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 94,
                                  "src": "8727:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8727:43:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 589,
                              "nodeType": "EmitStatement",
                              "src": "8722:48:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 608,
                              "name": "_teamChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "8961:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 610,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 609,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8979:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8961:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8987:4:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8961:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 613,
                        "nodeType": "ExpressionStatement",
                        "src": "8961:30:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9015:4:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 537,
                        "id": 615,
                        "nodeType": "Return",
                        "src": "9008:11:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 534,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 533,
                  "name": "onlyTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 743,
                  "src": "7558:8:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7558:8:14"
              }
            ],
            "name": "winTeamChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "7544:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7544:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7543:14:14"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "7584:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7584:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7583:6:14"
            },
            "scope": 703,
            "src": "7518:1571:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "9190:164:14",
              "statements": [
                {
                  "body": {
                    "id": 650,
                    "nodeType": "Block",
                    "src": "9243:75:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 642,
                                  "name": "_flags",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 625,
                                  "src": "9265:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[] storage pointer"
                                  }
                                },
                                "id": 644,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 643,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "9272:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9265:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 645,
                                "name": "_flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "9278:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9265:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "466c616720616c7265616479207573656421",
                              "id": 647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9286:20:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              },
                              "value": "Flag already used!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              }
                            ],
                            "id": 641,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2958,
                              2959
                            ],
                            "referencedDeclaration": 2959,
                            "src": "9257:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9257:50:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "9257:50:14"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "9220:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "9224:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9224:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9220:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 651,
                  "initializationExpression": {
                    "assignments": [
                      631
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 631,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "9205:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9205:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 633,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9217:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9205:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9239:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "9239:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 640,
                    "nodeType": "ExpressionStatement",
                    "src": "9239:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "9201:117:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "_flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "9340:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "9328:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9328:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:18:14"
                }
              ]
            },
            "documentation": null,
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "9140:24:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 623,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9140:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 624,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9140:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "9166:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9166:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9139:41:14"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9190:0:14"
            },
            "scope": 703,
            "src": "9121:233:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "9429:372:14",
              "statements": [
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "9439:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9439:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9457:5:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9439:23:14"
                },
                {
                  "body": {
                    "id": 694,
                    "nodeType": "Block",
                    "src": "9515:218:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 682,
                              "name": "_flags",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "9612:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[] storage pointer"
                              }
                            },
                            "id": 684,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 683,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "9619:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9612:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 685,
                            "name": "_flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "9625:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9612:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 693,
                        "nodeType": "IfStatement",
                        "src": "9608:111:14",
                        "trueBody": {
                          "id": 692,
                          "nodeType": "Block",
                          "src": "9632:87:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 687,
                                  "name": "_flagFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "9654:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9667:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9654:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 690,
                              "nodeType": "ExpressionStatement",
                              "src": "9654:17:14"
                            },
                            {
                              "id": 691,
                              "nodeType": "Break",
                              "src": "9694:5:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 675,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "9492:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "_flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "9496:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9496:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9492:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 695,
                  "initializationExpression": {
                    "assignments": [
                      672
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 672,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 695,
                        "src": "9477:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9477:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 674,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9489:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9477:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9511:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 679,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 672,
                        "src": "9511:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 681,
                    "nodeType": "ExpressionStatement",
                    "src": "9511:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "9473:260:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "_flagFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "9754:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f756c646e27742066696e642079756f7220666c616721",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9766:26:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                          "typeString": "literal_string \"Couldn't find yuor flag!\""
                        },
                        "value": "Couldn't find yuor flag!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                          "typeString": "literal_string \"Couldn't find yuor flag!\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2958,
                        2959
                      ],
                      "referencedDeclaration": 2959,
                      "src": "9746:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9746:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "9746:47:14"
                }
              ]
            },
            "documentation": null,
            "id": 702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "matchFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "name": "_flags",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "9379:24:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 660,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9379:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 661,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9379:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "name": "_flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "9405:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9405:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9378:41:14"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9429:0:14"
            },
            "scope": 703,
            "src": "9360:441:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 704,
        "src": "86:10032:14"
      }
    ],
    "src": "0:10118:14"
  },
  "bytecode": "6080604052600280546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b50604051620019ad380380620019ad833981810160405260208110156200005d57600080fd5b505162000085620000766001600160e01b036200015f16565b6001600160e01b036200016316565b620000ab6200009c6001600160e01b036200015f16565b6001600160e01b03620001b516565b600380546001600160a01b0319166001600160a01b038381169190911791829055604080516001624b1f8b60e01b031981529051929091169163ffb4e07591600480820192602092909190829003018186803b1580156200010b57600080fd5b505afa15801562000120573d6000803e3d6000fd5b505050506040513d60208110156200013757600080fd5b5051600480546001600160a01b0319166001600160a01b0390921691909117905550620002fd565b3390565b6200017e8160006200020760201b6200143d1790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b620001d08160016200020760201b6200143d1790919060201c565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b6200021c82826001600160e01b036200029416565b156200026f576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002dd5760405162461bcd60e51b81526004018080602001828103825260228152602001806200198b6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61167e806200030d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806378591bfd1161008c578063b463a75c11610066578063b463a75c14610245578063c3c5a5471461026b578063d5d35f9514610291578063d9a431b3146102ae576100ea565b806378591bfd146102035780638bad0c0a14610220578063a5c6a02214610228576100ea565b8063561675e1116100c8578063561675e114610177578063612b75431461019457806370480275146101c057806376a9e7b3146101e6576100ea565b806324851914146100ef57806324d7806c146101295780634420e4861461014f575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b03166102b6565b604080519115158252519081900360200190f35b6101156004803603602081101561013f57600080fd5b50356001600160a01b03166102d1565b6101756004803603602081101561016557600080fd5b50356001600160a01b03166102e3565b005b6101156004803603602081101561018d57600080fd5b5035610467565b610175600480360360408110156101aa57600080fd5b506001600160a01b038135169060200135610764565b610175600480360360208110156101d657600080fd5b50356001600160a01b03166108cc565b610175600480360360208110156101fc57600080fd5b5035610923565b6101156004803603602081101561021957600080fd5b5035610a6b565b610175610c97565b6101756004803603602081101561023e57600080fd5b5035610ca9565b6101756004803603602081101561025b57600080fd5b50356001600160a01b0316610e91565b6101156004803603602081101561028157600080fd5b50356001600160a01b0316610ee0565b610175600480360360208110156102a757600080fd5b5035610f3b565b610175611181565b60006102c960018363ffffffff61119116565b90505b919050565b60006102c9818363ffffffff61119116565b6000805b60055481101561033057826001600160a01b03166005828154811061030857fe5b6000918252602090912001546001600160a01b0316141561032857600191505b6001016102e7565b508015610384576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0384161790556103d8826102b6565b6103e5576103e582610e91565b6005546003101561042f576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b60006104796104746111f8565b6102b6565b6104b45760405162461bcd60e51b815260040180806020018281038252602c81526020018061161e602c913960400191505060405180910390fd5b600480546040805163079cc67960e41b8152339381019390935268056bc75e2d631000006024840152516000926001600160a01b03909216916379cc6790916044808301928692919082900301818387803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b5050506000848152601160205260409020546005014210905061075a5760008381526012602052604090205460ff16156105915760405162461bcd60e51b81526004018080602001828103825260238152602001806115fb6023913960400191505060405180910390fd5b61059c600e846111fc565b600f546001600160a01b03163314156106755760048054604080516340c10f1960e01b81523393810193909352685150ae84a8cdf000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b5050604051685150ae84a8cdf0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a4610737565b60048054604080516340c10f1960e01b81523393810193909352683635c9adc5dea000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050506040513d60208110156106fc57600080fd5b5050604051683635c9adc5dea0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a45b50506000818152601260205260409020805460ff191660019081179091556102cc565b60009150506102cc565b61076f600982611290565b336001600160a01b03831614156107cd576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b6000818152600d60209081526040808320429055600a80546001600160a01b031990811633178255600b80546001600160a01b0389811691909316178155600c855294839020805460ff1916905593549054825186815292519185169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106928290030190a3600480546040805163079cc67960e41b815233938101939093526802b5e3af16b18800006024840152516001600160a01b03909116916379cc679091604480830192600092919082900301818387803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b505050505050565b6108dc6108d76111f8565b6102d1565b6109175760405162461bcd60e51b815260040180806020018281038252602e8152602001806115cd602e913960400191505060405180910390fd5b6109208161131d565b50565b61092e6108d76111f8565b6109695760405162461bcd60e51b815260040180806020018281038252602e8152602001806115cd602e913960400191505060405180910390fd5b426007556003546040805163a967119360e01b81526004810184905290516001600160a01b039092169163a9671193916024808201926020929091908290030181600087803b1580156109bb57600080fd5b505af11580156109cf573d6000803e3d6000fd5b505050506040513d60208110156109e557600080fd5b50516006556008805460ff19169055600480546040805163079cc67960e41b81523393810193909352680ad78ebc5ac62000006024840152516001600160a01b03909116916379cc679091604480830192600092919082900301818387803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b5050505050565b600480546040805163079cc67960e41b815233938101939093526802b5e3af16b188000060248401525160009283926001600160a01b0316916379cc679091604480820192869290919082900301818387803b158015610aca57600080fd5b505af1158015610ade573d6000803e3d6000fd5b5050600a546001600160a01b031633149150819050610b075750600b546001600160a01b031633145b610b425760405162461bcd60e51b81526004018080602001828103825260348152602001806115996034913960400191505060405180910390fd5b6000838152600d6020526040902054600501421061075a576000838152600c602052604090205460ff1615610ba85760405162461bcd60e51b81526004018080602001828103825260238152602001806115fb6023913960400191505060405180910390fd5b610bb36009846111fc565b60048054604080516340c10f1960e01b81523393810193909352683635c9adc5dea000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b158015610c1057600080fd5b505af1158015610c24573d6000803e3d6000fd5b505050506040513d6020811015610c3a57600080fd5b5050604051683635c9adc5dea0000090849033907f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd90600090a450506000818152600c60205260409020805460ff191660019081179091556102cc565b610ca7610ca26111f8565b611365565b565b610cb46104746111f8565b610cef5760405162461bcd60e51b815260040180806020018281038252602c81526020018061161e602c913960400191505060405180910390fd5b610cfa600e82611290565b600081815260116020908152604080832042905560129091529020805460ff19169055600554600314610d5e5760405162461bcd60e51b81526004018080602001828103825260308152602001806115266030913960400191505060405180910390fd5b60005b600554811015610dfe5760058181548110610d7857fe5b6000918252602090912001546001600160a01b0316331415610dab57600f80546001600160a01b03191633179055610df6565b601060058281548110610dba57fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b600101610d61565b5060408051828152905133917f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373919081900360200190a2600480546040805163079cc67960e41b8152339381019390935268056bc75e2d631000006024840152516001600160a01b03909116916379cc679091604480830192600092919082900301818387803b158015610a5057600080fd5b610e9c6104746111f8565b610ed75760405162461bcd60e51b815260040180806020018281038252602c81526020018061161e602c913960400191505060405180910390fd5b610920816113ad565b6000805b600554811015610f3257826001600160a01b031660058281548110610f0557fe5b6000918252602090912001546001600160a01b03161415610f2a5760019150506102cc565b600101610ee4565b50600092915050565b6006548114610f83576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b60075442118015610f985750600754603c0142105b156110b05760085460ff1615610fdf5760405162461bcd60e51b81526004018080602001828103825260238152602001806115fb6023913960400191505060405180910390fd5b60048054604080516340c10f1960e01b8152339381019390935268410d586a20a4c000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b15801561103c57600080fd5b505af1158015611050573d6000803e3d6000fd5b505050506040513d602081101561106657600080fd5b50506008805460ff1916600117905560405168410d586a20a4c000009033907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a3610920565b60048054600254604080516340c10f1960e01b81526001600160a01b0392831694810194909452686c6b935b8bbd4000006024850152519116916340c10f199160448083019260209291908290030181600087803b15801561111157600080fd5b505af1158015611125573d6000803e3d6000fd5b505050506040513d602081101561113b57600080fd5b5050600254604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b610ca761118c6111f8565b6113f5565b60006001600160a01b0382166111d85760405162461bcd60e51b81526004018080602001828103825260228152602001806115776022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b6000805b8354811015611238578284828154811061121657fe5b906000526020600020015414156112305760019150611238565b600101611200565b508061128b576040805162461bcd60e51b815260206004820152601860248201527f436f756c646e27742066696e642079756f7220666c6167210000000000000000604482015290519081900360640190fd5b505050565b60005b825481101561130457818382815481106112a957fe5b906000526020600020015414156112fc576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b600101611293565b5081546001810183556000928352602090922090910155565b61132e60008263ffffffff61143d16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61137660008263ffffffff6114be16565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6113be60018263ffffffff61143d16565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b61140660018263ffffffff6114be16565b6040516001600160a01b038216907f26b6063d78aefcf96f02ff06bc9822b5a623278253add7fffa5fb453db39981090600090a250565b6114478282611191565b15611499576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6114c88282611191565b6115035760405162461bcd60e51b81526004018080602001828103825260218152602001806115566021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e5465616d526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205465616d20726f6c65a265627a7a723158206878c798f7a39b06201907323853bc51439f4f4b5b2b309dffc1f58df5c2aef964736f6c63430005110032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_challenge",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "106": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "105": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "107": [
            589,
            607,
            true
          ]
        }
      },
      "13": {},
      "14": {
        "token_challenge.challengeStart": {
          "90": [
            4654,
            4684,
            true
          ],
          "95": [
            7058,
            7084,
            true
          ],
          "96": [
            7215,
            7246,
            false
          ]
        },
        "token_challenge.checkFlag": {
          "104": [
            9265,
            9283,
            true
          ]
        },
        "token_challenge.isRegistered": {
          "97": [
            2791,
            2823,
            false
          ]
        },
        "token_challenge.matchFlag": {
          "102": [
            9612,
            9630,
            false
          ],
          "103": [
            9754,
            9764,
            true
          ]
        },
        "token_challenge.overnightCheck": {
          "98": [
            3696,
            3722,
            true
          ],
          "99": [
            3757,
            3787,
            false
          ],
          "100": [
            3791,
            3833,
            false
          ],
          "101": [
            3856,
            3878,
            true
          ]
        },
        "token_challenge.register": {
          "84": [
            2206,
            2238,
            false
          ],
          "85": [
            2325,
            2352,
            true
          ],
          "86": [
            2536,
            2562,
            true
          ]
        },
        "token_challenge.winDirectChallenge": {
          "91": [
            5449,
            5480,
            true
          ],
          "92": [
            5484,
            5515,
            true
          ],
          "93": [
            5586,
            5632,
            false
          ],
          "94": [
            5693,
            5727,
            true
          ]
        },
        "token_challenge.winTeamChallenge": {
          "87": [
            8017,
            8061,
            false
          ],
          "88": [
            8121,
            8153,
            true
          ],
          "89": [
            8623,
            8652,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "64": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "80": [
            328,
            391
          ],
          "81": [
            401,
            428
          ]
        },
        "Roles.has": {
          "62": [
            867,
            935
          ],
          "63": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "82": [
            581,
            645
          ],
          "83": [
            655,
            683
          ]
        }
      },
      "13": {
        "TeamRole._addTeam": {
          "76": [
            910,
            929
          ],
          "77": [
            939,
            962
          ]
        },
        "TeamRole._removeTeam": {
          "78": [
            1032,
            1054
          ],
          "79": [
            1064,
            1089
          ]
        },
        "TeamRole.addTeam": {
          "50": [
            747,
            764
          ]
        },
        "TeamRole.isTeam": {
          "0": [
            648,
            674
          ]
        },
        "TeamRole.renounceTeam": {
          "61": [
            818,
            843
          ]
        }
      },
      "14": {
        "token_challenge.challengeStart": {
          "19": [
            4606,
            4634
          ],
          "20": [
            4646,
            4721
          ],
          "21": [
            4822,
            4855
          ],
          "22": [
            4865,
            4895
          ],
          "23": [
            4906,
            4942
          ],
          "24": [
            4953,
            4986
          ],
          "25": [
            4998,
            5062
          ],
          "26": [
            5072,
            5107
          ],
          "41": [
            6928,
            6954
          ],
          "42": [
            6966,
            6997
          ],
          "43": [
            7007,
            7038
          ],
          "44": [
            7050,
            7137
          ],
          "45": [
            7265,
            7293
          ],
          "46": [
            7344,
            7383
          ],
          "47": [
            7194,
            7197
          ],
          "48": [
            7419,
            7455
          ],
          "49": [
            7467,
            7503
          ]
        },
        "token_challenge.checkFlag": {
          "69": [
            9257,
            9307
          ],
          "70": [
            9239,
            9242
          ],
          "71": [
            9328,
            9346
          ]
        },
        "token_challenge.isRegistered": {
          "51": [
            2842,
            2853
          ],
          "52": [
            2770,
            2773
          ],
          "53": [
            2884,
            2896
          ]
        },
        "token_challenge.matchFlag": {
          "65": [
            9654,
            9671
          ],
          "66": [
            9694,
            9699
          ],
          "67": [
            9511,
            9514
          ],
          "68": [
            9746,
            9793
          ]
        },
        "token_challenge.overnightCheck": {
          "54": [
            3688,
            3742
          ],
          "55": [
            3848,
            3918
          ],
          "56": [
            3934,
            3967
          ],
          "57": [
            3982,
            4002
          ],
          "58": [
            4016,
            4051
          ],
          "59": [
            4092,
            4119
          ],
          "60": [
            4134,
            4163
          ]
        },
        "token_challenge.overnightStart": {
          "28": [
            3291,
            3321
          ],
          "29": [
            3332,
            3390
          ],
          "30": [
            3400,
            3421
          ],
          "31": [
            3433,
            3469
          ]
        },
        "token_challenge.register": {
          "2": [
            2257,
            2282
          ],
          "3": [
            2185,
            2188
          ],
          "4": [
            2317,
            2383
          ],
          "5": [
            2395,
            2427
          ],
          "6": [
            2478,
            2498
          ],
          "7": [
            2528,
            2582
          ],
          "8": [
            2602,
            2630
          ]
        },
        "token_challenge.winDirectChallenge": {
          "32": [
            5387,
            5422
          ],
          "33": [
            5441,
            5572
          ],
          "34": [
            5685,
            5767
          ],
          "35": [
            6156,
            6184
          ],
          "36": [
            6200,
            6233
          ],
          "37": [
            6247,
            6297
          ],
          "38": [
            6312,
            6344
          ],
          "39": [
            6361,
            6372
          ]
        },
        "token_challenge.winTeamChallenge": {
          "9": [
            7781,
            7817
          ],
          "10": [
            8113,
            8193
          ],
          "11": [
            8578,
            8604
          ],
          "12": [
            8671,
            8704
          ],
          "13": [
            8722,
            8770
          ],
          "14": [
            8820,
            8853
          ],
          "15": [
            8871,
            8919
          ],
          "16": [
            8961,
            8991
          ],
          "17": [
            9008,
            9019
          ],
          "18": [
            9059,
            9071
          ]
        }
      },
      "9": {
        "AdminRole._addAdmin": {
          "72": [
            927,
            947
          ],
          "73": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "74": [
            1052,
            1075
          ],
          "75": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "27": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "1": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "40": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "Context",
    "Roles",
    "TeamRole"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806378591bfd1161008c578063b463a75c11610066578063b463a75c14610245578063c3c5a5471461026b578063d5d35f9514610291578063d9a431b3146102ae576100ea565b806378591bfd146102035780638bad0c0a14610220578063a5c6a02214610228576100ea565b8063561675e1116100c8578063561675e114610177578063612b75431461019457806370480275146101c057806376a9e7b3146101e6576100ea565b806324851914146100ef57806324d7806c146101295780634420e4861461014f575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b03166102b6565b604080519115158252519081900360200190f35b6101156004803603602081101561013f57600080fd5b50356001600160a01b03166102d1565b6101756004803603602081101561016557600080fd5b50356001600160a01b03166102e3565b005b6101156004803603602081101561018d57600080fd5b5035610467565b610175600480360360408110156101aa57600080fd5b506001600160a01b038135169060200135610764565b610175600480360360208110156101d657600080fd5b50356001600160a01b03166108cc565b610175600480360360208110156101fc57600080fd5b5035610923565b6101156004803603602081101561021957600080fd5b5035610a6b565b610175610c97565b6101756004803603602081101561023e57600080fd5b5035610ca9565b6101756004803603602081101561025b57600080fd5b50356001600160a01b0316610e91565b6101156004803603602081101561028157600080fd5b50356001600160a01b0316610ee0565b610175600480360360208110156102a757600080fd5b5035610f3b565b610175611181565b60006102c960018363ffffffff61119116565b90505b919050565b60006102c9818363ffffffff61119116565b6000805b60055481101561033057826001600160a01b03166005828154811061030857fe5b6000918252602090912001546001600160a01b0316141561032857600191505b6001016102e7565b508015610384576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0384161790556103d8826102b6565b6103e5576103e582610e91565b6005546003101561042f576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b60006104796104746111f8565b6102b6565b6104b45760405162461bcd60e51b815260040180806020018281038252602c81526020018061161e602c913960400191505060405180910390fd5b600480546040805163079cc67960e41b8152339381019390935268056bc75e2d631000006024840152516000926001600160a01b03909216916379cc6790916044808301928692919082900301818387803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b5050506000848152601160205260409020546005014210905061075a5760008381526012602052604090205460ff16156105915760405162461bcd60e51b81526004018080602001828103825260238152602001806115fb6023913960400191505060405180910390fd5b61059c600e846111fc565b600f546001600160a01b03163314156106755760048054604080516340c10f1960e01b81523393810193909352685150ae84a8cdf000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b5050604051685150ae84a8cdf0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a4610737565b60048054604080516340c10f1960e01b81523393810193909352683635c9adc5dea000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050506040513d60208110156106fc57600080fd5b5050604051683635c9adc5dea0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a45b50506000818152601260205260409020805460ff191660019081179091556102cc565b60009150506102cc565b61076f600982611290565b336001600160a01b03831614156107cd576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b6000818152600d60209081526040808320429055600a80546001600160a01b031990811633178255600b80546001600160a01b0389811691909316178155600c855294839020805460ff1916905593549054825186815292519185169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106928290030190a3600480546040805163079cc67960e41b815233938101939093526802b5e3af16b18800006024840152516001600160a01b03909116916379cc679091604480830192600092919082900301818387803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b505050505050565b6108dc6108d76111f8565b6102d1565b6109175760405162461bcd60e51b815260040180806020018281038252602e8152602001806115cd602e913960400191505060405180910390fd5b6109208161131d565b50565b61092e6108d76111f8565b6109695760405162461bcd60e51b815260040180806020018281038252602e8152602001806115cd602e913960400191505060405180910390fd5b426007556003546040805163a967119360e01b81526004810184905290516001600160a01b039092169163a9671193916024808201926020929091908290030181600087803b1580156109bb57600080fd5b505af11580156109cf573d6000803e3d6000fd5b505050506040513d60208110156109e557600080fd5b50516006556008805460ff19169055600480546040805163079cc67960e41b81523393810193909352680ad78ebc5ac62000006024840152516001600160a01b03909116916379cc679091604480830192600092919082900301818387803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b5050505050565b600480546040805163079cc67960e41b815233938101939093526802b5e3af16b188000060248401525160009283926001600160a01b0316916379cc679091604480820192869290919082900301818387803b158015610aca57600080fd5b505af1158015610ade573d6000803e3d6000fd5b5050600a546001600160a01b031633149150819050610b075750600b546001600160a01b031633145b610b425760405162461bcd60e51b81526004018080602001828103825260348152602001806115996034913960400191505060405180910390fd5b6000838152600d6020526040902054600501421061075a576000838152600c602052604090205460ff1615610ba85760405162461bcd60e51b81526004018080602001828103825260238152602001806115fb6023913960400191505060405180910390fd5b610bb36009846111fc565b60048054604080516340c10f1960e01b81523393810193909352683635c9adc5dea000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b158015610c1057600080fd5b505af1158015610c24573d6000803e3d6000fd5b505050506040513d6020811015610c3a57600080fd5b5050604051683635c9adc5dea0000090849033907f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd90600090a450506000818152600c60205260409020805460ff191660019081179091556102cc565b610ca7610ca26111f8565b611365565b565b610cb46104746111f8565b610cef5760405162461bcd60e51b815260040180806020018281038252602c81526020018061161e602c913960400191505060405180910390fd5b610cfa600e82611290565b600081815260116020908152604080832042905560129091529020805460ff19169055600554600314610d5e5760405162461bcd60e51b81526004018080602001828103825260308152602001806115266030913960400191505060405180910390fd5b60005b600554811015610dfe5760058181548110610d7857fe5b6000918252602090912001546001600160a01b0316331415610dab57600f80546001600160a01b03191633179055610df6565b601060058281548110610dba57fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b600101610d61565b5060408051828152905133917f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373919081900360200190a2600480546040805163079cc67960e41b8152339381019390935268056bc75e2d631000006024840152516001600160a01b03909116916379cc679091604480830192600092919082900301818387803b158015610a5057600080fd5b610e9c6104746111f8565b610ed75760405162461bcd60e51b815260040180806020018281038252602c81526020018061161e602c913960400191505060405180910390fd5b610920816113ad565b6000805b600554811015610f3257826001600160a01b031660058281548110610f0557fe5b6000918252602090912001546001600160a01b03161415610f2a5760019150506102cc565b600101610ee4565b50600092915050565b6006548114610f83576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b60075442118015610f985750600754603c0142105b156110b05760085460ff1615610fdf5760405162461bcd60e51b81526004018080602001828103825260238152602001806115fb6023913960400191505060405180910390fd5b60048054604080516340c10f1960e01b8152339381019390935268410d586a20a4c000006024840152516001600160a01b03909116916340c10f199160448083019260209291908290030181600087803b15801561103c57600080fd5b505af1158015611050573d6000803e3d6000fd5b505050506040513d602081101561106657600080fd5b50506008805460ff1916600117905560405168410d586a20a4c000009033907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a3610920565b60048054600254604080516340c10f1960e01b81526001600160a01b0392831694810194909452686c6b935b8bbd4000006024850152519116916340c10f199160448083019260209291908290030181600087803b15801561111157600080fd5b505af1158015611125573d6000803e3d6000fd5b505050506040513d602081101561113b57600080fd5b5050600254604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b610ca761118c6111f8565b6113f5565b60006001600160a01b0382166111d85760405162461bcd60e51b81526004018080602001828103825260228152602001806115776022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b6000805b8354811015611238578284828154811061121657fe5b906000526020600020015414156112305760019150611238565b600101611200565b508061128b576040805162461bcd60e51b815260206004820152601860248201527f436f756c646e27742066696e642079756f7220666c6167210000000000000000604482015290519081900360640190fd5b505050565b60005b825481101561130457818382815481106112a957fe5b906000526020600020015414156112fc576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b600101611293565b5081546001810183556000928352602090922090910155565b61132e60008263ffffffff61143d16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61137660008263ffffffff6114be16565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6113be60018263ffffffff61143d16565b6040516001600160a01b038216907f3f5f1db80208f0d453083a86e16909cecc1e95e2618d5d927c93ace22b8200fc90600090a250565b61140660018263ffffffff6114be16565b6040516001600160a01b038216907f26b6063d78aefcf96f02ff06bc9822b5a623278253add7fffa5fb453db39981090600090a250565b6114478282611191565b15611499576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6114c88282611191565b6115035760405162461bcd60e51b81526004018080602001828103825260218152602001806115566021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e5465616d526f6c653a2063616c6c657220646f6573206e6f74206861766520746865205465616d20726f6c65a265627a7a723158206878c798f7a39b06201907323853bc51439f4f4b5b2b309dffc1f58df5c2aef964736f6c63430005110032",
  "deployedSourceMap": "86:10032:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:10032:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:103:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;578:103:13;-1:-1:-1;;;;;578:103:13;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;1834:804:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1834:804:14;-1:-1:-1;;;;;1834:804:14;;:::i;:::-;;7518:1571;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7518:1571:14;;:::i;4224:905::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4224:905:14;;;;;;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;2933:545:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2933:545:14;;:::i;5135:1308::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5135:1308:14;;:::i;791:75:9:-;;;:::i;6479:1033:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6479:1033:14;;:::i;687:84:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;687:84:13;-1:-1:-1;;;;;687:84:13;;:::i;2644:260:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2644:260:14;-1:-1:-1;;;;;2644:260:14;;:::i;3484:706::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3484:706:14;;:::i;777:73:13:-;;;:::i;578:103::-;632:4;655:19;:6;666:7;655:19;:10;:19;:::i;:::-;648:26;;578:103;;;;:::o;587:105:9:-;642:4;665:20;642:4;677:7;665:20;:11;:20;:::i;1834:804:14:-;1966:23;;2139:169;2162:14;:21;2158:25;;2139:169;;;2227:11;-1:-1:-1;;;;;2206:32:14;:14;2221:1;2206:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2206:17:14;:32;2203:95;;;2278:4;2257:25;;2203:95;2185:3;;2139:169;;;-1:-1:-1;2325:27:14;;2317:66;;;;;-1:-1:-1;;;2317:66:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:14;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2395:32:14;;;;;;;;-1:-1:-1;;;;;;2395:32:14;-1:-1:-1;;;;;2395:32:14;;;;;2443:19;2395:32;2443:6;:19::i;:::-;2438:71;;2478:20;2486:11;2478:7;:20::i;:::-;2536:14;:21;2561:1;-1:-1:-1;2536:26:14;2528:54;;;;;-1:-1:-1;;;2528:54:14;;;;;;;;;;;;-1:-1:-1;;;2528:54:14;;;;;;;;;;;;;;;2607:23;;-1:-1:-1;;;;;2607:23:14;;;;;;;;1834:804;;:::o;7518:1571::-;7584:4;485:20:13;492:12;:10;:12::i;:::-;485:6;:20::i;:::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7781:7:14;;;:36;;;-1:-1:-1;;;7781:36:14;;7798:10;7781:36;;;;;;;7810:6;7781:36;;;;;7746:15;;-1:-1:-1;;;;;7781:7:14;;;;:16;;:36;;;;;7746:15;;7781:36;;;;;;;7746:15;7781:7;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;7781:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;8024:25:14;;;;:19;:25;;;;;;8052:9;8024:37;8017:3;:44;;-1:-1:-1;8014:1069:14;;8121:23;;;;:17;:23;;;;;;;;:32;8113:80;;;;-1:-1:-1;;;8113:80:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8578:26;8588:9;8599:4;8578:9;:26::i;:::-;8637:15;;-1:-1:-1;;;;;8637:15:14;8623:10;:29;8620:314;;;8671:7;;;:33;;;-1:-1:-1;;;8671:33:14;;8684:10;8671:33;;;;;;;8696:7;8671:33;;;;;-1:-1:-1;;;;;8671:7:14;;;;:12;;:33;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;8671:33:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8671:33:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;8727:43:14;;8762:7;;8756:4;;8744:10;;8727:43;;;;;8620:314;;;8820:7;;;:33;;;-1:-1:-1;;;8820:33:14;;8833:10;8820:33;;;;;;;8845:7;8820:33;;;;;-1:-1:-1;;;;;8820:7:14;;;;:12;;:33;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;8820:33:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8820:33:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;8876:43:14;;8911:7;;8905:4;;8893:10;;8876:43;;;;;8620:314;-1:-1:-1;;8961:23:14;;;;:17;:23;;;;;:30;;-1:-1:-1;;8961:30:14;8987:4;8961:30;;;;;;9008:11;;8014:1069;9066:5;9059:12;;;;;4224:905;4606:28;4616:11;4629:4;4606:9;:28::i;:::-;4654:10;-1:-1:-1;;;;;4654:30:14;;;;4646:75;;;;;-1:-1:-1;;;4646:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4822:27;;;;:21;:27;;;;;;;;4852:3;4822:33;;4865:17;:30;;-1:-1:-1;;;;;;4865:30:14;;;4885:10;4865:30;;;4906:17;:36;;-1:-1:-1;;;;;4906:36:14;;;;;;;;;;4953:19;:25;;;;;;:33;;-1:-1:-1;;4953:33:14;;;5038:17;;5019;;5003:59;;;;;;;5038:17;;;;5019;;5003:59;;;;;;;;5072:7;;;:35;;;-1:-1:-1;;;5072:35:14;;5089:10;5072:35;;;;;;;5101:5;5072:35;;;;;-1:-1:-1;;;;;5072:7:14;;;;:16;;:35;;;;;:7;;:35;;;;;;;:7;;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;5072:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5072:35:14;;;;4224:905;;:::o;698:87:9:-;491:21;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;2933:545:14:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3318:3:14;3291:24;:30;3349:12;;:41;;;-1:-1:-1;;;3349:41:14;;;;;;;;;;-1:-1:-1;;;;;3349:12:14;;;;:24;;:41;;;;;;;;;;;;;;;:12;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;3349:41:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3349:41:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3349:41:14;3332:14;:58;3400:13;:21;;-1:-1:-1;;3400:21:14;;;3433:7;;;:36;;;-1:-1:-1;;;3433:36:14;;3450:10;3433:36;;;;;;;3462:6;3433:36;;;;;-1:-1:-1;;;;;3433:7:14;;;;:16;;:36;;;;;3416:5;;3433:36;;;;;;;3416:5;3433:7;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;3433:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3433:36:14;;;;2933:545;:::o;5135:1308::-;5387:7;;;:35;;;-1:-1:-1;;;5387:35:14;;5404:10;5387:35;;;;;;;5416:5;5387:35;;;;;5194:4;;;;-1:-1:-1;;;;;5387:7:14;;:16;;:35;;;;;5194:4;;5387:35;;;;;;;;5194:4;5387:7;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;5387:35:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5463:17:14;;-1:-1:-1;;;;;5463:17:14;5449:10;:31;;-1:-1:-1;5449:31:14;;-1:-1:-1;5449:66:14;;-1:-1:-1;5498:17:14;;-1:-1:-1;;;;;5498:17:14;5484:10;:31;5449:66;5441:131;;;;-1:-1:-1;;;5441:131:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5593:27;;;;:21;:27;;;;;;5623:9;5593:39;5586:3;:46;5583:853;;5693:25;;;;:19;:25;;;;;;;;:34;5685:82;;;;-1:-1:-1;;;5685:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6156:28;6166:11;6179:4;6156:9;:28::i;:::-;6200:7;;;:33;;;-1:-1:-1;;;6200:33:14;;6213:10;6200:33;;;;;;;6225:7;6200:33;;;;;-1:-1:-1;;;;;6200:7:14;;;;:12;;:33;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6200:33:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:33:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;6252:45:14;;6289:7;;6283:4;;6271:10;;6252:45;;;;;-1:-1:-1;;6312:25:14;;;;:19;:25;;;;;:32;;-1:-1:-1;;6312:32:14;6340:4;6312:32;;;;;;6361:11;;791:75:9;833:26;846:12;:10;:12::i;:::-;833;:26::i;:::-;791:75::o;6479:1033:14:-;485:20:13;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:26:14;6938:9;6949:4;6928:9;:26::i;:::-;6966:25;;;;:19;:25;;;;;;;;6994:3;6966:31;;7007:17;:23;;;;;:31;;-1:-1:-1;;7007:31:14;;;7058:14;:21;7083:1;7058:26;7050:87;;;;-1:-1:-1;;;7050:87:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7152:9;7148:261;7171:14;:21;7167:25;;7148:261;;;7229:14;7244:1;7229:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7229:17:14;7215:10;:31;7212:187;;;7265:15;:28;;-1:-1:-1;;;;;;7265:28:14;7283:10;7265:28;;;7212:187;;;7344:15;7365:14;7380:1;7365:17;;;;;;;;;;;;;;;;;;;;27:10:-1;;7365:17:14;23:18:-1;;45:23;;7344:39:14;;;;;;;;;;-1:-1:-1;;;;;;7344:39:14;-1:-1:-1;;;;;7365:17:14;;;7344:39;;;;;;7212:187;7194:3;;7148:261;;;-1:-1:-1;7424:31:14;;;;;;;;7438:10;;7424:31;;;;;;;;;;7467:7;;;:36;;;-1:-1:-1;;;7467:36:14;;7484:10;7467:36;;;;;;;7496:6;7467:36;;;;;-1:-1:-1;;;;;7467:7:14;;;;:16;;:36;;;;;:7;;:36;;;;;;;:7;;:36;;;5:2:-1;;;;30:1;27;20:12;687:84:13;485:20;492:12;:10;:12::i;485:20::-;477:77;;;;-1:-1:-1;;;477:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:17;756:7;747:8;:17::i;2644:260:14:-;2709:4;;2724:155;2747:14;:21;2743:25;;2724:155;;;2812:11;-1:-1:-1;;;;;2791:32:14;:14;2806:1;2791:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2791:17:14;:32;2788:81;;;2849:4;2842:11;;;;;2788:81;2770:3;;2724:155;;;-1:-1:-1;2891:5:14;;2644:260;-1:-1:-1;;2644:260:14:o;3484:706::-;3708:14;;3696:8;:26;3688:54;;;;;-1:-1:-1;;;3688:54:14;;;;;;;;;;;;-1:-1:-1;;;3688:54:14;;;;;;;;;;;;;;;3763:24;;3757:3;:30;:76;;;;;3797:24;;3824:9;3797:36;3791:3;:42;3757:76;3753:422;;;3856:13;;;;:22;3848:70;;;;-1:-1:-1;;;3848:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3934:7;;;:33;;;-1:-1:-1;;;3934:33:14;;3947:10;3934:33;;;;;;;3959:7;3934:33;;;;;-1:-1:-1;;;;;3934:7:14;;;;:12;;:33;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;3934:33:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3934:33:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3982:13:14;:20;;-1:-1:-1;;3982:20:14;3998:4;3982:20;;;4021:30;;4043:7;;4031:10;;4021:30;;3982:13;;4021:30;3753:422;;;4092:7;;;4105:4;;4092:27;;;-1:-1:-1;;;4092:27:14;;-1:-1:-1;;;;;4105:4:14;;;4092:27;;;;;;;4111:7;4092:27;;;;;:7;;;:12;;:27;;;;;;;;;;;;;;:7;;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;4092:27:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4092:27:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;4149:4:14;;4139:24;;4155:7;;-1:-1:-1;;;;;4149:4:14;;4139:24;;4149:4;;4139:24;3484:706;:::o;777:73:13:-;818:25;830:12;:10;:12::i;:::-;818:11;:25::i;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;9360:441:14:-;9439:15;;9473:260;9496:13;;9492:17;;9473:260;;;9625:5;9612:6;9619:1;9612:9;;;;;;;;;;;;;;;;:18;9608:111;;;9667:4;9654:17;;9694:5;;9608:111;9511:3;;9473:260;;;;9754:10;9746:47;;;;;-1:-1:-1;;;9746:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;9360:441;;;:::o;9121:233::-;9205:9;9201:117;9224:13;;9220:17;;9201:117;;;9278:5;9265:6;9272:1;9265:9;;;;;;;;;;;;;;;;:18;;9257:50;;;;;-1:-1:-1;;;9257:50:14;;;;;;;;;;;;-1:-1:-1;;;9257:50:14;;;;;;;;;;;;;;;9239:3;;9201:117;;;-1:-1:-1;27:10;;39:1;23:18;;45:23;;-1:-1;9328:18:14;;;;;;;;;;;9121:233::o;872:116:9:-;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;994:124::-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;856:113:13:-;910:19;:6;921:7;910:19;:10;:19;:::i;:::-;944:18;;-1:-1:-1;;;;;944:18:13;;;;;;;;856:113;:::o;975:121::-;1032:22;:6;1046:7;1032:22;:13;:22;:::i;:::-;1069:20;;-1:-1:-1;;;;;1069:20:13;;;;;;;;975:121;:::o;260:175:1:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    86,
    10118
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78591BFD GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB463A75C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB463A75C EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xD5D35F95 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xD9A431B3 EQ PUSH2 0x2AE JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x78591BFD EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xA5C6A022 EQ PUSH2 0x228 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x561675E1 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x561675E1 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x612B7543 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x76A9E7B3 EQ PUSH2 0x1E6 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x24851914 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x14F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x467 JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x764 JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x923 JUMP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x175 PUSH2 0xC97 JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1191 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1191 AND JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x330 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x308 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x328 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2E7 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920726567697374657265642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x3D8 DUP3 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x3E5 JUMPI PUSH2 0x3E5 DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 LT ISZERO PUSH2 0x42F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2A37B79036B0B73C903A32B0B6B997 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH2 0x474 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161E PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 ADD TIMESTAMP LT SWAP1 POP PUSH2 0x75A JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15FB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59C PUSH1 0xE DUP5 PUSH2 0x11FC JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x675 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x5150AE84A8CDF00000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH9 0x5150AE84A8CDF00000 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 SWAP1 PUSH1 0x0 SWAP1 LOG4 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x76F PUSH1 0x9 DUP3 PUSH2 0x1290 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x7CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616464726573736573206D75737420626520646966666572656E742E PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR DUP3 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 SWAP1 SWAP4 AND OR DUP2 SSTORE PUSH1 0xC DUP6 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP4 SLOAD SWAP1 SLOAD DUP3 MLOAD DUP7 DUP2 MSTORE SWAP3 MLOAD SWAP2 DUP6 AND SWAP5 AND SWAP3 PUSH32 0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DC PUSH2 0x8D7 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15CD PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x920 DUP2 PUSH2 0x131D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0x8D7 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15CD PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9671193 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9671193 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP2 POP DUP2 SWAP1 POP PUSH2 0xB07 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1599 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 ADD TIMESTAMP LT PUSH2 0x75A JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15FB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 PUSH1 0x9 DUP5 PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x2CC JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0xCA2 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x1365 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCB4 PUSH2 0x474 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161E PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFA PUSH1 0xE DUP3 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 EQ PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1526 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD78 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xDAB JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDBA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0xD61 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9C PUSH2 0x474 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x161E PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x920 DUP2 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xF32 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF05 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF2A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xEE4 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 EQ PUSH2 0xF83 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2BB937B7339034B210383934B1B297 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xF98 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x3C ADD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15FB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x24 DUP5 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x103C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1050 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH9 0x410D586A20A4C00000 SWAP1 CALLER SWAP1 PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH9 0x6C6B935B8BBD400000 PUSH1 0x24 DUP6 ADD MSTORE MLOAD SWAP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1125 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x113B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH9 0x6C6B935B8BBD400000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0x118C PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1577 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x1238 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1216 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x1230 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1200 JUMP JUMPDEST POP DUP1 PUSH2 0x128B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756C646E27742066696E642079756F7220666C6167210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x1304 JUMPI DUP2 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x12FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x466C616720616C7265616479207573656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x1293 JUMP JUMPDEST POP DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x132E PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x143D AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1376 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x14BE AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x13BE PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x143D AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x3F5F1DB80208F0D453083A86E16909CECC1E95E2618D5D927C93ACE22B8200FC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1406 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x14BE AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x26B6063D78AEFCF96F02FF06BC9822B5A623278253ADD7FFFA5FB453DB399810 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1447 DUP3 DUP3 PUSH2 0x1191 JUMP JUMPDEST ISZERO PUSH2 0x1499 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14C8 DUP3 DUP3 PUSH2 0x1191 JUMP JUMPDEST PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1556 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID NUMBER PUSH9 0x616C6C656E67652063 PUSH2 0x6E27 PUSH21 0x20737461727420756E74696C20616C6C207465616D PUSH20 0x207265676974657265642E526F6C65733A206163 PUSH4 0x6F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65526F6C6573 GASPRICE KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373596F75206D7573742062652065697468 PUSH6 0x722074686520 PUSH4 0x68616C6C PUSH6 0x6E676572206F PUSH19 0x20746865206368616C6C656E6765642E41646D PUSH10 0x6E526F6C653A2063616C PUSH13 0x657220646F6573206E6F742068 PUSH2 0x7665 KECCAK256 PUSH21 0x68652041646D696E20726F6C65546865206368616C PUSH13 0x656E67652068617320616C7265 PUSH2 0x6479 KECCAK256 PUSH3 0x65656E KECCAK256 PUSH24 0x6F6E2E5465616D526F6C653A2063616C6C657220646F6573 KECCAK256 PUSH15 0x6F7420686176652074686520546561 PUSH14 0x20726F6C65A265627A7A72315820 PUSH9 0x78C798F7A39B062019 SMOD ORIGIN CODESIZE MSTORE8 0xBC MLOAD NUMBER SWAP16 0x4F 0x4B JUMPDEST 0x2B ADDRESS SWAP14 SELFDESTRUCT 0xC1 CREATE2 DUP14 CREATE2 0xC2 0xAE 0xF9 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        86,
        10118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        86,
        10118
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78591BFD"
    },
    "38": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB463A75C"
    },
    "49": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "GT",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB463A75C"
    },
    "60": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x245"
    },
    "64": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3C5A547"
    },
    "71": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26B"
    },
    "75": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD5D35F95"
    },
    "82": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x291"
    },
    "86": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD9A431B3"
    },
    "93": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2AE"
    },
    "97": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "101": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMP",
      "path": "14"
    },
    "102": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "104": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x78591BFD"
    },
    "109": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203"
    },
    "113": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8BAD0C0A"
    },
    "120": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x220"
    },
    "124": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA5C6A022"
    },
    "131": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x228"
    },
    "135": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "139": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMP",
      "path": "14"
    },
    "140": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "141": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "142": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x561675E1"
    },
    "147": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "GT",
      "path": "14"
    },
    "148": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "152": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "153": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x561675E1"
    },
    "158": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x177"
    },
    "162": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "163": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "164": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x612B7543"
    },
    "169": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x194"
    },
    "173": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "175": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70480275"
    },
    "180": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "181": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C0"
    },
    "184": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "185": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "186": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x76A9E7B3"
    },
    "191": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "192": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E6"
    },
    "195": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "196": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "199": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMP",
      "path": "14"
    },
    "200": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "201": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "202": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x24851914"
    },
    "207": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "208": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "213": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x24D7806C"
    },
    "218": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x129"
    },
    "222": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "224": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4420E486"
    },
    "229": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "EQ",
      "path": "14"
    },
    "230": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x14F"
    },
    "233": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "235": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "DUP1",
      "path": "14"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        86,
        10118
      ],
      "op": "REVERT",
      "path": "14"
    },
    "239": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "240": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x115"
    },
    "243": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "245": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP1",
      "path": "13"
    },
    "246": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "247": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SUB",
      "path": "13"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "DUP2"
    },
    "251": {
      "op": "LT"
    },
    "252": {
      "op": "ISZERO"
    },
    "253": {
      "op": "PUSH2",
      "value": "0x105"
    },
    "256": {
      "op": "JUMPI"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "259": {
      "op": "DUP1"
    },
    "260": {
      "op": "REVERT"
    },
    "261": {
      "op": "JUMPDEST"
    },
    "262": {
      "op": "POP"
    },
    "263": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "op": "SUB"
    },
    "272": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "AND",
      "path": "13"
    },
    "273": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B6"
    },
    "276": {
      "fn": "TeamRole.isTeam",
      "jump": "i",
      "offset": [
        578,
        681
      ],
      "op": "JUMP",
      "path": "13"
    },
    "277": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "278": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "280": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP1",
      "path": "13"
    },
    "281": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "282": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "283": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "284": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "285": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP3",
      "path": "13"
    },
    "286": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "287": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "288": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "289": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "DUP2",
      "path": "13"
    },
    "290": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "291": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SUB",
      "path": "13"
    },
    "292": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "294": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "ADD",
      "path": "13"
    },
    "295": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "296": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "RETURN",
      "path": "13"
    },
    "297": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "298": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x115"
    },
    "301": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "303": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "304": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "305": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "308": {
      "op": "DUP2"
    },
    "309": {
      "op": "LT"
    },
    "310": {
      "op": "ISZERO"
    },
    "311": {
      "op": "PUSH2",
      "value": "0x13F"
    },
    "314": {
      "op": "JUMPI"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "317": {
      "op": "DUP1"
    },
    "318": {
      "op": "REVERT"
    },
    "319": {
      "op": "JUMPDEST"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "SHL"
    },
    "329": {
      "op": "SUB"
    },
    "330": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "331": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D1"
    },
    "334": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "335": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "336": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175"
    },
    "339": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "341": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "DUP1",
      "path": "14"
    },
    "342": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "343": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "SUB",
      "path": "14"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "346": {
      "op": "DUP2"
    },
    "347": {
      "op": "LT"
    },
    "348": {
      "op": "ISZERO"
    },
    "349": {
      "op": "PUSH2",
      "value": "0x165"
    },
    "352": {
      "op": "JUMPI"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "355": {
      "op": "DUP1"
    },
    "356": {
      "op": "REVERT"
    },
    "357": {
      "op": "JUMPDEST"
    },
    "358": {
      "op": "POP"
    },
    "359": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "366": {
      "op": "SHL"
    },
    "367": {
      "op": "SUB"
    },
    "368": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "AND",
      "path": "14"
    },
    "369": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E3"
    },
    "372": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        1834,
        2638
      ],
      "op": "JUMP",
      "path": "14"
    },
    "373": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "374": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "STOP",
      "path": "14"
    },
    "375": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "376": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x115"
    },
    "379": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "381": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "DUP1",
      "path": "14"
    },
    "382": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "383": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "SUB",
      "path": "14"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "386": {
      "op": "DUP2"
    },
    "387": {
      "op": "LT"
    },
    "388": {
      "op": "ISZERO"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x18D"
    },
    "392": {
      "op": "JUMPI"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "DUP1"
    },
    "396": {
      "op": "REVERT"
    },
    "397": {
      "op": "JUMPDEST"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "400": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x467"
    },
    "403": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        7518,
        9089
      ],
      "op": "JUMP",
      "path": "14"
    },
    "404": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "405": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175"
    },
    "408": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "410": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "DUP1",
      "path": "14"
    },
    "411": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "412": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "SUB",
      "path": "14"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "415": {
      "op": "DUP2"
    },
    "416": {
      "op": "LT"
    },
    "417": {
      "op": "ISZERO"
    },
    "418": {
      "op": "PUSH2",
      "value": "0x1AA"
    },
    "421": {
      "op": "JUMPI"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "424": {
      "op": "DUP1"
    },
    "425": {
      "op": "REVERT"
    },
    "426": {
      "op": "JUMPDEST"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "DUP2",
      "path": "14"
    },
    "437": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "438": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "AND",
      "path": "14"
    },
    "439": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "440": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "442": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "ADD",
      "path": "14"
    },
    "443": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "444": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x764"
    },
    "447": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4224,
        5129
      ],
      "op": "JUMP",
      "path": "14"
    },
    "448": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "449": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x175"
    },
    "452": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "454": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "455": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "456": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "459": {
      "op": "DUP2"
    },
    "460": {
      "op": "LT"
    },
    "461": {
      "op": "ISZERO"
    },
    "462": {
      "op": "PUSH2",
      "value": "0x1D6"
    },
    "465": {
      "op": "JUMPI"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "468": {
      "op": "DUP1"
    },
    "469": {
      "op": "REVERT"
    },
    "470": {
      "op": "JUMPDEST"
    },
    "471": {
      "op": "POP"
    },
    "472": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "479": {
      "op": "SHL"
    },
    "480": {
      "op": "SUB"
    },
    "481": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "482": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8CC"
    },
    "485": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "486": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "487": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175"
    },
    "490": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "492": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "DUP1",
      "path": "14"
    },
    "493": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "494": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "SUB",
      "path": "14"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "497": {
      "op": "DUP2"
    },
    "498": {
      "op": "LT"
    },
    "499": {
      "op": "ISZERO"
    },
    "500": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "503": {
      "op": "JUMPI"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "506": {
      "op": "DUP1"
    },
    "507": {
      "op": "REVERT"
    },
    "508": {
      "op": "JUMPDEST"
    },
    "509": {
      "op": "POP"
    },
    "510": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "511": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x923"
    },
    "514": {
      "fn": "token_challenge.overnightStart",
      "jump": "i",
      "offset": [
        2933,
        3478
      ],
      "op": "JUMP",
      "path": "14"
    },
    "515": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "516": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x115"
    },
    "519": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "521": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "DUP1",
      "path": "14"
    },
    "522": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "523": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "SUB",
      "path": "14"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "526": {
      "op": "DUP2"
    },
    "527": {
      "op": "LT"
    },
    "528": {
      "op": "ISZERO"
    },
    "529": {
      "op": "PUSH2",
      "value": "0x219"
    },
    "532": {
      "op": "JUMPI"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "535": {
      "op": "DUP1"
    },
    "536": {
      "op": "REVERT"
    },
    "537": {
      "op": "JUMPDEST"
    },
    "538": {
      "op": "POP"
    },
    "539": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "540": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA6B"
    },
    "543": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        5135,
        6443
      ],
      "op": "JUMP",
      "path": "14"
    },
    "544": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "545": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x175"
    },
    "548": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC97"
    },
    "551": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "552": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "553": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175"
    },
    "556": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "558": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "DUP1",
      "path": "14"
    },
    "559": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "560": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "SUB",
      "path": "14"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "op": "DUP2"
    },
    "564": {
      "op": "LT"
    },
    "565": {
      "op": "ISZERO"
    },
    "566": {
      "op": "PUSH2",
      "value": "0x23E"
    },
    "569": {
      "op": "JUMPI"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "572": {
      "op": "DUP1"
    },
    "573": {
      "op": "REVERT"
    },
    "574": {
      "op": "JUMPDEST"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "577": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCA9"
    },
    "580": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6479,
        7512
      ],
      "op": "JUMP",
      "path": "14"
    },
    "581": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "582": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x175"
    },
    "585": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "587": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "DUP1",
      "path": "13"
    },
    "588": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "589": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "SUB",
      "path": "13"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "592": {
      "op": "DUP2"
    },
    "593": {
      "op": "LT"
    },
    "594": {
      "op": "ISZERO"
    },
    "595": {
      "op": "PUSH2",
      "value": "0x25B"
    },
    "598": {
      "op": "JUMPI"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "601": {
      "op": "DUP1"
    },
    "602": {
      "op": "REVERT"
    },
    "603": {
      "op": "JUMPDEST"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "AND",
      "path": "13"
    },
    "615": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE91"
    },
    "618": {
      "fn": "TeamRole.addTeam",
      "jump": "i",
      "offset": [
        687,
        771
      ],
      "op": "JUMP",
      "path": "13"
    },
    "619": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "620": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x115"
    },
    "623": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "625": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "DUP1",
      "path": "14"
    },
    "626": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "627": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "SUB",
      "path": "14"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "DUP2"
    },
    "631": {
      "op": "LT"
    },
    "632": {
      "op": "ISZERO"
    },
    "633": {
      "op": "PUSH2",
      "value": "0x281"
    },
    "636": {
      "op": "JUMPI"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "639": {
      "op": "DUP1"
    },
    "640": {
      "op": "REVERT"
    },
    "641": {
      "op": "JUMPDEST"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "op": "SUB"
    },
    "652": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "AND",
      "path": "14"
    },
    "653": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEE0"
    },
    "656": {
      "fn": "token_challenge.isRegistered",
      "jump": "i",
      "offset": [
        2644,
        2904
      ],
      "op": "JUMP",
      "path": "14"
    },
    "657": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "658": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175"
    },
    "661": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "663": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "DUP1",
      "path": "14"
    },
    "664": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "665": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "SUB",
      "path": "14"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "668": {
      "op": "DUP2"
    },
    "669": {
      "op": "LT"
    },
    "670": {
      "op": "ISZERO"
    },
    "671": {
      "op": "PUSH2",
      "value": "0x2A7"
    },
    "674": {
      "op": "JUMPI"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "677": {
      "op": "DUP1"
    },
    "678": {
      "op": "REVERT"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "682": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF3B"
    },
    "685": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3484,
        4190
      ],
      "op": "JUMP",
      "path": "14"
    },
    "686": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "687": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x175"
    },
    "690": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1181"
    },
    "693": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        777,
        850
      ],
      "op": "JUMP",
      "path": "13"
    },
    "694": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "695": {
      "fn": "TeamRole.isTeam",
      "offset": [
        632,
        636
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "697": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 0,
      "value": "0x2C9"
    },
    "700": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "702": {
      "fn": "TeamRole.isTeam",
      "offset": [
        666,
        673
      ],
      "op": "DUP4",
      "path": "13"
    },
    "703": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "708": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        665
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1191"
    },
    "711": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "AND",
      "path": "13"
    },
    "712": {
      "fn": "TeamRole.isTeam",
      "jump": "i",
      "offset": [
        655,
        674
      ],
      "op": "JUMP",
      "path": "13"
    },
    "713": {
      "fn": "TeamRole.isTeam",
      "offset": [
        655,
        674
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "714": {
      "fn": "TeamRole.isTeam",
      "offset": [
        648,
        674
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "715": {
      "fn": "TeamRole.isTeam",
      "offset": [
        648,
        674
      ],
      "op": "POP",
      "path": "13"
    },
    "716": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "717": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "718": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "719": {
      "fn": "TeamRole.isTeam",
      "offset": [
        578,
        681
      ],
      "op": "POP",
      "path": "13"
    },
    "720": {
      "fn": "TeamRole.isTeam",
      "jump": "o",
      "offset": [
        578,
        681
      ],
      "op": "JUMP",
      "path": "13"
    },
    "721": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "722": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "724": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 1,
      "value": "0x2C9"
    },
    "727": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "728": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "729": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "734": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1191"
    },
    "737": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "738": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "739": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "740": {
      "fn": "token_challenge.register",
      "offset": [
        1966,
        1989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "742": {
      "fn": "token_challenge.register",
      "offset": [
        1966,
        1989
      ],
      "op": "DUP1",
      "path": "14"
    },
    "743": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "744": {
      "fn": "token_challenge.register",
      "offset": [
        2162,
        2176
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "746": {
      "fn": "token_challenge.register",
      "offset": [
        2162,
        2183
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "747": {
      "fn": "token_challenge.register",
      "offset": [
        2158,
        2183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "748": {
      "fn": "token_challenge.register",
      "offset": [
        2158,
        2183
      ],
      "op": "LT",
      "path": "14"
    },
    "749": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "750": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x330"
    },
    "753": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "754": {
      "fn": "token_challenge.register",
      "offset": [
        2227,
        2238
      ],
      "op": "DUP3",
      "path": "14"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2238
      ],
      "op": "AND",
      "path": "14"
    },
    "764": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2220
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "766": {
      "fn": "token_challenge.register",
      "offset": [
        2221,
        2222
      ],
      "op": "DUP3",
      "path": "14"
    },
    "767": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "DUP2",
      "path": "14"
    },
    "768": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "769": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "DUP2",
      "path": "14"
    },
    "770": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "LT",
      "path": "14"
    },
    "771": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x308"
    },
    "774": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "775": {
      "dev": "Index out of range",
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "INVALID",
      "path": "14"
    },
    "776": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "777": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "779": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "780": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "DUP3",
      "path": "14"
    },
    "781": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "782": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "784": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "785": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "786": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "787": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "788": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2223
      ],
      "op": "AND",
      "path": "14"
    },
    "798": {
      "branch": 84,
      "fn": "token_challenge.register",
      "offset": [
        2206,
        2238
      ],
      "op": "EQ",
      "path": "14"
    },
    "799": {
      "fn": "token_challenge.register",
      "offset": [
        2203,
        2298
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "800": {
      "fn": "token_challenge.register",
      "offset": [
        2203,
        2298
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x328"
    },
    "803": {
      "branch": 84,
      "fn": "token_challenge.register",
      "offset": [
        2203,
        2298
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "804": {
      "fn": "token_challenge.register",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 2,
      "value": "0x1"
    },
    "806": {
      "fn": "token_challenge.register",
      "offset": [
        2257,
        2282
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "807": {
      "fn": "token_challenge.register",
      "offset": [
        2257,
        2282
      ],
      "op": "POP",
      "path": "14"
    },
    "808": {
      "fn": "token_challenge.register",
      "offset": [
        2203,
        2298
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "809": {
      "fn": "token_challenge.register",
      "offset": [
        2185,
        2188
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x1"
    },
    "811": {
      "fn": "token_challenge.register",
      "offset": [
        2185,
        2188
      ],
      "op": "ADD",
      "path": "14"
    },
    "812": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E7"
    },
    "815": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "JUMP",
      "path": "14"
    },
    "816": {
      "fn": "token_challenge.register",
      "offset": [
        2139,
        2308
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "817": {
      "op": "POP"
    },
    "818": {
      "fn": "token_challenge.register",
      "offset": [
        2325,
        2352
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 4
    },
    "819": {
      "branch": 85,
      "fn": "token_challenge.register",
      "offset": [
        2325,
        2352
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "820": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x384"
    },
    "823": {
      "branch": 85,
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "824": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "826": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "DUP1",
      "path": "14"
    },
    "827": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "DUP2",
      "path": "14"
    },
    "836": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "837": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "839": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "841": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "DUP3",
      "path": "14"
    },
    "842": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "ADD",
      "path": "14"
    },
    "843": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "844": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "846": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "848": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "DUP3",
      "path": "14"
    },
    "849": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "ADD",
      "path": "14"
    },
    "850": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "851": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x596F7527726520616C726561647920726567697374657265642E000000000000"
    },
    "884": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "886": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "DUP3",
      "path": "14"
    },
    "887": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "ADD",
      "path": "14"
    },
    "888": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "889": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "890": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "891": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "892": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "DUP2",
      "path": "14"
    },
    "893": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "894": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "SUB",
      "path": "14"
    },
    "895": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "897": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "ADD",
      "path": "14"
    },
    "898": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "899": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "REVERT",
      "path": "14"
    },
    "900": {
      "fn": "token_challenge.register",
      "offset": [
        2317,
        2383
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "901": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2409
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 5,
      "value": "0x5"
    },
    "903": {
      "op": "DUP1"
    },
    "904": {
      "op": "SLOAD"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "DUP2"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "DUP3"
    },
    "910": {
      "op": "SSTORE"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "913": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "914": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "915": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "916": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "917": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "950": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "ADD",
      "path": "14"
    },
    "951": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "DUP1",
      "path": "14"
    },
    "952": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "op": "NOT"
    },
    "962": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "AND",
      "path": "14"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "op": "SUB"
    },
    "971": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "DUP5",
      "path": "14"
    },
    "972": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "AND",
      "path": "14"
    },
    "973": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "OR",
      "path": "14"
    },
    "974": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "975": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "976": {
      "fn": "token_challenge.register",
      "offset": [
        2443,
        2462
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3D8"
    },
    "979": {
      "fn": "token_challenge.register",
      "offset": [
        2395,
        2427
      ],
      "op": "DUP3",
      "path": "14"
    },
    "980": {
      "fn": "token_challenge.register",
      "offset": [
        2443,
        2449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2B6"
    },
    "983": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2443,
        2462
      ],
      "op": "JUMP",
      "path": "14"
    },
    "984": {
      "fn": "token_challenge.register",
      "offset": [
        2443,
        2462
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "985": {
      "fn": "token_challenge.register",
      "offset": [
        2438,
        2509
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E5"
    },
    "988": {
      "fn": "token_challenge.register",
      "offset": [
        2438,
        2509
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "989": {
      "fn": "token_challenge.register",
      "offset": [
        2478,
        2498
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 6,
      "value": "0x3E5"
    },
    "992": {
      "fn": "token_challenge.register",
      "offset": [
        2486,
        2497
      ],
      "op": "DUP3",
      "path": "14"
    },
    "993": {
      "fn": "token_challenge.register",
      "offset": [
        2478,
        2485
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE91"
    },
    "996": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        2478,
        2498
      ],
      "op": "JUMP",
      "path": "14"
    },
    "997": {
      "fn": "token_challenge.register",
      "offset": [
        2478,
        2498
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "998": {
      "fn": "token_challenge.register",
      "offset": [
        2536,
        2550
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x5"
    },
    "1000": {
      "fn": "token_challenge.register",
      "offset": [
        2536,
        2557
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1001": {
      "fn": "token_challenge.register",
      "offset": [
        2561,
        2562
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1003": {
      "op": "LT"
    },
    "1004": {
      "branch": 86,
      "fn": "token_challenge.register",
      "offset": [
        2536,
        2562
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1005": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x42F"
    },
    "1008": {
      "branch": 86,
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1009": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1011": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1012": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1021": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1022": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1024": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1026": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1027": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "ADD",
      "path": "14"
    },
    "1028": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1029": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "1031": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1033": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1034": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "ADD",
      "path": "14"
    },
    "1035": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1036": {
      "op": "PUSH15",
      "value": "0x2A37B79036B0B73C903A32B0B6B997"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1057": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1058": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "ADD",
      "path": "14"
    },
    "1059": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1060": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1061": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1062": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1063": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1064": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1065": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "SUB",
      "path": "14"
    },
    "1066": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1068": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "ADD",
      "path": "14"
    },
    "1069": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1070": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1071": {
      "fn": "token_challenge.register",
      "offset": [
        2528,
        2582
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1072": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 8,
      "value": "0x40"
    },
    "1074": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1084": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "AND",
      "path": "14"
    },
    "1085": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1086": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9"
    },
    "1119": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1120": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1122": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1123": {
      "fn": "token_challenge.register",
      "offset": [
        2607,
        2630
      ],
      "op": "LOG2",
      "path": "14"
    },
    "1124": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "POP",
      "path": "14"
    },
    "1125": {
      "fn": "token_challenge.register",
      "offset": [
        1834,
        2638
      ],
      "op": "POP",
      "path": "14"
    },
    "1126": {
      "fn": "token_challenge.register",
      "jump": "o",
      "offset": [
        1834,
        2638
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1127": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7518,
        9089
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1128": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7584,
        7588
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1130": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x479"
    },
    "1133": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x474"
    },
    "1136": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11F8"
    },
    "1139": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1140": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        492,
        504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1141": {
      "offset": [
        485,
        491
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B6"
    },
    "1144": {
      "jump": "i",
      "offset": [
        485,
        505
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1145": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1146": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4B4"
    },
    "1149": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1150": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1152": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1153": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1161": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1162": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1164": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1165": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1166": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1167": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1169": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1170": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1171": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1172": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "1173": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1174": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1175": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "1177": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1178": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1179": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1181": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1182": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1183": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x161E"
    },
    "1186": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "1188": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1189": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1190": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1192": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "1193": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1194": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "1195": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "1196": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1198": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1199": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1200": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1201": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "1202": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1203": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1204": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1205": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x4"
    },
    "1207": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1208": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1209": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1211": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1212": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1213": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1222": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1223": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7798,
        7808
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1224": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1225": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1226": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "ADD",
      "path": "14"
    },
    "1227": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1228": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1229": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1230": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1231": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7810,
        7816
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x56BC75E2D63100000"
    },
    "1241": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1243": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1244": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "ADD",
      "path": "14"
    },
    "1245": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1246": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1247": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7746,
        7761
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1249": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7746,
        7761
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1259": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1260": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "AND",
      "path": "14"
    },
    "1261": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1262": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7797
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "1267": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7797
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1268": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1270": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1271": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1272": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "ADD",
      "path": "14"
    },
    "1273": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1274": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7746,
        7761
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1275": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7746,
        7761
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1276": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1277": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1278": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1279": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1280": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "SUB",
      "path": "14"
    },
    "1281": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "ADD",
      "path": "14"
    },
    "1282": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1283": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7746,
        7761
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1284": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7788
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1285": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1286": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1287": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1288": {
      "op": "DUP1"
    },
    "1289": {
      "op": "ISZERO"
    },
    "1290": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1293": {
      "op": "JUMPI"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1296": {
      "op": "DUP1"
    },
    "1297": {
      "op": "REVERT"
    },
    "1298": {
      "op": "JUMPDEST"
    },
    "1299": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "POP",
      "path": "14"
    },
    "1300": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "GAS",
      "path": "14"
    },
    "1301": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "CALL",
      "path": "14"
    },
    "1302": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7781,
        7817
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1303": {
      "op": "DUP1"
    },
    "1304": {
      "op": "ISZERO"
    },
    "1305": {
      "op": "PUSH2",
      "value": "0x526"
    },
    "1308": {
      "op": "JUMPI"
    },
    "1309": {
      "op": "RETURNDATASIZE"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "DUP1"
    },
    "1313": {
      "op": "RETURNDATACOPY"
    },
    "1314": {
      "op": "RETURNDATASIZE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1317": {
      "op": "REVERT"
    },
    "1318": {
      "op": "JUMPDEST"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "op": "POP"
    },
    "1322": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1324": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1325": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1326": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1327": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8043
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "1329": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1331": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1332": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1334": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1335": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1336": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8049
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1337": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8052,
        8061
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1339": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8024,
        8061
      ],
      "op": "ADD",
      "path": "14"
    },
    "1340": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8017,
        8020
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "1341": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8017,
        8061
      ],
      "op": "LT",
      "path": "14"
    },
    "1342": {
      "branch": 87,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8017,
        8061
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1343": {
      "op": "POP"
    },
    "1344": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8014,
        9083
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75A"
    },
    "1347": {
      "branch": 87,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8014,
        9083
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1348": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x0"
    },
    "1350": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1351": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1352": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1353": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8138
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "1355": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1357": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1358": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1360": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1361": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1362": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1363": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1365": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8144
      ],
      "op": "AND",
      "path": "14"
    },
    "1366": {
      "branch": 88,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8121,
        8153
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1367": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x591"
    },
    "1370": {
      "branch": 88,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1371": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1373": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1382": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1383": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1385": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "ADD",
      "path": "14"
    },
    "1386": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1387": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1388": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1390": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "ADD",
      "path": "14"
    },
    "1391": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1392": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1393": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "SUB",
      "path": "14"
    },
    "1394": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1395": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1396": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "1398": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1399": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1400": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1402": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "ADD",
      "path": "14"
    },
    "1403": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1404": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15FB"
    },
    "1407": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "1409": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1410": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "1411": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1413": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "ADD",
      "path": "14"
    },
    "1414": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1415": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "POP",
      "path": "14"
    },
    "1416": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "POP",
      "path": "14"
    },
    "1417": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1419": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1420": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1421": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1422": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "SUB",
      "path": "14"
    },
    "1423": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1424": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1425": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8113,
        8193
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1426": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8578,
        8604
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 11,
      "value": "0x59C"
    },
    "1429": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8588,
        8597
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "1431": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8599,
        8603
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1432": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8578,
        8587
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11FC"
    },
    "1435": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        8578,
        8604
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1436": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8578,
        8604
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1437": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8637,
        8652
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "1439": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8637,
        8652
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8637,
        8652
      ],
      "op": "AND",
      "path": "14"
    },
    "1449": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8623,
        8633
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1450": {
      "branch": 89,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8623,
        8652
      ],
      "op": "EQ",
      "path": "14"
    },
    "1451": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1452": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x675"
    },
    "1455": {
      "branch": 89,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1456": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0x4"
    },
    "1458": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1459": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1460": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1462": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1463": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1464": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1473": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1474": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8684,
        8694
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1475": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1476": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1477": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "ADD",
      "path": "14"
    },
    "1478": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1479": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1480": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1481": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1482": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8696,
        8703
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x5150AE84A8CDF00000"
    },
    "1492": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1494": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1495": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "ADD",
      "path": "14"
    },
    "1496": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1497": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1504": {
      "op": "SHL"
    },
    "1505": {
      "op": "SUB"
    },
    "1506": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1507": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1508": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "AND",
      "path": "14"
    },
    "1509": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1510": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8683
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "1515": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8683
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1516": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1518": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1519": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1520": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "ADD",
      "path": "14"
    },
    "1521": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1522": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1524": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1525": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1526": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1527": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1528": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1529": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "SUB",
      "path": "14"
    },
    "1530": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "ADD",
      "path": "14"
    },
    "1531": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1532": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1534": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8678
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1535": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1536": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1537": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1538": {
      "op": "DUP1"
    },
    "1539": {
      "op": "ISZERO"
    },
    "1540": {
      "op": "PUSH2",
      "value": "0x60C"
    },
    "1543": {
      "op": "JUMPI"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1546": {
      "op": "DUP1"
    },
    "1547": {
      "op": "REVERT"
    },
    "1548": {
      "op": "JUMPDEST"
    },
    "1549": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "POP",
      "path": "14"
    },
    "1550": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "GAS",
      "path": "14"
    },
    "1551": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "CALL",
      "path": "14"
    },
    "1552": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "ISZERO"
    },
    "1555": {
      "op": "PUSH2",
      "value": "0x620"
    },
    "1558": {
      "op": "JUMPI"
    },
    "1559": {
      "op": "RETURNDATASIZE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1562": {
      "op": "DUP1"
    },
    "1563": {
      "op": "RETURNDATACOPY"
    },
    "1564": {
      "op": "RETURNDATASIZE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "REVERT"
    },
    "1568": {
      "op": "JUMPDEST"
    },
    "1569": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "POP",
      "path": "14"
    },
    "1570": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "POP",
      "path": "14"
    },
    "1571": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "POP",
      "path": "14"
    },
    "1572": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "POP",
      "path": "14"
    },
    "1573": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1575": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1576": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8671,
        8704
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1579": {
      "op": "DUP2"
    },
    "1580": {
      "op": "LT"
    },
    "1581": {
      "op": "ISZERO"
    },
    "1582": {
      "op": "PUSH2",
      "value": "0x636"
    },
    "1585": {
      "op": "JUMPI"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1588": {
      "op": "DUP1"
    },
    "1589": {
      "op": "REVERT"
    },
    "1590": {
      "op": "JUMPDEST"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 13,
      "value": "0x40"
    },
    "1595": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1596": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8762,
        8769
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x5150AE84A8CDF00000"
    },
    "1606": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8762,
        8769
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1607": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8756,
        8760
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1608": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8756,
        8760
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1609": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8744,
        8754
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1610": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8744,
        8754
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1611": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "1644": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1645": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1647": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1648": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8727,
        8770
      ],
      "op": "LOG4",
      "path": "14"
    },
    "1649": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x737"
    },
    "1652": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1653": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1654": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x4"
    },
    "1656": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1657": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1658": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1660": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1661": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1662": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1671": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1672": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8833,
        8843
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1673": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1674": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1675": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "ADD",
      "path": "14"
    },
    "1676": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1677": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1678": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1679": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1680": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8845,
        8852
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1690": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1692": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1693": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "ADD",
      "path": "14"
    },
    "1694": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1695": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1705": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1706": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "AND",
      "path": "14"
    },
    "1707": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1708": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8832
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "1713": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8832
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1714": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1716": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1717": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1718": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "ADD",
      "path": "14"
    },
    "1719": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1720": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1722": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1723": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1724": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1725": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1726": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1727": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "SUB",
      "path": "14"
    },
    "1728": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "ADD",
      "path": "14"
    },
    "1729": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1730": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1732": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8827
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1733": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1734": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1735": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1736": {
      "op": "DUP1"
    },
    "1737": {
      "op": "ISZERO"
    },
    "1738": {
      "op": "PUSH2",
      "value": "0x6D2"
    },
    "1741": {
      "op": "JUMPI"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1744": {
      "op": "DUP1"
    },
    "1745": {
      "op": "REVERT"
    },
    "1746": {
      "op": "JUMPDEST"
    },
    "1747": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "POP",
      "path": "14"
    },
    "1748": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "GAS",
      "path": "14"
    },
    "1749": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "CALL",
      "path": "14"
    },
    "1750": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1751": {
      "op": "DUP1"
    },
    "1752": {
      "op": "ISZERO"
    },
    "1753": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1756": {
      "op": "JUMPI"
    },
    "1757": {
      "op": "RETURNDATASIZE"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1760": {
      "op": "DUP1"
    },
    "1761": {
      "op": "RETURNDATACOPY"
    },
    "1762": {
      "op": "RETURNDATASIZE"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1765": {
      "op": "REVERT"
    },
    "1766": {
      "op": "JUMPDEST"
    },
    "1767": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "POP",
      "path": "14"
    },
    "1768": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "POP",
      "path": "14"
    },
    "1769": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "POP",
      "path": "14"
    },
    "1770": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "POP",
      "path": "14"
    },
    "1771": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1773": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1774": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8820,
        8853
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1777": {
      "op": "DUP2"
    },
    "1778": {
      "op": "LT"
    },
    "1779": {
      "op": "ISZERO"
    },
    "1780": {
      "op": "PUSH2",
      "value": "0x6FC"
    },
    "1783": {
      "op": "JUMPI"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1786": {
      "op": "DUP1"
    },
    "1787": {
      "op": "REVERT"
    },
    "1788": {
      "op": "JUMPDEST"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 15,
      "value": "0x40"
    },
    "1793": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1794": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8911,
        8918
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1804": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8911,
        8918
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1805": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8905,
        8909
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1806": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8905,
        8909
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1807": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8893,
        8903
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1808": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8893,
        8903
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1809": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "1842": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1843": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1845": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1846": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8876,
        8919
      ],
      "op": "LOG4",
      "path": "14"
    },
    "1847": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8620,
        8934
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1848": {
      "op": "POP"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x0"
    },
    "1852": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1853": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1854": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1855": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8978
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "1857": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1859": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1860": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1862": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1863": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8984
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1864": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1865": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1868": {
      "op": "NOT"
    },
    "1869": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "AND",
      "path": "14"
    },
    "1870": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8987,
        8991
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1872": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1873": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1874": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "OR",
      "path": "14"
    },
    "1875": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1876": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1877": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8961,
        8991
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1878": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9008,
        9019
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 17,
      "value": "0x2CC"
    },
    "1881": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9008,
        9019
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1882": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8014,
        9083
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1883": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9066,
        9071
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x0"
    },
    "1885": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9059,
        9071
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1886": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9059,
        9071
      ],
      "op": "POP",
      "path": "14"
    },
    "1887": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9059,
        9071
      ],
      "op": "POP",
      "path": "14"
    },
    "1888": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9059,
        9071
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2CC"
    },
    "1891": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        9059,
        9071
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1892": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1893": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4606,
        4634
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 19,
      "value": "0x76F"
    },
    "1896": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4616,
        4627
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1898": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4629,
        4633
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1899": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4606,
        4615
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1290"
    },
    "1902": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4606,
        4634
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1903": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4606,
        4634
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1904": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4654,
        4664
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 20
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1911": {
      "op": "SHL"
    },
    "1912": {
      "op": "SUB"
    },
    "1913": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4654,
        4684
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1914": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4654,
        4684
      ],
      "op": "AND",
      "path": "14"
    },
    "1915": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4654,
        4684
      ],
      "op": "EQ",
      "path": "14"
    },
    "1916": {
      "branch": 90,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4654,
        4684
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1917": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7CD"
    },
    "1920": {
      "branch": 90,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1921": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1923": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1924": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1925": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1931": {
      "op": "SHL"
    },
    "1932": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1933": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1934": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1936": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1938": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1939": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1940": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1941": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1942": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1943": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1945": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1946": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1947": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1948": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x54686520616464726573736573206D75737420626520646966666572656E742E"
    },
    "1981": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1983": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1984": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1985": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1986": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1987": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1988": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1989": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1990": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1991": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "SUB",
      "path": "14"
    },
    "1992": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1994": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "ADD",
      "path": "14"
    },
    "1995": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1996": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1997": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4646,
        4721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1998": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 21,
      "value": "0x0"
    },
    "2000": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2001": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2002": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2003": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4843
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "2005": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2007": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2008": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2009": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2010": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2012": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2013": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2014": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4849
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2015": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4852,
        4855
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2016": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4855
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2017": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4822,
        4855
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2018": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4882
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 22,
      "value": "0xA"
    },
    "2020": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2021": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "SUB"
    },
    "2030": {
      "op": "NOT"
    },
    "2031": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2032": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2033": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "AND",
      "path": "14"
    },
    "2034": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4885,
        4895
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2035": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "OR",
      "path": "14"
    },
    "2036": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2037": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4865,
        4895
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2038": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4923
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 23,
      "value": "0xB"
    },
    "2040": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2041": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2048": {
      "op": "SHL"
    },
    "2049": {
      "op": "SUB"
    },
    "2050": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2051": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2052": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "AND",
      "path": "14"
    },
    "2053": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2054": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2055": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2056": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "AND",
      "path": "14"
    },
    "2057": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "OR",
      "path": "14"
    },
    "2058": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2059": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4906,
        4942
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2060": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4972
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 24,
      "value": "0xC"
    },
    "2062": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4978
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2063": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4978
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2064": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4978
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2065": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4978
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2066": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4978
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2067": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4978
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2068": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4986
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2069": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4986
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2072": {
      "op": "NOT"
    },
    "2073": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4986
      ],
      "op": "AND",
      "path": "14"
    },
    "2074": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4986
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2075": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4953,
        4986
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2076": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5038,
        5055
      ],
      "op": "SWAP4",
      "path": "14",
      "statement": 25
    },
    "2077": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5038,
        5055
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2078": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5019,
        5036
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2079": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5019,
        5036
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2080": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2081": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2082": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2083": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2084": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2085": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2086": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2087": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5038,
        5055
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2088": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5038,
        5055
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2089": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5038,
        5055
      ],
      "op": "AND",
      "path": "14"
    },
    "2090": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5038,
        5055
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2091": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5019,
        5036
      ],
      "op": "AND",
      "path": "14"
    },
    "2092": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5019,
        5036
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2093": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106"
    },
    "2126": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2127": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2128": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2129": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "SUB",
      "path": "14"
    },
    "2130": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "ADD",
      "path": "14"
    },
    "2131": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2132": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5003,
        5062
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2133": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 26,
      "value": "0x4"
    },
    "2135": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2136": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2137": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2139": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2140": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2141": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2150": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2151": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5089,
        5099
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2152": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2153": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2154": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "ADD",
      "path": "14"
    },
    "2155": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2156": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2157": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2158": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2159": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5101,
        5106
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x2B5E3AF16B1880000"
    },
    "2169": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2171": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2172": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "ADD",
      "path": "14"
    },
    "2173": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2174": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "SUB"
    },
    "2183": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2184": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2185": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "AND",
      "path": "14"
    },
    "2186": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2187": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5088
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "2192": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5088
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2193": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2195": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2196": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2197": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "ADD",
      "path": "14"
    },
    "2198": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2199": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2201": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2202": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2203": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2204": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2205": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2206": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "SUB",
      "path": "14"
    },
    "2207": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "ADD",
      "path": "14"
    },
    "2208": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2209": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2210": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5079
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2211": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2212": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2213": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2214": {
      "op": "DUP1"
    },
    "2215": {
      "op": "ISZERO"
    },
    "2216": {
      "op": "PUSH2",
      "value": "0x8B0"
    },
    "2219": {
      "op": "JUMPI"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2222": {
      "op": "DUP1"
    },
    "2223": {
      "op": "REVERT"
    },
    "2224": {
      "op": "JUMPDEST"
    },
    "2225": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "POP",
      "path": "14"
    },
    "2226": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "GAS",
      "path": "14"
    },
    "2227": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "CALL",
      "path": "14"
    },
    "2228": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2229": {
      "op": "DUP1"
    },
    "2230": {
      "op": "ISZERO"
    },
    "2231": {
      "op": "PUSH2",
      "value": "0x8C4"
    },
    "2234": {
      "op": "JUMPI"
    },
    "2235": {
      "op": "RETURNDATASIZE"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2238": {
      "op": "DUP1"
    },
    "2239": {
      "op": "RETURNDATACOPY"
    },
    "2240": {
      "op": "RETURNDATASIZE"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2243": {
      "op": "REVERT"
    },
    "2244": {
      "op": "JUMPDEST"
    },
    "2245": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "POP",
      "path": "14"
    },
    "2246": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "POP",
      "path": "14"
    },
    "2247": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "POP",
      "path": "14"
    },
    "2248": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        5072,
        5107
      ],
      "op": "POP",
      "path": "14"
    },
    "2249": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "POP",
      "path": "14"
    },
    "2250": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4224,
        5129
      ],
      "op": "POP",
      "path": "14"
    },
    "2251": {
      "fn": "token_challenge.challengeStart",
      "jump": "o",
      "offset": [
        4224,
        5129
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2252": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2253": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8DC"
    },
    "2256": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D7"
    },
    "2259": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11F8"
    },
    "2262": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2263": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2264": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D1"
    },
    "2267": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2268": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2269": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x917"
    },
    "2272": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2273": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2275": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2284": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2285": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2287": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2288": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2289": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2290": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2292": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2293": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2294": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2295": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2296": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2297": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2298": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2300": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2301": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2302": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2304": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2305": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2306": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15CD"
    },
    "2309": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2311": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2312": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2313": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2315": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2316": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2317": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2318": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2319": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2321": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2322": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2323": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2324": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2325": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2326": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2327": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2328": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 27,
      "value": "0x920"
    },
    "2331": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2332": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x131D"
    },
    "2335": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2336": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2337": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "2338": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2339": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2340": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x92E"
    },
    "2343": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D7"
    },
    "2346": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11F8"
    },
    "2349": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2350": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2351": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x969"
    },
    "2354": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2355": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2357": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2366": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2367": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2369": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2370": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2371": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2372": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2374": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2375": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2376": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2377": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2378": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2379": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2380": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2382": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2383": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2384": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2386": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2387": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2388": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15CD"
    },
    "2391": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2393": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2394": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2395": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2397": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2398": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2399": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2400": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2401": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2403": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2404": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2405": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2406": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2407": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2408": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2409": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2410": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3318,
        3321
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 28
    },
    "2411": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3291,
        3315
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "2413": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3291,
        3321
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2414": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 29,
      "value": "0x3"
    },
    "2416": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2417": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2419": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2420": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2421": {
      "op": "PUSH4",
      "value": "0xA9671193"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2430": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2431": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2433": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2434": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "ADD",
      "path": "14"
    },
    "2435": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2436": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2437": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2438": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2439": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "SUB"
    },
    "2448": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2449": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2450": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "AND",
      "path": "14"
    },
    "2451": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2452": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3373
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9671193"
    },
    "2457": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3373
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2458": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2460": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2461": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2462": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "ADD",
      "path": "14"
    },
    "2463": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2464": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2466": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2467": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2468": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2469": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2470": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2471": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2472": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "SUB",
      "path": "14"
    },
    "2473": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "ADD",
      "path": "14"
    },
    "2474": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2475": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2477": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2478": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2479": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2480": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2481": {
      "op": "DUP1"
    },
    "2482": {
      "op": "ISZERO"
    },
    "2483": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2486": {
      "op": "JUMPI"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2489": {
      "op": "DUP1"
    },
    "2490": {
      "op": "REVERT"
    },
    "2491": {
      "op": "JUMPDEST"
    },
    "2492": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "POP",
      "path": "14"
    },
    "2493": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "GAS",
      "path": "14"
    },
    "2494": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "CALL",
      "path": "14"
    },
    "2495": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2496": {
      "op": "DUP1"
    },
    "2497": {
      "op": "ISZERO"
    },
    "2498": {
      "op": "PUSH2",
      "value": "0x9CF"
    },
    "2501": {
      "op": "JUMPI"
    },
    "2502": {
      "op": "RETURNDATASIZE"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2505": {
      "op": "DUP1"
    },
    "2506": {
      "op": "RETURNDATACOPY"
    },
    "2507": {
      "op": "RETURNDATASIZE"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2510": {
      "op": "REVERT"
    },
    "2511": {
      "op": "JUMPDEST"
    },
    "2512": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "POP",
      "path": "14"
    },
    "2513": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "POP",
      "path": "14"
    },
    "2514": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "POP",
      "path": "14"
    },
    "2515": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "POP",
      "path": "14"
    },
    "2516": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2518": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2519": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2522": {
      "op": "DUP2"
    },
    "2523": {
      "op": "LT"
    },
    "2524": {
      "op": "ISZERO"
    },
    "2525": {
      "op": "PUSH2",
      "value": "0x9E5"
    },
    "2528": {
      "op": "JUMPI"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2531": {
      "op": "DUP1"
    },
    "2532": {
      "op": "REVERT"
    },
    "2533": {
      "op": "JUMPDEST"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3349,
        3390
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2536": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3332,
        3346
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2538": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3332,
        3390
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2539": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3413
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 30,
      "value": "0x8"
    },
    "2541": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3421
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2542": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3421
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2545": {
      "op": "NOT"
    },
    "2546": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3421
      ],
      "op": "AND",
      "path": "14"
    },
    "2547": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3421
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2548": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3400,
        3421
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2549": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 31,
      "value": "0x4"
    },
    "2551": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2552": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2553": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2555": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2556": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2557": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2566": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2567": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3450,
        3460
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2568": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2569": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2570": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "ADD",
      "path": "14"
    },
    "2571": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2572": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2573": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2574": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2575": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3462,
        3468
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0xAD78EBC5AC6200000"
    },
    "2585": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2587": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2588": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "ADD",
      "path": "14"
    },
    "2589": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2590": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "op": "SUB"
    },
    "2599": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2600": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2601": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "AND",
      "path": "14"
    },
    "2602": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2603": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3449
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "2608": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3449
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2609": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2611": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2612": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2613": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "ADD",
      "path": "14"
    },
    "2614": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2615": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3416,
        3421
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2617": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3416,
        3421
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2618": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2619": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2620": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2621": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2622": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "SUB",
      "path": "14"
    },
    "2623": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "ADD",
      "path": "14"
    },
    "2624": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2625": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3416,
        3421
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2626": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3440
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2627": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2628": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2629": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2630": {
      "op": "DUP1"
    },
    "2631": {
      "op": "ISZERO"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2635": {
      "op": "JUMPI"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "op": "DUP1"
    },
    "2639": {
      "op": "REVERT"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "POP",
      "path": "14"
    },
    "2642": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "GAS",
      "path": "14"
    },
    "2643": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "CALL",
      "path": "14"
    },
    "2644": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2645": {
      "op": "DUP1"
    },
    "2646": {
      "op": "ISZERO"
    },
    "2647": {
      "op": "PUSH2",
      "value": "0xA64"
    },
    "2650": {
      "op": "JUMPI"
    },
    "2651": {
      "op": "RETURNDATASIZE"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "RETURNDATACOPY"
    },
    "2656": {
      "op": "RETURNDATASIZE"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2659": {
      "op": "REVERT"
    },
    "2660": {
      "op": "JUMPDEST"
    },
    "2661": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "POP",
      "path": "14"
    },
    "2662": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "POP",
      "path": "14"
    },
    "2663": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "POP",
      "path": "14"
    },
    "2664": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3433,
        3469
      ],
      "op": "POP",
      "path": "14"
    },
    "2665": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2933,
        3478
      ],
      "op": "POP",
      "path": "14"
    },
    "2666": {
      "fn": "token_challenge.overnightStart",
      "jump": "o",
      "offset": [
        2933,
        3478
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2667": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5135,
        6443
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2668": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5394
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 32,
      "value": "0x4"
    },
    "2670": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5394
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2671": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5394
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2672": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2674": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2675": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2676": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2683": {
      "op": "SHL"
    },
    "2684": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2685": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2686": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5414
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2687": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2688": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2689": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "ADD",
      "path": "14"
    },
    "2690": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2691": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2692": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2693": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2694": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5416,
        5421
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x2B5E3AF16B1880000"
    },
    "2704": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2706": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2707": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "ADD",
      "path": "14"
    },
    "2708": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2709": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2710": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2712": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2713": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2714": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5394
      ],
      "op": "AND",
      "path": "14"
    },
    "2724": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5394
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2725": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5403
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "2730": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5403
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2731": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2733": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2734": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2735": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "ADD",
      "path": "14"
    },
    "2736": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2737": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2738": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2739": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2740": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2741": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2742": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2743": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2744": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "SUB",
      "path": "14"
    },
    "2745": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "ADD",
      "path": "14"
    },
    "2746": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2747": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5194,
        5198
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2748": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5394
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2749": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2750": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2751": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2752": {
      "op": "DUP1"
    },
    "2753": {
      "op": "ISZERO"
    },
    "2754": {
      "op": "PUSH2",
      "value": "0xACA"
    },
    "2757": {
      "op": "JUMPI"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "DUP1"
    },
    "2761": {
      "op": "REVERT"
    },
    "2762": {
      "op": "JUMPDEST"
    },
    "2763": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "POP",
      "path": "14"
    },
    "2764": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "GAS",
      "path": "14"
    },
    "2765": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "CALL",
      "path": "14"
    },
    "2766": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5387,
        5422
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2767": {
      "op": "DUP1"
    },
    "2768": {
      "op": "ISZERO"
    },
    "2769": {
      "op": "PUSH2",
      "value": "0xADE"
    },
    "2772": {
      "op": "JUMPI"
    },
    "2773": {
      "op": "RETURNDATASIZE"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2776": {
      "op": "DUP1"
    },
    "2777": {
      "op": "RETURNDATACOPY"
    },
    "2778": {
      "op": "RETURNDATASIZE"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2781": {
      "op": "REVERT"
    },
    "2782": {
      "op": "JUMPDEST"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "op": "POP"
    },
    "2785": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5463,
        5480
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 33,
      "value": "0xA"
    },
    "2787": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5463,
        5480
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5463,
        5480
      ],
      "op": "AND",
      "path": "14"
    },
    "2797": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5459
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2798": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5480
      ],
      "op": "EQ",
      "path": "14"
    },
    "2799": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5480
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5480
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2802": {
      "branch": 91,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5480
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5515
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB07"
    },
    "2807": {
      "branch": 91,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5515
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5498,
        5515
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2811": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5498,
        5515
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "SUB"
    },
    "2820": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5498,
        5515
      ],
      "op": "AND",
      "path": "14"
    },
    "2821": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5484,
        5494
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2822": {
      "branch": 92,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5484,
        5515
      ],
      "op": "EQ",
      "path": "14"
    },
    "2823": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5449,
        5515
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2824": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB42"
    },
    "2827": {
      "branch": 92,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2828": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2830": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2839": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2840": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2842": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "ADD",
      "path": "14"
    },
    "2843": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2844": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2845": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2847": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "ADD",
      "path": "14"
    },
    "2848": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2849": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2850": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "SUB",
      "path": "14"
    },
    "2851": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2852": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2853": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x34"
    },
    "2855": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2856": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2857": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2859": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "ADD",
      "path": "14"
    },
    "2860": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2861": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1599"
    },
    "2864": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x34"
    },
    "2866": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2867": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "2868": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2870": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "ADD",
      "path": "14"
    },
    "2871": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2872": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "POP",
      "path": "14"
    },
    "2873": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "POP",
      "path": "14"
    },
    "2874": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2876": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2877": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2878": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2879": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "SUB",
      "path": "14"
    },
    "2880": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2881": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2882": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5441,
        5572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2883": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2885": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2886": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2887": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2888": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5614
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "2890": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2892": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2893": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2895": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2896": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2897": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5620
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2898": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5623,
        5632
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2900": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5593,
        5632
      ],
      "op": "ADD",
      "path": "14"
    },
    "2901": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5586,
        5589
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2902": {
      "branch": 93,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5586,
        5632
      ],
      "op": "LT",
      "path": "14"
    },
    "2903": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5583,
        6436
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75A"
    },
    "2906": {
      "branch": 93,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5583,
        6436
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2907": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 34,
      "value": "0x0"
    },
    "2909": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2910": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2911": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2912": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5712
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "2914": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2916": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2917": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2919": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2920": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2921": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2922": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2924": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5718
      ],
      "op": "AND",
      "path": "14"
    },
    "2925": {
      "branch": 94,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5693,
        5727
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2926": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBA8"
    },
    "2929": {
      "branch": 94,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2930": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2932": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2941": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2942": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2944": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "ADD",
      "path": "14"
    },
    "2945": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2946": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2947": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2949": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "ADD",
      "path": "14"
    },
    "2950": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2951": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2952": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "SUB",
      "path": "14"
    },
    "2953": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2954": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2955": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "2957": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2958": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2959": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2961": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "ADD",
      "path": "14"
    },
    "2962": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2963": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15FB"
    },
    "2966": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "2968": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2969": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "2970": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2972": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "ADD",
      "path": "14"
    },
    "2973": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2974": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "POP",
      "path": "14"
    },
    "2975": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "POP",
      "path": "14"
    },
    "2976": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2978": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2979": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2980": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2981": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "SUB",
      "path": "14"
    },
    "2982": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2983": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2984": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5685,
        5767
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2985": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6156,
        6184
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 35,
      "value": "0xBB3"
    },
    "2988": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6166,
        6177
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "2990": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6179,
        6183
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2991": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11FC"
    },
    "2994": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        6156,
        6184
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2995": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6156,
        6184
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2996": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 36,
      "value": "0x4"
    },
    "2998": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2999": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3000": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3002": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3003": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3004": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3013": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3014": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6213,
        6223
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3015": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3016": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3017": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "ADD",
      "path": "14"
    },
    "3018": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3019": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3020": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3021": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3022": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6225,
        6232
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x3635C9ADC5DEA00000"
    },
    "3032": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3034": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3035": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "ADD",
      "path": "14"
    },
    "3036": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3037": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "op": "SUB"
    },
    "3046": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3047": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3048": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "AND",
      "path": "14"
    },
    "3049": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3050": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6212
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "3055": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6212
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3056": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3058": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3059": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3060": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "ADD",
      "path": "14"
    },
    "3061": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3062": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3064": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3065": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3066": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3067": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3068": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3069": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "SUB",
      "path": "14"
    },
    "3070": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "ADD",
      "path": "14"
    },
    "3071": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3072": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3074": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6207
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3075": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3076": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3077": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3078": {
      "op": "DUP1"
    },
    "3079": {
      "op": "ISZERO"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC10"
    },
    "3083": {
      "op": "JUMPI"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3086": {
      "op": "DUP1"
    },
    "3087": {
      "op": "REVERT"
    },
    "3088": {
      "op": "JUMPDEST"
    },
    "3089": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "POP",
      "path": "14"
    },
    "3090": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "GAS",
      "path": "14"
    },
    "3091": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "CALL",
      "path": "14"
    },
    "3092": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3093": {
      "op": "DUP1"
    },
    "3094": {
      "op": "ISZERO"
    },
    "3095": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3098": {
      "op": "JUMPI"
    },
    "3099": {
      "op": "RETURNDATASIZE"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3102": {
      "op": "DUP1"
    },
    "3103": {
      "op": "RETURNDATACOPY"
    },
    "3104": {
      "op": "RETURNDATASIZE"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3107": {
      "op": "REVERT"
    },
    "3108": {
      "op": "JUMPDEST"
    },
    "3109": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "POP",
      "path": "14"
    },
    "3110": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "POP",
      "path": "14"
    },
    "3111": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "POP",
      "path": "14"
    },
    "3112": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "POP",
      "path": "14"
    },
    "3113": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3115": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3116": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6200,
        6233
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3119": {
      "op": "DUP2"
    },
    "3120": {
      "op": "LT"
    },
    "3121": {
      "op": "ISZERO"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0xC3A"
    },
    "3125": {
      "op": "JUMPI"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3128": {
      "op": "DUP1"
    },
    "3129": {
      "op": "REVERT"
    },
    "3130": {
      "op": "JUMPDEST"
    },
    "3131": {
      "op": "POP"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 37,
      "value": "0x40"
    },
    "3135": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3136": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6289,
        6296
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x3635C9ADC5DEA00000"
    },
    "3146": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6289,
        6296
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3147": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6283,
        6287
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3148": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6283,
        6287
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3149": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6271,
        6281
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3150": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6271,
        6281
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3151": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD"
    },
    "3184": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3185": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3187": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3188": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6252,
        6297
      ],
      "op": "LOG4",
      "path": "14"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 38,
      "value": "0x0"
    },
    "3193": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3194": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3195": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3196": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6331
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "3198": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3200": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3201": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3203": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3204": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6337
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3205": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3206": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3209": {
      "op": "NOT"
    },
    "3210": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "AND",
      "path": "14"
    },
    "3211": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6340,
        6344
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3213": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3214": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3215": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "OR",
      "path": "14"
    },
    "3216": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3217": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3218": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6312,
        6344
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3219": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6361,
        6372
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 39,
      "value": "0x2CC"
    },
    "3222": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6361,
        6372
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3223": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3224": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 40,
      "value": "0xCA7"
    },
    "3227": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA2"
    },
    "3230": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11F8"
    },
    "3233": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3234": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3235": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1365"
    },
    "3238": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3239": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3240": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "o",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3241": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6479,
        7512
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3242": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCB4"
    },
    "3245": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x474"
    },
    "3248": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11F8"
    },
    "3251": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3252": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3253": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCEF"
    },
    "3256": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3257": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3259": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3266": {
      "op": "SHL"
    },
    "3267": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3268": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3269": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3271": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3272": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3273": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3274": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3276": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3277": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3278": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3279": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "3280": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3281": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3282": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "3284": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3285": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3286": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3288": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3289": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3290": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x161E"
    },
    "3293": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "3295": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3296": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "3297": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3299": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3300": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3301": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "3302": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "3303": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3305": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3306": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3307": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3308": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "3309": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3310": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3311": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3312": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6928,
        6954
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 41,
      "value": "0xCFA"
    },
    "3315": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6938,
        6947
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE"
    },
    "3317": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6949,
        6953
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3318": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6928,
        6937
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1290"
    },
    "3321": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6928,
        6954
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3322": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6928,
        6954
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3323": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 42,
      "value": "0x0"
    },
    "3325": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3326": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3327": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3328": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6985
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "3330": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3332": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3333": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3334": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3335": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3337": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3338": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3339": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6991
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3340": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6994,
        6997
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "3341": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6997
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3342": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6966,
        6997
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3343": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 43,
      "value": "0x12"
    },
    "3345": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7030
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3346": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7030
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3347": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7030
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3348": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7030
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3349": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7030
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3350": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7038
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3351": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7038
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3354": {
      "op": "NOT"
    },
    "3355": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7038
      ],
      "op": "AND",
      "path": "14"
    },
    "3356": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7038
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3357": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7038
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3358": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7058,
        7072
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0x5"
    },
    "3360": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7058,
        7079
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3361": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7083,
        7084
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3363": {
      "branch": 95,
      "fn": "token_challenge.challengeStart",
      "offset": [
        7058,
        7084
      ],
      "op": "EQ",
      "path": "14"
    },
    "3364": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD5E"
    },
    "3367": {
      "branch": 95,
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3368": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3370": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3377": {
      "op": "SHL"
    },
    "3378": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3379": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3380": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3382": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "ADD",
      "path": "14"
    },
    "3383": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3384": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3385": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3387": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "ADD",
      "path": "14"
    },
    "3388": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3389": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3390": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "SUB",
      "path": "14"
    },
    "3391": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3392": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3393": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "3395": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3396": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3397": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3399": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "ADD",
      "path": "14"
    },
    "3400": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3401": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1526"
    },
    "3404": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "3406": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3407": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "3408": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3410": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "ADD",
      "path": "14"
    },
    "3411": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3412": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "POP",
      "path": "14"
    },
    "3413": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "POP",
      "path": "14"
    },
    "3414": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3416": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3417": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3418": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3419": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "SUB",
      "path": "14"
    },
    "3420": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3421": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3422": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7050,
        7137
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3423": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7152,
        7161
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3425": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3426": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7171,
        7185
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3428": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7171,
        7192
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3429": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7167,
        7192
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3430": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7167,
        7192
      ],
      "op": "LT",
      "path": "14"
    },
    "3431": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3432": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDFE"
    },
    "3435": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3436": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7243
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3438": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7244,
        7245
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3439": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3440": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3441": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3442": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "LT",
      "path": "14"
    },
    "3443": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD78"
    },
    "3446": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3447": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3448": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3449": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3451": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3452": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3453": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3454": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3456": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3457": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3458": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3459": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "ADD",
      "path": "14"
    },
    "3460": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7229,
        7246
      ],
      "op": "AND",
      "path": "14"
    },
    "3470": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7215,
        7225
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3471": {
      "branch": 96,
      "fn": "token_challenge.challengeStart",
      "offset": [
        7215,
        7246
      ],
      "op": "EQ",
      "path": "14"
    },
    "3472": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3473": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAB"
    },
    "3476": {
      "branch": 96,
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3477": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7280
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 45,
      "value": "0xF"
    },
    "3479": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7293
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3480": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7293
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3487": {
      "op": "SHL"
    },
    "3488": {
      "op": "SUB"
    },
    "3489": {
      "op": "NOT"
    },
    "3490": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7293
      ],
      "op": "AND",
      "path": "14"
    },
    "3491": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7283,
        7293
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3492": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7293
      ],
      "op": "OR",
      "path": "14"
    },
    "3493": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7293
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3494": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7265,
        7293
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3495": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF6"
    },
    "3498": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3499": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3500": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7359
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 46,
      "value": "0x10"
    },
    "3502": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7379
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3504": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7380,
        7381
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3505": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3506": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3507": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3508": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "LT",
      "path": "14"
    },
    "3509": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDBA"
    },
    "3512": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3513": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3514": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3515": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3517": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3518": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3519": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3520": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3522": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3523": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3524": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3525": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3526": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3527": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "ADD",
      "path": "14"
    },
    "3528": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3529": {
      "op": "DUP4"
    },
    "3530": {
      "op": "SLOAD"
    },
    "3531": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3533": {
      "op": "DUP2"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "DUP6"
    },
    "3536": {
      "op": "SSTORE"
    },
    "3537": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3538": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3539": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3540": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3541": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3542": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3543": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3544": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "ADD",
      "path": "14"
    },
    "3545": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3546": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3553": {
      "op": "SHL"
    },
    "3554": {
      "op": "SUB"
    },
    "3555": {
      "op": "NOT"
    },
    "3556": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "AND",
      "path": "14"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3563": {
      "op": "SHL"
    },
    "3564": {
      "op": "SUB"
    },
    "3565": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3566": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3567": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7365,
        7382
      ],
      "op": "AND",
      "path": "14"
    },
    "3568": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3569": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3570": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3571": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "OR",
      "path": "14"
    },
    "3572": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3573": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7344,
        7383
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3574": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7212,
        7399
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3575": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7194,
        7197
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 47,
      "value": "0x1"
    },
    "3577": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7194,
        7197
      ],
      "op": "ADD",
      "path": "14"
    },
    "3578": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD61"
    },
    "3581": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3582": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7148,
        7409
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 48,
      "value": "0x40"
    },
    "3586": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3587": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3588": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3589": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3590": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3591": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3592": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3593": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7438,
        7448
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3594": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7438,
        7448
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3595": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373"
    },
    "3628": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3629": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3630": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3631": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3632": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "SUB",
      "path": "14"
    },
    "3633": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3635": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "ADD",
      "path": "14"
    },
    "3636": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3637": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7424,
        7455
      ],
      "op": "LOG2",
      "path": "14"
    },
    "3638": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 49,
      "value": "0x4"
    },
    "3640": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3641": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3642": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3644": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3645": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3646": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3655": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3656": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7484,
        7494
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3657": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3658": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3659": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "ADD",
      "path": "14"
    },
    "3660": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3661": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3662": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3663": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3664": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7496,
        7502
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x56BC75E2D63100000"
    },
    "3674": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3676": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3677": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "ADD",
      "path": "14"
    },
    "3678": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3679": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3686": {
      "op": "SHL"
    },
    "3687": {
      "op": "SUB"
    },
    "3688": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3689": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3690": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "AND",
      "path": "14"
    },
    "3691": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3692": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7483
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79CC6790"
    },
    "3697": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7483
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3698": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3700": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3701": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3702": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "ADD",
      "path": "14"
    },
    "3703": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3704": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3706": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3707": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3708": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3709": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3710": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3711": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "SUB",
      "path": "14"
    },
    "3712": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "ADD",
      "path": "14"
    },
    "3713": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3714": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3715": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7474
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3716": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3717": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3718": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7467,
        7503
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3719": {
      "op": "DUP1"
    },
    "3720": {
      "op": "ISZERO"
    },
    "3721": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "3724": {
      "op": "JUMPI"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3727": {
      "op": "DUP1"
    },
    "3728": {
      "op": "REVERT"
    },
    "3729": {
      "fn": "TeamRole.addTeam",
      "offset": [
        687,
        771
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3730": {
      "offset": [
        485,
        505
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE9C"
    },
    "3733": {
      "offset": [
        492,
        504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x474"
    },
    "3736": {
      "offset": [
        492,
        502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11F8"
    },
    "3739": {
      "jump": "i",
      "offset": [
        492,
        504
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3740": {
      "offset": [
        485,
        505
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3741": {
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xED7"
    },
    "3744": {
      "offset": [
        477,
        554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3745": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3747": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3756": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3757": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3759": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3760": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3761": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3762": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3764": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3765": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3766": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3767": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "3768": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3769": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3770": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "3772": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3773": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3774": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3776": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3777": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3778": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x161E"
    },
    "3781": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2C"
    },
    "3783": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3784": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "3785": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3787": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "ADD",
      "path": "13"
    },
    "3788": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3789": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "3790": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "POP",
      "path": "13"
    },
    "3791": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3793": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3794": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3795": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3796": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SUB",
      "path": "13"
    },
    "3797": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3798": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3799": {
      "fn": "TeamRole.addTeam",
      "offset": [
        477,
        554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3800": {
      "fn": "TeamRole.addTeam",
      "offset": [
        747,
        764
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 50,
      "value": "0x920"
    },
    "3803": {
      "fn": "TeamRole.addTeam",
      "offset": [
        756,
        763
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3804": {
      "fn": "TeamRole.addTeam",
      "offset": [
        747,
        755
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13AD"
    },
    "3807": {
      "fn": "TeamRole.addTeam",
      "jump": "i",
      "offset": [
        747,
        764
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3808": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3809": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2709,
        2713
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3811": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2709,
        2713
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3812": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3813": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2747,
        2761
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3815": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2747,
        2768
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3816": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2743,
        2768
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3817": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2743,
        2768
      ],
      "op": "LT",
      "path": "14"
    },
    "3818": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3819": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF32"
    },
    "3822": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3823": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2812,
        2823
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3830": {
      "op": "SHL"
    },
    "3831": {
      "op": "SUB"
    },
    "3832": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2823
      ],
      "op": "AND",
      "path": "14"
    },
    "3833": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "3835": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2806,
        2807
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3836": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3837": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3838": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3839": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "LT",
      "path": "14"
    },
    "3840": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF05"
    },
    "3843": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3844": {
      "dev": "Index out of range",
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3845": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3846": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3848": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3849": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3850": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3851": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3853": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3854": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3855": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3856": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "ADD",
      "path": "14"
    },
    "3857": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3864": {
      "op": "SHL"
    },
    "3865": {
      "op": "SUB"
    },
    "3866": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2808
      ],
      "op": "AND",
      "path": "14"
    },
    "3867": {
      "branch": 97,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2791,
        2823
      ],
      "op": "EQ",
      "path": "14"
    },
    "3868": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2788,
        2869
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3869": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2788,
        2869
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF2A"
    },
    "3872": {
      "branch": 97,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2788,
        2869
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3873": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2849,
        2853
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 51,
      "value": "0x1"
    },
    "3875": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2842,
        2853
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3876": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2842,
        2853
      ],
      "op": "POP",
      "path": "14"
    },
    "3877": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2842,
        2853
      ],
      "op": "POP",
      "path": "14"
    },
    "3878": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2842,
        2853
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2CC"
    },
    "3881": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2842,
        2853
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3882": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2788,
        2869
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3883": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2770,
        2773
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 52,
      "value": "0x1"
    },
    "3885": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2770,
        2773
      ],
      "op": "ADD",
      "path": "14"
    },
    "3886": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEE4"
    },
    "3889": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3890": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2724,
        2879
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2891,
        2896
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 53,
      "value": "0x0"
    },
    "3894": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2891,
        2896
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3895": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2904
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "fn": "token_challenge.isRegistered",
      "jump": "o",
      "offset": [
        2644,
        2904
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3899": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3900": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3708,
        3722
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 54,
      "value": "0x6"
    },
    "3902": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3708,
        3722
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3903": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3696,
        3704
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3904": {
      "branch": 98,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3696,
        3722
      ],
      "op": "EQ",
      "path": "14"
    },
    "3905": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF83"
    },
    "3908": {
      "branch": 98,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3909": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3911": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3912": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3921": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3922": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3924": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3926": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3927": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "ADD",
      "path": "14"
    },
    "3928": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3929": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF"
    },
    "3931": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3933": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3934": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "ADD",
      "path": "14"
    },
    "3935": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3936": {
      "op": "PUSH15",
      "value": "0x2BB937B7339034B210383934B1B297"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3957": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3958": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "ADD",
      "path": "14"
    },
    "3959": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3960": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3961": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3962": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3963": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3964": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3965": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "SUB",
      "path": "14"
    },
    "3966": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3968": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "ADD",
      "path": "14"
    },
    "3969": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3970": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3971": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3688,
        3742
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3972": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3763,
        3787
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3974": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3763,
        3787
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3975": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3760
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "3976": {
      "branch": 99,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3787
      ],
      "op": "GT",
      "path": "14"
    },
    "3977": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3833
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3978": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3833
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3979": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF98"
    },
    "3982": {
      "branch": 99,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3833
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3983": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3833
      ],
      "op": "POP",
      "path": "14"
    },
    "3984": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3797,
        3821
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3986": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3797,
        3821
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3987": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3824,
        3833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3C"
    },
    "3989": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3797,
        3833
      ],
      "op": "ADD",
      "path": "14"
    },
    "3990": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3791,
        3794
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "3991": {
      "branch": 100,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3791,
        3833
      ],
      "op": "LT",
      "path": "14"
    },
    "3992": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3757,
        3833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3993": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3753,
        4175
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3994": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3753,
        4175
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10B0"
    },
    "3997": {
      "branch": 100,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3753,
        4175
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3998": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 55,
      "value": "0x8"
    },
    "4000": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4001": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "4003": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "AND",
      "path": "14"
    },
    "4004": {
      "branch": 101,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3878
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4005": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFDF"
    },
    "4008": {
      "branch": 101,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4009": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4011": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4020": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4021": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4023": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "ADD",
      "path": "14"
    },
    "4024": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4025": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4026": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4028": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "ADD",
      "path": "14"
    },
    "4029": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4030": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4031": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "SUB",
      "path": "14"
    },
    "4032": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4033": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4034": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "4036": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4037": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4038": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4040": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "ADD",
      "path": "14"
    },
    "4041": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4042": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15FB"
    },
    "4045": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "4047": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4048": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "CODECOPY",
      "path": "14"
    },
    "4049": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4051": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "ADD",
      "path": "14"
    },
    "4052": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4053": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "POP",
      "path": "14"
    },
    "4054": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "POP",
      "path": "14"
    },
    "4055": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4057": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4058": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4059": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4060": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "SUB",
      "path": "14"
    },
    "4061": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4062": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4063": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3848,
        3918
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4064": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 56,
      "value": "0x4"
    },
    "4066": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4067": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4068": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4070": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4071": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4072": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4079": {
      "op": "SHL"
    },
    "4080": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4081": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4082": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3947,
        3957
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4083": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4084": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4085": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "ADD",
      "path": "14"
    },
    "4086": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4087": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4088": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4089": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4090": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3959,
        3966
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x410D586A20A4C00000"
    },
    "4100": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4102": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4103": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "ADD",
      "path": "14"
    },
    "4104": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4105": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4112": {
      "op": "SHL"
    },
    "4113": {
      "op": "SUB"
    },
    "4114": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4115": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4116": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "AND",
      "path": "14"
    },
    "4117": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4118": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3946
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "4123": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3946
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4124": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4126": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4127": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4128": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "ADD",
      "path": "14"
    },
    "4129": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4130": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4132": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4133": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4134": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4135": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4136": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4137": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "SUB",
      "path": "14"
    },
    "4138": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "ADD",
      "path": "14"
    },
    "4139": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4140": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4142": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3941
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4143": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4144": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4145": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4146": {
      "op": "DUP1"
    },
    "4147": {
      "op": "ISZERO"
    },
    "4148": {
      "op": "PUSH2",
      "value": "0x103C"
    },
    "4151": {
      "op": "JUMPI"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4154": {
      "op": "DUP1"
    },
    "4155": {
      "op": "REVERT"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "POP",
      "path": "14"
    },
    "4158": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "GAS",
      "path": "14"
    },
    "4159": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "CALL",
      "path": "14"
    },
    "4160": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4161": {
      "op": "DUP1"
    },
    "4162": {
      "op": "ISZERO"
    },
    "4163": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4166": {
      "op": "JUMPI"
    },
    "4167": {
      "op": "RETURNDATASIZE"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4170": {
      "op": "DUP1"
    },
    "4171": {
      "op": "RETURNDATACOPY"
    },
    "4172": {
      "op": "RETURNDATASIZE"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4175": {
      "op": "REVERT"
    },
    "4176": {
      "op": "JUMPDEST"
    },
    "4177": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "POP",
      "path": "14"
    },
    "4178": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "POP",
      "path": "14"
    },
    "4179": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "POP",
      "path": "14"
    },
    "4180": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "POP",
      "path": "14"
    },
    "4181": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4183": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4184": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3934,
        3967
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4187": {
      "op": "DUP2"
    },
    "4188": {
      "op": "LT"
    },
    "4189": {
      "op": "ISZERO"
    },
    "4190": {
      "op": "PUSH2",
      "value": "0x1066"
    },
    "4193": {
      "op": "JUMPI"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4196": {
      "op": "DUP1"
    },
    "4197": {
      "op": "REVERT"
    },
    "4198": {
      "op": "JUMPDEST"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "op": "POP"
    },
    "4201": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        3995
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 57,
      "value": "0x8"
    },
    "4203": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        4002
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4204": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        4002
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4207": {
      "op": "NOT"
    },
    "4208": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        4002
      ],
      "op": "AND",
      "path": "14"
    },
    "4209": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3998,
        4002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4211": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        4002
      ],
      "op": "OR",
      "path": "14"
    },
    "4212": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        4002
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4213": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        4002
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4214": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4021,
        4051
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 58,
      "value": "0x40"
    },
    "4216": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4021,
        4051
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4217": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4043,
        4050
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x410D586A20A4C00000"
    },
    "4227": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4043,
        4050
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4228": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4031,
        4041
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4229": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4031,
        4041
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4230": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4021,
        4051
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "4263": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4021,
        4051
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4264": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        3995
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4266": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3982,
        3995
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4267": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4021,
        4051
      ],
      "op": "LOG3",
      "path": "14"
    },
    "4268": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3753,
        4175
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x920"
    },
    "4271": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3753,
        4175
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4272": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3753,
        4175
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4273": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 59,
      "value": "0x4"
    },
    "4275": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4276": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4277": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4105,
        4109
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "4279": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4105,
        4109
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4280": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4282": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4283": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4284": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4293": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4105,
        4109
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4303": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4105,
        4109
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4304": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4105,
        4109
      ],
      "op": "AND",
      "path": "14"
    },
    "4305": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4306": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4307": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "ADD",
      "path": "14"
    },
    "4308": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4309": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4310": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4311": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4312": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4111,
        4118
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x6C6B935B8BBD400000"
    },
    "4322": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4324": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4325": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "ADD",
      "path": "14"
    },
    "4326": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4327": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4328": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4329": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "AND",
      "path": "14"
    },
    "4330": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4331": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4104
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x40C10F19"
    },
    "4336": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4104
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4337": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4339": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4340": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4341": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "ADD",
      "path": "14"
    },
    "4342": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4343": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4345": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4346": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4347": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4348": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4349": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4350": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "SUB",
      "path": "14"
    },
    "4351": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "ADD",
      "path": "14"
    },
    "4352": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4353": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4355": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4099
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4356": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4357": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4358": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4359": {
      "op": "DUP1"
    },
    "4360": {
      "op": "ISZERO"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x1111"
    },
    "4364": {
      "op": "JUMPI"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4367": {
      "op": "DUP1"
    },
    "4368": {
      "op": "REVERT"
    },
    "4369": {
      "op": "JUMPDEST"
    },
    "4370": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "POP",
      "path": "14"
    },
    "4371": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "GAS",
      "path": "14"
    },
    "4372": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "CALL",
      "path": "14"
    },
    "4373": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4374": {
      "op": "DUP1"
    },
    "4375": {
      "op": "ISZERO"
    },
    "4376": {
      "op": "PUSH2",
      "value": "0x1125"
    },
    "4379": {
      "op": "JUMPI"
    },
    "4380": {
      "op": "RETURNDATASIZE"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4383": {
      "op": "DUP1"
    },
    "4384": {
      "op": "RETURNDATACOPY"
    },
    "4385": {
      "op": "RETURNDATASIZE"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4388": {
      "op": "REVERT"
    },
    "4389": {
      "op": "JUMPDEST"
    },
    "4390": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "POP",
      "path": "14"
    },
    "4391": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "POP",
      "path": "14"
    },
    "4392": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "POP",
      "path": "14"
    },
    "4393": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "POP",
      "path": "14"
    },
    "4394": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4396": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4397": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4092,
        4119
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4400": {
      "op": "DUP2"
    },
    "4401": {
      "op": "LT"
    },
    "4402": {
      "op": "ISZERO"
    },
    "4403": {
      "op": "PUSH2",
      "value": "0x113B"
    },
    "4406": {
      "op": "JUMPI"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4409": {
      "op": "DUP1"
    },
    "4410": {
      "op": "REVERT"
    },
    "4411": {
      "op": "JUMPDEST"
    },
    "4412": {
      "op": "POP"
    },
    "4413": {
      "op": "POP"
    },
    "4414": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4149,
        4153
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 60,
      "value": "0x2"
    },
    "4416": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4149,
        4153
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4417": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4139,
        4163
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4419": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4139,
        4163
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4420": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4155,
        4162
      ],
      "op": "PUSH9",
      "path": "14",
      "value": "0x6C6B935B8BBD400000"
    },
    "4430": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4155,
        4162
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4437": {
      "op": "SHL"
    },
    "4438": {
      "op": "SUB"
    },
    "4439": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4149,
        4153
      ],
      "op": "AND",
      "path": "14"
    },
    "4440": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4149,
        4153
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4441": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4139,
        4163
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "4474": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4139,
        4163
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4475": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4149,
        4153
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4477": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4149,
        4153
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4478": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4139,
        4163
      ],
      "op": "LOG3",
      "path": "14"
    },
    "4479": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3484,
        4190
      ],
      "op": "POP",
      "path": "14"
    },
    "4480": {
      "fn": "token_challenge.overnightCheck",
      "jump": "o",
      "offset": [
        3484,
        4190
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4481": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        777,
        850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4482": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        818,
        843
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 61,
      "value": "0xCA7"
    },
    "4485": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        842
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x118C"
    },
    "4488": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        840
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11F8"
    },
    "4491": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        830,
        842
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4492": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        830,
        842
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4493": {
      "fn": "TeamRole.renounceTeam",
      "offset": [
        818,
        829
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13F5"
    },
    "4496": {
      "fn": "TeamRole.renounceTeam",
      "jump": "i",
      "offset": [
        818,
        843
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4497": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4498": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4506": {
      "op": "SHL"
    },
    "4507": {
      "op": "SUB"
    },
    "4508": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 62
    },
    "4509": {
      "branch": 105,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "4510": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D8"
    },
    "4513": {
      "branch": 105,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4514": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4516": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4523": {
      "op": "SHL"
    },
    "4524": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4525": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4526": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4528": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4529": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4530": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4531": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4533": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4534": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4535": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4536": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "4537": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4538": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4539": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "4541": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4542": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4543": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4545": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4546": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4547": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1577"
    },
    "4550": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "4552": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4553": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4554": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4556": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4557": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4558": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "4559": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "4560": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4562": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4563": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4564": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4565": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "4566": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4567": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4568": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4569": {
      "op": "POP"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4576": {
      "op": "SHL"
    },
    "4577": {
      "op": "SUB"
    },
    "4578": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 63
    },
    "4579": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4581": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4582": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4583": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4584": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4586": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4587": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4588": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4589": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4590": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4592": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4593": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4594": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4595": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4597": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "4598": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4599": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4600": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4601": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 64
    },
    "4602": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4603": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4604": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9360,
        9801
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4605": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9439,
        9454
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4607": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9439,
        9454
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4608": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4609": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9496,
        9509
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4610": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9496,
        9509
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4611": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9492,
        9509
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4612": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9492,
        9509
      ],
      "op": "LT",
      "path": "14"
    },
    "4613": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4614": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1238"
    },
    "4617": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4618": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9625,
        9630
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4619": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9618
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4620": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9619,
        9620
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4621": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4622": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4623": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4624": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "LT",
      "path": "14"
    },
    "4625": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1216"
    },
    "4628": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4629": {
      "dev": "Index out of range",
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "INVALID",
      "path": "14"
    },
    "4630": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4631": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4632": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4634": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4635": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4637": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4639": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4640": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "ADD",
      "path": "14"
    },
    "4641": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9621
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4642": {
      "branch": 102,
      "fn": "token_challenge.matchFlag",
      "offset": [
        9612,
        9630
      ],
      "op": "EQ",
      "path": "14"
    },
    "4643": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9608,
        9719
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4644": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9608,
        9719
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1230"
    },
    "4647": {
      "branch": 102,
      "fn": "token_challenge.matchFlag",
      "offset": [
        9608,
        9719
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4648": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9667,
        9671
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 65,
      "value": "0x1"
    },
    "4650": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9654,
        9671
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4651": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9654,
        9671
      ],
      "op": "POP",
      "path": "14"
    },
    "4652": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9694,
        9699
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 66,
      "value": "0x1238"
    },
    "4655": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9694,
        9699
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4656": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9608,
        9719
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4657": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9511,
        9514
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 67,
      "value": "0x1"
    },
    "4659": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9511,
        9514
      ],
      "op": "ADD",
      "path": "14"
    },
    "4660": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1200"
    },
    "4663": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4664": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4665": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9473,
        9733
      ],
      "op": "POP",
      "path": "14"
    },
    "4666": {
      "branch": 103,
      "fn": "token_challenge.matchFlag",
      "offset": [
        9754,
        9764
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 68
    },
    "4667": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x128B"
    },
    "4670": {
      "branch": 103,
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4671": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4673": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4674": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4681": {
      "op": "SHL"
    },
    "4682": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4683": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4684": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4686": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4688": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4689": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "ADD",
      "path": "14"
    },
    "4690": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4691": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x18"
    },
    "4693": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4695": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4696": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "ADD",
      "path": "14"
    },
    "4697": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4698": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x436F756C646E27742066696E642079756F7220666C6167210000000000000000"
    },
    "4731": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4733": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4734": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "ADD",
      "path": "14"
    },
    "4735": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4736": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4737": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4738": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4739": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4740": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4741": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "SUB",
      "path": "14"
    },
    "4742": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4744": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "ADD",
      "path": "14"
    },
    "4745": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4746": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4747": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9746,
        9793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4748": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9360,
        9801
      ],
      "op": "POP",
      "path": "14"
    },
    "4749": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9360,
        9801
      ],
      "op": "POP",
      "path": "14"
    },
    "4750": {
      "fn": "token_challenge.matchFlag",
      "offset": [
        9360,
        9801
      ],
      "op": "POP",
      "path": "14"
    },
    "4751": {
      "fn": "token_challenge.matchFlag",
      "jump": "o",
      "offset": [
        9360,
        9801
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4752": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9121,
        9354
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4753": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9205,
        9214
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4755": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4756": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9224,
        9237
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4757": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9224,
        9237
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4758": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9220,
        9237
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4759": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9220,
        9237
      ],
      "op": "LT",
      "path": "14"
    },
    "4760": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4761": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1304"
    },
    "4764": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4765": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9278,
        9283
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 69
    },
    "4766": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9271
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4767": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9272,
        9273
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4768": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4769": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4770": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4771": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "LT",
      "path": "14"
    },
    "4772": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A9"
    },
    "4775": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4776": {
      "dev": "Index out of range",
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "INVALID",
      "path": "14"
    },
    "4777": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4778": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4779": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4781": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4782": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4784": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4786": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4787": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "ADD",
      "path": "14"
    },
    "4788": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9274
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4789": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9283
      ],
      "op": "EQ",
      "path": "14"
    },
    "4790": {
      "branch": 104,
      "fn": "token_challenge.checkFlag",
      "offset": [
        9265,
        9283
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4791": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12FC"
    },
    "4794": {
      "branch": 104,
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4795": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4797": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4798": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4805": {
      "op": "SHL"
    },
    "4806": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4807": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4808": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4810": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4812": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4813": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "ADD",
      "path": "14"
    },
    "4814": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4815": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "4817": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4819": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4820": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "ADD",
      "path": "14"
    },
    "4821": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4822": {
      "op": "PUSH18",
      "value": "0x466C616720616C7265616479207573656421"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4843": {
      "op": "SHL"
    },
    "4844": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4846": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4847": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "ADD",
      "path": "14"
    },
    "4848": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4849": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4850": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4851": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4852": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4853": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4854": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "SUB",
      "path": "14"
    },
    "4855": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4857": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "ADD",
      "path": "14"
    },
    "4858": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4859": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4860": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9257,
        9307
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4861": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9239,
        9242
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 70,
      "value": "0x1"
    },
    "4863": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9239,
        9242
      ],
      "op": "ADD",
      "path": "14"
    },
    "4864": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1293"
    },
    "4867": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4868": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9201,
        9318
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "op": "DUP2"
    },
    "4871": {
      "op": "SLOAD"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4874": {
      "op": "DUP2"
    },
    "4875": {
      "op": "ADD"
    },
    "4876": {
      "op": "DUP4"
    },
    "4877": {
      "op": "SSTORE"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4880": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "SWAP3",
      "path": "14",
      "statement": 71
    },
    "4881": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4882": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4883": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4885": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4886": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4887": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4888": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4889": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4890": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "ADD",
      "path": "14"
    },
    "4891": {
      "fn": "token_challenge.checkFlag",
      "offset": [
        9328,
        9346
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "4892": {
      "fn": "token_challenge.checkFlag",
      "jump": "o",
      "offset": [
        9121,
        9354
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4893": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4894": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 72,
      "value": "0x132E"
    },
    "4897": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4899": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4900": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4905": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x143D"
    },
    "4908": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "4909": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4910": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4911": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 73,
      "value": "0x40"
    },
    "4913": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4920": {
      "op": "SHL"
    },
    "4921": {
      "op": "SUB"
    },
    "4922": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4923": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "4924": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4925": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "4958": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4959": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4961": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4962": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "4963": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "4964": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4965": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4966": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 74,
      "value": "0x1376"
    },
    "4969": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4971": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4972": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4977": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14BE"
    },
    "4980": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "4981": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4982": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4983": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 75,
      "value": "0x40"
    },
    "4985": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4992": {
      "op": "SHL"
    },
    "4993": {
      "op": "SUB"
    },
    "4994": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4995": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "4996": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4997": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "5030": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5031": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5033": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5034": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "5035": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "5036": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5037": {
      "fn": "TeamRole._addTeam",
      "offset": [
        856,
        969
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5038": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 76,
      "value": "0x13BE"
    },
    "5041": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        916
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5043": {
      "fn": "TeamRole._addTeam",
      "offset": [
        921,
        928
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5044": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "5049": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        920
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143D"
    },
    "5052": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "AND",
      "path": "13"
    },
    "5053": {
      "fn": "TeamRole._addTeam",
      "jump": "i",
      "offset": [
        910,
        929
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5054": {
      "fn": "TeamRole._addTeam",
      "offset": [
        910,
        929
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5055": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 77,
      "value": "0x40"
    },
    "5057": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5064": {
      "op": "SHL"
    },
    "5065": {
      "op": "SUB"
    },
    "5066": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5067": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "AND",
      "path": "13"
    },
    "5068": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5069": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x3F5F1DB80208F0D453083A86E16909CECC1E95E2618D5D927C93ACE22B8200FC"
    },
    "5102": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5103": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5105": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5106": {
      "fn": "TeamRole._addTeam",
      "offset": [
        944,
        962
      ],
      "op": "LOG2",
      "path": "13"
    },
    "5107": {
      "fn": "TeamRole._addTeam",
      "offset": [
        856,
        969
      ],
      "op": "POP",
      "path": "13"
    },
    "5108": {
      "fn": "TeamRole._addTeam",
      "jump": "o",
      "offset": [
        856,
        969
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5109": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        975,
        1096
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5110": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 78,
      "value": "0x1406"
    },
    "5113": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1038
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5115": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1046,
        1053
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5116": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "5121": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14BE"
    },
    "5124": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "AND",
      "path": "13"
    },
    "5125": {
      "fn": "TeamRole._removeTeam",
      "jump": "i",
      "offset": [
        1032,
        1054
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5126": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1032,
        1054
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5127": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 79,
      "value": "0x40"
    },
    "5129": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5136": {
      "op": "SHL"
    },
    "5137": {
      "op": "SUB"
    },
    "5138": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5139": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "AND",
      "path": "13"
    },
    "5140": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5141": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x26B6063D78AEFCF96F02FF06BC9822B5A623278253ADD7FFFA5FB453DB399810"
    },
    "5174": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5175": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5177": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5178": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        1069,
        1089
      ],
      "op": "LOG2",
      "path": "13"
    },
    "5179": {
      "fn": "TeamRole._removeTeam",
      "offset": [
        975,
        1096
      ],
      "op": "POP",
      "path": "13"
    },
    "5180": {
      "fn": "TeamRole._removeTeam",
      "jump": "o",
      "offset": [
        975,
        1096
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5181": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5182": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 80,
      "value": "0x1447"
    },
    "5185": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5186": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5187": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1191"
    },
    "5190": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5191": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5192": {
      "branch": 106,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5193": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1499"
    },
    "5196": {
      "branch": 106,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5197": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5199": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5200": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5207": {
      "op": "SHL"
    },
    "5208": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5209": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5210": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5212": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5214": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5215": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5216": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5217": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5219": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "5221": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5222": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5223": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5224": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "5257": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "5259": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5260": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5261": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5262": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5263": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5264": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5265": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5266": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5267": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "5268": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5270": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5271": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5272": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5273": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5280": {
      "op": "SHL"
    },
    "5281": {
      "op": "SUB"
    },
    "5282": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 81
    },
    "5283": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5285": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5286": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5287": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5288": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5290": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5291": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5292": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5293": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5294": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5296": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5297": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5298": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5299": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5302": {
      "op": "NOT"
    },
    "5303": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "5304": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5306": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "5307": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5308": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5309": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5310": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5311": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 82,
      "value": "0x14C8"
    },
    "5314": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5315": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5316": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1191"
    },
    "5319": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5320": {
      "branch": 107,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5321": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1503"
    },
    "5324": {
      "branch": 107,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5325": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5327": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5334": {
      "op": "SHL"
    },
    "5335": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5336": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5337": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5339": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5340": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5341": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5342": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5344": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5345": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5346": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5347": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "5348": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5349": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5350": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5352": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5353": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5354": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5356": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5357": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5358": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1556"
    },
    "5361": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5363": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5364": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5365": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5367": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5368": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5369": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "5370": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "5371": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5373": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5374": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5375": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5376": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "5377": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5378": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5379": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5386": {
      "op": "SHL"
    },
    "5387": {
      "op": "SUB"
    },
    "5388": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 83
    },
    "5389": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5391": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5392": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5393": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5394": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5396": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5397": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5398": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5399": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5400": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5402": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5403": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5404": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5405": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5408": {
      "op": "NOT"
    },
    "5409": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "5410": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5411": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5412": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "f8fc82243f917bb47de5501729e0197181b7a3da",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./token_exchange.sol\" ; \nimport \"./TeamRole.sol\" ; \n\ncontract token_challenge is AdminRole, TeamRole {\n\n    //address _exchangeAddress; \n    address _fss = 0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff ;\n\n    //EXCHANGE & PAYCOIN\n    token_exchange fss_exchange; \n    IT_PayCoin payCoin; \n\n    //SIGNING UP & CHECKING VARIABLES\n    address[] _teamAddresses; \n\n    event Registered(address indexed teamAddress); \n\n    //PRICE OVERNIGHT VARIABLES\n    uint256 _last_id_price; \n    uint256 _startOvernightChallenge;\n    bool _overnightWon; \n    \n    event Overnight(address indexed winner, uint256 indexed coin_won); \n\n    //DIRECT CHALLENGE VARIABLES\n    uint256[] _directFlag; \n    //uint256 _startDirectChallenge; \n    address _directChallenger; \n    address _directChallenged; \n    //bool _directChallengeWon;\n    mapping (uint256 => bool) _directChallengeWon;\n    mapping (uint256 => uint256) _startDirectChallenge; \n\n    event DirectChallenge(address indexed directChallenger, address indexed directChallenged, uint256 directFlag); \n    event DirectChallengeWon(address indexed directWinner, uint256 indexed directFlag, uint256 indexed coin_amount); \n\n    //TEAM CHALLENGE VARIABLES\n    uint256[] _teamFlag; \n    address _teamChallenger; \n    address[] _teamChallenged;\n    \n    mapping (uint256 => uint256) _startTeamChallenge; \n    mapping (uint256 => bool) _teamChallengeWon; \n    \n    event TeamChallenge(address indexed teamChallenger, uint256 teamFlag);\n    event TeamChallengeWon(address indexed teamWinner, uint256 indexed teamFlag, uint256 indexed coin_amount);  \n\n    //CONSTRUCTOR\n    constructor (address exchangeAddress) public {\n        fss_exchange = token_exchange(exchangeAddress);\n        payCoin = IT_PayCoin(fss_exchange.payCoin());\n    }\n\n    //SIGNING UP & CHECKING FUNCTIONS\n    function register(address teamAddress) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress);\n        bool _alreadyRegistered = false; \n\n        //TODO: Remember to uncomment!\n        //require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                _alreadyRegistered = true; \n            }\n        }\n        require(_alreadyRegistered == false, \"You're already registered.\"); \n\n        _teamAddresses.push(teamAddress); \n        if(!(isTeam(teamAddress))){\n            addTeam(teamAddress);\n        }\n         \n        require(_teamAddresses.length <= 3, \"Too many teams.\"); \n        \n        emit Registered(teamAddress); \n    }\n\n    function isRegistered(address teamAddress) external view returns(bool){\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                return true; \n            }\n        }\n    return false; \n    }\n\n    //PRICE OVERNIGHT\n\n    function overnightStart(int256 new_delta_price) onlyAdmin external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        //TODO: Remember to uncomment!\n        //require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n        \n        _startOvernightChallenge = now; \n        _last_id_price = fss_exchange.setNewPrice(new_delta_price);\n        _overnightWon = false;  \n        payCoin.burnFrom(msg.sender, 200e18); \n\n    }\n\n    function overnightCheck(uint256 id_price) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        require(id_price == _last_id_price, \"Wrong id price.\"); \n        if( now > _startOvernightChallenge && now < _startOvernightChallenge + 1 minutes){\n            require(_overnightWon == false, \"The challenge has already been won.\"); \n\n            payCoin.mint(msg.sender, 1200e18); \n            _overnightWon = true;\n            emit Overnight(msg.sender, 1200e18); \n\n        }\n\n        else{\n            payCoin.mint(_fss, 2000e18); \n            emit Overnight(_fss, 2000e18); \n        }\n        \n    }\n\n    //DIRECT CHALLENGE\n    \n    function challengeStart(address directChallenged, uint256 flag) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n        /*\n        for(uint256 i = 0; i < _directFlag.length; i++){\n            require(_directFlag[i] != flag , \"Flag already used!\");\n        }\n        */\n        checkFlag(_directFlag, flag); \n\n        require(msg.sender != directChallenged, \"The addresses must be different.\"); \n        //TODO require address must be of the teams. \n\n        //_directFlag.push(flag); \n        _startDirectChallenge[flag] = now;\n        _directChallenger = msg.sender; \n        _directChallenged = directChallenged; \n        _directChallengeWon[flag] = false; \n\n        emit DirectChallenge(_directChallenger, _directChallenged, flag);\n        payCoin.burnFrom(msg.sender, 50e18);          \n    \n    }\n\n    function winDirectChallenge(uint256 flag) external returns(bool) {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n        bool _flagFound = false; \n\n        payCoin.burnFrom(msg.sender, 50e18);\n        \n        require(msg.sender == _directChallenger || msg.sender == _directChallenged, \"You must be either the challenger or the challenged.\"); \n        if(now >= _startDirectChallenge[flag] + 5 seconds){ //REMEMBER TO CHANGE BACK TO MINUTES!\n            require(_directChallengeWon[flag] == false, \"The challenge has already been won.\"); \n            /*\n            for(uint256 i = 0; i < _directFlag.length; i++){\n                //require( _flag[i] == flag , \"Couldn't find yuor flag!\");\n                if (_directFlag[i] == flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\"); \n            */\n            matchFlag(_directFlag, flag); \n\n            payCoin.mint(msg.sender, 1000e18);\n            emit DirectChallengeWon(msg.sender, flag, 1000e18); \n            _directChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n\n    }\n    \n    //TEAM CHALLENGE\n    \n    function challengeStart(uint256 flag) onlyTeam external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n        /*\n        for(uint256 i = 0; i < _teamFlag.length; i++){\n            require(_teamFlag[i] != flag , \"Flag already used!\");\n        } \n        */\n        //TODO require address must be of the teams.\n\n        //_teamFlag.push(flag); \n        checkFlag(_teamFlag, flag); \n\n        _startTeamChallenge[flag] = now;\n        _teamChallengeWon[flag] = false; \n\n        require(_teamAddresses.length == 3, \"Challenge can't start until all teams regitered.\"); \n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(msg.sender == _teamAddresses[i]){\n                _teamChallenger = msg.sender; \n            }\n            else{\n                _teamChallenged.push(_teamAddresses[i]); \n            }\n        }\n\n        emit TeamChallenge(msg.sender, flag); \n\n        payCoin.burnFrom(msg.sender, 100e18); \n\n    }\n\n    function winTeamChallenge(uint256 flag) onlyTeam external returns(bool) {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());    \n        bool _flagFound = false; \n\n        payCoin.burnFrom(msg.sender, 100e18);\n\n        //require(msg.sender == _teamChallenger || msg.sender == _teamChallenged[0] || msg.sender == _teamChallenged[1], \"You must be either the challenger or one fo the challenged.\"); \n        if(now >= _startTeamChallenge[flag] + 5 seconds){//REMEMBER TO CHANGE BACK TO MINUTES!\n            require(_teamChallengeWon[flag] == false, \"The challenge has already been won.\"); \n            /*\n            for(uint256 i = 0; i < _teamFlag.length; i++){\n                //require( _flag[i] == flag , \"Couldn't find yuor flag!\");\n                if (_teamFlag[i] == flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\"); \n            */\n            matchFlag(_teamFlag, flag); \n\n            if(msg.sender == _teamChallenger){\n                payCoin.mint(msg.sender, 1500e18);\n                emit TeamChallengeWon(msg.sender, flag, 1500e18);\n            }\n            else{\n                payCoin.mint(msg.sender, 1000e18);\n                emit TeamChallengeWon(msg.sender, flag, 1000e18);\n            }\n             \n            _teamChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n    }\n\n\n    //INTERNAL FUNCTION\n\n    function checkFlag(uint256[] storage _flags, uint256 _flag) internal {\n\n        for(uint256 i = 0; i < _flags.length; i++){\n            require(_flags[i] != _flag , \"Flag already used!\");\n        }\n\n        _flags.push(_flag);\n\n    }\n\n    function matchFlag(uint256[] storage _flags, uint256 _flag) internal {\n        bool _flagFound = false;\n\n        for(uint256 i = 0; i < _flags.length; i++){\n                //require( _flag[i] == flag , \"Couldn't find yuor flag!\");\n                if (_flags[i] == _flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\");\n\n    }\n\n\n\n\n\n\n    //EXCHANGE & PAYCOIN ADDRESS\n    /*\n    function setExchange(address exchangeAddress) onlyAdmin external {\n        fss_exchange = token_exchange(exchangeAddress); \n    }\n    \n    function setPayCoin(address payCoinAddress) onlyAdmin external {\n        payCoin = IT_PayCoin(payCoinAddress); \n    }\n    */\n\n}",
  "sourceMap": "86:10032:14:-;;;174:57;;;-1:-1:-1;;;;;;174:57:14;189:42;174:57;;;1628:162;5:2:-1;;;;30:1;27;20:12;5:2;1628:162:14;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1628:162:14;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;412:22:13;421:12;-1:-1:-1;;;;;421:10:13;:12;:::i;:::-;-1:-1:-1;;;;;412:8:13;:22;:::i;:::-;1683:12:14;:46;;-1:-1:-1;;;;;;1683:46:14;-1:-1:-1;;;;;1683:46:14;;;;;;;;;;;1760:22;;;-1:-1:-1;;;;;;1760:22:14;;;;:12;;;;;:20;;:22;;;;;;;;;;;;;;;:12;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;1760:22:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1760:22:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1760:22:14;1739:7;:44;;-1:-1:-1;;;;;;1739:44:14;-1:-1:-1;;;;;1739:44:14;;;;;;;;;-1:-1:-1;86:10032:14;;788:96:0;867:10;788:96;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;856:113:13:-;910:19;921:7;910:6;:10;;;;;;:19;;;;:::i;:::-;944:18;;-1:-1:-1;;;;;944:18:13;;;;;;;;856:113;:::o;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;86:10032:14:-;;;;;;;",
  "sourcePath": "contracts/token_challenge.sol",
  "type": "contract"
}