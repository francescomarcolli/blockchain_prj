{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "directChallenger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "directChallenged",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "directFlag",
          "type": "uint256"
        }
      ],
      "name": "DirectChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "directWinner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "directFlag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_amount",
          "type": "uint256"
        }
      ],
      "name": "DirectChallengeWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_won",
          "type": "uint256"
        }
      ],
      "name": "Overnight",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "teamFlag",
          "type": "uint256"
        }
      ],
      "name": "TeamChallenge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamWinner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamFlag",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coin_amount",
          "type": "uint256"
        }
      ],
      "name": "TeamChallengeWon",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "directChallenged",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "challengeStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id_price",
          "type": "uint256"
        }
      ],
      "name": "overnightCheck",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256",
          "name": "new_delta_price",
          "type": "int256"
        }
      ],
      "name": "overnightStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winDirectChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "winTeamChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "13": "contracts/token_challenge.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_challenge.sol",
    "exportedSymbols": {
      "token_challenge": [
        723
      ]
    },
    "id": 724,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "contracts/token_exchange.sol",
        "file": "./token_exchange.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 724,
        "sourceUnit": 1283,
        "src": "25:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1389,
              "src": "87:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$1389",
                "typeString": "contract AdminRole"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "87:9:13"
          }
        ],
        "contractDependencies": [
          1389,
          1741
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 723,
        "linearizedBaseContracts": [
          723,
          1389,
          1741
        ],
        "name": "token_challenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "_fss",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "137:57:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "137:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838354138643732343146666666656537323930353031343733413942313142466441324165394666",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "152:42:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "name": "fss_exchange",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "227:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_token_exchange_$1282",
              "typeString": "contract token_exchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "token_exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1282,
              "src": "227:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_token_exchange_$1282",
                "typeString": "contract token_exchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "name": "payCoin",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "261:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
              "typeString": "contract IT_PayCoin"
            },
            "typeName": {
              "contractScope": null,
              "id": 10,
              "name": "IT_PayCoin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2057,
              "src": "261:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                "typeString": "contract IT_PayCoin"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "name": "_teamAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "325:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 13,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "325:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "Registered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": true,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "374:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "373:29:13"
            },
            "src": "357:46:13"
          },
          {
            "constant": false,
            "id": 20,
            "name": "_last_id_price",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "442:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22,
            "name": "_startOvernightChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "471:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "name": "_overnightWon",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "509:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 23,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "509:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 30,
            "name": "Overnight",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "555:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "name": "coin_won",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "579:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:50:13"
            },
            "src": "539:66:13"
          },
          {
            "constant": false,
            "id": 33,
            "name": "_directFlag",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "645:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 31,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "645:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 32,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "645:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 35,
            "name": "_directChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "711:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 37,
            "name": "_directChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "743:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "743:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 41,
            "name": "_directChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "807:45:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "816:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "807:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 39,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "827:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "name": "_startDirectChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "858:50:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "867:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "858:28:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 43,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "878:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 53,
            "name": "DirectChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": true,
                  "name": "directChallenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "938:32:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "name": "directChallenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "972:32:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "name": "directFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1006:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "937:88:13"
            },
            "src": "916:110:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 61,
            "name": "DirectChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "name": "directWinner",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1057:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "name": "directFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1087:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "name": "coin_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1115:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:87:13"
            },
            "src": "1032:112:13"
          },
          {
            "constant": false,
            "id": 64,
            "name": "_teamFlag",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "1182:19:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 62,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1182:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 63,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1182:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "name": "_teamChallenger",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "1208:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1208:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "name": "_teamChallenged",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "1238:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 67,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1238:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 68,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1238:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 73,
            "name": "_startTeamChallenge",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "1274:48:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1283:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1274:28:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1294:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 77,
            "name": "_teamChallengeWon",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "1329:43:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 76,
              "keyType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1338:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1329:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 75,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1349:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 83,
            "name": "TeamChallenge",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "name": "teamChallenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1404:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "name": "teamFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1436:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1403:50:13"
            },
            "src": "1384:70:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 91,
            "name": "TeamChallengeWon",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "indexed": true,
                  "name": "teamWinner",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1482:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "name": "teamFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1510:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": true,
                  "name": "coin_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1536:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1481:83:13"
            },
            "src": "1459:106:13"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1636:117:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "fss_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1646:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1282",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 98,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1676:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 97,
                        "name": "token_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "1661:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_token_exchange_$1282_$",
                          "typeString": "type(contract token_exchange)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1661:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_exchange_$1282",
                        "typeString": "contract token_exchange"
                      }
                    },
                    "src": "1646:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_token_exchange_$1282",
                      "typeString": "contract token_exchange"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "payCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1702:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 104,
                              "name": "fss_exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1723:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_token_exchange_$1282",
                                "typeString": "contract token_exchange"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payCoin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 744,
                            "src": "1723:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IT_PayCoin_$2057_$",
                              "typeString": "function () view external returns (contract IT_PayCoin)"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1723:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                            "typeString": "contract IT_PayCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                            "typeString": "contract IT_PayCoin"
                          }
                        ],
                        "id": 103,
                        "name": "IT_PayCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "1712:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IT_PayCoin_$2057_$",
                          "typeString": "type(contract IT_PayCoin)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1712:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                        "typeString": "contract IT_PayCoin"
                      }
                    },
                    "src": "1702:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                      "typeString": "contract IT_PayCoin"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:44:13"
                }
              ]
            },
            "documentation": null,
            "id": 111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "exchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1604:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:25:13"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:13"
            },
            "scope": 723,
            "src": "1591:162:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1845:667:13",
              "statements": [
                {
                  "assignments": [
                    117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 117,
                      "name": "_alreadyRegistered",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "1929:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 116,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1929:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1955:5:13",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1929:31:13"
                },
                {
                  "body": {
                    "id": 142,
                    "nodeType": "Block",
                    "src": "2152:119:13",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2169:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 133,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 132,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2184:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2169:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2190:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2169:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 141,
                        "nodeType": "IfStatement",
                        "src": "2166:95:13",
                        "trueBody": {
                          "id": 140,
                          "nodeType": "Block",
                          "src": "2202:59:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 136,
                                  "name": "_alreadyRegistered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "2220:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2241:4:13",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2220:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 139,
                              "nodeType": "ExpressionStatement",
                              "src": "2220:25:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "2121:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2125:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2125:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2121:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "initializationExpression": {
                    "assignments": [
                      121
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 121,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "2106:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2106:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 123,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2118:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2106:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2148:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2148:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130,
                    "nodeType": "ExpressionStatement",
                    "src": "2148:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "2102:169:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "_alreadyRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2288:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2310:5:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2288:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7527726520616c726561647920726567697374657265642e",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2317:28:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        },
                        "value": "You're already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f811a8e30660c7427d8a05d51d5a5a14cfd7b6434a3b2c0a0eead24446ed079",
                          "typeString": "literal_string \"You're already registered.\""
                        }
                      ],
                      "id": 144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "2280:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:66:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:66:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2378:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2358:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2358:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:32:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2410:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2410:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2435:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "2410:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e79207465616d732e",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2438:17:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        },
                        "value": "Too many teams."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efe8580035d62cfb9f55f22c7b55a12f675c1f93780cf8ace689d29fab1c1c63",
                          "typeString": "literal_string \"Too many teams.\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "2402:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:54:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:54:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2492:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 165,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2481:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "2476:28:13"
                }
              ]
            },
            "documentation": null,
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1815:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1814:21:13"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1845:0:13"
            },
            "scope": 723,
            "src": "1797:715:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2588:190:13",
              "statements": [
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "2648:105:13",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 188,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2665:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 189,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2680:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2665:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "2686:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2665:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 196,
                        "nodeType": "IfStatement",
                        "src": "2662:81:13",
                        "trueBody": {
                          "id": 195,
                          "nodeType": "Block",
                          "src": "2698:45:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2723:4:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 176,
                              "id": 194,
                              "nodeType": "Return",
                              "src": "2716:11:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "2617:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2621:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2621:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2617:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "initializationExpression": {
                    "assignments": [
                      178
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 178,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "2602:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2602:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 180,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2614:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2602:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2644:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "2644:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 187,
                    "nodeType": "ExpressionStatement",
                    "src": "2644:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "2598:155:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2765:5:13",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 176,
                  "id": 200,
                  "nodeType": "Return",
                  "src": "2758:12:13"
                }
              ]
            },
            "documentation": null,
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "teamAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2540:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2539:21:13"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2583:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2582:6:13"
            },
            "scope": 723,
            "src": "2518:260:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2874:478:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 209,
                      "name": "_startOvernightChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3165:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 210,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "3192:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3165:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 213,
                      "name": "_last_id_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "3206:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "new_delta_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3248:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "fss_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "3223:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_exchange_$1282",
                            "typeString": "contract token_exchange"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setNewPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1281,
                        "src": "3223:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_int256_$returns$_t_uint256_$",
                          "typeString": "function (int256) external returns (uint256)"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3223:41:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3206:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3206:58:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "_overnightWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3274:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3290:5:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3274:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:21:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2868,
                          "src": "3324:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3324:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030653138",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:6:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        },
                        "value": "200e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3307:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2056,
                      "src": "3307:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:36:13"
                }
              ]
            },
            "documentation": null,
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 206,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1322,
                  "src": "2855:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2855:9:13"
              }
            ],
            "name": "overnightStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "name": "new_delta_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2831:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2830:24:13"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2874:0:13"
            },
            "scope": 723,
            "src": "2807:545:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "3409:655:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "3570:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "_last_id_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3582:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3570:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e672069642070726963652e",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3598:17:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        },
                        "value": "Wrong id price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cc97859348b035ac683891ce0df8ff7e946ddd66c5805b03ead53b11ea96eaa",
                          "typeString": "literal_string \"Wrong id price.\""
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "3562:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:54:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:54:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "3631:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "_startOvernightChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3637:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3631:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "3665:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "_startOvernightChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3671:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3698:9:13",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "3671:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3665:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3631:76:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 292,
                    "nodeType": "Block",
                    "src": "3952:97:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 283,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "3979:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3985:7:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 280,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "3966:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2084,
                            "src": "3966:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3966:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "3966:27:13"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 288,
                              "name": "_fss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "4023:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "32303030653138",
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4029:7:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              },
                              "value": "2000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                                "typeString": "int_const 2000000000000000000000"
                              }
                            ],
                            "id": 287,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "4013:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4013:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "EmitStatement",
                        "src": "4008:29:13"
                      }
                    ]
                  },
                  "id": 293,
                  "nodeType": "IfStatement",
                  "src": "3627:422:13",
                  "trueBody": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "3708:230:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "_overnightWon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "3730:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3747:5:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3730:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3754:37:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 254,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "3722:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3722:70:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "3722:70:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 264,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2868,
                                "src": "3821:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3821:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3833:7:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 261,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "3808:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2084,
                            "src": "3808:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3808:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "3808:33:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 269,
                            "name": "_overnightWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3856:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3872:4:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3856:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "3856:20:13"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 274,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2868,
                                "src": "3905:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3905:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31323030653138",
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3917:7:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              },
                              "value": "1200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1200000000000000000000_by_1",
                                "typeString": "int_const 1200000000000000000000"
                              }
                            ],
                            "id": 273,
                            "name": "Overnight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "3895:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3895:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 278,
                        "nodeType": "EmitStatement",
                        "src": "3890:35:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "overnightCheck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "name": "id_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "3382:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3381:18:13"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3409:0:13"
            },
            "scope": 723,
            "src": "3358:706:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "4171:769:13",
              "statements": [
                {
                  "body": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "4371:79:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 314,
                                  "name": "_directFlag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "4393:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 316,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 315,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "4405:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4393:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 317,
                                "name": "flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "4411:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4393:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "466c616720616c7265616479207573656421",
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4418:20:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              },
                              "value": "Flag already used!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              }
                            ],
                            "id": 313,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "4385:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4385:54:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "4385:54:13"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 306,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "4343:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "_directFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4347:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4347:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4343:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 323,
                  "initializationExpression": {
                    "assignments": [
                      303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 303,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "4328:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4328:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 305,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4340:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4328:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4367:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "4367:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 312,
                    "nodeType": "ExpressionStatement",
                    "src": "4367:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "4324:126:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 325,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2868,
                            "src": "4467:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4467:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "directChallenged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "4481:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4467:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520616464726573736573206d75737420626520646966666572656e742e",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4499:34:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        },
                        "value": "The addresses must be different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d410d523ef762aba7205f59ca2b14731c153c9ba166ac0de4084fb30481a7927",
                          "typeString": "literal_string \"The addresses must be different.\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "4459:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:75:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4617:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_directFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4600:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4600:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4600:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "4600:22:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 338,
                        "name": "_startDirectChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "4633:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 340,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4655:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4633:27:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "4663:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4633:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:33:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 344,
                      "name": "_directChallenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4676:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2868,
                        "src": "4696:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4696:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4676:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 349,
                      "name": "_directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4717:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 350,
                      "name": "directChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "4737:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4717:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "4717:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "_directChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "4764:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 355,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4784:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4764:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4792:5:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4764:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:33:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 360,
                        "name": "_directChallenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "4830:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "_directChallenged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4849:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4868:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 359,
                      "name": "DirectChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4814:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4814:59:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "EmitStatement",
                  "src": "4809:64:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 368,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2868,
                          "src": "4900:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4900:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4912:5:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "4883:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2056,
                      "src": "4883:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4883:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:35:13"
                }
              ]
            },
            "documentation": null,
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "name": "directChallenged",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "4122:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4122:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "4148:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4121:40:13"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4171:0:13"
            },
            "scope": 723,
            "src": "4098:842:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "5011:1144:13",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "5163:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5163:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5181:5:13",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5163:23:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2868,
                          "src": "5215:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5215:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3530653138",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5227:5:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 385,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "5198:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2056,
                      "src": "5198:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5198:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "5198:35:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 394,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "5260:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5260:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "_directChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5274:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5260:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 398,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "5295:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5295:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 400,
                            "name": "_directChallenged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "5309:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5295:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5260:66:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5328:54:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        },
                        "value": "You must be either the challenger or the challenged."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8ae750cd405062f18e5a823985a34ebaf5a7cfdd17ff6c29974041f024adb0a",
                          "typeString": "literal_string \"You must be either the challenger or the challenged.\""
                        }
                      ],
                      "id": 393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "5252:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:131:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "5252:131:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 406,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "5397:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 407,
                          "name": "_startDirectChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "5404:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 409,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 408,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "5426:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5404:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5434:9:13",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "5404:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5397:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "6110:38:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6131:5:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 380,
                        "id": 477,
                        "nodeType": "Return",
                        "src": "6124:12:13"
                      }
                    ]
                  },
                  "id": 479,
                  "nodeType": "IfStatement",
                  "src": "5394:754:13",
                  "trueBody": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "5444:652:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 414,
                                  "name": "_directChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41,
                                  "src": "5466:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 416,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 415,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "5486:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5466:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5495:5:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "5466:34:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5502:37:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 413,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "5458:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5458:82:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 421,
                        "nodeType": "ExpressionStatement",
                        "src": "5458:82:13"
                      },
                      {
                        "body": {
                          "id": 445,
                          "nodeType": "Block",
                          "src": "5602:222:13",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 433,
                                    "name": "_directFlag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33,
                                    "src": "5699:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 435,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 434,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 423,
                                    "src": "5711:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5699:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 436,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "5717:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5699:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 444,
                              "nodeType": "IfStatement",
                              "src": "5695:115:13",
                              "trueBody": {
                                "id": 443,
                                "nodeType": "Block",
                                "src": "5723:87:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 438,
                                        "name": "_flagFound",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 382,
                                        "src": "5745:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5758:4:13",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "5745:17:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 441,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5745:17:13"
                                  },
                                  {
                                    "id": 442,
                                    "nodeType": "Break",
                                    "src": "5785:5:13"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 426,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "5574:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 427,
                              "name": "_directFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "5578:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 428,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5578:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5574:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 446,
                        "initializationExpression": {
                          "assignments": [
                            423
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 423,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 446,
                              "src": "5559:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 422,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5559:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 425,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5571:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5559:13:13"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5598:3:13",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 430,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "5598:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 432,
                          "nodeType": "ExpressionStatement",
                          "src": "5598:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "5555:269:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 448,
                              "name": "_flagFound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "5845:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436f756c646e27742066696e642079756f7220666c616721",
                              "id": 449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5857:26:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                                "typeString": "literal_string \"Couldn't find yuor flag!\""
                              },
                              "value": "Couldn't find yuor flag!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                                "typeString": "literal_string \"Couldn't find yuor flag!\""
                              }
                            ],
                            "id": 447,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "5837:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5837:47:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 451,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:47:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 455,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2868,
                                "src": "5925:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5925:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5937:7:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 452,
                              "name": "payCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "5912:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                                "typeString": "contract IT_PayCoin"
                              }
                            },
                            "id": 454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2084,
                            "src": "5912:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5912:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 459,
                        "nodeType": "ExpressionStatement",
                        "src": "5912:33:13"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 461,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2868,
                                "src": "5983:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5983:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 463,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "5995:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31303030653138",
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6001:7:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "value": "1000e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            ],
                            "id": 460,
                            "name": "DirectChallengeWon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "5964:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5964:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 466,
                        "nodeType": "EmitStatement",
                        "src": "5959:50:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 467,
                              "name": "_directChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "6024:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 469,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 468,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "6044:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6024:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6052:4:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6024:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "6024:32:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6080:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 380,
                        "id": 474,
                        "nodeType": "Return",
                        "src": "6073:11:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winDirectChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "4974:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4974:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4973:14:13"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5005:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5005:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5004:6:13"
            },
            "scope": 723,
            "src": "4946:1209:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "6238:916:13",
              "statements": [
                {
                  "body": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "6436:77:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 498,
                                  "name": "_teamFlag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "6458:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 500,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 499,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 487,
                                  "src": "6468:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6458:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 501,
                                "name": "flag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 483,
                                "src": "6474:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6458:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "466c616720616c7265616479207573656421",
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6481:20:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              },
                              "value": "Flag already used!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25d53c992d448e282f7696e229a9c627d207aca75661cbae57fe59b22f2af1ba",
                                "typeString": "literal_string \"Flag already used!\""
                              }
                            ],
                            "id": 497,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "6450:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6450:52:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 505,
                        "nodeType": "ExpressionStatement",
                        "src": "6450:52:13"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 490,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "6410:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "_teamFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "6414:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6414:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6410:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 507,
                  "initializationExpression": {
                    "assignments": [
                      487
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 487,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6395:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6395:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 489,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6407:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6395:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6432:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 494,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "6432:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 496,
                    "nodeType": "ExpressionStatement",
                    "src": "6432:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "6391:122:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 511,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "6592:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "_teamFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "6577:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6577:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6577:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "6577:20:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 514,
                        "name": "_startTeamChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "6608:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 516,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 515,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "6628:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6608:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 517,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "6636:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6608:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6608:31:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "_teamChallengeWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "6649:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 522,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "6667:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6649:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6675:5:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6649:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:31:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 527,
                            "name": "_teamAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "6700:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6700:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6725:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6700:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e",
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6728:50:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        },
                        "value": "Challenge can't start until all teams regitered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bfee79762c1ba079a02dde147a4734aea89c8e05041f493f21c1d8e3fded7bf",
                          "typeString": "literal_string \"Challenge can't start until all teams regitered.\""
                        }
                      ],
                      "id": 526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "6692:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6692:87:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "6692:87:13"
                },
                {
                  "body": {
                    "id": 567,
                    "nodeType": "Block",
                    "src": "6840:211:13",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 545,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "6857:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6857:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 547,
                              "name": "_teamAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "6871:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 549,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 548,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "6886:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6871:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6857:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 565,
                          "nodeType": "Block",
                          "src": "6968:73:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 560,
                                      "name": "_teamAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "7007:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 562,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 561,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 535,
                                      "src": "7022:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7007:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 557,
                                    "name": "_teamChallenged",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69,
                                    "src": "6986:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6986:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6986:39:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 564,
                              "nodeType": "ExpressionStatement",
                              "src": "6986:39:13"
                            }
                          ]
                        },
                        "id": 566,
                        "nodeType": "IfStatement",
                        "src": "6854:187:13",
                        "trueBody": {
                          "id": 556,
                          "nodeType": "Block",
                          "src": "6889:62:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 551,
                                  "name": "_teamChallenger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66,
                                  "src": "6907:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 552,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2868,
                                    "src": "6925:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 553,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6925:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "6907:28:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 555,
                              "nodeType": "ExpressionStatement",
                              "src": "6907:28:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 538,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "6809:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 539,
                        "name": "_teamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "6813:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6813:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6809:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 568,
                  "initializationExpression": {
                    "assignments": [
                      535
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 535,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "6794:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6794:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 537,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6806:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6794:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6836:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "6836:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 544,
                    "nodeType": "ExpressionStatement",
                    "src": "6836:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "6790:261:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 570,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2868,
                          "src": "7080:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7080:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "7092:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 569,
                      "name": "TeamChallenge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "7066:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7066:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "EmitStatement",
                  "src": "7061:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 578,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2868,
                          "src": "7126:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7126:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7138:6:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 575,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "7109:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2056,
                      "src": "7109:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7109:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "7109:36:13"
                }
              ]
            },
            "documentation": null,
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeStart",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "6215:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6214:14:13"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6238:0:13"
            },
            "scope": 723,
            "src": "6191:963:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "7223:1403:13",
              "statements": [
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "name": "_flagFound",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "7379:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 591,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7379:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 594,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7397:5:13",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7379:23:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 598,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2868,
                          "src": "7431:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7431:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653138",
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7443:6:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "payCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "7414:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                          "typeString": "contract IT_PayCoin"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2056,
                      "src": "7414:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7414:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "7414:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 604,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2868,
                                "src": "7469:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7469:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 606,
                              "name": "_teamChallenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "7483:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7469:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 608,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2868,
                                "src": "7502:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7502:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 610,
                                "name": "_teamChallenged",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "7516:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 612,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7532:1:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7516:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7502:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7469:65:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 615,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "7538:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7538:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 617,
                              "name": "_teamChallenged",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "7552:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 619,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7568:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7552:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7538:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7469:101:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206d7573742062652065697468657220746865206368616c6c656e676572206f72206f6e6520666f20746865206368616c6c656e6765642e",
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7572:61:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56923d398b6498962762b54e225a75e8dbf092ebd955462001440b19f28d5e23",
                          "typeString": "literal_string \"You must be either the challenger or one fo the challenged.\""
                        },
                        "value": "You must be either the challenger or one fo the challenged."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56923d398b6498962762b54e225a75e8dbf092ebd955462001440b19f28d5e23",
                          "typeString": "literal_string \"You must be either the challenger or one fo the challenged.\""
                        }
                      ],
                      "id": 603,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2871,
                        2872
                      ],
                      "referencedDeclaration": 2872,
                      "src": "7461:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:173:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "7461:173:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "7648:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 626,
                          "name": "_startTeamChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "7655:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 628,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 627,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "7675:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7655:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7683:9:13",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "7655:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7648:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 719,
                    "nodeType": "Block",
                    "src": "8582:38:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8603:5:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 590,
                        "id": 718,
                        "nodeType": "Return",
                        "src": "8596:12:13"
                      }
                    ]
                  },
                  "id": 720,
                  "nodeType": "IfStatement",
                  "src": "7645:975:13",
                  "trueBody": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "7693:875:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 633,
                                  "name": "_teamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77,
                                  "src": "7715:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                    "typeString": "mapping(uint256 => bool)"
                                  }
                                },
                                "id": 635,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 634,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 586,
                                  "src": "7733:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7715:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7742:5:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "7715:32:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2e",
                              "id": 638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7749:37:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              },
                              "value": "The challenge has already been won."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c197cbffec51915177b187ad1ad41601bc581259369b439be70bc0c145075d3f",
                                "typeString": "literal_string \"The challenge has already been won.\""
                              }
                            ],
                            "id": 632,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "7707:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7707:80:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 640,
                        "nodeType": "ExpressionStatement",
                        "src": "7707:80:13"
                      },
                      {
                        "body": {
                          "id": 664,
                          "nodeType": "Block",
                          "src": "7847:220:13",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 652,
                                    "name": "_teamFlag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64,
                                    "src": "7944:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 654,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 653,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 642,
                                    "src": "7954:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7944:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 655,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 586,
                                  "src": "7960:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7944:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 663,
                              "nodeType": "IfStatement",
                              "src": "7940:113:13",
                              "trueBody": {
                                "id": 662,
                                "nodeType": "Block",
                                "src": "7966:87:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 657,
                                        "name": "_flagFound",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 592,
                                        "src": "7988:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 658,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8001:4:13",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "7988:17:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 660,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7988:17:13"
                                  },
                                  {
                                    "id": 661,
                                    "nodeType": "Break",
                                    "src": "8028:5:13"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 645,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "7821:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 646,
                              "name": "_teamFlag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "7825:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7825:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7821:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 665,
                        "initializationExpression": {
                          "assignments": [
                            642
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 642,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 665,
                              "src": "7806:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 641,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7806:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 644,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7818:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7806:13:13"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7843:3:13",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "7843:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 651,
                          "nodeType": "ExpressionStatement",
                          "src": "7843:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "7802:265:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 667,
                              "name": "_flagFound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "8088:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436f756c646e27742066696e642079756f7220666c616721",
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8100:26:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                                "typeString": "literal_string \"Couldn't find yuor flag!\""
                              },
                              "value": "Couldn't find yuor flag!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aea7fd6f51edaa86cf6194d21508a7a04fb800445b2dadfdd74dded2f76dde21",
                                "typeString": "literal_string \"Couldn't find yuor flag!\""
                              }
                            ],
                            "id": 666,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2871,
                              2872
                            ],
                            "referencedDeclaration": 2872,
                            "src": "8080:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8080:47:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8080:47:13"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 671,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "8158:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8158:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 673,
                            "name": "_teamChallenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "8172:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8158:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 706,
                          "nodeType": "Block",
                          "src": "8337:132:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 694,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2868,
                                      "src": "8368:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8368:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8380:7:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 691,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11,
                                    "src": "8355:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                                      "typeString": "contract IT_PayCoin"
                                    }
                                  },
                                  "id": 693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2084,
                                  "src": "8355:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8355:33:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 698,
                              "nodeType": "ExpressionStatement",
                              "src": "8355:33:13"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 700,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2868,
                                      "src": "8428:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8428:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 702,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 586,
                                    "src": "8440:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030653138",
                                    "id": 703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8446:7:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    },
                                    "value": "1000e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000000"
                                    }
                                  ],
                                  "id": 699,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8411:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8411:43:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 705,
                              "nodeType": "EmitStatement",
                              "src": "8406:48:13"
                            }
                          ]
                        },
                        "id": 707,
                        "nodeType": "IfStatement",
                        "src": "8155:314:13",
                        "trueBody": {
                          "id": 690,
                          "nodeType": "Block",
                          "src": "8188:132:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 678,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2868,
                                      "src": "8219:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8219:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8231:7:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 675,
                                    "name": "payCoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11,
                                    "src": "8206:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IT_PayCoin_$2057",
                                      "typeString": "contract IT_PayCoin"
                                    }
                                  },
                                  "id": 677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2084,
                                  "src": "8206:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8206:33:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 682,
                              "nodeType": "ExpressionStatement",
                              "src": "8206:33:13"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 684,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2868,
                                      "src": "8279:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8279:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 686,
                                    "name": "flag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 586,
                                    "src": "8291:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31353030653138",
                                    "id": 687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8297:7:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    },
                                    "value": "1500e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1500000000000000000000_by_1",
                                      "typeString": "int_const 1500000000000000000000"
                                    }
                                  ],
                                  "id": 683,
                                  "name": "TeamChallengeWon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8262:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8262:43:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 689,
                              "nodeType": "EmitStatement",
                              "src": "8257:48:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 708,
                              "name": "_directChallengeWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "8496:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 710,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 709,
                              "name": "flag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "8516:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8496:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8524:4:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8496:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "8496:32:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8552:4:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 590,
                        "id": 715,
                        "nodeType": "Return",
                        "src": "8545:11:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winTeamChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "name": "flag",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "7186:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7186:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7185:14:13"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "7217:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7217:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7216:6:13"
            },
            "scope": 723,
            "src": "7160:1466:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 724,
        "src": "59:8879:13"
      }
    ],
    "src": "0:8938:13"
  },
  "bytecode": "6080604052600180546001600160a01b0319167385a8d7241ffffee7290501473a9b11bfda2ae9ff1790553480156200003757600080fd5b50604051620018b6380380620018b6833981810160405260208110156200005d57600080fd5b505162000085620000766001600160e01b036200013916565b6001600160e01b036200013d16565b600280546001600160a01b0319166001600160a01b038381169190911791829055604080516001624b1f8b60e01b031981529051929091169163ffb4e07591600480820192602092909190829003018186803b158015620000e557600080fd5b505afa158015620000fa573d6000803e3d6000fd5b505050506040513d60208110156200011157600080fd5b5051600380546001600160a01b0319166001600160a01b039092169190911790555062000285565b3390565b620001588160006200018f60201b620013af1790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b620001a482826001600160e01b036200021c16565b15620001f7576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002655760405162461bcd60e51b8152600401808060200182810382526022815260200180620018946022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6115ff80620002956000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806376a9e7b31161007157806376a9e7b31461017f57806378591bfd1461019c5780638bad0c0a146101b9578063a5c6a022146101c1578063c3c5a547146101de578063d5d35f9514610204576100a9565b806324d7806c146100ae5780634420e486146100e8578063561675e114610110578063612b75431461012d5780637048027514610159575b600080fd5b6100d4600480360360208110156100c457600080fd5b50356001600160a01b0316610221565b604080519115158252519081900360200190f35b61010e600480360360208110156100fe57600080fd5b50356001600160a01b031661023b565b005b6100d46004803603602081101561012657600080fd5b50356103a6565b61010e6004803603604081101561014357600080fd5b506001600160a01b038135169060200135610778565b61010e6004803603602081101561016f57600080fd5b50356001600160a01b031661097b565b61010e6004803603602081101561019557600080fd5b50356109d2565b6100d4600480360360208110156101b257600080fd5b5035610b19565b61010e610dc5565b61010e600480360360208110156101d757600080fd5b5035610dd7565b6100d4600480360360208110156101f457600080fd5b50356001600160a01b0316611014565b61010e6004803603602081101561021a57600080fd5b503561106f565b6000610233818363ffffffff6112b416565b90505b919050565b6000805b60045481101561028857826001600160a01b03166004828154811061026057fe5b6000918252602090912001546001600160a01b0316141561028057600191505b60010161023f565b5080156102dc576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b6004805460018101825560008290527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038516179055546003101561036e576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b6003546040805163079cc67960e41b815233600482015268056bc75e2d631000006024820152905160009283926001600160a01b03909116916379cc679091604480820192869290919082900301818387803b15801561040557600080fd5b505af1158015610419573d6000803e3d6000fd5b5050600e546001600160a01b0316331491508190506104595750600f60008154811061044157fe5b6000918252602090912001546001600160a01b031633145b806104855750600f60018154811061046d57fe5b6000918252602090912001546001600160a01b031633145b6104c05760405162461bcd60e51b815260040180806020018281038252603b815260200180611498603b913960400191505060405180910390fd5b60008381526010602052604090205461012c01421061076e5760008381526011602052604090205460ff16156105275760405162461bcd60e51b81526004018080602001828103825260238152602001806115a86023913960400191505060405180910390fd5b60005b600d548110156105645783600d828154811061054257fe5b9060005260206000200154141561055c5760019150610564565b60010161052a565b50806105b2576040805162461bcd60e51b8152602060048201526018602482015277436f756c646e27742066696e642079756f7220666c61672160401b604482015290519081900360640190fd5b600e546001600160a01b031633141561068a57600354604080516340c10f1960e01b8152336004820152685150ae84a8cdf00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b15801561062157600080fd5b505af1158015610635573d6000803e3d6000fd5b505050506040513d602081101561064b57600080fd5b5050604051685150ae84a8cdf0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a461074b565b600354604080516340c10f1960e01b8152336004820152683635c9adc5dea00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b1580156106e657600080fd5b505af11580156106fa573d6000803e3d6000fd5b505050506040513d602081101561071057600080fd5b5050604051683635c9adc5dea0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a45b50506000818152600b60205260409020805460ff19166001908117909155610236565b6000915050610236565b60005b6008548110156107ee57816008828154811061079357fe5b906000526020600020015414156107e6576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b60010161077b565b50336001600160a01b038316141561084d576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3018190556000818152600c60209081526040808320429055600980546001600160a01b031990811633178255600a80546001600160a01b0389811691909316178155600b855294839020805460ff1916905593549054825186815292519185169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106928290030190a36003546040805163079cc67960e41b81523360048201526802b5e3af16b1880000602482015290516001600160a01b03909216916379cc67909160448082019260009290919082900301818387803b15801561095f57600080fd5b505af1158015610973573d6000803e3d6000fd5b505050505050565b61098b61098661131b565b610221565b6109c65760405162461bcd60e51b815260040180806020018281038252602e81526020018061157a602e913960400191505060405180910390fd5b6109cf8161131f565b50565b6109dd61098661131b565b610a185760405162461bcd60e51b815260040180806020018281038252602e81526020018061157a602e913960400191505060405180910390fd5b426006556002546040805163a967119360e01b81526004810184905290516001600160a01b039092169163a9671193916024808201926020929091908290030181600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050506040513d6020811015610a9457600080fd5b50516005556007805460ff191690556003546040805163079cc67960e41b8152336004820152680ad78ebc5ac6200000602482015290516001600160a01b03909216916379cc67909160448082019260009290919082900301818387803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b5050505050565b6003546040805163079cc67960e41b81523360048201526802b5e3af16b18800006024820152905160009283926001600160a01b03909116916379cc679091604480820192869290919082900301818387803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b50506009546001600160a01b031633149150819050610bb55750600a546001600160a01b031633145b610bf05760405162461bcd60e51b81526004018080602001828103825260348152602001806115466034913960400191505060405180910390fd5b6000838152600c602052604090205461012c01421061076e576000838152600b602052604090205460ff1615610c575760405162461bcd60e51b81526004018080602001828103825260238152602001806115a86023913960400191505060405180910390fd5b60005b600854811015610c94578360088281548110610c7257fe5b90600052602060002001541415610c8c5760019150610c94565b600101610c5a565b5080610ce2576040805162461bcd60e51b8152602060048201526018602482015277436f756c646e27742066696e642079756f7220666c61672160401b604482015290519081900360640190fd5b600354604080516340c10f1960e01b8152336004820152683635c9adc5dea00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b158015610d3e57600080fd5b505af1158015610d52573d6000803e3d6000fd5b505050506040513d6020811015610d6857600080fd5b5050604051683635c9adc5dea0000090849033907f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd90600090a450506000818152600b60205260409020805460ff19166001908117909155610236565b610dd5610dd061131b565b611367565b565b60005b600d54811015610e4d5781600d8281548110610df257fe5b90600052602060002001541415610e45576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b600101610dda565b50600d8054600181019091557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501819055600081815260106020908152604080832042905560119091529020805460ff19169055600454600314610ee25760405162461bcd60e51b81526004018080602001828103825260308152602001806114d36030913960400191505060405180910390fd5b60005b600454811015610f825760048181548110610efc57fe5b6000918252602090912001546001600160a01b0316331415610f2f57600e80546001600160a01b03191633179055610f7a565b600f60048281548110610f3e57fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b600101610ee5565b5060408051828152905133917f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373919081900360200190a26003546040805163079cc67960e41b815233600482015268056bc75e2d63100000602482015290516001600160a01b03909216916379cc67909160448082019260009290919082900301818387803b158015610afe57600080fd5b6000805b60045481101561106657826001600160a01b03166004828154811061103957fe5b6000918252602090912001546001600160a01b0316141561105e576001915050610236565b600101611018565b50600092915050565b60055481146110b7576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b600654421180156110cc5750600654603c0142105b156111e35760075460ff16156111135760405162461bcd60e51b81526004018080602001828103825260238152602001806115a86023913960400191505060405180910390fd5b600354604080516340c10f1960e01b815233600482015268410d586a20a4c00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b15801561116f57600080fd5b505af1158015611183573d6000803e3d6000fd5b505050506040513d602081101561119957600080fd5b50506007805460ff1916600117905560405168410d586a20a4c000009033907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a36109cf565b600354600154604080516340c10f1960e01b81526001600160a01b039283166004820152686c6b935b8bbd4000006024820152905191909216916340c10f199160448083019260209291908290030181600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d602081101561126e57600080fd5b5050600154604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b60006001600160a01b0382166112fb5760405162461bcd60e51b81526004018080602001828103825260228152602001806115246022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b61133060008263ffffffff6113af16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61137860008263ffffffff61143016565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6113b982826112b4565b1561140b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61143a82826112b4565b6114755760405162461bcd60e51b81526004018080602001828103825260218152602001806115036021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe596f75206d7573742062652065697468657220746865206368616c6c656e676572206f72206f6e6520666f20746865206368616c6c656e6765642e4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2ea265627a7a7231582037b6ff01d17852e736c9aa2102c183f91d345fb4ad63d11ea347b212b99f7d1d64736f6c63430005110032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_challenge",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "108": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "107": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "109": [
            589,
            607,
            true
          ]
        }
      },
      "13": {
        "token_challenge.challengeStart": {
          "91": [
            4393,
            4415,
            true
          ],
          "92": [
            4467,
            4497,
            true
          ],
          "99": [
            6458,
            6478,
            true
          ],
          "100": [
            6700,
            6726,
            true
          ],
          "101": [
            6857,
            6888,
            false
          ]
        },
        "token_challenge.isRegistered": {
          "102": [
            2665,
            2697,
            false
          ]
        },
        "token_challenge.overnightCheck": {
          "103": [
            3570,
            3596,
            true
          ],
          "104": [
            3631,
            3661,
            false
          ],
          "105": [
            3665,
            3707,
            false
          ],
          "106": [
            3730,
            3752,
            true
          ]
        },
        "token_challenge.register": {
          "80": [
            2169,
            2201,
            false
          ],
          "81": [
            2288,
            2315,
            true
          ],
          "82": [
            2410,
            2436,
            true
          ]
        },
        "token_challenge.winDirectChallenge": {
          "93": [
            5260,
            5291,
            true
          ],
          "94": [
            5295,
            5326,
            true
          ],
          "95": [
            5397,
            5443,
            false
          ],
          "96": [
            5466,
            5500,
            true
          ],
          "97": [
            5699,
            5721,
            false
          ],
          "98": [
            5845,
            5855,
            true
          ]
        },
        "token_challenge.winTeamChallenge": {
          "83": [
            7469,
            7498,
            true
          ],
          "84": [
            7502,
            7534,
            true
          ],
          "85": [
            7538,
            7570,
            true
          ],
          "86": [
            7648,
            7692,
            false
          ],
          "87": [
            7715,
            7747,
            true
          ],
          "88": [
            7944,
            7964,
            false
          ],
          "89": [
            8088,
            8098,
            true
          ],
          "90": [
            8158,
            8187,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "71": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "76": [
            328,
            391
          ],
          "77": [
            401,
            428
          ]
        },
        "Roles.has": {
          "69": [
            867,
            935
          ],
          "70": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "78": [
            581,
            645
          ],
          "79": [
            655,
            683
          ]
        }
      },
      "13": {
        "token_challenge.challengeStart": {
          "21": [
            4385,
            4439
          ],
          "22": [
            4367,
            4370
          ],
          "23": [
            4459,
            4534
          ],
          "24": [
            4600,
            4622
          ],
          "25": [
            4633,
            4666
          ],
          "26": [
            4676,
            4706
          ],
          "27": [
            4717,
            4753
          ],
          "28": [
            4764,
            4797
          ],
          "29": [
            4809,
            4873
          ],
          "30": [
            4883,
            4918
          ],
          "48": [
            6450,
            6502
          ],
          "49": [
            6432,
            6435
          ],
          "50": [
            6577,
            6597
          ],
          "51": [
            6608,
            6639
          ],
          "52": [
            6649,
            6680
          ],
          "53": [
            6692,
            6779
          ],
          "54": [
            6907,
            6935
          ],
          "55": [
            6986,
            7025
          ],
          "56": [
            6836,
            6839
          ],
          "57": [
            7061,
            7097
          ],
          "58": [
            7109,
            7145
          ]
        },
        "token_challenge.isRegistered": {
          "59": [
            2716,
            2727
          ],
          "60": [
            2644,
            2647
          ],
          "61": [
            2758,
            2770
          ]
        },
        "token_challenge.overnightCheck": {
          "62": [
            3562,
            3616
          ],
          "63": [
            3722,
            3792
          ],
          "64": [
            3808,
            3841
          ],
          "65": [
            3856,
            3876
          ],
          "66": [
            3890,
            3925
          ],
          "67": [
            3966,
            3993
          ],
          "68": [
            4008,
            4037
          ]
        },
        "token_challenge.overnightStart": {
          "32": [
            3165,
            3195
          ],
          "33": [
            3206,
            3264
          ],
          "34": [
            3274,
            3295
          ],
          "35": [
            3307,
            3343
          ]
        },
        "token_challenge.register": {
          "1": [
            2220,
            2245
          ],
          "2": [
            2148,
            2151
          ],
          "3": [
            2280,
            2346
          ],
          "4": [
            2358,
            2390
          ],
          "5": [
            2402,
            2456
          ],
          "6": [
            2476,
            2504
          ]
        },
        "token_challenge.winDirectChallenge": {
          "36": [
            5198,
            5233
          ],
          "37": [
            5252,
            5383
          ],
          "38": [
            5458,
            5540
          ],
          "39": [
            5745,
            5762
          ],
          "40": [
            5785,
            5790
          ],
          "41": [
            5598,
            5601
          ],
          "42": [
            5837,
            5884
          ],
          "43": [
            5912,
            5945
          ],
          "44": [
            5959,
            6009
          ],
          "45": [
            6024,
            6056
          ],
          "46": [
            6073,
            6084
          ]
        },
        "token_challenge.winTeamChallenge": {
          "7": [
            7414,
            7450
          ],
          "8": [
            7461,
            7634
          ],
          "9": [
            7707,
            7787
          ],
          "10": [
            7988,
            8005
          ],
          "11": [
            8028,
            8033
          ],
          "12": [
            7843,
            7846
          ],
          "13": [
            8080,
            8127
          ],
          "14": [
            8206,
            8239
          ],
          "15": [
            8257,
            8305
          ],
          "16": [
            8355,
            8388
          ],
          "17": [
            8406,
            8454
          ],
          "18": [
            8496,
            8528
          ],
          "19": [
            8545,
            8556
          ],
          "20": [
            8596,
            8608
          ]
        }
      },
      "9": {
        "AdminRole._addAdmin": {
          "72": [
            927,
            947
          ],
          "73": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "74": [
            1052,
            1075
          ],
          "75": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "31": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "0": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "47": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "Context",
    "Roles"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806376a9e7b31161007157806376a9e7b31461017f57806378591bfd1461019c5780638bad0c0a146101b9578063a5c6a022146101c1578063c3c5a547146101de578063d5d35f9514610204576100a9565b806324d7806c146100ae5780634420e486146100e8578063561675e114610110578063612b75431461012d5780637048027514610159575b600080fd5b6100d4600480360360208110156100c457600080fd5b50356001600160a01b0316610221565b604080519115158252519081900360200190f35b61010e600480360360208110156100fe57600080fd5b50356001600160a01b031661023b565b005b6100d46004803603602081101561012657600080fd5b50356103a6565b61010e6004803603604081101561014357600080fd5b506001600160a01b038135169060200135610778565b61010e6004803603602081101561016f57600080fd5b50356001600160a01b031661097b565b61010e6004803603602081101561019557600080fd5b50356109d2565b6100d4600480360360208110156101b257600080fd5b5035610b19565b61010e610dc5565b61010e600480360360208110156101d757600080fd5b5035610dd7565b6100d4600480360360208110156101f457600080fd5b50356001600160a01b0316611014565b61010e6004803603602081101561021a57600080fd5b503561106f565b6000610233818363ffffffff6112b416565b90505b919050565b6000805b60045481101561028857826001600160a01b03166004828154811061026057fe5b6000918252602090912001546001600160a01b0316141561028057600191505b60010161023f565b5080156102dc576040805162461bcd60e51b815260206004820152601a60248201527f596f7527726520616c726561647920726567697374657265642e000000000000604482015290519081900360640190fd5b6004805460018101825560008290527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038516179055546003101561036e576040805162461bcd60e51b815260206004820152600f60248201526e2a37b79036b0b73c903a32b0b6b99760891b604482015290519081900360640190fd5b6040516001600160a01b038316907f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990600090a25050565b6003546040805163079cc67960e41b815233600482015268056bc75e2d631000006024820152905160009283926001600160a01b03909116916379cc679091604480820192869290919082900301818387803b15801561040557600080fd5b505af1158015610419573d6000803e3d6000fd5b5050600e546001600160a01b0316331491508190506104595750600f60008154811061044157fe5b6000918252602090912001546001600160a01b031633145b806104855750600f60018154811061046d57fe5b6000918252602090912001546001600160a01b031633145b6104c05760405162461bcd60e51b815260040180806020018281038252603b815260200180611498603b913960400191505060405180910390fd5b60008381526010602052604090205461012c01421061076e5760008381526011602052604090205460ff16156105275760405162461bcd60e51b81526004018080602001828103825260238152602001806115a86023913960400191505060405180910390fd5b60005b600d548110156105645783600d828154811061054257fe5b9060005260206000200154141561055c5760019150610564565b60010161052a565b50806105b2576040805162461bcd60e51b8152602060048201526018602482015277436f756c646e27742066696e642079756f7220666c61672160401b604482015290519081900360640190fd5b600e546001600160a01b031633141561068a57600354604080516340c10f1960e01b8152336004820152685150ae84a8cdf00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b15801561062157600080fd5b505af1158015610635573d6000803e3d6000fd5b505050506040513d602081101561064b57600080fd5b5050604051685150ae84a8cdf0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a461074b565b600354604080516340c10f1960e01b8152336004820152683635c9adc5dea00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b1580156106e657600080fd5b505af11580156106fa573d6000803e3d6000fd5b505050506040513d602081101561071057600080fd5b5050604051683635c9adc5dea0000090849033907ffa5c135de8c72e98296cdf12890ca8b3682f079fbb46849f6f549372f634802990600090a45b50506000818152600b60205260409020805460ff19166001908117909155610236565b6000915050610236565b60005b6008548110156107ee57816008828154811061079357fe5b906000526020600020015414156107e6576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b60010161077b565b50336001600160a01b038316141561084d576040805162461bcd60e51b815260206004820181905260248201527f54686520616464726573736573206d75737420626520646966666572656e742e604482015290519081900360640190fd5b60088054600181019091557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3018190556000818152600c60209081526040808320429055600980546001600160a01b031990811633178255600a80546001600160a01b0389811691909316178155600b855294839020805460ff1916905593549054825186815292519185169416927fed4685cef203f43449f0207532eb272e1f2de4f8a6992033ed24099f086c2106928290030190a36003546040805163079cc67960e41b81523360048201526802b5e3af16b1880000602482015290516001600160a01b03909216916379cc67909160448082019260009290919082900301818387803b15801561095f57600080fd5b505af1158015610973573d6000803e3d6000fd5b505050505050565b61098b61098661131b565b610221565b6109c65760405162461bcd60e51b815260040180806020018281038252602e81526020018061157a602e913960400191505060405180910390fd5b6109cf8161131f565b50565b6109dd61098661131b565b610a185760405162461bcd60e51b815260040180806020018281038252602e81526020018061157a602e913960400191505060405180910390fd5b426006556002546040805163a967119360e01b81526004810184905290516001600160a01b039092169163a9671193916024808201926020929091908290030181600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050506040513d6020811015610a9457600080fd5b50516005556007805460ff191690556003546040805163079cc67960e41b8152336004820152680ad78ebc5ac6200000602482015290516001600160a01b03909216916379cc67909160448082019260009290919082900301818387803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b5050505050565b6003546040805163079cc67960e41b81523360048201526802b5e3af16b18800006024820152905160009283926001600160a01b03909116916379cc679091604480820192869290919082900301818387803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b50506009546001600160a01b031633149150819050610bb55750600a546001600160a01b031633145b610bf05760405162461bcd60e51b81526004018080602001828103825260348152602001806115466034913960400191505060405180910390fd5b6000838152600c602052604090205461012c01421061076e576000838152600b602052604090205460ff1615610c575760405162461bcd60e51b81526004018080602001828103825260238152602001806115a86023913960400191505060405180910390fd5b60005b600854811015610c94578360088281548110610c7257fe5b90600052602060002001541415610c8c5760019150610c94565b600101610c5a565b5080610ce2576040805162461bcd60e51b8152602060048201526018602482015277436f756c646e27742066696e642079756f7220666c61672160401b604482015290519081900360640190fd5b600354604080516340c10f1960e01b8152336004820152683635c9adc5dea00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b158015610d3e57600080fd5b505af1158015610d52573d6000803e3d6000fd5b505050506040513d6020811015610d6857600080fd5b5050604051683635c9adc5dea0000090849033907f06c48e695609c5cc5b9d779d70abb26282055513fb1a55cba442b3cbc6d43bcd90600090a450506000818152600b60205260409020805460ff19166001908117909155610236565b610dd5610dd061131b565b611367565b565b60005b600d54811015610e4d5781600d8281548110610df257fe5b90600052602060002001541415610e45576040805162461bcd60e51b8152602060048201526012602482015271466c616720616c726561647920757365642160701b604482015290519081900360640190fd5b600101610dda565b50600d8054600181019091557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501819055600081815260106020908152604080832042905560119091529020805460ff19169055600454600314610ee25760405162461bcd60e51b81526004018080602001828103825260308152602001806114d36030913960400191505060405180910390fd5b60005b600454811015610f825760048181548110610efc57fe5b6000918252602090912001546001600160a01b0316331415610f2f57600e80546001600160a01b03191633179055610f7a565b600f60048281548110610f3e57fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b600101610ee5565b5060408051828152905133917f3d1151f535ab57b7eefbbf3baaff50efaac64f3f0df368617499905f78cb2373919081900360200190a26003546040805163079cc67960e41b815233600482015268056bc75e2d63100000602482015290516001600160a01b03909216916379cc67909160448082019260009290919082900301818387803b158015610afe57600080fd5b6000805b60045481101561106657826001600160a01b03166004828154811061103957fe5b6000918252602090912001546001600160a01b0316141561105e576001915050610236565b600101611018565b50600092915050565b60055481146110b7576040805162461bcd60e51b815260206004820152600f60248201526e2bb937b7339034b210383934b1b29760891b604482015290519081900360640190fd5b600654421180156110cc5750600654603c0142105b156111e35760075460ff16156111135760405162461bcd60e51b81526004018080602001828103825260238152602001806115a86023913960400191505060405180910390fd5b600354604080516340c10f1960e01b815233600482015268410d586a20a4c00000602482015290516001600160a01b03909216916340c10f19916044808201926020929091908290030181600087803b15801561116f57600080fd5b505af1158015611183573d6000803e3d6000fd5b505050506040513d602081101561119957600080fd5b50506007805460ff1916600117905560405168410d586a20a4c000009033907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a36109cf565b600354600154604080516340c10f1960e01b81526001600160a01b039283166004820152686c6b935b8bbd4000006024820152905191909216916340c10f199160448083019260209291908290030181600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d602081101561126e57600080fd5b5050600154604051686c6b935b8bbd400000916001600160a01b0316907f75e44bccb8e953f3228b7bde1dc2a77ac72025aa92a8a329378d26b4f4e1a86090600090a350565b60006001600160a01b0382166112fb5760405162461bcd60e51b81526004018080602001828103825260228152602001806115246022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b61133060008263ffffffff6113af16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61137860008263ffffffff61143016565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6113b982826112b4565b1561140b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61143a82826112b4565b6114755760405162461bcd60e51b81526004018080602001828103825260218152602001806115036021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe596f75206d7573742062652065697468657220746865206368616c6c656e676572206f72206f6e6520666f20746865206368616c6c656e6765642e4368616c6c656e67652063616e277420737461727420756e74696c20616c6c207465616d73207265676974657265642e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373596f75206d7573742062652065697468657220746865206368616c6c656e676572206f7220746865206368616c6c656e6765642e41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65546865206368616c6c656e67652068617320616c7265616479206265656e20776f6e2ea265627a7a7231582037b6ff01d17852e736c9aa2102c183f91d345fb4ad63d11ea347b212b99f7d1d64736f6c63430005110032",
  "deployedSourceMap": "59:8879:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:8879:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;:::-;;;;;;;;;;;;;;;;;;1797:715:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1797:715:13;-1:-1:-1;;;;;1797:715:13;;:::i;:::-;;7160:1466;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7160:1466:13;;:::i;4098:842::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4098:842:13;;;;;;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;2807:545:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2807:545:13;;:::i;4946:1209::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4946:1209:13;;:::i;791:75:9:-;;;:::i;6191:963:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6191:963:13;;:::i;2518:260::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2518:260:13;-1:-1:-1;;;;;2518:260:13;;:::i;3358:706::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3358:706:13;;:::i;587:105:9:-;642:4;665:20;642:4;677:7;665:20;:11;:20;:::i;:::-;658:27;;587:105;;;;:::o;1797:715:13:-;1929:23;;2102:169;2125:14;:21;2121:25;;2102:169;;;2190:11;-1:-1:-1;;;;;2169:32:13;:14;2184:1;2169:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2169:17:13;:32;2166:95;;;2241:4;2220:25;;2166:95;2148:3;;2102:169;;;-1:-1:-1;2288:27:13;;2280:66;;;;;-1:-1:-1;;;2280:66:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:14;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2358:32:13;;;;;;;-1:-1:-1;;;;;;2358:32:13;-1:-1:-1;;;;;2358:32:13;;;;;2410:21;2435:1;-1:-1:-1;2410:26:13;2402:54;;;;;-1:-1:-1;;;2402:54:13;;;;;;;;;;;;-1:-1:-1;;;2402:54:13;;;;;;;;;;;;;;;2481:23;;-1:-1:-1;;;;;2481:23:13;;;;;;;;1797:715;;:::o;7160:1466::-;7414:7;;:36;;;-1:-1:-1;;;7414:36:13;;7431:10;7414:36;;;;7443:6;7414:36;;;;;;7217:4;;;;-1:-1:-1;;;;;7414:7:13;;;;:16;;:36;;;;;7217:4;;7414:36;;;;;;;;7217:4;7414:7;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;7414:36:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7483:15:13;;-1:-1:-1;;;;;7483:15:13;7469:10;:29;;-1:-1:-1;7469:29:13;;-1:-1:-1;7469:65:13;;;7516:15;7532:1;7516:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7516:18:13;7502:10;:32;7469:65;:101;;;;7552:15;7568:1;7552:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7552:18:13;7538:10;:32;7469:101;7461:173;;;;-1:-1:-1;;;7461:173:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7655:25;;;;:19;:25;;;;;;7683:9;7655:37;7648:3;:44;7645:975;;7715:23;;;;:17;:23;;;;;;;;:32;7707:80;;;;-1:-1:-1;;;7707:80:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7806:9;7802:265;7825:9;:16;7821:20;;7802:265;;;7960:4;7944:9;7954:1;7944:12;;;;;;;;;;;;;;;;:20;7940:113;;;8001:4;7988:17;;8028:5;;7940:113;7843:3;;7802:265;;;;8088:10;8080:47;;;;;-1:-1:-1;;;8080:47:13;;;;;;;;;;;;-1:-1:-1;;;8080:47:13;;;;;;;;;;;;;;;8172:15;;-1:-1:-1;;;;;8172:15:13;8158:10;:29;8155:314;;;8206:7;;:33;;;-1:-1:-1;;;8206:33:13;;8219:10;8206:33;;;;8231:7;8206:33;;;;;;-1:-1:-1;;;;;8206:7:13;;;;:12;;:33;;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;8206:33:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8206:33:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;8262:43:13;;8297:7;;8291:4;;8279:10;;8262:43;;;;;8155:314;;;8355:7;;:33;;;-1:-1:-1;;;8355:33:13;;8368:10;8355:33;;;;8380:7;8355:33;;;;;;-1:-1:-1;;;;;8355:7:13;;;;:12;;:33;;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;8355:33:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8355:33:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;8411:43:13;;8446:7;;8440:4;;8428:10;;8411:43;;;;;8155:314;-1:-1:-1;;8496:25:13;;;;:19;:25;;;;;:32;;-1:-1:-1;;8496:32:13;8524:4;8496:32;;;;;;8545:11;;7645:975;8603:5;8596:12;;;;;4098:842;4328:9;4324:126;4347:11;:18;4343:22;;4324:126;;;4411:4;4393:11;4405:1;4393:14;;;;;;;;;;;;;;;;:22;;4385:54;;;;;-1:-1:-1;;;4385:54:13;;;;;;;;;;;;-1:-1:-1;;;4385:54:13;;;;;;;;;;;;;;;4367:3;;4324:126;;;-1:-1:-1;4467:10:13;-1:-1:-1;;;;;4467:30:13;;;;4459:75;;;;;-1:-1:-1;;;4459:75:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4600:11;27:10:-1;;39:1;23:18;;45:23;;;4600:22:13;;;;;-1:-1:-1;4633:27:13;;;:21;4600:22;4633:27;;;;;;;4663:3;4633:33;;4676:17;:30;;-1:-1:-1;;;;;;4676:30:13;;;4696:10;4676:30;;;4717:17;:36;;-1:-1:-1;;;;;4717:36:13;;;;;;;;;;4764:19;:25;;;;;;:33;;-1:-1:-1;;4764:33:13;;;4849:17;;4830;;4814:59;;;;;;;4849:17;;;;4830;;4814:59;;;;;;;;4883:7;;:35;;;-1:-1:-1;;;4883:35:13;;4900:10;4883:35;;;;4912:5;4883:35;;;;;;-1:-1:-1;;;;;4883:7:13;;;;:16;;:35;;;;;:7;;:35;;;;;;;;:7;;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;4883:35:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4883:35:13;;;;4098:842;;:::o;698:87:9:-;491:21;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;2807:545:13:-;491:21:9;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3192:3:13;3165:24;:30;3223:12;;:41;;;-1:-1:-1;;;3223:41:13;;;;;;;;;;-1:-1:-1;;;;;3223:12:13;;;;:24;;:41;;;;;;;;;;;;;;;:12;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;3223:41:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3223:41:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3223:41:13;3206:14;:58;3274:13;:21;;-1:-1:-1;;3274:21:13;;;3307:7;;:36;;;-1:-1:-1;;;3307:36:13;;3324:10;3307:36;;;;3336:6;3307:36;;;;;;-1:-1:-1;;;;;3307:7:13;;;;:16;;:36;;;;;3290:5;;3307:36;;;;;;;;3290:5;3307:7;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;3307:36:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3307:36:13;;;;2807:545;:::o;4946:1209::-;5198:7;;:35;;;-1:-1:-1;;;5198:35:13;;5215:10;5198:35;;;;5227:5;5198:35;;;;;;5005:4;;;;-1:-1:-1;;;;;5198:7:13;;;;:16;;:35;;;;;5005:4;;5198:35;;;;;;;;5005:4;5198:7;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;5198:35:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5274:17:13;;-1:-1:-1;;;;;5274:17:13;5260:10;:31;;-1:-1:-1;5260:31:13;;-1:-1:-1;5260:66:13;;-1:-1:-1;5309:17:13;;-1:-1:-1;;;;;5309:17:13;5295:10;:31;5260:66;5252:131;;;;-1:-1:-1;;;5252:131:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5404:27;;;;:21;:27;;;;;;5434:9;5404:39;5397:3;:46;5394:754;;5466:25;;;;:19;:25;;;;;;;;:34;5458:82;;;;-1:-1:-1;;;5458:82:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:9;5555:269;5578:11;:18;5574:22;;5555:269;;;5717:4;5699:11;5711:1;5699:14;;;;;;;;;;;;;;;;:22;5695:115;;;5758:4;5745:17;;5785:5;;5695:115;5598:3;;5555:269;;;;5845:10;5837:47;;;;;-1:-1:-1;;;5837:47:13;;;;;;;;;;;;-1:-1:-1;;;5837:47:13;;;;;;;;;;;;;;;5912:7;;:33;;;-1:-1:-1;;;5912:33:13;;5925:10;5912:33;;;;5937:7;5912:33;;;;;;-1:-1:-1;;;;;5912:7:13;;;;:12;;:33;;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;5912:33:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5912:33:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;5964:45:13;;6001:7;;5995:4;;5983:10;;5964:45;;;;;-1:-1:-1;;6024:25:13;;;;:19;:25;;;;;:32;;-1:-1:-1;;6024:32:13;6052:4;6024:32;;;;;;6073:11;;791:75:9;833:26;846:12;:10;:12::i;:::-;833;:26::i;:::-;791:75::o;6191:963:13:-;6395:9;6391:122;6414:9;:16;6410:20;;6391:122;;;6474:4;6458:9;6468:1;6458:12;;;;;;;;;;;;;;;;:20;;6450:52;;;;;-1:-1:-1;;;6450:52:13;;;;;;;;;;;;-1:-1:-1;;;6450:52:13;;;;;;;;;;;;;;;6432:3;;6391:122;;;-1:-1:-1;6577:9:13;27:10:-1;;39:1;23:18;;45:23;;;6577:20:13;;;;;-1:-1:-1;6608:25:13;;;:19;6577:20;6608:25;;;;;;;6636:3;6608:31;;6649:17;:23;;;;;:31;;-1:-1:-1;;6649:31:13;;;6700:14;:21;6725:1;6700:26;6692:87;;;;-1:-1:-1;;;6692:87:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6794:9;6790:261;6813:14;:21;6809:25;;6790:261;;;6871:14;6886:1;6871:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6871:17:13;6857:10;:31;6854:187;;;6907:15;:28;;-1:-1:-1;;;;;;6907:28:13;6925:10;6907:28;;;6854:187;;;6986:15;7007:14;7022:1;7007:17;;;;;;;;;;;;;;;;;;;;27:10:-1;;7007:17:13;23:18:-1;;45:23;;6986:39:13;;;;;;;;;;-1:-1:-1;;;;;;6986:39:13;-1:-1:-1;;;;;7007:17:13;;;6986:39;;;;;;6854:187;6836:3;;6790:261;;;-1:-1:-1;7066:31:13;;;;;;;;7080:10;;7066:31;;;;;;;;;;7109:7;;:36;;;-1:-1:-1;;;7109:36:13;;7126:10;7109:36;;;;7138:6;7109:36;;;;;;-1:-1:-1;;;;;7109:7:13;;;;:16;;:36;;;;;:7;;:36;;;;;;;;:7;;:36;;;5:2:-1;;;;30:1;27;20:12;2518:260:13;2583:4;;2598:155;2621:14;:21;2617:25;;2598:155;;;2686:11;-1:-1:-1;;;;;2665:32:13;:14;2680:1;2665:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2665:17:13;:32;2662:81;;;2723:4;2716:11;;;;;2662:81;2644:3;;2598:155;;;-1:-1:-1;2765:5:13;;2518:260;-1:-1:-1;;2518:260:13:o;3358:706::-;3582:14;;3570:8;:26;3562:54;;;;;-1:-1:-1;;;3562:54:13;;;;;;;;;;;;-1:-1:-1;;;3562:54:13;;;;;;;;;;;;;;;3637:24;;3631:3;:30;:76;;;;;3671:24;;3698:9;3671:36;3665:3;:42;3631:76;3627:422;;;3730:13;;;;:22;3722:70;;;;-1:-1:-1;;;3722:70:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3808:7;;:33;;;-1:-1:-1;;;3808:33:13;;3821:10;3808:33;;;;3833:7;3808:33;;;;;;-1:-1:-1;;;;;3808:7:13;;;;:12;;:33;;;;;;;;;;;;;;;:7;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;3808:33:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3808:33:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3856:13:13;:20;;-1:-1:-1;;3856:20:13;3872:4;3856:20;;;3895:30;;3917:7;;3905:10;;3895:30;;3856:13;;3895:30;3627:422;;;3966:7;;;3979:4;3966:27;;;-1:-1:-1;;;3966:27:13;;-1:-1:-1;;;;;3979:4:13;;;3966:27;;;;3985:7;3966:27;;;;;;:7;;;;;:12;;:27;;;;;;;;;;;;;;:7;;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;3966:27:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3966:27:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;4023:4:13;;4013:24;;4029:7;;-1:-1:-1;;;;;4023:4:13;;4013:24;;4023:4;;4013:24;3358:706;:::o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;872:116:9:-;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;994:124::-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;260:175:1:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    59,
    8938
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76A9E7B3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x76A9E7B3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x78591BFD EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA5C6A022 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xD5D35F95 EQ PUSH2 0x204 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x561675E1 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x612B7543 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x97B JUMP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x10E PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x106F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x12B4 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x288 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x260 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x280 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x23F JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920726567697374657265642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE SLOAD PUSH1 0x3 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2A37B79036B0B73C903A32B0B6B997 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP2 POP DUP2 SWAP1 POP PUSH2 0x459 JUMPI POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x441 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST DUP1 PUSH2 0x485 JUMPI POP PUSH1 0xF PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x46D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1498 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C ADD TIMESTAMP LT PUSH2 0x76E JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15A8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x564 JUMPI DUP4 PUSH1 0xD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x542 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x55C JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x564 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x52A JUMP JUMPDEST POP DUP1 PUSH2 0x5B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436F756C646E27742066696E642079756F7220666C616721 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x68A JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x5150AE84A8CDF00000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x635 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH9 0x5150AE84A8CDF00000 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 SWAP1 PUSH1 0x0 SWAP1 LOG4 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029 SWAP1 PUSH1 0x0 SWAP1 LOG4 JUMPDEST POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x236 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x236 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x7EE JUMPI DUP2 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x793 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x466C616720616C7265616479207573656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x77B JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616464726573736573206D75737420626520646966666572656E742E PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR DUP3 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 SWAP1 SWAP4 AND OR DUP2 SSTORE PUSH1 0xB DUP6 MSTORE SWAP5 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP4 SLOAD SWAP1 SLOAD DUP3 MLOAD DUP7 DUP2 MSTORE SWAP3 MLOAD SWAP2 DUP6 AND SWAP5 AND SWAP3 PUSH32 0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x973 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x98B PUSH2 0x986 PUSH2 0x131B JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x157A PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CF DUP2 PUSH2 0x131F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9DD PUSH2 0x986 PUSH2 0x131B JUMP JUMPDEST PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x157A PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9671193 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9671193 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 DUP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP2 POP DUP2 SWAP1 POP PUSH2 0xBB5 JUMPI POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1546 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12C ADD TIMESTAMP LT PUSH2 0x76E JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15A8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xC94 JUMPI DUP4 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC72 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xC8C JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC5A JUMP JUMPDEST POP DUP1 PUSH2 0xCE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436F756C646E27742066696E642079756F7220666C616721 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH32 0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x236 JUMP JUMPDEST PUSH2 0xDD5 PUSH2 0xDD0 PUSH2 0x131B JUMP JUMPDEST PUSH2 0x1367 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0xE4D JUMPI DUP2 PUSH1 0xD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDF2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xE45 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x466C616720616C7265616479207573656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0xDDA JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x3 EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14D3 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEFC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xF2F JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xF7A JUMP JUMPDEST PUSH1 0xF PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF3E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0xEE5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1066 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1039 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x105E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x236 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1018 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x10B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2BB937B7339034B210383934B1B297 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x10CC JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x3C ADD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15A8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH9 0x410D586A20A4C00000 SWAP1 CALLER SWAP1 PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH9 0x6C6B935B8BBD400000 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH9 0x6C6B935B8BBD400000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1524 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1330 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13AF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1378 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1430 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x13B9 DUP3 DUP3 PUSH2 0x12B4 JUMP JUMPDEST ISZERO PUSH2 0x140B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x143A DUP3 DUP3 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x1475 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1503 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP INVALID MSIZE PUSH16 0x75206D75737420626520656974686572 KECCAK256 PUSH21 0x6865206368616C6C656E676572206F72206F6E6520 PUSH7 0x6F207468652063 PUSH9 0x616C6C656E6765642E NUMBER PUSH9 0x616C6C656E67652063 PUSH2 0x6E27 PUSH21 0x20737461727420756E74696C20616C6C207465616D PUSH20 0x207265676974657265642E526F6C65733A206163 PUSH4 0x6F756E74 KECCAK256 PUSH5 0x6F6573206E PUSH16 0x74206861766520726F6C65526F6C6573 GASPRICE KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x657373596F75206D7573742062652065697468 PUSH6 0x722074686520 PUSH4 0x68616C6C PUSH6 0x6E676572206F PUSH19 0x20746865206368616C6C656E6765642E41646D PUSH10 0x6E526F6C653A2063616C PUSH13 0x657220646F6573206E6F742068 PUSH2 0x7665 KECCAK256 PUSH21 0x68652041646D696E20726F6C65546865206368616C PUSH13 0x656E67652068617320616C7265 PUSH2 0x6479 KECCAK256 PUSH3 0x65656E KECCAK256 PUSH24 0x6F6E2EA265627A7A7231582037B6FF01D17852E736C9AA21 MUL 0xC1 DUP4 0xF9 SAR CALLVALUE 0x5F 0xB4 0xAD PUSH4 0xD11EA347 0xB2 SLT 0xB9 SWAP16 PUSH30 0x1D64736F6C63430005110032000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        59,
        8938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        59,
        8938
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x76A9E7B3"
    },
    "38": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x76A9E7B3"
    },
    "49": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x17F"
    },
    "53": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x78591BFD"
    },
    "60": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19C"
    },
    "64": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8BAD0C0A"
    },
    "71": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B9"
    },
    "75": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA5C6A022"
    },
    "82": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C1"
    },
    "86": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC3C5A547"
    },
    "93": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1DE"
    },
    "97": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD5D35F95"
    },
    "104": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "105": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x204"
    },
    "108": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "109": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMP",
      "path": "13"
    },
    "113": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "114": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "115": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x24D7806C"
    },
    "120": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "121": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4420E486"
    },
    "131": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE8"
    },
    "135": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x561675E1"
    },
    "142": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x110"
    },
    "146": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x612B7543"
    },
    "153": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "154": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12D"
    },
    "157": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "158": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70480275"
    },
    "164": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "EQ",
      "path": "13"
    },
    "165": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x159"
    },
    "168": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "169": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "170": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "DUP1",
      "path": "13"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        59,
        8938
      ],
      "op": "REVERT",
      "path": "13"
    },
    "174": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "175": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD4"
    },
    "178": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "180": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "181": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "182": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "185": {
      "op": "DUP2"
    },
    "186": {
      "op": "LT"
    },
    "187": {
      "op": "ISZERO"
    },
    "188": {
      "op": "PUSH2",
      "value": "0xC4"
    },
    "191": {
      "op": "JUMPI"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "194": {
      "op": "DUP1"
    },
    "195": {
      "op": "REVERT"
    },
    "196": {
      "op": "JUMPDEST"
    },
    "197": {
      "op": "POP"
    },
    "198": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "SUB"
    },
    "207": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "208": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x221"
    },
    "211": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "212": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "213": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "215": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "216": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "217": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "218": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "219": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "220": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP3",
      "path": "9"
    },
    "221": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "222": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "223": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "224": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP2",
      "path": "9"
    },
    "225": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "226": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "227": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "229": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "ADD",
      "path": "9"
    },
    "230": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "231": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "RETURN",
      "path": "9"
    },
    "232": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "233": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E"
    },
    "236": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "238": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "DUP1",
      "path": "13"
    },
    "239": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "240": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "SUB",
      "path": "13"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "243": {
      "op": "DUP2"
    },
    "244": {
      "op": "LT"
    },
    "245": {
      "op": "ISZERO"
    },
    "246": {
      "op": "PUSH2",
      "value": "0xFE"
    },
    "249": {
      "op": "JUMPI"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "252": {
      "op": "DUP1"
    },
    "253": {
      "op": "REVERT"
    },
    "254": {
      "op": "JUMPDEST"
    },
    "255": {
      "op": "POP"
    },
    "256": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "op": "SUB"
    },
    "265": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "AND",
      "path": "13"
    },
    "266": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23B"
    },
    "269": {
      "fn": "token_challenge.register",
      "jump": "i",
      "offset": [
        1797,
        2512
      ],
      "op": "JUMP",
      "path": "13"
    },
    "270": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "271": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "STOP",
      "path": "13"
    },
    "272": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "273": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD4"
    },
    "276": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "278": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "DUP1",
      "path": "13"
    },
    "279": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "280": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "SUB",
      "path": "13"
    },
    "281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "283": {
      "op": "DUP2"
    },
    "284": {
      "op": "LT"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "PUSH2",
      "value": "0x126"
    },
    "289": {
      "op": "JUMPI"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "292": {
      "op": "DUP1"
    },
    "293": {
      "op": "REVERT"
    },
    "294": {
      "op": "JUMPDEST"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "297": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A6"
    },
    "300": {
      "fn": "token_challenge.winTeamChallenge",
      "jump": "i",
      "offset": [
        7160,
        8626
      ],
      "op": "JUMP",
      "path": "13"
    },
    "301": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "302": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E"
    },
    "305": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "307": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "DUP1",
      "path": "13"
    },
    "308": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "309": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "SUB",
      "path": "13"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "312": {
      "op": "DUP2"
    },
    "313": {
      "op": "LT"
    },
    "314": {
      "op": "ISZERO"
    },
    "315": {
      "op": "PUSH2",
      "value": "0x143"
    },
    "318": {
      "op": "JUMPI"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "321": {
      "op": "DUP1"
    },
    "322": {
      "op": "REVERT"
    },
    "323": {
      "op": "JUMPDEST"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "DUP2",
      "path": "13"
    },
    "334": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "335": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "AND",
      "path": "13"
    },
    "336": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "337": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "339": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "ADD",
      "path": "13"
    },
    "340": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "341": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x778"
    },
    "344": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        4098,
        4940
      ],
      "op": "JUMP",
      "path": "13"
    },
    "345": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "346": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "349": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "351": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "352": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "353": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "LT"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "PUSH2",
      "value": "0x16F"
    },
    "362": {
      "op": "JUMPI"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "365": {
      "op": "DUP1"
    },
    "366": {
      "op": "REVERT"
    },
    "367": {
      "op": "JUMPDEST"
    },
    "368": {
      "op": "POP"
    },
    "369": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "376": {
      "op": "SHL"
    },
    "377": {
      "op": "SUB"
    },
    "378": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "379": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x97B"
    },
    "382": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "383": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "384": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E"
    },
    "387": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "389": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "DUP1",
      "path": "13"
    },
    "390": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "391": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "SUB",
      "path": "13"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "LT"
    },
    "396": {
      "op": "ISZERO"
    },
    "397": {
      "op": "PUSH2",
      "value": "0x195"
    },
    "400": {
      "op": "JUMPI"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "403": {
      "op": "DUP1"
    },
    "404": {
      "op": "REVERT"
    },
    "405": {
      "op": "JUMPDEST"
    },
    "406": {
      "op": "POP"
    },
    "407": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "408": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D2"
    },
    "411": {
      "fn": "token_challenge.overnightStart",
      "jump": "i",
      "offset": [
        2807,
        3352
      ],
      "op": "JUMP",
      "path": "13"
    },
    "412": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "413": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD4"
    },
    "416": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "418": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "DUP1",
      "path": "13"
    },
    "419": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "420": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "SUB",
      "path": "13"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "423": {
      "op": "DUP2"
    },
    "424": {
      "op": "LT"
    },
    "425": {
      "op": "ISZERO"
    },
    "426": {
      "op": "PUSH2",
      "value": "0x1B2"
    },
    "429": {
      "op": "JUMPI"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "432": {
      "op": "DUP1"
    },
    "433": {
      "op": "REVERT"
    },
    "434": {
      "op": "JUMPDEST"
    },
    "435": {
      "op": "POP"
    },
    "436": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "437": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB19"
    },
    "440": {
      "fn": "token_challenge.winDirectChallenge",
      "jump": "i",
      "offset": [
        4946,
        6155
      ],
      "op": "JUMP",
      "path": "13"
    },
    "441": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "442": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E"
    },
    "445": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDC5"
    },
    "448": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "449": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "450": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E"
    },
    "453": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "455": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "DUP1",
      "path": "13"
    },
    "456": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "457": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "SUB",
      "path": "13"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "460": {
      "op": "DUP2"
    },
    "461": {
      "op": "LT"
    },
    "462": {
      "op": "ISZERO"
    },
    "463": {
      "op": "PUSH2",
      "value": "0x1D7"
    },
    "466": {
      "op": "JUMPI"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "469": {
      "op": "DUP1"
    },
    "470": {
      "op": "REVERT"
    },
    "471": {
      "op": "JUMPDEST"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "474": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDD7"
    },
    "477": {
      "fn": "token_challenge.challengeStart",
      "jump": "i",
      "offset": [
        6191,
        7154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "478": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "479": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD4"
    },
    "482": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "484": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "DUP1",
      "path": "13"
    },
    "485": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "486": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "SUB",
      "path": "13"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "489": {
      "op": "DUP2"
    },
    "490": {
      "op": "LT"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "PUSH2",
      "value": "0x1F4"
    },
    "495": {
      "op": "JUMPI"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "498": {
      "op": "DUP1"
    },
    "499": {
      "op": "REVERT"
    },
    "500": {
      "op": "JUMPDEST"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "op": "SUB"
    },
    "511": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "AND",
      "path": "13"
    },
    "512": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1014"
    },
    "515": {
      "fn": "token_challenge.isRegistered",
      "jump": "i",
      "offset": [
        2518,
        2778
      ],
      "op": "JUMP",
      "path": "13"
    },
    "516": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "517": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E"
    },
    "520": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "522": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "DUP1",
      "path": "13"
    },
    "523": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "524": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "SUB",
      "path": "13"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "527": {
      "op": "DUP2"
    },
    "528": {
      "op": "LT"
    },
    "529": {
      "op": "ISZERO"
    },
    "530": {
      "op": "PUSH2",
      "value": "0x21A"
    },
    "533": {
      "op": "JUMPI"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "536": {
      "op": "DUP1"
    },
    "537": {
      "op": "REVERT"
    },
    "538": {
      "op": "JUMPDEST"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "541": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x106F"
    },
    "544": {
      "fn": "token_challenge.overnightCheck",
      "jump": "i",
      "offset": [
        3358,
        4064
      ],
      "op": "JUMP",
      "path": "13"
    },
    "545": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "546": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "548": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 0,
      "value": "0x233"
    },
    "551": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "552": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "553": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "558": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12B4"
    },
    "561": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "562": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "563": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "564": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        658,
        685
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "565": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        658,
        685
      ],
      "op": "POP",
      "path": "9"
    },
    "566": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "567": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "568": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "569": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "POP",
      "path": "9"
    },
    "570": {
      "fn": "AdminRole.isAdmin",
      "jump": "o",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "571": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "572": {
      "fn": "token_challenge.register",
      "offset": [
        1929,
        1952
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "574": {
      "fn": "token_challenge.register",
      "offset": [
        1929,
        1952
      ],
      "op": "DUP1",
      "path": "13"
    },
    "575": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "576": {
      "fn": "token_challenge.register",
      "offset": [
        2125,
        2139
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "578": {
      "fn": "token_challenge.register",
      "offset": [
        2125,
        2146
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "579": {
      "fn": "token_challenge.register",
      "offset": [
        2121,
        2146
      ],
      "op": "DUP2",
      "path": "13"
    },
    "580": {
      "fn": "token_challenge.register",
      "offset": [
        2121,
        2146
      ],
      "op": "LT",
      "path": "13"
    },
    "581": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "582": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x288"
    },
    "585": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "586": {
      "fn": "token_challenge.register",
      "offset": [
        2190,
        2201
      ],
      "op": "DUP3",
      "path": "13"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "SUB"
    },
    "595": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2201
      ],
      "op": "AND",
      "path": "13"
    },
    "596": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2183
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "598": {
      "fn": "token_challenge.register",
      "offset": [
        2184,
        2185
      ],
      "op": "DUP3",
      "path": "13"
    },
    "599": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "DUP2",
      "path": "13"
    },
    "600": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "601": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "DUP2",
      "path": "13"
    },
    "602": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "LT",
      "path": "13"
    },
    "603": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x260"
    },
    "606": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "607": {
      "dev": "Index out of range",
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "INVALID",
      "path": "13"
    },
    "608": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "609": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "611": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "612": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "DUP3",
      "path": "13"
    },
    "613": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "614": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "616": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "617": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "618": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "619": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "ADD",
      "path": "13"
    },
    "620": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2186
      ],
      "op": "AND",
      "path": "13"
    },
    "630": {
      "branch": 80,
      "fn": "token_challenge.register",
      "offset": [
        2169,
        2201
      ],
      "op": "EQ",
      "path": "13"
    },
    "631": {
      "fn": "token_challenge.register",
      "offset": [
        2166,
        2261
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "632": {
      "fn": "token_challenge.register",
      "offset": [
        2166,
        2261
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x280"
    },
    "635": {
      "branch": 80,
      "fn": "token_challenge.register",
      "offset": [
        2166,
        2261
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "636": {
      "fn": "token_challenge.register",
      "offset": [
        2241,
        2245
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x1"
    },
    "638": {
      "fn": "token_challenge.register",
      "offset": [
        2220,
        2245
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "639": {
      "fn": "token_challenge.register",
      "offset": [
        2220,
        2245
      ],
      "op": "POP",
      "path": "13"
    },
    "640": {
      "fn": "token_challenge.register",
      "offset": [
        2166,
        2261
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "641": {
      "fn": "token_challenge.register",
      "offset": [
        2148,
        2151
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x1"
    },
    "643": {
      "fn": "token_challenge.register",
      "offset": [
        2148,
        2151
      ],
      "op": "ADD",
      "path": "13"
    },
    "644": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23F"
    },
    "647": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "JUMP",
      "path": "13"
    },
    "648": {
      "fn": "token_challenge.register",
      "offset": [
        2102,
        2271
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "token_challenge.register",
      "offset": [
        2288,
        2315
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 3
    },
    "651": {
      "branch": 81,
      "fn": "token_challenge.register",
      "offset": [
        2288,
        2315
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "652": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DC"
    },
    "655": {
      "branch": 81,
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "656": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "658": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "DUP1",
      "path": "13"
    },
    "659": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "DUP2",
      "path": "13"
    },
    "668": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "669": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "671": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "673": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "DUP3",
      "path": "13"
    },
    "674": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "ADD",
      "path": "13"
    },
    "675": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "676": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1A"
    },
    "678": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "680": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "DUP3",
      "path": "13"
    },
    "681": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "ADD",
      "path": "13"
    },
    "682": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "683": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x596F7527726520616C726561647920726567697374657265642E000000000000"
    },
    "716": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "718": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "DUP3",
      "path": "13"
    },
    "719": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "ADD",
      "path": "13"
    },
    "720": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "721": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "722": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "723": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "724": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "DUP2",
      "path": "13"
    },
    "725": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "726": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "SUB",
      "path": "13"
    },
    "727": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "729": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "ADD",
      "path": "13"
    },
    "730": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "731": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "REVERT",
      "path": "13"
    },
    "732": {
      "fn": "token_challenge.register",
      "offset": [
        2280,
        2346
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "733": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2372
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x4"
    },
    "735": {
      "op": "DUP1"
    },
    "736": {
      "op": "SLOAD"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "DUP2"
    },
    "740": {
      "op": "ADD"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "SSTORE"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "745": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "DUP3",
      "path": "13"
    },
    "746": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "747": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "748": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "781": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "ADD",
      "path": "13"
    },
    "782": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "DUP1",
      "path": "13"
    },
    "783": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "op": "NOT"
    },
    "793": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "AND",
      "path": "13"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "800": {
      "op": "SHL"
    },
    "801": {
      "op": "SUB"
    },
    "802": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "DUP6",
      "path": "13"
    },
    "803": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "AND",
      "path": "13"
    },
    "804": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "OR",
      "path": "13"
    },
    "805": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "806": {
      "fn": "token_challenge.register",
      "offset": [
        2358,
        2390
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "807": {
      "fn": "token_challenge.register",
      "offset": [
        2410,
        2431
      ],
      "op": "SLOAD",
      "path": "13",
      "statement": 5
    },
    "808": {
      "fn": "token_challenge.register",
      "offset": [
        2435,
        2436
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "810": {
      "op": "LT"
    },
    "811": {
      "branch": 82,
      "fn": "token_challenge.register",
      "offset": [
        2410,
        2436
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "812": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x36E"
    },
    "815": {
      "branch": 82,
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "816": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "818": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "DUP1",
      "path": "13"
    },
    "819": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "826": {
      "op": "SHL"
    },
    "827": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "DUP2",
      "path": "13"
    },
    "828": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "829": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "831": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "833": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "DUP3",
      "path": "13"
    },
    "834": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "ADD",
      "path": "13"
    },
    "835": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "836": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF"
    },
    "838": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "840": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "DUP3",
      "path": "13"
    },
    "841": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "ADD",
      "path": "13"
    },
    "842": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "843": {
      "op": "PUSH15",
      "value": "0x2A37B79036B0B73C903A32B0B6B997"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "864": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "DUP3",
      "path": "13"
    },
    "865": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "ADD",
      "path": "13"
    },
    "866": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "867": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "868": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "869": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "870": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "DUP2",
      "path": "13"
    },
    "871": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "872": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "SUB",
      "path": "13"
    },
    "873": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "875": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "ADD",
      "path": "13"
    },
    "876": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "877": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "REVERT",
      "path": "13"
    },
    "878": {
      "fn": "token_challenge.register",
      "offset": [
        2402,
        2456
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "879": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x40"
    },
    "881": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "DUP4",
      "path": "13"
    },
    "891": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "AND",
      "path": "13"
    },
    "892": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "893": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x2D3734A8E47AC8316E500AC231C90A6E1848CA2285F40D07EAA52005E4B3A0E9"
    },
    "926": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "927": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "929": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "930": {
      "fn": "token_challenge.register",
      "offset": [
        2481,
        2504
      ],
      "op": "LOG2",
      "path": "13"
    },
    "931": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "POP",
      "path": "13"
    },
    "932": {
      "fn": "token_challenge.register",
      "offset": [
        1797,
        2512
      ],
      "op": "POP",
      "path": "13"
    },
    "933": {
      "fn": "token_challenge.register",
      "jump": "o",
      "offset": [
        1797,
        2512
      ],
      "op": "JUMP",
      "path": "13"
    },
    "934": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7160,
        8626
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "935": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 7,
      "value": "0x3"
    },
    "937": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "938": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "940": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP1",
      "path": "13"
    },
    "941": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "942": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "947": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP2",
      "path": "13"
    },
    "951": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "952": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7431,
        7441
      ],
      "op": "CALLER",
      "path": "13"
    },
    "953": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "955": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP3",
      "path": "13"
    },
    "956": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "ADD",
      "path": "13"
    },
    "957": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "958": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7443,
        7449
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x56BC75E2D63100000"
    },
    "968": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "970": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP3",
      "path": "13"
    },
    "971": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "ADD",
      "path": "13"
    },
    "972": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "973": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "974": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "975": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "977": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "978": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "DUP4",
      "path": "13"
    },
    "979": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "op": "SUB"
    },
    "988": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "989": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "990": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "AND",
      "path": "13"
    },
    "991": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "992": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7430
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x79CC6790"
    },
    "997": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7430
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "998": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1000": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1001": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1002": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "ADD",
      "path": "13"
    },
    "1003": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1004": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1005": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1006": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1007": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1008": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1009": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1010": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1011": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "SUB",
      "path": "13"
    },
    "1012": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "ADD",
      "path": "13"
    },
    "1013": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1014": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7217,
        7221
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1015": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7421
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1016": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1017": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1018": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1019": {
      "op": "DUP1"
    },
    "1020": {
      "op": "ISZERO"
    },
    "1021": {
      "op": "PUSH2",
      "value": "0x405"
    },
    "1024": {
      "op": "JUMPI"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "op": "REVERT"
    },
    "1029": {
      "op": "JUMPDEST"
    },
    "1030": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "POP",
      "path": "13"
    },
    "1031": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "GAS",
      "path": "13"
    },
    "1032": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "CALL",
      "path": "13"
    },
    "1033": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7414,
        7450
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1034": {
      "op": "DUP1"
    },
    "1035": {
      "op": "ISZERO"
    },
    "1036": {
      "op": "PUSH2",
      "value": "0x419"
    },
    "1039": {
      "op": "JUMPI"
    },
    "1040": {
      "op": "RETURNDATASIZE"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "op": "DUP1"
    },
    "1044": {
      "op": "RETURNDATACOPY"
    },
    "1045": {
      "op": "RETURNDATASIZE"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1048": {
      "op": "REVERT"
    },
    "1049": {
      "op": "JUMPDEST"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "op": "POP"
    },
    "1052": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7483,
        7498
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0xE"
    },
    "1054": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7483,
        7498
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7483,
        7498
      ],
      "op": "AND",
      "path": "13"
    },
    "1064": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7479
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1065": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7498
      ],
      "op": "EQ",
      "path": "13"
    },
    "1066": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7498
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7498
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1069": {
      "branch": 83,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7498
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1070": {
      "op": "POP"
    },
    "1071": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7534
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x459"
    },
    "1074": {
      "branch": 83,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7534
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1075": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7534
      ],
      "op": "POP",
      "path": "13"
    },
    "1076": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7531
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF"
    },
    "1078": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7532,
        7533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1080": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1081": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1082": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1083": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "LT",
      "path": "13"
    },
    "1084": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x441"
    },
    "1087": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1088": {
      "dev": "Index out of range",
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1089": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1090": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1092": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1093": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1094": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1095": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1097": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1098": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1099": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1100": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "ADD",
      "path": "13"
    },
    "1101": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "op": "SUB"
    },
    "1110": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7516,
        7534
      ],
      "op": "AND",
      "path": "13"
    },
    "1111": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7502,
        7512
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1112": {
      "branch": 84,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7502,
        7534
      ],
      "op": "EQ",
      "path": "13"
    },
    "1113": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7534
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1114": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7570
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1115": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7570
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x485"
    },
    "1118": {
      "branch": 84,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7570
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1119": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7570
      ],
      "op": "POP",
      "path": "13"
    },
    "1120": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7567
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF"
    },
    "1122": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7568,
        7569
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1124": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1125": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1126": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1127": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "LT",
      "path": "13"
    },
    "1128": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x46D"
    },
    "1131": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1132": {
      "dev": "Index out of range",
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1133": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1134": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1136": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1137": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1138": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1139": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1141": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1142": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1143": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1144": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "ADD",
      "path": "13"
    },
    "1145": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7552,
        7570
      ],
      "op": "AND",
      "path": "13"
    },
    "1155": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7538,
        7548
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1156": {
      "branch": 85,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7538,
        7570
      ],
      "op": "EQ",
      "path": "13"
    },
    "1157": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7469,
        7570
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1158": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C0"
    },
    "1161": {
      "branch": 85,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1162": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1164": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1171": {
      "op": "SHL"
    },
    "1172": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1173": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1174": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1176": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "ADD",
      "path": "13"
    },
    "1177": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1178": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1179": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1181": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "ADD",
      "path": "13"
    },
    "1182": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1183": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1184": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "SUB",
      "path": "13"
    },
    "1185": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1186": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1187": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3B"
    },
    "1189": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1190": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1191": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1193": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "ADD",
      "path": "13"
    },
    "1194": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1195": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1498"
    },
    "1198": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3B"
    },
    "1200": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1201": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1202": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1204": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "ADD",
      "path": "13"
    },
    "1205": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1206": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "POP",
      "path": "13"
    },
    "1207": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "POP",
      "path": "13"
    },
    "1208": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1210": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1211": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1212": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1213": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "SUB",
      "path": "13"
    },
    "1214": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1215": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1216": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7461,
        7634
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1217": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1219": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1220": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1221": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1222": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7674
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "1224": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1226": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1227": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1229": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1230": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1231": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7680
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1232": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7683,
        7692
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12C"
    },
    "1235": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7655,
        7692
      ],
      "op": "ADD",
      "path": "13"
    },
    "1236": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7648,
        7651
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "1237": {
      "branch": 86,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7648,
        7692
      ],
      "op": "LT",
      "path": "13"
    },
    "1238": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7645,
        8620
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x76E"
    },
    "1241": {
      "branch": 86,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7645,
        8620
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1242": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x0"
    },
    "1244": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1245": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1246": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1247": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "1249": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1251": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1252": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1254": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1255": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1256": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1257": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1259": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7738
      ],
      "op": "AND",
      "path": "13"
    },
    "1260": {
      "branch": 87,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7715,
        7747
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1261": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x527"
    },
    "1264": {
      "branch": 87,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1265": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1267": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1276": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1277": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1279": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "ADD",
      "path": "13"
    },
    "1280": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1281": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1282": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1284": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "ADD",
      "path": "13"
    },
    "1285": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1286": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1287": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "SUB",
      "path": "13"
    },
    "1288": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1289": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1290": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x23"
    },
    "1292": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1293": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1294": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1296": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "ADD",
      "path": "13"
    },
    "1297": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1298": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A8"
    },
    "1301": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x23"
    },
    "1303": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1304": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1305": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1307": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "ADD",
      "path": "13"
    },
    "1308": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1309": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "POP",
      "path": "13"
    },
    "1310": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "POP",
      "path": "13"
    },
    "1311": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1313": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1314": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1315": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1316": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "SUB",
      "path": "13"
    },
    "1317": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1318": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1319": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7707,
        7787
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1320": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7806,
        7815
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1322": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1323": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7825,
        7834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xD"
    },
    "1325": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7825,
        7841
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1326": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7821,
        7841
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1327": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7821,
        7841
      ],
      "op": "LT",
      "path": "13"
    },
    "1328": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1329": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x564"
    },
    "1332": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1333": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7960,
        7964
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1334": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7953
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xD"
    },
    "1336": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7954,
        7955
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1337": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1338": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1339": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1340": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "LT",
      "path": "13"
    },
    "1341": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x542"
    },
    "1344": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1345": {
      "dev": "Index out of range",
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1346": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1347": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1348": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1350": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1351": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1353": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1355": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1356": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "ADD",
      "path": "13"
    },
    "1357": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7956
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1358": {
      "branch": 88,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7944,
        7964
      ],
      "op": "EQ",
      "path": "13"
    },
    "1359": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7940,
        8053
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1360": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7940,
        8053
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x55C"
    },
    "1363": {
      "branch": 88,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7940,
        8053
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1364": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8001,
        8005
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x1"
    },
    "1366": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7988,
        8005
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1367": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7988,
        8005
      ],
      "op": "POP",
      "path": "13"
    },
    "1368": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8028,
        8033
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 11,
      "value": "0x564"
    },
    "1371": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8028,
        8033
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1372": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7940,
        8053
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1373": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7843,
        7846
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 12,
      "value": "0x1"
    },
    "1375": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7843,
        7846
      ],
      "op": "ADD",
      "path": "13"
    },
    "1376": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x52A"
    },
    "1379": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1380": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1381": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7802,
        8067
      ],
      "op": "POP",
      "path": "13"
    },
    "1382": {
      "branch": 89,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8088,
        8098
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 13
    },
    "1383": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5B2"
    },
    "1386": {
      "branch": 89,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1387": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1389": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1390": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1399": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1400": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1402": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1404": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1405": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "ADD",
      "path": "13"
    },
    "1406": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1407": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x18"
    },
    "1409": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1411": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1412": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "ADD",
      "path": "13"
    },
    "1413": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1414": {
      "op": "PUSH24",
      "value": "0x436F756C646E27742066696E642079756F7220666C616721"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1444": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1445": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "ADD",
      "path": "13"
    },
    "1446": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1447": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1448": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1449": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1450": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1451": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1452": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "SUB",
      "path": "13"
    },
    "1453": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "1455": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "ADD",
      "path": "13"
    },
    "1456": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1457": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1458": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8080,
        8127
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1459": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8172,
        8187
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "1461": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8172,
        8187
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1468": {
      "op": "SHL"
    },
    "1469": {
      "op": "SUB"
    },
    "1470": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8172,
        8187
      ],
      "op": "AND",
      "path": "13"
    },
    "1471": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8158,
        8168
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1472": {
      "branch": 90,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8158,
        8187
      ],
      "op": "EQ",
      "path": "13"
    },
    "1473": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1474": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x68A"
    },
    "1477": {
      "branch": 90,
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1478": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x3"
    },
    "1480": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1481": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1483": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1484": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1485": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1494": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1495": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8219,
        8229
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1496": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1498": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1499": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "ADD",
      "path": "13"
    },
    "1500": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1501": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8231,
        8238
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x5150AE84A8CDF00000"
    },
    "1511": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1513": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1514": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "ADD",
      "path": "13"
    },
    "1515": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1516": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1517": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1524": {
      "op": "SHL"
    },
    "1525": {
      "op": "SUB"
    },
    "1526": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1527": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1528": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "AND",
      "path": "13"
    },
    "1529": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1530": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8218
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "1535": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8218
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1536": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1538": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1539": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1540": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "ADD",
      "path": "13"
    },
    "1541": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1542": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1544": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1545": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1546": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1547": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1548": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1549": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1550": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "SUB",
      "path": "13"
    },
    "1551": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "ADD",
      "path": "13"
    },
    "1552": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1553": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1555": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8213
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1556": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1557": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1558": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1559": {
      "op": "DUP1"
    },
    "1560": {
      "op": "ISZERO"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x621"
    },
    "1564": {
      "op": "JUMPI"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "DUP1"
    },
    "1568": {
      "op": "REVERT"
    },
    "1569": {
      "op": "JUMPDEST"
    },
    "1570": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "POP",
      "path": "13"
    },
    "1571": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "GAS",
      "path": "13"
    },
    "1572": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "CALL",
      "path": "13"
    },
    "1573": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1574": {
      "op": "DUP1"
    },
    "1575": {
      "op": "ISZERO"
    },
    "1576": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1579": {
      "op": "JUMPI"
    },
    "1580": {
      "op": "RETURNDATASIZE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1583": {
      "op": "DUP1"
    },
    "1584": {
      "op": "RETURNDATACOPY"
    },
    "1585": {
      "op": "RETURNDATASIZE"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1588": {
      "op": "REVERT"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "POP",
      "path": "13"
    },
    "1591": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "POP",
      "path": "13"
    },
    "1592": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "POP",
      "path": "13"
    },
    "1593": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "POP",
      "path": "13"
    },
    "1594": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1596": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1597": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8206,
        8239
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1600": {
      "op": "DUP2"
    },
    "1601": {
      "op": "LT"
    },
    "1602": {
      "op": "ISZERO"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "1606": {
      "op": "JUMPI"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "DUP1"
    },
    "1610": {
      "op": "REVERT"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "POP"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 15,
      "value": "0x40"
    },
    "1616": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1617": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8297,
        8304
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x5150AE84A8CDF00000"
    },
    "1627": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8297,
        8304
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1628": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8291,
        8295
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1629": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8291,
        8295
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1630": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8279,
        8289
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1631": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8279,
        8289
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1632": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "1665": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1666": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1668": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1669": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8262,
        8305
      ],
      "op": "LOG4",
      "path": "13"
    },
    "1670": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x74B"
    },
    "1673": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1674": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1675": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 16,
      "value": "0x3"
    },
    "1677": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1678": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1680": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1681": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1682": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1691": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1692": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8368,
        8378
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1693": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1695": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1696": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "ADD",
      "path": "13"
    },
    "1697": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1698": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8380,
        8387
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1708": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1710": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1711": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "ADD",
      "path": "13"
    },
    "1712": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1713": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1714": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "SUB"
    },
    "1723": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1724": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1725": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "AND",
      "path": "13"
    },
    "1726": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1727": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8367
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "1732": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8367
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1733": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1735": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1736": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1737": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "ADD",
      "path": "13"
    },
    "1738": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1739": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1741": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1742": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1743": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1744": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1745": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1746": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1747": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "SUB",
      "path": "13"
    },
    "1748": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "ADD",
      "path": "13"
    },
    "1749": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1750": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1752": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8362
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1753": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1754": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1755": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1756": {
      "op": "DUP1"
    },
    "1757": {
      "op": "ISZERO"
    },
    "1758": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1761": {
      "op": "JUMPI"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1764": {
      "op": "DUP1"
    },
    "1765": {
      "op": "REVERT"
    },
    "1766": {
      "op": "JUMPDEST"
    },
    "1767": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "POP",
      "path": "13"
    },
    "1768": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "GAS",
      "path": "13"
    },
    "1769": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "CALL",
      "path": "13"
    },
    "1770": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1771": {
      "op": "DUP1"
    },
    "1772": {
      "op": "ISZERO"
    },
    "1773": {
      "op": "PUSH2",
      "value": "0x6FA"
    },
    "1776": {
      "op": "JUMPI"
    },
    "1777": {
      "op": "RETURNDATASIZE"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1780": {
      "op": "DUP1"
    },
    "1781": {
      "op": "RETURNDATACOPY"
    },
    "1782": {
      "op": "RETURNDATASIZE"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1785": {
      "op": "REVERT"
    },
    "1786": {
      "op": "JUMPDEST"
    },
    "1787": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "POP",
      "path": "13"
    },
    "1788": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "POP",
      "path": "13"
    },
    "1789": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "POP",
      "path": "13"
    },
    "1790": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "POP",
      "path": "13"
    },
    "1791": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1793": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1794": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8355,
        8388
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1797": {
      "op": "DUP2"
    },
    "1798": {
      "op": "LT"
    },
    "1799": {
      "op": "ISZERO"
    },
    "1800": {
      "op": "PUSH2",
      "value": "0x710"
    },
    "1803": {
      "op": "JUMPI"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1806": {
      "op": "DUP1"
    },
    "1807": {
      "op": "REVERT"
    },
    "1808": {
      "op": "JUMPDEST"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0x40"
    },
    "1813": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1814": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8446,
        8453
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1824": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8446,
        8453
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1825": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8440,
        8444
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1826": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8440,
        8444
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1827": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8428,
        8438
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1828": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8428,
        8438
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1829": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xFA5C135DE8C72E98296CDF12890CA8B3682F079FBB46849F6F549372F6348029"
    },
    "1862": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1863": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1865": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1866": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8411,
        8454
      ],
      "op": "LOG4",
      "path": "13"
    },
    "1867": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8155,
        8469
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x0"
    },
    "1872": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1873": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1874": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1875": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "1877": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1879": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1880": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1882": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1883": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8521
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1884": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1885": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1888": {
      "op": "NOT"
    },
    "1889": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "AND",
      "path": "13"
    },
    "1890": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8524,
        8528
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1892": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1893": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1894": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "OR",
      "path": "13"
    },
    "1895": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1896": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1897": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8496,
        8528
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1898": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8545,
        8556
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 19,
      "value": "0x236"
    },
    "1901": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8545,
        8556
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1902": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        7645,
        8620
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1903": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8603,
        8608
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x0"
    },
    "1905": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8596,
        8608
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1906": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8596,
        8608
      ],
      "op": "POP",
      "path": "13"
    },
    "1907": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8596,
        8608
      ],
      "op": "POP",
      "path": "13"
    },
    "1908": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8596,
        8608
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x236"
    },
    "1911": {
      "fn": "token_challenge.winTeamChallenge",
      "offset": [
        8596,
        8608
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1912": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1913": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4328,
        4337
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1915": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1916": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4347,
        4358
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1918": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4347,
        4365
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1919": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4343,
        4365
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1920": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4343,
        4365
      ],
      "op": "LT",
      "path": "13"
    },
    "1921": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1922": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7EE"
    },
    "1925": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1926": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4411,
        4415
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 21
    },
    "1927": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4404
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1929": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4405,
        4406
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1930": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1931": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1932": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1933": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "LT",
      "path": "13"
    },
    "1934": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x793"
    },
    "1937": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1938": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1939": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1940": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1941": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1943": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1944": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1946": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1948": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1949": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "ADD",
      "path": "13"
    },
    "1950": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4407
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1951": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4415
      ],
      "op": "EQ",
      "path": "13"
    },
    "1952": {
      "branch": 91,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4393,
        4415
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1953": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7E6"
    },
    "1956": {
      "branch": 91,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1957": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1959": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1960": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1969": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1970": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1972": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1974": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1975": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "ADD",
      "path": "13"
    },
    "1976": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1977": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x12"
    },
    "1979": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1981": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1982": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "ADD",
      "path": "13"
    },
    "1983": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1984": {
      "op": "PUSH18",
      "value": "0x466C616720616C7265616479207573656421"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2008": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2009": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "ADD",
      "path": "13"
    },
    "2010": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2011": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2012": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2013": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2014": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2015": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2016": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "SUB",
      "path": "13"
    },
    "2017": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2019": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "ADD",
      "path": "13"
    },
    "2020": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2021": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2022": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4385,
        4439
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2023": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4367,
        4370
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 22,
      "value": "0x1"
    },
    "2025": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4367,
        4370
      ],
      "op": "ADD",
      "path": "13"
    },
    "2026": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x77B"
    },
    "2029": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2030": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4324,
        4450
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4467,
        4477
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 23
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4467,
        4497
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2042": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4467,
        4497
      ],
      "op": "AND",
      "path": "13"
    },
    "2043": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4467,
        4497
      ],
      "op": "EQ",
      "path": "13"
    },
    "2044": {
      "branch": 92,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4467,
        4497
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2045": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84D"
    },
    "2048": {
      "branch": 92,
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2049": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2051": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2052": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2059": {
      "op": "SHL"
    },
    "2060": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2061": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2062": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2064": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2066": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2067": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "ADD",
      "path": "13"
    },
    "2068": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2069": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2070": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2071": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2073": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2074": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "ADD",
      "path": "13"
    },
    "2075": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2076": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x54686520616464726573736573206D75737420626520646966666572656E742E"
    },
    "2109": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2111": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2112": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "ADD",
      "path": "13"
    },
    "2113": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2114": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2115": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2116": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2117": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2118": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2119": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "SUB",
      "path": "13"
    },
    "2120": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2122": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "ADD",
      "path": "13"
    },
    "2123": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2124": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2125": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4459,
        4534
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2126": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4611
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 24,
      "value": "0x8"
    },
    "2128": {
      "op": "DUP1"
    },
    "2129": {
      "op": "SLOAD"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2132": {
      "op": "DUP2"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "SWAP1"
    },
    "2135": {
      "op": "SWAP2"
    },
    "2136": {
      "op": "SSTORE"
    },
    "2137": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4622
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "2170": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4622
      ],
      "op": "ADD",
      "path": "13"
    },
    "2171": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4622
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2172": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4622
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2173": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4622
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 25
    },
    "2177": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2178": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2179": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4654
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC"
    },
    "2181": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4600,
        4622
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2183": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2184": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2185": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2186": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2188": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2189": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2190": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4660
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2191": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4663,
        4666
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "2192": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4666
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2193": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4633,
        4666
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2194": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4693
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 26,
      "value": "0x9"
    },
    "2196": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2197": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "op": "SUB"
    },
    "2206": {
      "op": "NOT"
    },
    "2207": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2208": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2209": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "AND",
      "path": "13"
    },
    "2210": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4696,
        4706
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2211": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "OR",
      "path": "13"
    },
    "2212": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2213": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4676,
        4706
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2214": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4734
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 27,
      "value": "0xA"
    },
    "2216": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2217": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "DUP10",
      "path": "13"
    },
    "2227": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2228": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "AND",
      "path": "13"
    },
    "2229": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2230": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2231": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2232": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "AND",
      "path": "13"
    },
    "2233": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "OR",
      "path": "13"
    },
    "2234": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2235": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4717,
        4753
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2236": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4783
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 28,
      "value": "0xB"
    },
    "2238": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4789
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2239": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4789
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2240": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4789
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2241": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4789
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2242": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4789
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2243": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4789
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2244": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4797
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2245": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4797
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2248": {
      "op": "NOT"
    },
    "2249": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4797
      ],
      "op": "AND",
      "path": "13"
    },
    "2250": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4797
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2251": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4764,
        4797
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2252": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4849,
        4866
      ],
      "op": "SWAP4",
      "path": "13",
      "statement": 29
    },
    "2253": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4849,
        4866
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2254": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4830,
        4847
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2255": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4830,
        4847
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2256": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2257": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2258": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2259": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2260": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2261": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2262": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2263": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4849,
        4866
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2264": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4849,
        4866
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2265": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4849,
        4866
      ],
      "op": "AND",
      "path": "13"
    },
    "2266": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4849,
        4866
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2267": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4830,
        4847
      ],
      "op": "AND",
      "path": "13"
    },
    "2268": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4830,
        4847
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2269": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xED4685CEF203F43449F0207532EB272E1F2DE4F8A6992033ED24099F086C2106"
    },
    "2302": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2303": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2304": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2305": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "SUB",
      "path": "13"
    },
    "2306": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "ADD",
      "path": "13"
    },
    "2307": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2308": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4814,
        4873
      ],
      "op": "LOG3",
      "path": "13"
    },
    "2309": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 30,
      "value": "0x3"
    },
    "2311": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2312": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2314": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2315": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2316": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2325": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2326": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4900,
        4910
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2327": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2329": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2330": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "ADD",
      "path": "13"
    },
    "2331": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2332": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4912,
        4917
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x2B5E3AF16B1880000"
    },
    "2342": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2344": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2345": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "ADD",
      "path": "13"
    },
    "2346": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2347": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2348": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "op": "SUB"
    },
    "2357": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2358": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2359": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "AND",
      "path": "13"
    },
    "2360": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2361": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4899
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x79CC6790"
    },
    "2366": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4899
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2367": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2369": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2370": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2371": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "ADD",
      "path": "13"
    },
    "2372": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2373": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2375": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2376": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2377": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2378": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2379": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2380": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2381": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "SUB",
      "path": "13"
    },
    "2382": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "ADD",
      "path": "13"
    },
    "2383": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2384": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2385": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4890
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2386": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2387": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2388": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2389": {
      "op": "DUP1"
    },
    "2390": {
      "op": "ISZERO"
    },
    "2391": {
      "op": "PUSH2",
      "value": "0x95F"
    },
    "2394": {
      "op": "JUMPI"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2397": {
      "op": "DUP1"
    },
    "2398": {
      "op": "REVERT"
    },
    "2399": {
      "op": "JUMPDEST"
    },
    "2400": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "POP",
      "path": "13"
    },
    "2401": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "GAS",
      "path": "13"
    },
    "2402": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "CALL",
      "path": "13"
    },
    "2403": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2404": {
      "op": "DUP1"
    },
    "2405": {
      "op": "ISZERO"
    },
    "2406": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "2409": {
      "op": "JUMPI"
    },
    "2410": {
      "op": "RETURNDATASIZE"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2413": {
      "op": "DUP1"
    },
    "2414": {
      "op": "RETURNDATACOPY"
    },
    "2415": {
      "op": "RETURNDATASIZE"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "REVERT"
    },
    "2419": {
      "op": "JUMPDEST"
    },
    "2420": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "POP",
      "path": "13"
    },
    "2421": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "POP",
      "path": "13"
    },
    "2422": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "POP",
      "path": "13"
    },
    "2423": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4883,
        4918
      ],
      "op": "POP",
      "path": "13"
    },
    "2424": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "POP",
      "path": "13"
    },
    "2425": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        4098,
        4940
      ],
      "op": "POP",
      "path": "13"
    },
    "2426": {
      "fn": "token_challenge.challengeStart",
      "jump": "o",
      "offset": [
        4098,
        4940
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2427": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2428": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x98B"
    },
    "2431": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x986"
    },
    "2434": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x131B"
    },
    "2437": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2438": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2439": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x221"
    },
    "2442": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2443": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2444": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9C6"
    },
    "2447": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2448": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2450": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2459": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2460": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2462": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2463": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2464": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2465": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2467": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2468": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2469": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2470": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2471": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2472": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2473": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2475": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2476": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2477": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2479": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2480": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2481": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x157A"
    },
    "2484": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2486": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2487": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2488": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2490": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2491": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2492": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2493": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2494": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2496": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2497": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2498": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2499": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2500": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2501": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2502": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2503": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 31,
      "value": "0x9CF"
    },
    "2506": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2507": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x131F"
    },
    "2510": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2511": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2512": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "2513": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2514": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2515": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9DD"
    },
    "2518": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x986"
    },
    "2521": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x131B"
    },
    "2524": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2525": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2526": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA18"
    },
    "2529": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2530": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2532": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2539": {
      "op": "SHL"
    },
    "2540": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2541": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2542": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2544": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2545": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2546": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2547": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2549": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2550": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2551": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2552": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2553": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2554": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2555": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2557": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2558": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2559": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2561": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2562": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2563": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x157A"
    },
    "2566": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "2568": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2569": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "2570": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2572": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "2573": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2574": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2575": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "2576": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2578": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2579": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2580": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2581": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "2582": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2583": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2584": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2585": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3192,
        3195
      ],
      "op": "TIMESTAMP",
      "path": "13",
      "statement": 32
    },
    "2586": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3165,
        3189
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "2588": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3165,
        3195
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2589": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 33,
      "value": "0x2"
    },
    "2591": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2592": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2594": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2595": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2596": {
      "op": "PUSH4",
      "value": "0xA9671193"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2605": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2606": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2608": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2609": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "ADD",
      "path": "13"
    },
    "2610": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2611": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2612": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2613": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2614": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2624": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2625": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "AND",
      "path": "13"
    },
    "2626": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2627": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3247
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA9671193"
    },
    "2632": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3247
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2633": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2635": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2636": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2637": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "ADD",
      "path": "13"
    },
    "2638": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2639": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2641": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2642": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2643": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2644": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2645": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2646": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2647": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "SUB",
      "path": "13"
    },
    "2648": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "ADD",
      "path": "13"
    },
    "2649": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2650": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2652": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3235
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2653": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2654": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2655": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2656": {
      "op": "DUP1"
    },
    "2657": {
      "op": "ISZERO"
    },
    "2658": {
      "op": "PUSH2",
      "value": "0xA6A"
    },
    "2661": {
      "op": "JUMPI"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "DUP1"
    },
    "2665": {
      "op": "REVERT"
    },
    "2666": {
      "op": "JUMPDEST"
    },
    "2667": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "POP",
      "path": "13"
    },
    "2668": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "GAS",
      "path": "13"
    },
    "2669": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "CALL",
      "path": "13"
    },
    "2670": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2671": {
      "op": "DUP1"
    },
    "2672": {
      "op": "ISZERO"
    },
    "2673": {
      "op": "PUSH2",
      "value": "0xA7E"
    },
    "2676": {
      "op": "JUMPI"
    },
    "2677": {
      "op": "RETURNDATASIZE"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "DUP1"
    },
    "2681": {
      "op": "RETURNDATACOPY"
    },
    "2682": {
      "op": "RETURNDATASIZE"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2685": {
      "op": "REVERT"
    },
    "2686": {
      "op": "JUMPDEST"
    },
    "2687": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "POP",
      "path": "13"
    },
    "2688": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "POP",
      "path": "13"
    },
    "2689": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "POP",
      "path": "13"
    },
    "2690": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "POP",
      "path": "13"
    },
    "2691": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2693": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2694": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2697": {
      "op": "DUP2"
    },
    "2698": {
      "op": "LT"
    },
    "2699": {
      "op": "ISZERO"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0xA94"
    },
    "2703": {
      "op": "JUMPI"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2706": {
      "op": "DUP1"
    },
    "2707": {
      "op": "REVERT"
    },
    "2708": {
      "op": "JUMPDEST"
    },
    "2709": {
      "op": "POP"
    },
    "2710": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3223,
        3264
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2711": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3206,
        3220
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2713": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3206,
        3264
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2714": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3274,
        3287
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 34,
      "value": "0x7"
    },
    "2716": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3274,
        3295
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2717": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3274,
        3295
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2720": {
      "op": "NOT"
    },
    "2721": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3274,
        3295
      ],
      "op": "AND",
      "path": "13"
    },
    "2722": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3274,
        3295
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2723": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3274,
        3295
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2724": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 35,
      "value": "0x3"
    },
    "2726": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2727": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2729": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2730": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2731": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2740": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2741": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3324,
        3334
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2742": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2744": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2745": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "ADD",
      "path": "13"
    },
    "2746": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2747": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3336,
        3342
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0xAD78EBC5AC6200000"
    },
    "2757": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2759": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2760": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "ADD",
      "path": "13"
    },
    "2761": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2762": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2763": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2770": {
      "op": "SHL"
    },
    "2771": {
      "op": "SUB"
    },
    "2772": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2773": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2774": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "AND",
      "path": "13"
    },
    "2775": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2776": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3323
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x79CC6790"
    },
    "2781": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3323
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2782": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2784": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2785": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2786": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "ADD",
      "path": "13"
    },
    "2787": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2788": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3290,
        3295
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2790": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3290,
        3295
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2791": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2792": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2793": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2794": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2795": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2796": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "SUB",
      "path": "13"
    },
    "2797": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "ADD",
      "path": "13"
    },
    "2798": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2799": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3290,
        3295
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2800": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3314
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2801": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2802": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2803": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2804": {
      "op": "DUP1"
    },
    "2805": {
      "op": "ISZERO"
    },
    "2806": {
      "op": "PUSH2",
      "value": "0xAFE"
    },
    "2809": {
      "op": "JUMPI"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2812": {
      "op": "DUP1"
    },
    "2813": {
      "op": "REVERT"
    },
    "2814": {
      "op": "JUMPDEST"
    },
    "2815": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "POP",
      "path": "13"
    },
    "2816": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "GAS",
      "path": "13"
    },
    "2817": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "CALL",
      "path": "13"
    },
    "2818": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2819": {
      "op": "DUP1"
    },
    "2820": {
      "op": "ISZERO"
    },
    "2821": {
      "op": "PUSH2",
      "value": "0xB12"
    },
    "2824": {
      "op": "JUMPI"
    },
    "2825": {
      "op": "RETURNDATASIZE"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2828": {
      "op": "DUP1"
    },
    "2829": {
      "op": "RETURNDATACOPY"
    },
    "2830": {
      "op": "RETURNDATASIZE"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2833": {
      "op": "REVERT"
    },
    "2834": {
      "op": "JUMPDEST"
    },
    "2835": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "POP",
      "path": "13"
    },
    "2836": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "POP",
      "path": "13"
    },
    "2837": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "POP",
      "path": "13"
    },
    "2838": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        3307,
        3343
      ],
      "op": "POP",
      "path": "13"
    },
    "2839": {
      "fn": "token_challenge.overnightStart",
      "offset": [
        2807,
        3352
      ],
      "op": "POP",
      "path": "13"
    },
    "2840": {
      "fn": "token_challenge.overnightStart",
      "jump": "o",
      "offset": [
        2807,
        3352
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2841": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        4946,
        6155
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2842": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 36,
      "value": "0x3"
    },
    "2844": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2845": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2847": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2848": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2849": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2858": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2859": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5215,
        5225
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2860": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2862": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2863": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "ADD",
      "path": "13"
    },
    "2864": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2865": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5227,
        5232
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x2B5E3AF16B1880000"
    },
    "2875": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2877": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2878": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "ADD",
      "path": "13"
    },
    "2879": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2880": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2881": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2882": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2884": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2885": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2886": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "op": "SUB"
    },
    "2895": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2896": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2897": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "AND",
      "path": "13"
    },
    "2898": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2899": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5214
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x79CC6790"
    },
    "2904": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5214
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2905": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2907": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2908": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2909": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "ADD",
      "path": "13"
    },
    "2910": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2911": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2912": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2913": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2914": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2915": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2916": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2917": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2918": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "SUB",
      "path": "13"
    },
    "2919": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "ADD",
      "path": "13"
    },
    "2920": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2921": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5005,
        5009
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2922": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5205
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2923": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2924": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2925": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2926": {
      "op": "DUP1"
    },
    "2927": {
      "op": "ISZERO"
    },
    "2928": {
      "op": "PUSH2",
      "value": "0xB78"
    },
    "2931": {
      "op": "JUMPI"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "DUP1"
    },
    "2935": {
      "op": "REVERT"
    },
    "2936": {
      "op": "JUMPDEST"
    },
    "2937": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "POP",
      "path": "13"
    },
    "2938": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "GAS",
      "path": "13"
    },
    "2939": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "CALL",
      "path": "13"
    },
    "2940": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5198,
        5233
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2941": {
      "op": "DUP1"
    },
    "2942": {
      "op": "ISZERO"
    },
    "2943": {
      "op": "PUSH2",
      "value": "0xB8C"
    },
    "2946": {
      "op": "JUMPI"
    },
    "2947": {
      "op": "RETURNDATASIZE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "RETURNDATACOPY"
    },
    "2952": {
      "op": "RETURNDATASIZE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2955": {
      "op": "REVERT"
    },
    "2956": {
      "op": "JUMPDEST"
    },
    "2957": {
      "op": "POP"
    },
    "2958": {
      "op": "POP"
    },
    "2959": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5274,
        5291
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 37,
      "value": "0x9"
    },
    "2961": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5274,
        5291
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "op": "SUB"
    },
    "2970": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5274,
        5291
      ],
      "op": "AND",
      "path": "13"
    },
    "2971": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5270
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2972": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5291
      ],
      "op": "EQ",
      "path": "13"
    },
    "2973": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5291
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5291
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2976": {
      "branch": 93,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5291
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5326
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB5"
    },
    "2981": {
      "branch": 93,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5326
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2982": {
      "op": "POP"
    },
    "2983": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5309,
        5326
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "2985": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5309,
        5326
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2992": {
      "op": "SHL"
    },
    "2993": {
      "op": "SUB"
    },
    "2994": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5309,
        5326
      ],
      "op": "AND",
      "path": "13"
    },
    "2995": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5295,
        5305
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2996": {
      "branch": 94,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5295,
        5326
      ],
      "op": "EQ",
      "path": "13"
    },
    "2997": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5260,
        5326
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2998": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBF0"
    },
    "3001": {
      "branch": 94,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3002": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3004": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3013": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3014": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3016": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "ADD",
      "path": "13"
    },
    "3017": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3018": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3019": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3021": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "ADD",
      "path": "13"
    },
    "3022": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3023": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3024": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "SUB",
      "path": "13"
    },
    "3025": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3026": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3027": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x34"
    },
    "3029": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3030": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3031": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3033": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "ADD",
      "path": "13"
    },
    "3034": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3035": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1546"
    },
    "3038": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x34"
    },
    "3040": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3041": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "3042": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3044": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "ADD",
      "path": "13"
    },
    "3045": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3046": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "POP",
      "path": "13"
    },
    "3047": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "POP",
      "path": "13"
    },
    "3048": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3050": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3051": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3052": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3053": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "SUB",
      "path": "13"
    },
    "3054": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3055": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3056": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5252,
        5383
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3057": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3059": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3060": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3061": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3062": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5425
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC"
    },
    "3064": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3066": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3067": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3069": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3070": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3071": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5431
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3072": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5434,
        5443
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12C"
    },
    "3075": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5404,
        5443
      ],
      "op": "ADD",
      "path": "13"
    },
    "3076": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5397,
        5400
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "3077": {
      "branch": 95,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5397,
        5443
      ],
      "op": "LT",
      "path": "13"
    },
    "3078": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5394,
        6148
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x76E"
    },
    "3081": {
      "branch": 95,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5394,
        6148
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3082": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 38,
      "value": "0x0"
    },
    "3084": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3085": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3086": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3087": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5485
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "3089": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3091": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3092": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3094": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3095": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3096": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3097": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3099": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5491
      ],
      "op": "AND",
      "path": "13"
    },
    "3100": {
      "branch": 96,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5466,
        5500
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3101": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC57"
    },
    "3104": {
      "branch": 96,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3105": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3107": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3114": {
      "op": "SHL"
    },
    "3115": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3116": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3117": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3119": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "ADD",
      "path": "13"
    },
    "3120": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3121": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3122": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3124": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "ADD",
      "path": "13"
    },
    "3125": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3126": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3127": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "SUB",
      "path": "13"
    },
    "3128": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3129": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3130": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x23"
    },
    "3132": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3133": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3134": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3136": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "ADD",
      "path": "13"
    },
    "3137": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3138": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A8"
    },
    "3141": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x23"
    },
    "3143": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3144": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "3145": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3147": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "ADD",
      "path": "13"
    },
    "3148": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3149": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "POP",
      "path": "13"
    },
    "3150": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "POP",
      "path": "13"
    },
    "3151": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3153": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3154": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3155": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3156": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "SUB",
      "path": "13"
    },
    "3157": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3158": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3159": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5458,
        5540
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3160": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5559,
        5568
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3162": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3163": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5578,
        5589
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "3165": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5578,
        5596
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3166": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5574,
        5596
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3167": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5574,
        5596
      ],
      "op": "LT",
      "path": "13"
    },
    "3168": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3169": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC94"
    },
    "3172": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3173": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5717,
        5721
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3174": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5710
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "3176": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5711,
        5712
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3177": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3178": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3179": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3180": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "LT",
      "path": "13"
    },
    "3181": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC72"
    },
    "3184": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3185": {
      "dev": "Index out of range",
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "INVALID",
      "path": "13"
    },
    "3186": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3187": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3188": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3190": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3191": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3193": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3195": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3196": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "ADD",
      "path": "13"
    },
    "3197": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5713
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3198": {
      "branch": 97,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5699,
        5721
      ],
      "op": "EQ",
      "path": "13"
    },
    "3199": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5695,
        5810
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3200": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5695,
        5810
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC8C"
    },
    "3203": {
      "branch": 97,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5695,
        5810
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3204": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5758,
        5762
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 39,
      "value": "0x1"
    },
    "3206": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5745,
        5762
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3207": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5745,
        5762
      ],
      "op": "POP",
      "path": "13"
    },
    "3208": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5785,
        5790
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 40,
      "value": "0xC94"
    },
    "3211": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5785,
        5790
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3212": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5695,
        5810
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3213": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5598,
        5601
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 41,
      "value": "0x1"
    },
    "3215": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5598,
        5601
      ],
      "op": "ADD",
      "path": "13"
    },
    "3216": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC5A"
    },
    "3219": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3220": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3221": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5555,
        5824
      ],
      "op": "POP",
      "path": "13"
    },
    "3222": {
      "branch": 98,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5845,
        5855
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 42
    },
    "3223": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCE2"
    },
    "3226": {
      "branch": 98,
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3227": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3229": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3230": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3239": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3240": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3242": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3244": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3245": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "ADD",
      "path": "13"
    },
    "3246": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3247": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x18"
    },
    "3249": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3251": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3252": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "ADD",
      "path": "13"
    },
    "3253": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3254": {
      "op": "PUSH24",
      "value": "0x436F756C646E27742066696E642079756F7220666C616721"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3284": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3285": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "ADD",
      "path": "13"
    },
    "3286": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3287": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3288": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3289": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3290": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3291": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3292": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "SUB",
      "path": "13"
    },
    "3293": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "3295": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "ADD",
      "path": "13"
    },
    "3296": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3297": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3298": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5837,
        5884
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3299": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 43,
      "value": "0x3"
    },
    "3301": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3302": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3304": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3305": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3306": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3315": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3316": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5925,
        5935
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3317": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3319": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3320": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "ADD",
      "path": "13"
    },
    "3321": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3322": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5937,
        5944
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x3635C9ADC5DEA00000"
    },
    "3332": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3334": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3335": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "ADD",
      "path": "13"
    },
    "3336": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3337": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3338": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3345": {
      "op": "SHL"
    },
    "3346": {
      "op": "SUB"
    },
    "3347": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3348": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3349": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "AND",
      "path": "13"
    },
    "3350": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3351": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5924
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "3356": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5924
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3357": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3359": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3360": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3361": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "ADD",
      "path": "13"
    },
    "3362": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3363": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3365": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3366": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3367": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3368": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3369": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3370": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3371": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "SUB",
      "path": "13"
    },
    "3372": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "ADD",
      "path": "13"
    },
    "3373": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3374": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3376": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5919
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3377": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3378": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3379": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3380": {
      "op": "DUP1"
    },
    "3381": {
      "op": "ISZERO"
    },
    "3382": {
      "op": "PUSH2",
      "value": "0xD3E"
    },
    "3385": {
      "op": "JUMPI"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3388": {
      "op": "DUP1"
    },
    "3389": {
      "op": "REVERT"
    },
    "3390": {
      "op": "JUMPDEST"
    },
    "3391": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "POP",
      "path": "13"
    },
    "3392": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "GAS",
      "path": "13"
    },
    "3393": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "CALL",
      "path": "13"
    },
    "3394": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3395": {
      "op": "DUP1"
    },
    "3396": {
      "op": "ISZERO"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0xD52"
    },
    "3400": {
      "op": "JUMPI"
    },
    "3401": {
      "op": "RETURNDATASIZE"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3404": {
      "op": "DUP1"
    },
    "3405": {
      "op": "RETURNDATACOPY"
    },
    "3406": {
      "op": "RETURNDATASIZE"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3409": {
      "op": "REVERT"
    },
    "3410": {
      "op": "JUMPDEST"
    },
    "3411": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "POP",
      "path": "13"
    },
    "3412": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "POP",
      "path": "13"
    },
    "3413": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "POP",
      "path": "13"
    },
    "3414": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "POP",
      "path": "13"
    },
    "3415": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3417": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3418": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5912,
        5945
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3421": {
      "op": "DUP2"
    },
    "3422": {
      "op": "LT"
    },
    "3423": {
      "op": "ISZERO"
    },
    "3424": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3427": {
      "op": "JUMPI"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3430": {
      "op": "DUP1"
    },
    "3431": {
      "op": "REVERT"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "POP"
    },
    "3434": {
      "op": "POP"
    },
    "3435": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 44,
      "value": "0x40"
    },
    "3437": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3438": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6001,
        6008
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x3635C9ADC5DEA00000"
    },
    "3448": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6001,
        6008
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3449": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5995,
        5999
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3450": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5995,
        5999
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3451": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5983,
        5993
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3452": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5983,
        5993
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3453": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x6C48E695609C5CC5B9D779D70ABB26282055513FB1A55CBA442B3CBC6D43BCD"
    },
    "3486": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3487": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3489": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3490": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        5964,
        6009
      ],
      "op": "LOG4",
      "path": "13"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 45,
      "value": "0x0"
    },
    "3495": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3496": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3497": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3498": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6043
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "3500": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3502": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3503": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3505": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3506": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6049
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3507": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3508": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3511": {
      "op": "NOT"
    },
    "3512": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "AND",
      "path": "13"
    },
    "3513": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6052,
        6056
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3515": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3516": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3517": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "OR",
      "path": "13"
    },
    "3518": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3519": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3520": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6024,
        6056
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3521": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6073,
        6084
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 46,
      "value": "0x236"
    },
    "3524": {
      "fn": "token_challenge.winDirectChallenge",
      "offset": [
        6073,
        6084
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3525": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3526": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 47,
      "value": "0xDD5"
    },
    "3529": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDD0"
    },
    "3532": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x131B"
    },
    "3535": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3536": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3537": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1367"
    },
    "3540": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3541": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3542": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "o",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3543": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6191,
        7154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3544": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6395,
        6404
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3546": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3547": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6414,
        6423
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xD"
    },
    "3549": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6414,
        6430
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3550": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6410,
        6430
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3551": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6410,
        6430
      ],
      "op": "LT",
      "path": "13"
    },
    "3552": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3553": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE4D"
    },
    "3556": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3557": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6474,
        6478
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 48
    },
    "3558": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6467
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xD"
    },
    "3560": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6468,
        6469
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3561": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3562": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3563": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3564": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "LT",
      "path": "13"
    },
    "3565": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDF2"
    },
    "3568": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3569": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "INVALID",
      "path": "13"
    },
    "3570": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3571": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3572": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3574": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3575": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3577": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3579": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3580": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "ADD",
      "path": "13"
    },
    "3581": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6470
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3582": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6478
      ],
      "op": "EQ",
      "path": "13"
    },
    "3583": {
      "branch": 99,
      "fn": "token_challenge.challengeStart",
      "offset": [
        6458,
        6478
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3584": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE45"
    },
    "3587": {
      "branch": 99,
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3588": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3590": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3591": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3600": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3601": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3603": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3605": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3606": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "ADD",
      "path": "13"
    },
    "3607": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3608": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x12"
    },
    "3610": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3612": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3613": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "ADD",
      "path": "13"
    },
    "3614": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3615": {
      "op": "PUSH18",
      "value": "0x466C616720616C7265616479207573656421"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3636": {
      "op": "SHL"
    },
    "3637": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "3639": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3640": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "ADD",
      "path": "13"
    },
    "3641": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3642": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3643": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3644": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3645": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3646": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3647": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "SUB",
      "path": "13"
    },
    "3648": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "3650": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "ADD",
      "path": "13"
    },
    "3651": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3652": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3653": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6450,
        6502
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3654": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6432,
        6435
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 49,
      "value": "0x1"
    },
    "3656": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6432,
        6435
      ],
      "op": "ADD",
      "path": "13"
    },
    "3657": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDDA"
    },
    "3660": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3661": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6391,
        6513
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6586
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 50,
      "value": "0xD"
    },
    "3665": {
      "op": "DUP1"
    },
    "3666": {
      "op": "SLOAD"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3669": {
      "op": "DUP2"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "SWAP1"
    },
    "3672": {
      "op": "SWAP2"
    },
    "3673": {
      "op": "SSTORE"
    },
    "3674": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6597
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5"
    },
    "3707": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6597
      ],
      "op": "ADD",
      "path": "13"
    },
    "3708": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6597
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3709": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6597
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3710": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6597
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 51
    },
    "3714": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3715": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3716": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6627
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "3718": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6577,
        6597
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3720": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3721": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3722": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3723": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3725": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3726": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3727": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6633
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3728": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6636,
        6639
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "3729": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6639
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3730": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6608,
        6639
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3731": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6666
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 52,
      "value": "0x11"
    },
    "3733": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6672
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3734": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6672
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3735": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6672
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3736": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6672
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3737": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6672
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3738": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6680
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3739": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6680
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3742": {
      "op": "NOT"
    },
    "3743": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6680
      ],
      "op": "AND",
      "path": "13"
    },
    "3744": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6680
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3745": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6649,
        6680
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3746": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6700,
        6714
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 53,
      "value": "0x4"
    },
    "3748": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6700,
        6721
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3749": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6725,
        6726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "3751": {
      "branch": 100,
      "fn": "token_challenge.challengeStart",
      "offset": [
        6700,
        6726
      ],
      "op": "EQ",
      "path": "13"
    },
    "3752": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEE2"
    },
    "3755": {
      "branch": 100,
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3756": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3758": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3767": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3768": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3770": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "ADD",
      "path": "13"
    },
    "3771": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3772": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3773": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3775": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "ADD",
      "path": "13"
    },
    "3776": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3777": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3778": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "SUB",
      "path": "13"
    },
    "3779": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3780": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3781": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x30"
    },
    "3783": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3784": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3785": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3787": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "ADD",
      "path": "13"
    },
    "3788": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3789": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14D3"
    },
    "3792": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x30"
    },
    "3794": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3795": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "3796": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3798": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "ADD",
      "path": "13"
    },
    "3799": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3800": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "POP",
      "path": "13"
    },
    "3801": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "POP",
      "path": "13"
    },
    "3802": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3804": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3805": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3806": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3807": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "SUB",
      "path": "13"
    },
    "3808": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3809": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3810": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6692,
        6779
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3811": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6794,
        6803
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3813": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3814": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6813,
        6827
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3816": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6813,
        6834
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3817": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6809,
        6834
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3818": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6809,
        6834
      ],
      "op": "LT",
      "path": "13"
    },
    "3819": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3820": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF82"
    },
    "3823": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3824": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3826": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6886,
        6887
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3827": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3828": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3829": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3830": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "LT",
      "path": "13"
    },
    "3831": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEFC"
    },
    "3834": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3835": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "INVALID",
      "path": "13"
    },
    "3836": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3837": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3839": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3840": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3841": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3842": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3844": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3845": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3846": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3847": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "ADD",
      "path": "13"
    },
    "3848": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3855": {
      "op": "SHL"
    },
    "3856": {
      "op": "SUB"
    },
    "3857": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6871,
        6888
      ],
      "op": "AND",
      "path": "13"
    },
    "3858": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6857,
        6867
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3859": {
      "branch": 101,
      "fn": "token_challenge.challengeStart",
      "offset": [
        6857,
        6888
      ],
      "op": "EQ",
      "path": "13"
    },
    "3860": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3861": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF2F"
    },
    "3864": {
      "branch": 101,
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3865": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6922
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 54,
      "value": "0xE"
    },
    "3867": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6935
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3868": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6935
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "op": "NOT"
    },
    "3878": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6935
      ],
      "op": "AND",
      "path": "13"
    },
    "3879": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6925,
        6935
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3880": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6935
      ],
      "op": "OR",
      "path": "13"
    },
    "3881": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6935
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3882": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6907,
        6935
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3883": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF7A"
    },
    "3886": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3887": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3888": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7001
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 55,
      "value": "0xF"
    },
    "3890": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7021
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3892": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7022,
        7023
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3893": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3894": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3895": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3896": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "LT",
      "path": "13"
    },
    "3897": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF3E"
    },
    "3900": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3901": {
      "dev": "Index out of range",
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "INVALID",
      "path": "13"
    },
    "3902": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3903": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3905": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3906": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3907": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3908": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3910": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3911": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3912": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3913": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3914": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3915": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "ADD",
      "path": "13"
    },
    "3916": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3917": {
      "op": "DUP4"
    },
    "3918": {
      "op": "SLOAD"
    },
    "3919": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3921": {
      "op": "DUP2"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "DUP6"
    },
    "3924": {
      "op": "SSTORE"
    },
    "3925": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3926": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3927": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3928": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3929": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3930": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3931": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3932": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "ADD",
      "path": "13"
    },
    "3933": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3934": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3941": {
      "op": "SHL"
    },
    "3942": {
      "op": "SUB"
    },
    "3943": {
      "op": "NOT"
    },
    "3944": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "AND",
      "path": "13"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3954": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3955": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7007,
        7024
      ],
      "op": "AND",
      "path": "13"
    },
    "3956": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3957": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3958": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3959": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "OR",
      "path": "13"
    },
    "3960": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3961": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6986,
        7025
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3962": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6854,
        7041
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3963": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6836,
        6839
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 56,
      "value": "0x1"
    },
    "3965": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6836,
        6839
      ],
      "op": "ADD",
      "path": "13"
    },
    "3966": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEE5"
    },
    "3969": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3970": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        6790,
        7051
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 57,
      "value": "0x40"
    },
    "3974": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3975": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3976": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3977": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3978": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3979": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3980": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3981": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7080,
        7090
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3982": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7080,
        7090
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3983": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x3D1151F535AB57B7EEFBBF3BAAFF50EFAAC64F3F0DF368617499905F78CB2373"
    },
    "4016": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4017": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4018": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4019": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4020": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "SUB",
      "path": "13"
    },
    "4021": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4023": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "ADD",
      "path": "13"
    },
    "4024": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4025": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7066,
        7097
      ],
      "op": "LOG2",
      "path": "13"
    },
    "4026": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 58,
      "value": "0x3"
    },
    "4028": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4029": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4031": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4032": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4033": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "4040": {
      "op": "SHL"
    },
    "4041": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4042": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4043": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7126,
        7136
      ],
      "op": "CALLER",
      "path": "13"
    },
    "4044": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4046": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4047": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "ADD",
      "path": "13"
    },
    "4048": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4049": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7138,
        7144
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x56BC75E2D63100000"
    },
    "4059": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4061": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4062": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "ADD",
      "path": "13"
    },
    "4063": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4064": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4065": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4072": {
      "op": "SHL"
    },
    "4073": {
      "op": "SUB"
    },
    "4074": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4075": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4076": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "AND",
      "path": "13"
    },
    "4077": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4078": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7125
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x79CC6790"
    },
    "4083": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7125
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4084": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4086": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4087": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4088": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "ADD",
      "path": "13"
    },
    "4089": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4090": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4092": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4093": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4094": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4095": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4096": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4097": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4098": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "SUB",
      "path": "13"
    },
    "4099": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "ADD",
      "path": "13"
    },
    "4100": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4101": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4102": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7116
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4103": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4104": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4105": {
      "fn": "token_challenge.challengeStart",
      "offset": [
        7109,
        7145
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4106": {
      "op": "DUP1"
    },
    "4107": {
      "op": "ISZERO"
    },
    "4108": {
      "op": "PUSH2",
      "value": "0xAFE"
    },
    "4111": {
      "op": "JUMPI"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4114": {
      "op": "DUP1"
    },
    "4115": {
      "op": "REVERT"
    },
    "4116": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4117": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2583,
        2587
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4119": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2583,
        2587
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4120": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4121": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2621,
        2635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4123": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2621,
        2642
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4124": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2617,
        2642
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4125": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2617,
        2642
      ],
      "op": "LT",
      "path": "13"
    },
    "4126": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4127": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1066"
    },
    "4130": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4131": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2686,
        2697
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "op": "SUB"
    },
    "4140": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2697
      ],
      "op": "AND",
      "path": "13"
    },
    "4141": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2679
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4143": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2680,
        2681
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4144": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4145": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4146": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4147": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "LT",
      "path": "13"
    },
    "4148": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1039"
    },
    "4151": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4152": {
      "dev": "Index out of range",
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "INVALID",
      "path": "13"
    },
    "4153": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4154": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4156": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4157": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4158": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4159": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4161": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4162": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4163": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "4164": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "ADD",
      "path": "13"
    },
    "4165": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4172": {
      "op": "SHL"
    },
    "4173": {
      "op": "SUB"
    },
    "4174": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2682
      ],
      "op": "AND",
      "path": "13"
    },
    "4175": {
      "branch": 102,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2665,
        2697
      ],
      "op": "EQ",
      "path": "13"
    },
    "4176": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2662,
        2743
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4177": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2662,
        2743
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x105E"
    },
    "4180": {
      "branch": 102,
      "fn": "token_challenge.isRegistered",
      "offset": [
        2662,
        2743
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4181": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2723,
        2727
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 59,
      "value": "0x1"
    },
    "4183": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2716,
        2727
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4184": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2716,
        2727
      ],
      "op": "POP",
      "path": "13"
    },
    "4185": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2716,
        2727
      ],
      "op": "POP",
      "path": "13"
    },
    "4186": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2716,
        2727
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x236"
    },
    "4189": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2716,
        2727
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4190": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2662,
        2743
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4191": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2647
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 60,
      "value": "0x1"
    },
    "4193": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2644,
        2647
      ],
      "op": "ADD",
      "path": "13"
    },
    "4194": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1018"
    },
    "4197": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4198": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2598,
        2753
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2765,
        2770
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 61,
      "value": "0x0"
    },
    "4202": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2765,
        2770
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4203": {
      "fn": "token_challenge.isRegistered",
      "offset": [
        2518,
        2778
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4204": {
      "op": "POP"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "fn": "token_challenge.isRegistered",
      "jump": "o",
      "offset": [
        2518,
        2778
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4207": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4208": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3582,
        3596
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 62,
      "value": "0x5"
    },
    "4210": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3582,
        3596
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4211": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3570,
        3578
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4212": {
      "branch": 103,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3570,
        3596
      ],
      "op": "EQ",
      "path": "13"
    },
    "4213": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10B7"
    },
    "4216": {
      "branch": 103,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4217": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4219": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4220": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4229": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4230": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4232": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4234": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4235": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "ADD",
      "path": "13"
    },
    "4236": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4237": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF"
    },
    "4239": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4241": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4242": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "ADD",
      "path": "13"
    },
    "4243": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4244": {
      "op": "PUSH15",
      "value": "0x2BB937B7339034B210383934B1B297"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4265": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4266": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "ADD",
      "path": "13"
    },
    "4267": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4268": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4269": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4270": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4271": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4272": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4273": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "SUB",
      "path": "13"
    },
    "4274": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "4276": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "ADD",
      "path": "13"
    },
    "4277": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4278": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4279": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3562,
        3616
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4280": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3637,
        3661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "4282": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3637,
        3661
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4283": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3634
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "4284": {
      "branch": 104,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3661
      ],
      "op": "GT",
      "path": "13"
    },
    "4285": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3707
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4286": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3707
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4287": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3707
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10CC"
    },
    "4290": {
      "branch": 104,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3707
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4291": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3707
      ],
      "op": "POP",
      "path": "13"
    },
    "4292": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3671,
        3695
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "4294": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3671,
        3695
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4295": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3698,
        3707
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3C"
    },
    "4297": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3671,
        3707
      ],
      "op": "ADD",
      "path": "13"
    },
    "4298": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3665,
        3668
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "4299": {
      "branch": 105,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3665,
        3707
      ],
      "op": "LT",
      "path": "13"
    },
    "4300": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3631,
        3707
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4301": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3627,
        4049
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4302": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3627,
        4049
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11E3"
    },
    "4305": {
      "branch": 105,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3627,
        4049
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4306": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3730,
        3743
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 63,
      "value": "0x7"
    },
    "4308": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3730,
        3743
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4309": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3730,
        3743
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4311": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3730,
        3743
      ],
      "op": "AND",
      "path": "13"
    },
    "4312": {
      "branch": 106,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3730,
        3752
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4313": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1113"
    },
    "4316": {
      "branch": 106,
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4317": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4319": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4326": {
      "op": "SHL"
    },
    "4327": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4328": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4329": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4331": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "ADD",
      "path": "13"
    },
    "4332": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4333": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4334": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4336": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "ADD",
      "path": "13"
    },
    "4337": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4338": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4339": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "SUB",
      "path": "13"
    },
    "4340": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4341": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4342": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x23"
    },
    "4344": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4345": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4346": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4348": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "ADD",
      "path": "13"
    },
    "4349": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4350": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A8"
    },
    "4353": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x23"
    },
    "4355": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4356": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "4357": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4359": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "ADD",
      "path": "13"
    },
    "4360": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4361": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "POP",
      "path": "13"
    },
    "4362": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "POP",
      "path": "13"
    },
    "4363": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4365": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4366": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4367": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4368": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "SUB",
      "path": "13"
    },
    "4369": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4370": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4371": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3722,
        3792
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4372": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 64,
      "value": "0x3"
    },
    "4374": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4375": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4377": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4378": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4379": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4386": {
      "op": "SHL"
    },
    "4387": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4388": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4389": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3821,
        3831
      ],
      "op": "CALLER",
      "path": "13"
    },
    "4390": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4392": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4393": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "ADD",
      "path": "13"
    },
    "4394": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4395": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3833,
        3840
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x410D586A20A4C00000"
    },
    "4405": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4407": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4408": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "ADD",
      "path": "13"
    },
    "4409": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4410": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4411": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "op": "SUB"
    },
    "4420": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4421": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4422": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "AND",
      "path": "13"
    },
    "4423": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4424": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3820
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "4429": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3820
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4430": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4432": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4433": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4434": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "ADD",
      "path": "13"
    },
    "4435": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4436": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4438": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4439": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4440": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4441": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4442": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4443": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4444": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "SUB",
      "path": "13"
    },
    "4445": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "ADD",
      "path": "13"
    },
    "4446": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4447": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4449": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3815
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4450": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4451": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4452": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4453": {
      "op": "DUP1"
    },
    "4454": {
      "op": "ISZERO"
    },
    "4455": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4458": {
      "op": "JUMPI"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4461": {
      "op": "DUP1"
    },
    "4462": {
      "op": "REVERT"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "POP",
      "path": "13"
    },
    "4465": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "GAS",
      "path": "13"
    },
    "4466": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "CALL",
      "path": "13"
    },
    "4467": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4468": {
      "op": "DUP1"
    },
    "4469": {
      "op": "ISZERO"
    },
    "4470": {
      "op": "PUSH2",
      "value": "0x1183"
    },
    "4473": {
      "op": "JUMPI"
    },
    "4474": {
      "op": "RETURNDATASIZE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4477": {
      "op": "DUP1"
    },
    "4478": {
      "op": "RETURNDATACOPY"
    },
    "4479": {
      "op": "RETURNDATASIZE"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4482": {
      "op": "REVERT"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "POP",
      "path": "13"
    },
    "4485": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "POP",
      "path": "13"
    },
    "4486": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "POP",
      "path": "13"
    },
    "4487": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "POP",
      "path": "13"
    },
    "4488": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4490": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4491": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3808,
        3841
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4494": {
      "op": "DUP2"
    },
    "4495": {
      "op": "LT"
    },
    "4496": {
      "op": "ISZERO"
    },
    "4497": {
      "op": "PUSH2",
      "value": "0x1199"
    },
    "4500": {
      "op": "JUMPI"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4503": {
      "op": "DUP1"
    },
    "4504": {
      "op": "REVERT"
    },
    "4505": {
      "op": "JUMPDEST"
    },
    "4506": {
      "op": "POP"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 65,
      "value": "0x7"
    },
    "4510": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3876
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4511": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3876
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4514": {
      "op": "NOT"
    },
    "4515": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3876
      ],
      "op": "AND",
      "path": "13"
    },
    "4516": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3872,
        3876
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4518": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3876
      ],
      "op": "OR",
      "path": "13"
    },
    "4519": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3876
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4520": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3876
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4521": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3895,
        3925
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 66,
      "value": "0x40"
    },
    "4523": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3895,
        3925
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4524": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3917,
        3924
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x410D586A20A4C00000"
    },
    "4534": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3917,
        3924
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4535": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3905,
        3915
      ],
      "op": "CALLER",
      "path": "13"
    },
    "4536": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3905,
        3915
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4537": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3895,
        3925
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "4570": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3895,
        3925
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4571": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4573": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3856,
        3869
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4574": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3895,
        3925
      ],
      "op": "LOG3",
      "path": "13"
    },
    "4575": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3627,
        4049
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9CF"
    },
    "4578": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3627,
        4049
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4579": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3627,
        4049
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4580": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 67,
      "value": "0x3"
    },
    "4582": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4583": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4585": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3979,
        3983
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4586": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4588": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4589": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4590": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4599": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4606": {
      "op": "SHL"
    },
    "4607": {
      "op": "SUB"
    },
    "4608": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3979,
        3983
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4609": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3979,
        3983
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4610": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3979,
        3983
      ],
      "op": "AND",
      "path": "13"
    },
    "4611": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4613": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4614": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "ADD",
      "path": "13"
    },
    "4615": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4616": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3985,
        3992
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x6C6B935B8BBD400000"
    },
    "4626": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4628": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4629": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "ADD",
      "path": "13"
    },
    "4630": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4631": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4632": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4633": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4634": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4635": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4636": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "AND",
      "path": "13"
    },
    "4637": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4638": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "4643": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4644": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "4646": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4647": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4648": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "ADD",
      "path": "13"
    },
    "4649": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4650": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4652": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4653": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4654": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4655": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4656": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4657": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "SUB",
      "path": "13"
    },
    "4658": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "ADD",
      "path": "13"
    },
    "4659": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4660": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4662": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3973
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4663": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4664": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "4665": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4666": {
      "op": "DUP1"
    },
    "4667": {
      "op": "ISZERO"
    },
    "4668": {
      "op": "PUSH2",
      "value": "0x1244"
    },
    "4671": {
      "op": "JUMPI"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4674": {
      "op": "DUP1"
    },
    "4675": {
      "op": "REVERT"
    },
    "4676": {
      "op": "JUMPDEST"
    },
    "4677": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "POP",
      "path": "13"
    },
    "4678": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "GAS",
      "path": "13"
    },
    "4679": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "CALL",
      "path": "13"
    },
    "4680": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4681": {
      "op": "DUP1"
    },
    "4682": {
      "op": "ISZERO"
    },
    "4683": {
      "op": "PUSH2",
      "value": "0x1258"
    },
    "4686": {
      "op": "JUMPI"
    },
    "4687": {
      "op": "RETURNDATASIZE"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4690": {
      "op": "DUP1"
    },
    "4691": {
      "op": "RETURNDATACOPY"
    },
    "4692": {
      "op": "RETURNDATASIZE"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4695": {
      "op": "REVERT"
    },
    "4696": {
      "op": "JUMPDEST"
    },
    "4697": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "POP",
      "path": "13"
    },
    "4698": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "POP",
      "path": "13"
    },
    "4699": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "POP",
      "path": "13"
    },
    "4700": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "POP",
      "path": "13"
    },
    "4701": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4703": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4704": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3966,
        3993
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4707": {
      "op": "DUP2"
    },
    "4708": {
      "op": "LT"
    },
    "4709": {
      "op": "ISZERO"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x126E"
    },
    "4713": {
      "op": "JUMPI"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4716": {
      "op": "DUP1"
    },
    "4717": {
      "op": "REVERT"
    },
    "4718": {
      "op": "JUMPDEST"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "POP"
    },
    "4721": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4023,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 68,
      "value": "0x1"
    },
    "4723": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4023,
        4027
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4724": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4013,
        4037
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4726": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4013,
        4037
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4727": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4029,
        4036
      ],
      "op": "PUSH9",
      "path": "13",
      "value": "0x6C6B935B8BBD400000"
    },
    "4737": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4029,
        4036
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4744": {
      "op": "SHL"
    },
    "4745": {
      "op": "SUB"
    },
    "4746": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4023,
        4027
      ],
      "op": "AND",
      "path": "13"
    },
    "4747": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4023,
        4027
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4748": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4013,
        4037
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x75E44BCCB8E953F3228B7BDE1DC2A77AC72025AA92A8A329378D26B4F4E1A860"
    },
    "4781": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4013,
        4037
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4782": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4023,
        4027
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4784": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4023,
        4027
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4785": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        4013,
        4037
      ],
      "op": "LOG3",
      "path": "13"
    },
    "4786": {
      "fn": "token_challenge.overnightCheck",
      "offset": [
        3358,
        4064
      ],
      "op": "POP",
      "path": "13"
    },
    "4787": {
      "fn": "token_challenge.overnightCheck",
      "jump": "o",
      "offset": [
        3358,
        4064
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4788": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4789": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4797": {
      "op": "SHL"
    },
    "4798": {
      "op": "SUB"
    },
    "4799": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 69
    },
    "4800": {
      "branch": 107,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "4801": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12FB"
    },
    "4804": {
      "branch": 107,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4805": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4807": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4814": {
      "op": "SHL"
    },
    "4815": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4816": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4817": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4819": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4820": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4821": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4822": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4824": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4825": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4826": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4827": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "4828": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4829": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4830": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "4832": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4833": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4834": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4836": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4837": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4838": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1524"
    },
    "4841": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "4843": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4844": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4845": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4847": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "4848": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4849": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "4850": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "4851": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4853": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4854": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4855": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4856": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "4857": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4858": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4859": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4860": {
      "op": "POP"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4867": {
      "op": "SHL"
    },
    "4868": {
      "op": "SUB"
    },
    "4869": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 70
    },
    "4870": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4872": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4873": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4874": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4875": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4877": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4878": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4879": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4880": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4881": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4883": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4884": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4885": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4886": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4888": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "4889": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4890": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4891": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4892": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 71
    },
    "4893": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4894": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4895": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4896": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 72,
      "value": "0x1330"
    },
    "4899": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4901": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4902": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4907": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13AF"
    },
    "4910": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "4911": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4912": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4913": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 73,
      "value": "0x40"
    },
    "4915": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4922": {
      "op": "SHL"
    },
    "4923": {
      "op": "SUB"
    },
    "4924": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4925": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "4926": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4927": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "4960": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4961": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4963": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4964": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "4965": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "4966": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4967": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4968": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 74,
      "value": "0x1378"
    },
    "4971": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4973": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4974": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4979": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1430"
    },
    "4982": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "4983": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4984": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4985": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 75,
      "value": "0x40"
    },
    "4987": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4994": {
      "op": "SHL"
    },
    "4995": {
      "op": "SUB"
    },
    "4996": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4997": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "4998": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4999": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "5032": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5033": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5035": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5036": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "5037": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "5038": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5039": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5040": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 76,
      "value": "0x13B9"
    },
    "5043": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5044": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5045": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B4"
    },
    "5048": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5049": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5050": {
      "branch": 108,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5051": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140B"
    },
    "5054": {
      "branch": 108,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5055": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5057": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5058": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5065": {
      "op": "SHL"
    },
    "5066": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5067": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5068": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5070": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5072": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5073": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5074": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5075": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5077": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "5079": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5080": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5081": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5082": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "5115": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "5117": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5118": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5119": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5120": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5121": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5122": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5123": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5124": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5125": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "5126": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5128": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5129": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5130": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5131": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5138": {
      "op": "SHL"
    },
    "5139": {
      "op": "SUB"
    },
    "5140": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 77
    },
    "5141": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5143": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5144": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5145": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5146": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5148": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5149": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5150": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5151": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5152": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5154": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5155": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5156": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5157": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5160": {
      "op": "NOT"
    },
    "5161": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "5162": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5164": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "5165": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5166": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5167": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5168": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5169": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 78,
      "value": "0x143A"
    },
    "5172": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5173": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5174": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B4"
    },
    "5177": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5178": {
      "branch": 109,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5179": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1475"
    },
    "5182": {
      "branch": 109,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5183": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5185": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5192": {
      "op": "SHL"
    },
    "5193": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5194": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5195": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5197": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5198": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5199": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5200": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5202": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5203": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5204": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5205": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "5206": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5207": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5208": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5210": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5211": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5212": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5214": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5215": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5216": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1503"
    },
    "5219": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "5221": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5222": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5223": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5225": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "5226": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5227": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "5228": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "5229": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5231": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5232": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5233": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5234": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "5235": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5236": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5237": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5244": {
      "op": "SHL"
    },
    "5245": {
      "op": "SUB"
    },
    "5246": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 79
    },
    "5247": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5249": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5250": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5251": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5252": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5254": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5255": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5256": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5257": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5258": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5260": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5261": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5262": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5263": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5266": {
      "op": "NOT"
    },
    "5267": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "5268": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5269": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5270": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "2dc94d876ab5171ddad99025b005e1ad5468fb1e",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./token_exchange.sol\" ; \n\ncontract token_challenge is AdminRole {\n\n    //address _exchangeAddress; \n    address _fss = 0x85A8d7241Ffffee7290501473A9B11BFdA2Ae9Ff ;\n\n    //EXCHANGE & PAYCOIN\n    token_exchange fss_exchange; \n    IT_PayCoin payCoin; \n\n    //SIGNING UP & CHECKING VARIABLES\n    address[] _teamAddresses; \n\n    event Registered(address indexed teamAddress); \n\n    //PRICE OVERNIGHT VARIABLES\n    uint256 _last_id_price; \n    uint256 _startOvernightChallenge;\n    bool _overnightWon; \n    \n    event Overnight(address indexed winner, uint256 indexed coin_won); \n\n    //DIRECT CHALLENGE VARIABLES\n    uint256[] _directFlag; \n    //uint256 _startDirectChallenge; \n    address _directChallenger; \n    address _directChallenged; \n    //bool _directChallengeWon;\n    mapping (uint256 => bool) _directChallengeWon;\n    mapping (uint256 => uint256) _startDirectChallenge; \n\n    event DirectChallenge(address indexed directChallenger, address indexed directChallenged, uint256 directFlag); \n    event DirectChallengeWon(address indexed directWinner, uint256 indexed directFlag, uint256 indexed coin_amount); \n\n    //TEAM CHALLENGE VARIABLES\n    uint256[] _teamFlag; \n    address _teamChallenger; \n    address[] _teamChallenged;\n    \n    mapping (uint256 => uint256) _startTeamChallenge; \n    mapping (uint256 => bool) _teamChallengeWon; \n    \n    event TeamChallenge(address indexed teamChallenger, uint256 teamFlag);\n    event TeamChallengeWon(address indexed teamWinner, uint256 indexed teamFlag, uint256 indexed coin_amount);  \n\n    //CONSTRUCTOR\n    constructor (address exchangeAddress) public {\n        fss_exchange = token_exchange(exchangeAddress);\n        payCoin = IT_PayCoin(fss_exchange.payCoin());\n    }\n\n    //SIGNING UP & CHECKING FUNCTIONS\n    function register(address teamAddress) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress);\n        bool _alreadyRegistered = false; \n\n        //TODO: Remember to uncomment!\n        //require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                _alreadyRegistered = true; \n            }\n        }\n        require(_alreadyRegistered == false, \"You're already registered.\"); \n\n        _teamAddresses.push(teamAddress); \n\n        require(_teamAddresses.length <= 3, \"Too many teams.\"); \n        \n        emit Registered(teamAddress); \n    }\n\n    function isRegistered(address teamAddress) external view returns(bool){\n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(_teamAddresses[i] == teamAddress){\n                return true; \n            }\n        }\n    return false; \n    }\n\n    //PRICE OVERNIGHT\n\n    function overnightStart(int256 new_delta_price) onlyAdmin external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        //TODO: Remember to uncomment!\n        //require(!(fss_exchange.isOpen()), \"The market is still open, come back later\");\n        \n        _startOvernightChallenge = now; \n        _last_id_price = fss_exchange.setNewPrice(new_delta_price);\n        _overnightWon = false;  \n        payCoin.burnFrom(msg.sender, 200e18); \n\n    }\n\n    function overnightCheck(uint256 id_price) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        require(id_price == _last_id_price, \"Wrong id price.\"); \n        if( now > _startOvernightChallenge && now < _startOvernightChallenge + 1 minutes){\n            require(_overnightWon == false, \"The challenge has already been won.\"); \n\n            payCoin.mint(msg.sender, 1200e18); \n            _overnightWon = true;\n            emit Overnight(msg.sender, 1200e18); \n\n        }\n\n        else{\n            payCoin.mint(_fss, 2000e18); \n            emit Overnight(_fss, 2000e18); \n        }\n        \n    }\n\n    //DIRECT CHALLENGE\n    \n    function challengeStart(address directChallenged, uint256 flag) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        for(uint256 i = 0; i < _directFlag.length; i++){\n            require(_directFlag[i] != flag , \"Flag already used!\");\n        }\n        require(msg.sender != directChallenged, \"The addresses must be different.\"); \n        //TODO require address must be of the teams. \n\n        _directFlag.push(flag); \n        _startDirectChallenge[flag] = now;\n        _directChallenger = msg.sender; \n        _directChallenged = directChallenged; \n        _directChallengeWon[flag] = false; \n\n        emit DirectChallenge(_directChallenger, _directChallenged, flag);\n        payCoin.burnFrom(msg.sender, 50e18);          \n    \n    }\n\n    function winDirectChallenge(uint256 flag) external returns(bool) {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n        bool _flagFound = false; \n\n        payCoin.burnFrom(msg.sender, 50e18);\n        \n        require(msg.sender == _directChallenger || msg.sender == _directChallenged, \"You must be either the challenger or the challenged.\"); \n        if(now >= _startDirectChallenge[flag] + 5 minutes){\n            require(_directChallengeWon[flag] == false, \"The challenge has already been won.\"); \n            for(uint256 i = 0; i < _directFlag.length; i++){\n                //require( _flag[i] == flag , \"Couldn't find yuor flag!\");\n                if (_directFlag[i] == flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\"); \n            \n            payCoin.mint(msg.sender, 1000e18);\n            emit DirectChallengeWon(msg.sender, flag, 1000e18); \n            _directChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n\n    }\n    \n    //TEAM CHALLENGE\n    \n    function challengeStart(uint256 flag) external {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());\n\n        for(uint256 i = 0; i < _teamFlag.length; i++){\n            require(_teamFlag[i] != flag , \"Flag already used!\");\n        } \n        //TODO require address must be of the teams.\n\n        _teamFlag.push(flag); \n        _startTeamChallenge[flag] = now;\n        _teamChallengeWon[flag] = false; \n\n        require(_teamAddresses.length == 3, \"Challenge can't start until all teams regitered.\"); \n        for(uint256 i = 0; i < _teamAddresses.length; i++){\n            if(msg.sender == _teamAddresses[i]){\n                _teamChallenger = msg.sender; \n            }\n            else{\n                _teamChallenged.push(_teamAddresses[i]); \n            }\n        }\n\n        emit TeamChallenge(msg.sender, flag); \n\n        payCoin.burnFrom(msg.sender, 100e18); \n\n    }\n\n    function winTeamChallenge(uint256 flag) external returns(bool) {\n        //token_exchange fss_exchange = token_exchange(_exchangeAddress); \n        //IT_PayCoin payCoin = IT_PayCoin(fss_exchange.payCoin());    \n        bool _flagFound = false; \n\n        payCoin.burnFrom(msg.sender, 100e18);\n\n        require(msg.sender == _teamChallenger || msg.sender == _teamChallenged[0] || msg.sender == _teamChallenged[1], \"You must be either the challenger or one fo the challenged.\"); \n        if(now >= _startTeamChallenge[flag] + 5 minutes){\n            require(_teamChallengeWon[flag] == false, \"The challenge has already been won.\"); \n            for(uint256 i = 0; i < _teamFlag.length; i++){\n                //require( _flag[i] == flag , \"Couldn't find yuor flag!\");\n                if (_teamFlag[i] == flag ){\n                    _flagFound = true; \n                    break; \n                }\n            }\n            require(_flagFound, \"Couldn't find yuor flag!\"); \n            \n            if(msg.sender == _teamChallenger){\n                payCoin.mint(msg.sender, 1500e18);\n                emit TeamChallengeWon(msg.sender, flag, 1500e18);\n            }\n            else{\n                payCoin.mint(msg.sender, 1000e18);\n                emit TeamChallengeWon(msg.sender, flag, 1000e18);\n            }\n             \n            _directChallengeWon[flag] = true;  \n\n            return true; \n        } \n        else{\n            return false; \n        }\n    }\n\n    //EXCHANGE & PAYCOIN ADDRESS\n    /*\n    function setExchange(address exchangeAddress) onlyAdmin external {\n        fss_exchange = token_exchange(exchangeAddress); \n    }\n    \n    function setPayCoin(address payCoinAddress) onlyAdmin external {\n        payCoin = IT_PayCoin(payCoinAddress); \n    }\n    */\n\n}",
  "sourceMap": "59:8879:13:-;;;137:57;;;-1:-1:-1;;;;;;137:57:13;152:42;137:57;;;1591:162;5:2:-1;;;;30:1;27;20:12;5:2;1591:162:13;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1591:162:13;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;1646:12:13;:46;;-1:-1:-1;;;;;;1646:46:13;-1:-1:-1;;;;;1646:46:13;;;;;;;;;;;1723:22;;;-1:-1:-1;;;;;;1723:22:13;;;;:12;;;;;:20;;:22;;;;;;;;;;;;;;;:12;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;1723:22:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1723:22:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1723:22:13;1702:7;:44;;-1:-1:-1;;;;;;1702:44:13;-1:-1:-1;;;;;1702:44:13;;;;;;;;;-1:-1:-1;59:8879:13;;788:96:0;867:10;788:96;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;59:8879:13:-;;;;;;;",
  "sourcePath": "contracts/token_challenge.sol",
  "type": "contract"
}