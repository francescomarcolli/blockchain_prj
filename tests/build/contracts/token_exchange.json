{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BrokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBroker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceBroker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setOpenTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IT_ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/GSN/Context.sol",
    "1": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/Roles.sol",
    "10": "contracts/BrokerRole.sol",
    "11": "contracts/BurnerRole.sol",
    "12": "contracts/token_erc20.sol",
    "13": "contracts/token_exchange.sol",
    "14": "interfaces/IT_ERC20.sol",
    "2": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/access/roles/MinterRole.sol",
    "3": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/math/SafeMath.sol",
    "4": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Burnable.sol",
    "6": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
    "7": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/ERC20Mintable.sol",
    "8": "/home/simone/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.0/contracts/token/ERC20/IERC20.sol",
    "9": "contracts/AdminRole.sol"
  },
  "ast": {
    "absolutePath": "contracts/token_exchange.sol",
    "exportedSymbols": {
      "token_exchange": [
        460
      ]
    },
    "id": 461,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 125,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "interfaces/IT_ERC20.sol",
        "file": "../interfaces/IT_ERC20.sol",
        "id": 126,
        "nodeType": "ImportDirective",
        "scope": 461,
        "sourceUnit": 723,
        "src": "55:36:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token_erc20.sol",
        "file": "./token_erc20.sol",
        "id": 127,
        "nodeType": "ImportDirective",
        "scope": 461,
        "sourceUnit": 124,
        "src": "92:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BrokerRole.sol",
        "file": "./BrokerRole.sol",
        "id": 128,
        "nodeType": "ImportDirective",
        "scope": 461,
        "sourceUnit": 937,
        "src": "120:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AdminRole.sol",
        "file": "./AdminRole.sol",
        "id": 129,
        "nodeType": "ImportDirective",
        "scope": 461,
        "sourceUnit": 830,
        "src": "147:25:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 130,
              "name": "BrokerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 936,
              "src": "201:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BrokerRole_$936",
                "typeString": "contract BrokerRole"
              }
            },
            "id": 131,
            "nodeType": "InheritanceSpecifier",
            "src": "201:10:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 132,
              "name": "AdminRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 829,
              "src": "213:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdminRole_$829",
                "typeString": "contract AdminRole"
              }
            },
            "id": 133,
            "nodeType": "InheritanceSpecifier",
            "src": "213:9:13"
          }
        ],
        "contractDependencies": [
          123,
          487,
          829,
          936
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 460,
        "linearizedBaseContracts": [
          460,
          829,
          936,
          487
        ],
        "name": "token_exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 136,
            "libraryName": {
              "contractScope": null,
              "id": 134,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1706,
              "src": "235:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1706",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "229:27:13",
            "typeName": {
              "id": 135,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 138,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "262:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IT_ERC20_$722",
              "typeString": "contract IT_ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 137,
              "name": "IT_ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 722,
              "src": "262:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IT_ERC20_$722",
                "typeString": "contract IT_ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 140,
            "name": "tk_price",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "289:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 139,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 142,
            "name": "_openingtime",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "319:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 141,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "319:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 144,
            "name": "_closingtime",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "353:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 147,
            "name": "_frama",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "388:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 145,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "388:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307839364537436638394646303936353938353432373735333146413331354146633237313032453337",
              "id": 146,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "405:42:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x96E7Cf89FF09659854277531FA315AFc27102E37"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 150,
            "name": "_libra",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "454:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 148,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307832466266423165373636453646363234343636394534373934666630323261363533463334654666",
              "id": 149,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "471:42:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x2FbfB1e766E6F6244669E4794ff022a653F34eFf"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 153,
            "name": "_pirot",
            "nodeType": "VariableDeclaration",
            "scope": 460,
            "src": "520:59:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 151,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "520:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837343334393161623135313132383734393161663844653443613235623266626337303765423838",
              "id": 152,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "537:42:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x743491ab1511287491af8De4Ca25b2fbc707eB88"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 161,
            "name": "Buy",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "597:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "620:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "644:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "596:70:13"
            },
            "src": "587:80:13"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 169,
            "name": "Sell",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "indexed": true,
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "683:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "indexed": true,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "706:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "730:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:70:13"
            },
            "src": "672:81:13"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "782:65:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 172,
                          "name": "isOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "800:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "800:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b657420697320636c6f736564",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "810:18:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        },
                        "value": "Market is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18",
                          "typeString": "literal_string \"Market is closed\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1831,
                        1832
                      ],
                      "referencedDeclaration": 1832,
                      "src": "792:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "792:37:13"
                },
                {
                  "id": 177,
                  "nodeType": "PlaceholderStatement",
                  "src": "839:1:13"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "name": "onlyWhileOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:13"
            },
            "src": "759:88:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "874:547:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 182,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "885:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IT_ERC20_$722",
                        "typeString": "contract IT_ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "893:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_token_erc20_$123_$",
                          "typeString": "function () returns (contract token_erc20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 183,
                          "name": "token_erc20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 123,
                          "src": "897:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_token_erc20_$123",
                            "typeString": "contract token_erc20"
                          }
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "893:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_token_erc20_$123",
                        "typeString": "contract token_erc20"
                      }
                    },
                    "src": "885:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IT_ERC20_$722",
                      "typeString": "contract IT_ERC20"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "885:25:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "tk_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "920:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:5:13",
                      "subdenomination": "wei",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "920:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "920:16:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "980:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "995:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "980:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "980:18:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 196,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1009:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "1024:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1030:9:13",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "1024:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1009:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:30:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1055:38:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 203,
                                "name": "_frama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "1065:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 202,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1057:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1057:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 206,
                                "name": "_frama",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "1085:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 205,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "1076:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1076:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1057:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 209,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1056:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 220,
                  "nodeType": "IfStatement",
                  "src": "1051:115:13",
                  "trueBody": {
                    "id": 219,
                    "nodeType": "Block",
                    "src": "1094:72:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 212,
                              "name": "_frama",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "1117:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 211,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "1108:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:16:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "_frama",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "1148:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 215,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "1138:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1138:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "1138:17:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1179:38:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 222,
                                "name": "_libra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 150,
                                "src": "1189:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 221,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1181:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1181:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 225,
                                "name": "_libra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 150,
                                "src": "1209:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 224,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "1200:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1200:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1181:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 228,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1180:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 239,
                  "nodeType": "IfStatement",
                  "src": "1175:115:13",
                  "trueBody": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1218:72:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 231,
                              "name": "_libra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "1241:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 230,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "1232:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1232:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "1232:16:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 235,
                              "name": "_libra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "1272:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 234,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "1262:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1262:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "1262:17:13"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1303:38:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 241,
                                "name": "_pirot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1313:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 240,
                              "name": "isAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1305:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1305:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 244,
                                "name": "_pirot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153,
                                "src": "1333:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 243,
                              "name": "isBroker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "1324:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1324:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1305:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 247,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1304:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 258,
                  "nodeType": "IfStatement",
                  "src": "1299:115:13",
                  "trueBody": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "1342:72:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 250,
                              "name": "_pirot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "1365:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 249,
                            "name": "addAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "1356:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1356:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "1356:16:13"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 254,
                              "name": "_pirot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "1396:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 253,
                            "name": "addBroker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "1386:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1386:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 256,
                        "nodeType": "ExpressionStatement",
                        "src": "1386:17:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 260,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:2:13"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "874:0:13"
            },
            "scope": 460,
            "src": "853:568:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "1498:363:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1679:31:13",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 272,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 475,
                                    "src": "1696:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                      "typeString": "function () view returns (address payable)"
                                    }
                                  },
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1696:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 270,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "1681:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IT_ERC20_$722",
                                    "typeString": "contract IT_ERC20"
                                  }
                                },
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isMinter",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1759,
                                "src": "1681:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1681:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 275,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1680:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e27742062757920796f7572206f776e20746f6b656e732c206d7920667269656e64",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1712:42:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86af393ddb71e2d218dc55775b7f607c20cc462960b9cddf634c2b135d6d0188",
                          "typeString": "literal_string \"You can't buy your own tokens, my friend\""
                        },
                        "value": "You can't buy your own tokens, my friend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86af393ddb71e2d218dc55775b7f607c20cc462960b9cddf634c2b135d6d0188",
                          "typeString": "literal_string \"You can't buy your own tokens, my friend\""
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1831,
                        1832
                      ],
                      "referencedDeclaration": 1832,
                      "src": "1671:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:84:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:84:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 281,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "1771:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1771:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1801:2:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 287,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 138,
                                      "src": "1813:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$722",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 288,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 709,
                                    "src": "1813:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1813:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1805:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1805:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1801:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "1785:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1623,
                          "src": "1785:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1785:46:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 280,
                      "name": "_buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "1766:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:66:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:66:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1850:4:13",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 268,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "1843:11:13"
                }
              ]
            },
            "documentation": null,
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 265,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 264,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "1470:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1470:13:13"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "1440:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:21:13"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "1493:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1492:6:13"
            },
            "scope": 460,
            "src": "1427:434:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "1939:364:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2120:31:13",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 310,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 475,
                                    "src": "2137:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                      "typeString": "function () view returns (address payable)"
                                    }
                                  },
                                  "id": 311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2137:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 308,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "2122:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IT_ERC20_$722",
                                    "typeString": "contract IT_ERC20"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isMinter",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1759,
                                "src": "2122:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2122:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 313,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2121:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e27742062757920796f7572206f776e20746f6b656e732c206d7920667269656e64",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:42:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86af393ddb71e2d218dc55775b7f607c20cc462960b9cddf634c2b135d6d0188",
                          "typeString": "literal_string \"You can't buy your own tokens, my friend\""
                        },
                        "value": "You can't buy your own tokens, my friend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86af393ddb71e2d218dc55775b7f607c20cc462960b9cddf634c2b135d6d0188",
                          "typeString": "literal_string \"You can't buy your own tokens, my friend\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1831,
                        1832
                      ],
                      "referencedDeclaration": 1832,
                      "src": "2112:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:84:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:84:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 319,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "2213:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2213:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2243:2:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 325,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 138,
                                      "src": "2255:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IT_ERC20_$722",
                                        "typeString": "contract IT_ERC20"
                                      }
                                    },
                                    "id": 326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 709,
                                    "src": "2255:14:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2255:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2247:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2247:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2243:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "2227:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1623,
                          "src": "2227:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2227:46:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 318,
                      "name": "_sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "2207:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:67:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2207:67:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2292:4:13",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 306,
                  "id": 334,
                  "nodeType": "Return",
                  "src": "2285:11:13"
                }
              ]
            },
            "documentation": null,
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 303,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 302,
                  "name": "onlyWhileOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "1911:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1911:13:13"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "1881:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1880:21:13"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "1934:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1933:6:13"
            },
            "scope": 460,
            "src": "1867:436:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 356,
              "nodeType": "Block",
              "src": "2367:281:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "2575:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2586:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2564:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$722",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1518,
                      "src": "2564:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:29:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "2613:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2624:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2632:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 350,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2609:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "EmitStatement",
                  "src": "2604:37:13"
                }
              ]
            },
            "documentation": null,
            "id": 357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "2323:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "2342:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2322:35:13"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2367:0:13"
            },
            "scope": 460,
            "src": "2309:339:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "2710:304:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "2924:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1870,
                            "src": "2940:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$460",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$460",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2932:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2932:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "2947:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2905:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IT_ERC20_$722",
                          "typeString": "contract IT_ERC20"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1070,
                      "src": "2905:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:49:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 376,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1870,
                            "src": "2983:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_token_exchange_$460",
                              "typeString": "contract token_exchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_token_exchange_$460",
                              "typeString": "contract token_exchange"
                            }
                          ],
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2975:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2975:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "2990:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "tk_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2998:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "Sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "2970:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "EmitStatement",
                  "src": "2965:42:13"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "2669:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "2685:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:32:13"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2710:0:13"
            },
            "scope": 460,
            "src": "2654:360:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "3078:253:13",
              "statements": [
                {
                  "assignments": [
                    391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 391,
                      "name": "exp",
                      "nodeType": "VariableDeclaration",
                      "scope": 417,
                      "src": "3153:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3153:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "3175:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IT_ERC20_$722",
                              "typeString": "contract IT_ERC20"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 709,
                          "src": "3175:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3175:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3167:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3167:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3153:39:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31303030",
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3318:4:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3311:1:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 408,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 385,
                                "src": "3300:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1623,
                              "src": "3300:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3300:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1639,
                          "src": "3300:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3300:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3287:2:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "exp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "3291:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3287:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 400,
                                "name": "tk_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "3273:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 398,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 385,
                                "src": "3262:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1623,
                              "src": "3262:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3262:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1639,
                          "src": "3262:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3262:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1546,
                      "src": "3262:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:62:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 389,
                  "id": 416,
                  "nodeType": "Return",
                  "src": "3255:69:13"
                }
              ]
            },
            "documentation": null,
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "3036:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3035:16:13"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "3070:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3069:9:13"
            },
            "scope": 460,
            "src": "3020:311:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "3382:66:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "3399:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 424,
                        "name": "_openingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "3406:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3399:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "3422:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "_closingtime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3429:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3422:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3399:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "3392:49:13"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOpen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3352:2:13"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3376:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3375:6:13"
            },
            "scope": 460,
            "src": "3337:111:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 458,
              "nodeType": "Block",
              "src": "3496:224:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3514:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 439,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "3529:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3514:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3543:66:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        },
                        "value": "Something's wrong, maybe you set the initial _openingtime wrong."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852eb0e9826dea5379e03cad0a0892cf32efce2c155865dc98c70dbc6589a0f7",
                          "typeString": "literal_string \"Something's wrong, maybe you set the initial _openingtime wrong.\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1831,
                        1832
                      ],
                      "referencedDeclaration": 1832,
                      "src": "3506:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3506:104:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "3506:104:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "_openingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "3620:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3652:8:13",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          },
                          "value": "15"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_54000_by_1",
                            "typeString": "int_const 54000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "_closingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "3635:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1546,
                        "src": "3635:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3635:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3620:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "3620:41:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 451,
                      "name": "_closingtime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "3672:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "39",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3704:7:13",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_32400_by_1",
                            "typeString": "int_const 32400"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 452,
                          "name": "_openingtime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3687:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1546,
                        "src": "3687:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3687:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3672:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "3672:40:13"
                }
              ]
            },
            "documentation": null,
            "id": 459,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 435,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 434,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 762,
                  "src": "3486:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3486:9:13"
              }
            ],
            "name": "setOpenTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3474:2:13"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3496:0:13"
            },
            "scope": 460,
            "src": "3454:266:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 461,
        "src": "174:3552:13"
      }
    ],
    "src": "0:3727:13"
  },
  "bytecode": "6080604052600680546001600160a01b03199081167396e7cf89ff09659854277531fa315afc27102e3717909155600780548216732fbfb1e766e6f6244669e4794ff022a653f34eff1790556008805490911673743491ab1511287491af8de4ca25b2fbc707eb881790553480156200007757600080fd5b506200009e6200008f6001600160e01b03620002ba16565b6001600160e01b03620002be16565b620000c4620000b56001600160e01b03620002ba16565b6001600160e01b036200031016565b604051620000d29062000589565b604051809103906000f080158015620000ef573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03928316179055600160035542600481905561012c016005556006546200012d911662000362565b801562000155575060065462000155906001600160a01b03166001600160e01b036200038516565b6200019a576006546200017a906001600160a01b03166001600160e01b03620003a216565b6006546200019a906001600160a01b03166001600160e01b036200041c16565b600754620001ba906001600160a01b03166001600160e01b036200036216565b8015620001e25750600754620001e2906001600160a01b03166001600160e01b036200038516565b620002275760075462000207906001600160a01b03166001600160e01b03620003a216565b60075462000227906001600160a01b03166001600160e01b036200041c16565b60085462000247906001600160a01b03166001600160e01b036200036216565b80156200026f57506008546200026f906001600160a01b03166001600160e01b036200038516565b620002b45760085462000294906001600160a01b03166001600160e01b03620003a216565b600854620002b4906001600160a01b03166001600160e01b036200041c16565b62000597565b3390565b620002d98160006200049360201b62000af91790919060201c565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b6200032b8160016200049360201b62000af91790919060201c565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b60006200037f8260016200052060201b620006d21790919060201c565b92915050565b60006200037f8260006200052060201b620006d21790919060201c565b620003c8620003b96001600160e01b03620002ba16565b6001600160e01b036200036216565b620004055760405162461bcd60e51b815260040180806020018281038252602e81526020018062002d61602e913960400191505060405180910390fd5b62000419816001600160e01b036200031016565b50565b62000442620004336001600160e01b03620002ba16565b6001600160e01b036200038516565b6200047f5760405162461bcd60e51b815260040180806020018281038252603081526020018062002d0f6030913960400191505060405180910390fd5b62000419816001600160e01b03620002be16565b620004a882826001600160e01b036200052016565b15620004fb576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620005695760405162461bcd60e51b815260040180806020018281038252602281526020018062002d3f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611a8f806200128083390190565b610cd980620005a76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370480275116100715780637048027514610128578063836cae651461014e5780638bad0c0a14610174578063d96a094a1461017c578063e4849b3214610199578063fc0c546a146101b6576100a9565b806322b31d9f146100ae57806324d7806c146100e8578063431e5c9d1461010e57806347535d7b146101185780634f15e62e14610120575b600080fd5b6100d4600480360360208110156100c457600080fd5b50356001600160a01b03166101da565b604080519115158252519081900360200190f35b6100d4600480360360208110156100fe57600080fd5b50356001600160a01b03166101f2565b610116610205565b005b6100d4610217565b610116610232565b6101166004803603602081101561013e57600080fd5b50356001600160a01b03166102f0565b6101166004803603602081101561016457600080fd5b50356001600160a01b0316610342565b610116610396565b6100d46004803603602081101561019257600080fd5b50356103a6565b6100d4600480360360208110156101af57600080fd5b5035610558565b6101be6106c3565b604080516001600160a01b039092168252519081900360200190f35b60006101ec818363ffffffff6106d216565b92915050565b60006101ec60018363ffffffff6106d216565b610215610210610739565b61073d565b565b6000600454421015801561022d57506005544211155b905090565b61024261023d610739565b6101f2565b61027d5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c77602e913960400191505060405180910390fd5b600554600454106102bf5760405162461bcd60e51b8152600401808060200182810382526040815260200180610bcc6040913960400191505060405180910390fd5b6005546102d49061d2f063ffffffff61078516565b60048190556102eb90617e9063ffffffff61078516565b600555565b6102fb61023d610739565b6103365760405162461bcd60e51b815260040180806020018281038252602e815260200180610c77602e913960400191505060405180910390fd5b61033f816107e6565b50565b61035261034d610739565b6101da565b61038d5760405162461bcd60e51b8152600401808060200182810382526030815260200180610b7b6030913960400191505060405180910390fd5b61033f8161082e565b6102156103a1610739565b610876565b60006103b0610217565b6103f4576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6002546001600160a01b031663aa271e1a61040d610739565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561045357600080fd5b505afa158015610467573d6000803e3d6000fd5b505050506040513d602081101561047d57600080fd5b5051156104bb5760405162461bcd60e51b8152600401808060200182810382526028815260200180610c0c6028913960400191505060405180910390fd5b6105506104c6610739565b6002546040805163313ce56760e01b8152905161054b926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d602081101561053657600080fd5b5051859060ff16600a0a63ffffffff6108be16565b610917565b506001919050565b6000610562610217565b6105a6576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6002546001600160a01b031663aa271e1a6105bf610739565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b50511561066d5760405162461bcd60e51b8152600401808060200182810382526028815260200180610c0c6028913960400191505060405180910390fd5b610550610678610739565b6002546040805163313ce56760e01b815290516106be926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561050c57600080fd5b6109d6565b6002546001600160a01b031681565b60006001600160a01b0382166107195760405162461bcd60e51b8152600401808060200182810382526022815260200180610c556022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b61074e60008263ffffffff610a9216565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b6000828201838110156107df576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6107f760018263ffffffff610af916565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61083f60008263ffffffff610af916565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b61088760018263ffffffff610a9216565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6000826108cd575060006101ec565b828202828482816108da57fe5b04146107df5760405162461bcd60e51b8152600401808060200182810382526021815260200180610c346021913960400191505060405180910390fd5b600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050506040513d602081101561099757600080fd5b505060035460405182906001600160a01b038516907f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed90600090a45050565b600254604080516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b5050600354604051829030907fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a90600090a45050565b610a9c82826106d2565b610ad75760405162461bcd60e51b8152600401808060200182810382526021815260200180610bab6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610b0382826106d2565b15610b55576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e596f752063616e27742062757920796f7572206f776e20746f6b656e732c206d7920667269656e64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a7231582013a295a103bede1297220355106faa05850cd4553a431e170f4a1cecefadc1f864736f6c634300051100326080604052600880546001600160a01b03199081167396e7cf89ff09659854277531fa315afc27102e3717909155600980548216732fbfb1e766e6f6244669e4794ff022a653f34eff179055600a805490911673743491ab1511287491af8de4ca25b2fbc707eb881790553480156200007757600080fd5b50604051806040016040528060078152602001662329a9a1b7b4b760c91b8152506040518060400160405280600381526020016246535360e81b8152506012620000d9620000ca620002e660201b60201c565b6001600160e01b03620002eb16565b8251620000ee906004906020860190620005b6565b50815162000104906005906020850190620005b6565b506006805460ff191660ff92909216919091179055506200013990506200012a620002e6565b6001600160e01b036200033d16565b60085462000159906001600160a01b03166001600160e01b036200038f16565b801562000181575060085462000181906001600160a01b03166001600160e01b03620003b216565b620001c657600854620001a6906001600160a01b03166001600160e01b03620003cf16565b600854620001c6906001600160a01b03166001600160e01b036200044916565b600954620001e6906001600160a01b03166001600160e01b036200038f16565b80156200020e57506009546200020e906001600160a01b03166001600160e01b03620003b216565b620002535760095462000233906001600160a01b03166001600160e01b03620003cf16565b60095462000253906001600160a01b03166001600160e01b036200044916565b600a5462000273906001600160a01b03166001600160e01b036200038f16565b80156200029b5750600a546200029b906001600160a01b03166001600160e01b03620003b216565b620002e057600a54620002c0906001600160a01b03166001600160e01b03620003cf16565b600a54620002e0906001600160a01b03166001600160e01b036200044916565b62000658565b335b90565b62000306816003620004c060201b6200103b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b62000358816007620004c060201b6200103b1790919060201c565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6000620003ac8260036200054d60201b62000d5a1790919060201c565b92915050565b6000620003ac8260076200054d60201b62000d5a1790919060201c565b620003f5620003e66001600160e01b03620002e616565b6001600160e01b036200038f16565b620004325760405162461bcd60e51b815260040180806020018281038252603081526020018062001a3d6030913960400191505060405180910390fd5b62000446816001600160e01b03620002eb16565b50565b6200046f620004606001600160e01b03620002e616565b6001600160e01b03620003b216565b620004ac5760405162461bcd60e51b815260040180806020018281038252603081526020018062001a0d6030913960400191505060405180910390fd5b62000446816001600160e01b036200033d16565b620004d582826001600160e01b036200054d16565b1562000528576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620005965760405162461bcd60e51b815260040180806020018281038252602281526020018062001a6d6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005f957805160ff191683800117855562000629565b8280016001018555821562000629579182015b82811115620006295782518255916020019190600101906200060c565b50620006379291506200063b565b5090565b620002e891905b8082111562000637576000815560010162000642565b6113a580620006686000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a9059cbb11610071578063a9059cbb146103ad578063aa271e1a146103d9578063dd62ed3e146103ff578063e9ec9e8b1461042d578063f44637ba146104355761012c565b806379cc67901461031f57806395d89b411461034b578063983b2d56146103535780639865027514610379578063a457c2d7146103815761012c565b806339509351116100f4578063395093511461025c57806340c10f191461028857806342966c68146102b45780634334614a146102d357806370a08231146102f95761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b61013961045b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104f1565b604080519115158252519081900360200190f35b6101f661050e565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b03813581169160208101359091169060400135610514565b6102466105a1565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105aa565b6101da6004803603604081101561029e57600080fd5b506001600160a01b0381351690602001356105fe565b6102d1600480360360208110156102ca57600080fd5b5035610655565b005b6101da600480360360208110156102e957600080fd5b50356001600160a01b03166106ac565b6101f66004803603602081101561030f57600080fd5b50356001600160a01b03166106c5565b6102d16004803603604081101561033557600080fd5b506001600160a01b0381351690602001356106e0565b610139610734565b6102d16004803603602081101561036957600080fd5b50356001600160a01b0316610795565b6102d16107e4565b6101da6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356107f6565b6101da600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610864565b6101da600480360360208110156103ef57600080fd5b50356001600160a01b0316610878565b6101f66004803603604081101561041557600080fd5b506001600160a01b038135811691602001351661088b565b6102d16108b6565b6102d16004803603602081101561044b57600080fd5b50356001600160a01b03166108c6565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006105056104fe610915565b8484610919565b50600192915050565b60025490565b6000610521848484610a05565b6105978461052d610915565b61059285604051806060016040528060288152602001611274602891396001600160a01b038a1660009081526001602052604081209061056b610915565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b6116565b610919565b5060019392505050565b60065460ff1690565b60006105056105b7610915565b8461059285600160006105c8610915565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bf816565b600061061061060b610915565b610878565b61064b5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6105058383610c59565b610665610660610915565b6106ac565b6106a05760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610d49565b50565b60006106bf60078363ffffffff610d5a16565b92915050565b6001600160a01b031660009081526020819052604090205490565b6106eb610660610915565b6107265760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6107308282610dc1565b5050565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e75780601f106104bc576101008083540402835291602001916104e7565b6107a061060b610915565b6107db5760405162461bcd60e51b81526004018080602001828103825260308152602001806112236030913960400191505060405180910390fd5b6106a981610dcb565b6107f46107ef610915565b610e13565b565b6000610505610803610915565b846105928560405180606001604052806025815260200161134c602591396001600061082d610915565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b6116565b6000610505610871610915565b8484610a05565b60006106bf60038363ffffffff610d5a16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107f46108c1610915565b610e5b565b6108d1610660610915565b61090c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111f36030913960400191505060405180910390fd5b6106a981610ea3565b3390565b6001600160a01b03831661095e5760405162461bcd60e51b81526004018080602001828103825260248152602001806113286024913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260228152602001806111ab6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a4a5760405162461bcd60e51b81526004018080602001828103825260258152602001806113036025913960400191505060405180910390fd5b6001600160a01b038216610a8f5760405162461bcd60e51b81526004018080602001828103825260238152602001806111666023913960400191505060405180910390fd5b610ad2816040518060600160405280602681526020016111cd602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b07908263ffffffff610bf816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bf05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb5578181015183820152602001610b9d565b50505050905090810190601f168015610be25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c52576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610cc7908263ffffffff610bf816565b6002556001600160a01b038216600090815260208190526040902054610cf3908263ffffffff610bf816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6106a9610d54610915565b82610eeb565b60006001600160a01b038216610da15760405162461bcd60e51b815260040180806020018281038252602281526020018061129c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6107308282610fe7565b610ddc60038263ffffffff61103b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e2460038263ffffffff6110bc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610e6c60078263ffffffff6110bc16565b6040516001600160a01b038216907f90eabbc0c667db2a5029ed6bc0f5fe9f356d11684a4ca9fcfaec0e53f12b9c8e90600090a250565b610eb460078263ffffffff61103b16565b6040516001600160a01b038216907f86e57fd2b90329052917118de7c3f521f400d439b9650deaa906a25b08b9456090600090a250565b6001600160a01b038216610f305760405162461bcd60e51b81526004018080602001828103825260218152602001806112e26021913960400191505060405180910390fd5b610f7381604051806060016040528060228152602001611189602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b6116565b6001600160a01b038316600090815260208190526040902055600254610f9f908263ffffffff61112316565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610ff18282610eeb565b61073082610ffd610915565b610592846040518060600160405280602481526020016112be602491396001600160a01b03881660009081526001602052604081209061056b610915565b6110458282610d5a565b15611097576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6110c68282610d5a565b6111015760405162461bcd60e51b81526004018080602001828103825260218152602001806112536021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610c5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6156fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208ba7d46c491cdd608d1a94d557fffcc6b0ab6419e9eb37c338417e0b175c324f64736f6c634300051100324275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204275726e657220726f6c654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737342726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "token_exchange",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Roles.add": {
          "45": [
            336,
            355,
            true
          ]
        },
        "Roles.has": {
          "43": [
            875,
            896,
            true
          ]
        },
        "Roles.remove": {
          "44": [
            589,
            607,
            true
          ]
        }
      },
      "10": {
        "BrokerRole.addBroker": {
          "42": [
            497,
            519,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {
        "token_exchange.buy": {
          "39": [
            1679,
            1710,
            true
          ]
        },
        "token_exchange.sell": {
          "40": [
            800,
            808,
            true
          ],
          "41": [
            2120,
            2151,
            true
          ]
        },
        "token_exchange.setOpenTime": {
          "38": [
            3514,
            3541,
            true
          ]
        }
      },
      "14": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "46": [
            946,
            952,
            true
          ]
        },
        "SafeMath.mul": {
          "47": [
            2458,
            2464,
            false
          ],
          "48": [
            2544,
            2554,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "17": [
            860,
            877
          ]
        }
      },
      "1": {
        "Roles.add": {
          "36": [
            328,
            391
          ],
          "37": [
            401,
            428
          ]
        },
        "Roles.has": {
          "15": [
            867,
            935
          ],
          "16": [
            945,
            972
          ]
        },
        "Roles.remove": {
          "34": [
            581,
            645
          ],
          "35": [
            655,
            683
          ]
        }
      },
      "10": {
        "BrokerRole._addBroker": {
          "24": [
            944,
            965
          ],
          "25": [
            975,
            1000
          ]
        },
        "BrokerRole._removeBroker": {
          "18": [
            1072,
            1096
          ],
          "19": [
            1106,
            1133
          ]
        },
        "BrokerRole.addBroker": {
          "8": [
            773,
            792
          ]
        },
        "BrokerRole.isBroker": {
          "0": [
            668,
            696
          ]
        },
        "BrokerRole.renounceBroker": {
          "2": [
            848,
            875
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {
        "token_exchange._buy": {
          "30": [
            2564,
            2593
          ],
          "31": [
            2604,
            2641
          ]
        },
        "token_exchange._sell": {
          "32": [
            2905,
            2954
          ],
          "33": [
            2965,
            3007
          ]
        },
        "token_exchange.buy": {
          "10": [
            1671,
            1755
          ],
          "11": [
            1766,
            1832
          ],
          "12": [
            1843,
            1854
          ]
        },
        "token_exchange.isOpen": {
          "3": [
            3392,
            3441
          ]
        },
        "token_exchange.sell": {
          "13": [
            2112,
            2196
          ],
          "14": [
            2207,
            2274
          ]
        },
        "token_exchange.setOpenTime": {
          "4": [
            3506,
            3610
          ],
          "5": [
            3620,
            3661
          ],
          "6": [
            3672,
            3712
          ]
        }
      },
      "14": {},
      "2": {},
      "3": {
        "SafeMath.add": {
          "20": [
            938,
            984
          ],
          "21": [
            995,
            1003
          ]
        },
        "SafeMath.mul": {
          "28": [
            2480,
            2488
          ],
          "29": [
            2536,
            2592
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "AdminRole._addAdmin": {
          "22": [
            927,
            947
          ],
          "23": [
            957,
            981
          ]
        },
        "AdminRole._removeAdmin": {
          "26": [
            1052,
            1075
          ],
          "27": [
            1085,
            1111
          ]
        },
        "AdminRole.addAdmin": {
          "7": [
            760,
            778
          ]
        },
        "AdminRole.isAdmin": {
          "1": [
            658,
            685
          ]
        },
        "AdminRole.renounceAdmin": {
          "9": [
            833,
            859
          ]
        }
      }
    }
  },
  "dependencies": [
    "AdminRole",
    "BrokerRole",
    "BurnerRole",
    "Context",
    "ERC20",
    "ERC20Burnable",
    "ERC20Detailed",
    "ERC20Mintable",
    "IERC20",
    "IT_ERC20",
    "MinterRole",
    "Roles",
    "SafeMath",
    "token_erc20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806370480275116100715780637048027514610128578063836cae651461014e5780638bad0c0a14610174578063d96a094a1461017c578063e4849b3214610199578063fc0c546a146101b6576100a9565b806322b31d9f146100ae57806324d7806c146100e8578063431e5c9d1461010e57806347535d7b146101185780634f15e62e14610120575b600080fd5b6100d4600480360360208110156100c457600080fd5b50356001600160a01b03166101da565b604080519115158252519081900360200190f35b6100d4600480360360208110156100fe57600080fd5b50356001600160a01b03166101f2565b610116610205565b005b6100d4610217565b610116610232565b6101166004803603602081101561013e57600080fd5b50356001600160a01b03166102f0565b6101166004803603602081101561016457600080fd5b50356001600160a01b0316610342565b610116610396565b6100d46004803603602081101561019257600080fd5b50356103a6565b6100d4600480360360208110156101af57600080fd5b5035610558565b6101be6106c3565b604080516001600160a01b039092168252519081900360200190f35b60006101ec818363ffffffff6106d216565b92915050565b60006101ec60018363ffffffff6106d216565b610215610210610739565b61073d565b565b6000600454421015801561022d57506005544211155b905090565b61024261023d610739565b6101f2565b61027d5760405162461bcd60e51b815260040180806020018281038252602e815260200180610c77602e913960400191505060405180910390fd5b600554600454106102bf5760405162461bcd60e51b8152600401808060200182810382526040815260200180610bcc6040913960400191505060405180910390fd5b6005546102d49061d2f063ffffffff61078516565b60048190556102eb90617e9063ffffffff61078516565b600555565b6102fb61023d610739565b6103365760405162461bcd60e51b815260040180806020018281038252602e815260200180610c77602e913960400191505060405180910390fd5b61033f816107e6565b50565b61035261034d610739565b6101da565b61038d5760405162461bcd60e51b8152600401808060200182810382526030815260200180610b7b6030913960400191505060405180910390fd5b61033f8161082e565b6102156103a1610739565b610876565b60006103b0610217565b6103f4576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6002546001600160a01b031663aa271e1a61040d610739565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561045357600080fd5b505afa158015610467573d6000803e3d6000fd5b505050506040513d602081101561047d57600080fd5b5051156104bb5760405162461bcd60e51b8152600401808060200182810382526028815260200180610c0c6028913960400191505060405180910390fd5b6105506104c6610739565b6002546040805163313ce56760e01b8152905161054b926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d602081101561053657600080fd5b5051859060ff16600a0a63ffffffff6108be16565b610917565b506001919050565b6000610562610217565b6105a6576040805162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b604482015290519081900360640190fd5b6002546001600160a01b031663aa271e1a6105bf610739565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b50511561066d5760405162461bcd60e51b8152600401808060200182810382526028815260200180610c0c6028913960400191505060405180910390fd5b610550610678610739565b6002546040805163313ce56760e01b815290516106be926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561050c57600080fd5b6109d6565b6002546001600160a01b031681565b60006001600160a01b0382166107195760405162461bcd60e51b8152600401808060200182810382526022815260200180610c556022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b61074e60008263ffffffff610a9216565b6040516001600160a01b038216907fe5c6f32fb04b7de81910252a1e1d29267cd9e5fc428afad67442d00c7b127bd090600090a250565b6000828201838110156107df576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6107f760018263ffffffff610af916565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b61083f60008263ffffffff610af916565b6040516001600160a01b038216907f40c56d2c4c08eead919e7228cf5b749297271698ec38e954d322ef4bcf1d58fb90600090a250565b61088760018263ffffffff610a9216565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6000826108cd575060006101ec565b828202828482816108da57fe5b04146107df5760405162461bcd60e51b8152600401808060200182810382526021815260200180610c346021913960400191505060405180910390fd5b600254604080516340c10f1960e01b81526001600160a01b03858116600483015260248201859052915191909216916340c10f199160448083019260209291908290030181600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050506040513d602081101561099757600080fd5b505060035460405182906001600160a01b038516907f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed90600090a45050565b600254604080516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d6020811015610a5c57600080fd5b5050600354604051829030907fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a90600090a45050565b610a9c82826106d2565b610ad75760405162461bcd60e51b8152600401808060200182810382526021815260200180610bab6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610b0382826106d2565b15610b55576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe42726f6b6572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652042726f6b657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536f6d657468696e6727732077726f6e672c206d6179626520796f75207365742074686520696e697469616c205f6f70656e696e6774696d652077726f6e672e596f752063616e27742062757920796f7572206f776e20746f6b656e732c206d7920667269656e64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737341646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65a265627a7a7231582013a295a103bede1297220355106faa05850cd4553a431e170f4a1cecefadc1f864736f6c63430005110032",
  "deployedSourceMap": "174:3552:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:3552:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;596:107:10;-1:-1:-1;;;;;596:107:10;;:::i;:::-;;;;;;;;;;;;;;;;;;587:105:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;587:105:9;-1:-1:-1;;;;;587:105:9;;:::i;805:77:10:-;;;:::i;:::-;;3337:111:13;;;:::i;3454:266::-;;;:::i;698:87:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;698:87:9;-1:-1:-1;;;;;698:87:9;;:::i;709:90:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;709:90:10;-1:-1:-1;;;;;709:90:10;;:::i;791:75:9:-;;;:::i;1427:434:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1427:434:13;;:::i;1867:436::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1867:436:13;;:::i;262:21::-;;;:::i;:::-;;;;-1:-1:-1;;;;;262:21:13;;;;;;;;;;;;;;596:107:10;652:4;675:21;652:4;688:7;675:21;:12;:21;:::i;:::-;668:28;596:107;-1:-1:-1;;596:107:10:o;587:105:9:-;642:4;665:20;:7;677;665:20;:11;:20;:::i;805:77:10:-;848:27;862:12;:10;:12::i;:::-;848:13;:27::i;:::-;805:77::o;3337:111:13:-;3376:4;3406:12;;3399:3;:19;;:42;;;;;3429:12;;3422:3;:19;;3399:42;3392:49;;3337:111;:::o;3454:266::-;491:21:9;499:12;:10;:12::i;:::-;491:7;:21::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:12:13;;3514;;:27;3506:104;;;;-1:-1:-1;;;3506:104:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3635:12;;:26;;3652:8;3635:26;:16;:26;:::i;:::-;3620:12;:41;;;3687:25;;3704:7;3687:25;:16;:25;:::i;:::-;3672:12;:40;3454:266::o;698:87:9:-;491:21;499:12;:10;:12::i;491:21::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;760:9;:18::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;:10;:12::i;:::-;497:8;:22::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;773:10;:19::i;791:75:9:-;833:26;846:12;:10;:12::i;:::-;833;:26::i;1427:434:13:-;1493:4;800:8;:6;:8::i;:::-;792:37;;;;;-1:-1:-1;;;792:37:13;;;;;;;;;;;;-1:-1:-1;;;792:37:13;;;;;;;;;;;;;;;1681:5;;-1:-1:-1;;;;;1681:5:13;:14;1696:12;:10;:12::i;:::-;1681:28;;;;;;;;;;;;;-1:-1:-1;;;;;1681:28:13;-1:-1:-1;;;;;1681:28:13;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1681:28:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1681:28:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1681:28:13;1679:31;1671:84;;;;-1:-1:-1;;;1671:84:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:66;1771:12;:10;:12::i;:::-;1813:5;;:16;;;-1:-1:-1;;;1813:16:13;;;;1785:46;;-1:-1:-1;;;;;1813:5:13;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;1813:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1813:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1813:16:13;1785:11;;1805:25;;1801:2;:29;1785:46;:15;:46;:::i;:::-;1766:4;:66::i;:::-;-1:-1:-1;1850:4:13;1427:434;;;:::o;1867:436::-;1934:4;800:8;:6;:8::i;:::-;792:37;;;;;-1:-1:-1;;;792:37:13;;;;;;;;;;;;-1:-1:-1;;;792:37:13;;;;;;;;;;;;;;;2122:5;;-1:-1:-1;;;;;2122:5:13;:14;2137:12;:10;:12::i;:::-;2122:28;;;;;;;;;;;;;-1:-1:-1;;;;;2122:28:13;-1:-1:-1;;;;;2122:28:13;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2122:28:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2122:28:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2122:28:13;2120:31;2112:84;;;;-1:-1:-1;;;2112:84:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:67;2213:12;:10;:12::i;:::-;2255:5;;:16;;;-1:-1:-1;;;2255:16:13;;;;2227:46;;-1:-1:-1;;;;;2255:5:13;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;2227:46:13;2207:5;:67::i;262:21::-;;;-1:-1:-1;;;;;262:21:13;;:::o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:0:-;867:10;788:96;:::o;1013:127:10:-;1072:24;:8;1088:7;1072:24;:15;:24;:::i;:::-;1111:22;;-1:-1:-1;;;;;1111:22:10;;;;;;;;1013:127;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:3:o;872:116:9:-;927:20;:7;939;927:20;:11;:20;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;888:119:10:-;944:21;:8;957:7;944:21;:12;:21;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;994:124:9:-;1052:23;:7;1067;1052:23;:14;:23;:::i;:::-;1090:21;;-1:-1:-1;;;;;1090:21:9;;;;;;;;994:124;:::o;2159:459:3:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2309:339:13;2564:5;;:29;;;-1:-1:-1;;;2564:29:13;;-1:-1:-1;;;;;2564:29:13;;;;;;;;;;;;;;;:5;;;;;:10;;:29;;;;;;;;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;2564:29:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2564:29:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2632:8:13;;2609:32;;2624:6;;-1:-1:-1;;;;;2609:32:13;;;;;;;;2309:339;;:::o;2654:360::-;2905:5;;:49;;;-1:-1:-1;;;2905:49:13;;-1:-1:-1;;;;;2905:49:13;;;;;;;2940:4;2905:49;;;;;;;;;;;;:5;;;;;:18;;:49;;;;;;;;;;;;;;:5;;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;2905:49:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2905:49:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2998:8:13;;2970:37;;2990:6;;2983:4;;2970:37;;;;;2654:360;;:::o;510:180:1:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    174,
    3726
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70480275 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x836CAE65 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1B6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x22B31D9F EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x431E5C9D EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x4F15E62E EQ PUSH2 0x120 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD4 PUSH2 0x217 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x232 JUMP JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x342 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x396 JUMP JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1EC DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6D2 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6D2 AND JUMP JUMPDEST PUSH2 0x215 PUSH2 0x210 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI POP PUSH1 0x5 SLOAD TIMESTAMP GT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D PUSH2 0x739 JUMP JUMPDEST PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC77 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD LT PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBCC PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2D4 SWAP1 PUSH2 0xD2F0 PUSH4 0xFFFFFFFF PUSH2 0x785 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH2 0x2EB SWAP1 PUSH2 0x7E90 PUSH4 0xFFFFFFFF PUSH2 0x785 AND JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x23D PUSH2 0x739 JUMP JUMPDEST PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC77 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33F DUP2 PUSH2 0x7E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34D PUSH2 0x739 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB7B PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33F DUP2 PUSH2 0x82E JUMP JUMPDEST PUSH2 0x215 PUSH2 0x3A1 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0 PUSH2 0x217 JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAA271E1A PUSH2 0x40D PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x467 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC0C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x550 PUSH2 0x4C6 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x54B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x8BE AND JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x562 PUSH2 0x217 JUMP JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAA271E1A PUSH2 0x5BF PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x619 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC0C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x550 PUSH2 0x678 PUSH2 0x739 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x6BE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC55 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x74E PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA92 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F7 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAF9 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x83F PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xAF9 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x887 PUSH1 0x1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA92 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8CD JUMPI POP PUSH1 0x0 PUSH2 0x1EC JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x8DA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC34 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 ADDRESS SWAP1 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xA9C DUP3 DUP3 PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBAB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB03 DUP3 DUP3 PUSH2 0x6D2 JUMP JUMPDEST ISZERO PUSH2 0xB55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP PUSH19 0x6F6B6572526F6C653A2063616C6C657220646F PUSH6 0x73206E6F7420 PUSH9 0x617665207468652042 PUSH19 0x6F6B657220726F6C65526F6C65733A20616363 PUSH16 0x756E7420646F6573206E6F7420686176 PUSH6 0x20726F6C6553 PUSH16 0x6D657468696E6727732077726F6E672C KECCAK256 PUSH14 0x6179626520796F75207365742074 PUSH9 0x6520696E697469616C KECCAK256 0x5F PUSH16 0x70656E696E6774696D652077726F6E67 0x2E MSIZE PUSH16 0x752063616E27742062757920796F7572 KECCAK256 PUSH16 0x776E20746F6B656E732C206D79206672 PUSH10 0x656E64536166654D6174 PUSH9 0x3A206D756C7469706C PUSH10 0x636174696F6E206F7665 PUSH19 0x666C6F77526F6C65733A206163636F756E7420 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737341646D696E526F6C653A2063616C6C65 PUSH19 0x20646F6573206E6F7420686176652074686520 COINBASE PUSH5 0x6D696E2072 PUSH16 0x6C65A265627A7A7231582013A295A103 0xBE 0xDE SLT SWAP8 0x22 SUB SSTORE LT PUSH16 0xAA05850CD4553A431E170F4A1CECEFAD 0xC1 0xF8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        174,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        174,
        3726
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70480275"
    },
    "38": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70480275"
    },
    "49": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x128"
    },
    "53": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x836CAE65"
    },
    "60": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E"
    },
    "64": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8BAD0C0A"
    },
    "71": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x174"
    },
    "75": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD96A094A"
    },
    "82": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x17C"
    },
    "86": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE4849B32"
    },
    "93": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x199"
    },
    "97": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFC0C546A"
    },
    "104": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "105": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B6"
    },
    "108": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "109": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMP",
      "path": "13"
    },
    "113": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "114": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "115": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x22B31D9F"
    },
    "120": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "121": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x24D7806C"
    },
    "131": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE8"
    },
    "135": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x431E5C9D"
    },
    "142": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E"
    },
    "146": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x47535D7B"
    },
    "153": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "154": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x118"
    },
    "157": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "158": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4F15E62E"
    },
    "164": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "EQ",
      "path": "13"
    },
    "165": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x120"
    },
    "168": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "169": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "170": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        174,
        3726
      ],
      "op": "REVERT",
      "path": "13"
    },
    "174": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "175": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD4"
    },
    "178": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "180": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "181": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "182": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "185": {
      "op": "DUP2"
    },
    "186": {
      "op": "LT"
    },
    "187": {
      "op": "ISZERO"
    },
    "188": {
      "op": "PUSH2",
      "value": "0xC4"
    },
    "191": {
      "op": "JUMPI"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "194": {
      "op": "DUP1"
    },
    "195": {
      "op": "REVERT"
    },
    "196": {
      "op": "JUMPDEST"
    },
    "197": {
      "op": "POP"
    },
    "198": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "SUB"
    },
    "207": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "AND",
      "path": "10"
    },
    "208": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DA"
    },
    "211": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "212": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "213": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "215": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP1",
      "path": "10"
    },
    "216": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "217": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "218": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "219": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "220": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP3",
      "path": "10"
    },
    "221": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "222": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "223": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "224": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "DUP2",
      "path": "10"
    },
    "225": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "226": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SUB",
      "path": "10"
    },
    "227": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "229": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "ADD",
      "path": "10"
    },
    "230": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "231": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "RETURN",
      "path": "10"
    },
    "232": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "233": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD4"
    },
    "236": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "238": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "DUP1",
      "path": "9"
    },
    "239": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "240": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "SUB",
      "path": "9"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "243": {
      "op": "DUP2"
    },
    "244": {
      "op": "LT"
    },
    "245": {
      "op": "ISZERO"
    },
    "246": {
      "op": "PUSH2",
      "value": "0xFE"
    },
    "249": {
      "op": "JUMPI"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "252": {
      "op": "DUP1"
    },
    "253": {
      "op": "REVERT"
    },
    "254": {
      "op": "JUMPDEST"
    },
    "255": {
      "op": "POP"
    },
    "256": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "op": "SUB"
    },
    "265": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "AND",
      "path": "9"
    },
    "266": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F2"
    },
    "269": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        587,
        692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "270": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "271": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x116"
    },
    "274": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x205"
    },
    "277": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "278": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "279": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "STOP",
      "path": "10"
    },
    "280": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3337,
        3448
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "281": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3337,
        3448
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD4"
    },
    "284": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3337,
        3448
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x217"
    },
    "287": {
      "fn": "token_exchange.isOpen",
      "jump": "i",
      "offset": [
        3337,
        3448
      ],
      "op": "JUMP",
      "path": "13"
    },
    "288": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3454,
        3720
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "289": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3454,
        3720
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x116"
    },
    "292": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3454,
        3720
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x232"
    },
    "295": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3454,
        3720
      ],
      "op": "JUMP",
      "path": "13"
    },
    "296": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "297": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x116"
    },
    "300": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "302": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "303": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "304": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "SUB",
      "path": "9"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "LT"
    },
    "309": {
      "op": "ISZERO"
    },
    "310": {
      "op": "PUSH2",
      "value": "0x13E"
    },
    "313": {
      "op": "JUMPI"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "316": {
      "op": "DUP1"
    },
    "317": {
      "op": "REVERT"
    },
    "318": {
      "op": "JUMPDEST"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "op": "SUB"
    },
    "329": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "AND",
      "path": "9"
    },
    "330": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F0"
    },
    "333": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "334": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "335": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x116"
    },
    "338": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "340": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "DUP1",
      "path": "10"
    },
    "341": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "342": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "SUB",
      "path": "10"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "345": {
      "op": "DUP2"
    },
    "346": {
      "op": "LT"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "PUSH2",
      "value": "0x164"
    },
    "351": {
      "op": "JUMPI"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "354": {
      "op": "DUP1"
    },
    "355": {
      "op": "REVERT"
    },
    "356": {
      "op": "JUMPDEST"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "op": "SUB"
    },
    "367": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "AND",
      "path": "10"
    },
    "368": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x342"
    },
    "371": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        709,
        799
      ],
      "op": "JUMP",
      "path": "10"
    },
    "372": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "373": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x116"
    },
    "376": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x396"
    },
    "379": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        791,
        866
      ],
      "op": "JUMP",
      "path": "9"
    },
    "380": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "381": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD4"
    },
    "384": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "386": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "DUP1",
      "path": "13"
    },
    "387": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "388": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "SUB",
      "path": "13"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "391": {
      "op": "DUP2"
    },
    "392": {
      "op": "LT"
    },
    "393": {
      "op": "ISZERO"
    },
    "394": {
      "op": "PUSH2",
      "value": "0x192"
    },
    "397": {
      "op": "JUMPI"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "400": {
      "op": "DUP1"
    },
    "401": {
      "op": "REVERT"
    },
    "402": {
      "op": "JUMPDEST"
    },
    "403": {
      "op": "POP"
    },
    "404": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "405": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A6"
    },
    "408": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1427,
        1861
      ],
      "op": "JUMP",
      "path": "13"
    },
    "409": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "410": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD4"
    },
    "413": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "415": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "DUP1",
      "path": "13"
    },
    "416": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "417": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "SUB",
      "path": "13"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "420": {
      "op": "DUP2"
    },
    "421": {
      "op": "LT"
    },
    "422": {
      "op": "ISZERO"
    },
    "423": {
      "op": "PUSH2",
      "value": "0x1AF"
    },
    "426": {
      "op": "JUMPI"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "429": {
      "op": "DUP1"
    },
    "430": {
      "op": "REVERT"
    },
    "431": {
      "op": "JUMPDEST"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "434": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x558"
    },
    "437": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        1867,
        2303
      ],
      "op": "JUMP",
      "path": "13"
    },
    "438": {
      "offset": [
        262,
        283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "439": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1BE"
    },
    "442": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6C3"
    },
    "445": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        262,
        283
      ],
      "op": "JUMP",
      "path": "13"
    },
    "446": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "447": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "449": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "DUP1",
      "path": "13"
    },
    "450": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "457": {
      "op": "SHL"
    },
    "458": {
      "op": "SUB"
    },
    "459": {
      "offset": [
        262,
        283
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "460": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "461": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "AND",
      "path": "13"
    },
    "462": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "DUP3",
      "path": "13"
    },
    "463": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "464": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "465": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "466": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "DUP2",
      "path": "13"
    },
    "467": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "468": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "SUB",
      "path": "13"
    },
    "469": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "471": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "ADD",
      "path": "13"
    },
    "472": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "473": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "RETURN",
      "path": "13"
    },
    "474": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "475": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "477": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 0,
      "value": "0x1EC"
    },
    "480": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        652,
        656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "481": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        688,
        695
      ],
      "op": "DUP4",
      "path": "10"
    },
    "482": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "487": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        687
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6D2"
    },
    "490": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "AND",
      "path": "10"
    },
    "491": {
      "fn": "BrokerRole.isBroker",
      "jump": "i",
      "offset": [
        675,
        696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "492": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        675,
        696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "493": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        668,
        696
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "494": {
      "fn": "BrokerRole.isBroker",
      "offset": [
        596,
        703
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "fn": "BrokerRole.isBroker",
      "jump": "o",
      "offset": [
        596,
        703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "498": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        587,
        692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "499": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        642,
        646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "501": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 1,
      "value": "0x1EC"
    },
    "504": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        672
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "506": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        677,
        684
      ],
      "op": "DUP4",
      "path": "9"
    },
    "507": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "512": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        676
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6D2"
    },
    "515": {
      "fn": "AdminRole.isAdmin",
      "offset": [
        665,
        685
      ],
      "op": "AND",
      "path": "9"
    },
    "516": {
      "fn": "AdminRole.isAdmin",
      "jump": "i",
      "offset": [
        665,
        685
      ],
      "op": "JUMP",
      "path": "9"
    },
    "517": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        805,
        882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "518": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 2,
      "value": "0x215"
    },
    "521": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x210"
    },
    "524": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x739"
    },
    "527": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        862,
        874
      ],
      "op": "JUMP",
      "path": "10"
    },
    "528": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        862,
        874
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "529": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73D"
    },
    "532": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "i",
      "offset": [
        848,
        875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "533": {
      "fn": "BrokerRole.renounceBroker",
      "offset": [
        848,
        875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "534": {
      "fn": "BrokerRole.renounceBroker",
      "jump": "o",
      "offset": [
        805,
        882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "535": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3337,
        3448
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "536": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3376,
        3380
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "538": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3406,
        3418
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 3,
      "value": "0x4"
    },
    "540": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3406,
        3418
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "541": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3402
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "542": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3418
      ],
      "op": "LT",
      "path": "13"
    },
    "543": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3418
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "544": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3441
      ],
      "op": "DUP1",
      "path": "13"
    },
    "545": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3441
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "546": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3441
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22D"
    },
    "549": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3441
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "550": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3441
      ],
      "op": "POP",
      "path": "13"
    },
    "551": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3429,
        3441
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "553": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3429,
        3441
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "554": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3422,
        3425
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "555": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3422,
        3441
      ],
      "op": "GT",
      "path": "13"
    },
    "556": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3422,
        3441
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "557": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3399,
        3441
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "558": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3392,
        3441
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "559": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3392,
        3441
      ],
      "op": "POP",
      "path": "13"
    },
    "560": {
      "fn": "token_exchange.isOpen",
      "offset": [
        3337,
        3448
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "561": {
      "fn": "token_exchange.isOpen",
      "jump": "o",
      "offset": [
        3337,
        3448
      ],
      "op": "JUMP",
      "path": "13"
    },
    "562": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3454,
        3720
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "563": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x242"
    },
    "566": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x23D"
    },
    "569": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x739"
    },
    "572": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "573": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        499,
        511
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "574": {
      "offset": [
        491,
        498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F2"
    },
    "577": {
      "jump": "i",
      "offset": [
        491,
        512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "578": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "579": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x27D"
    },
    "582": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "583": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "585": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "592": {
      "op": "SHL"
    },
    "593": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "594": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "595": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "597": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "598": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "599": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "600": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "602": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "603": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "604": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "605": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "606": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "607": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "608": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "610": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "611": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "612": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "614": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "615": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "616": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC77"
    },
    "619": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "621": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "622": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "623": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "625": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "626": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "627": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "628": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "629": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "631": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "632": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "633": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "634": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "635": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "636": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "637": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "638": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3529,
        3541
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x5"
    },
    "640": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3529,
        3541
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "641": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3514,
        3526
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "643": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3514,
        3526
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "644": {
      "branch": 38,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3514,
        3541
      ],
      "op": "LT",
      "path": "13"
    },
    "645": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BF"
    },
    "648": {
      "branch": 38,
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "649": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "651": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "660": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "661": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "663": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "ADD",
      "path": "13"
    },
    "664": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP1",
      "path": "13"
    },
    "665": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP1",
      "path": "13"
    },
    "666": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "668": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "ADD",
      "path": "13"
    },
    "669": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP3",
      "path": "13"
    },
    "670": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "671": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "SUB",
      "path": "13"
    },
    "672": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP3",
      "path": "13"
    },
    "673": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "674": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "676": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "677": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "678": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "680": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "ADD",
      "path": "13"
    },
    "681": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP1",
      "path": "13"
    },
    "682": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBCC"
    },
    "685": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "687": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "688": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "689": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "691": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "ADD",
      "path": "13"
    },
    "692": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "693": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "POP",
      "path": "13"
    },
    "694": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "POP",
      "path": "13"
    },
    "695": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "697": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "698": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "DUP1",
      "path": "13"
    },
    "699": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "700": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "SUB",
      "path": "13"
    },
    "701": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "702": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "REVERT",
      "path": "13"
    },
    "703": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3506,
        3610
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "704": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3647
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x5"
    },
    "706": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3647
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "707": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3661
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D4"
    },
    "710": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3661
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "711": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3652,
        3660
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD2F0"
    },
    "714": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3661
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "719": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3651
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x785"
    },
    "722": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3661
      ],
      "op": "AND",
      "path": "13"
    },
    "723": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3635,
        3661
      ],
      "op": "JUMP",
      "path": "13"
    },
    "724": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3635,
        3661
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "725": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3620,
        3632
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "727": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3620,
        3661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "728": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3620,
        3661
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "729": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3620,
        3661
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "730": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3687,
        3712
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 6,
      "value": "0x2EB"
    },
    "733": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3687,
        3712
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "734": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3704,
        3711
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7E90"
    },
    "737": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3687,
        3712
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "742": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x785"
    },
    "745": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3687,
        3712
      ],
      "op": "AND",
      "path": "13"
    },
    "746": {
      "fn": "token_exchange.setOpenTime",
      "jump": "i",
      "offset": [
        3687,
        3712
      ],
      "op": "JUMP",
      "path": "13"
    },
    "747": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3687,
        3712
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "748": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3672,
        3684
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "750": {
      "fn": "token_exchange.setOpenTime",
      "offset": [
        3672,
        3712
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "751": {
      "fn": "token_exchange.setOpenTime",
      "jump": "o",
      "offset": [
        3454,
        3720
      ],
      "op": "JUMP",
      "path": "13"
    },
    "752": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "753": {
      "offset": [
        491,
        512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2FB"
    },
    "756": {
      "offset": [
        499,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x23D"
    },
    "759": {
      "offset": [
        499,
        509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x739"
    },
    "762": {
      "jump": "i",
      "offset": [
        499,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "763": {
      "offset": [
        491,
        512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "764": {
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x336"
    },
    "767": {
      "offset": [
        483,
        563
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "768": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "770": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "779": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "780": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "782": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "783": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "784": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "785": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "787": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "788": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "789": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "790": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "791": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP3",
      "path": "9"
    },
    "792": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "793": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "795": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP2",
      "path": "9"
    },
    "796": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "797": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "799": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "800": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "801": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC77"
    },
    "804": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2E"
    },
    "806": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "807": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "808": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "810": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "ADD",
      "path": "9"
    },
    "811": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "812": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "813": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "POP",
      "path": "9"
    },
    "814": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "816": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "817": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "DUP1",
      "path": "9"
    },
    "818": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "819": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SUB",
      "path": "9"
    },
    "820": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "821": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "REVERT",
      "path": "9"
    },
    "822": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        483,
        563
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "823": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 7,
      "value": "0x33F"
    },
    "826": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        770,
        777
      ],
      "op": "DUP2",
      "path": "9"
    },
    "827": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7E6"
    },
    "830": {
      "fn": "AdminRole.addAdmin",
      "jump": "i",
      "offset": [
        760,
        778
      ],
      "op": "JUMP",
      "path": "9"
    },
    "831": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        760,
        778
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "832": {
      "fn": "AdminRole.addAdmin",
      "offset": [
        698,
        785
      ],
      "op": "POP",
      "path": "9"
    },
    "833": {
      "fn": "AdminRole.addAdmin",
      "jump": "o",
      "offset": [
        698,
        785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "834": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        709,
        799
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "835": {
      "offset": [
        497,
        519
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x352"
    },
    "838": {
      "offset": [
        506,
        518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34D"
    },
    "841": {
      "offset": [
        506,
        516
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x739"
    },
    "844": {
      "jump": "i",
      "offset": [
        506,
        518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "845": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        506,
        518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "846": {
      "offset": [
        497,
        505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DA"
    },
    "849": {
      "jump": "i",
      "offset": [
        497,
        519
      ],
      "op": "JUMP",
      "path": "10"
    },
    "850": {
      "branch": 42,
      "fn": "BrokerRole.addBroker",
      "offset": [
        497,
        519
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "851": {
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38D"
    },
    "854": {
      "branch": 42,
      "offset": [
        489,
        572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "855": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "857": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "858": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "866": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "867": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "869": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "870": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "871": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "872": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "874": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "875": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "876": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "877": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "878": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP3",
      "path": "10"
    },
    "879": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "880": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "882": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "883": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "884": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "886": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "887": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "888": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB7B"
    },
    "891": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "893": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "894": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "895": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "897": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "ADD",
      "path": "10"
    },
    "898": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "899": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "900": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "POP",
      "path": "10"
    },
    "901": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "903": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "904": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "DUP1",
      "path": "10"
    },
    "905": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "906": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SUB",
      "path": "10"
    },
    "907": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "908": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "REVERT",
      "path": "10"
    },
    "909": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        489,
        572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "910": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        792
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 8,
      "value": "0x33F"
    },
    "913": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        784,
        791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "914": {
      "fn": "BrokerRole.addBroker",
      "offset": [
        773,
        783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x82E"
    },
    "917": {
      "fn": "BrokerRole.addBroker",
      "jump": "i",
      "offset": [
        773,
        792
      ],
      "op": "JUMP",
      "path": "10"
    },
    "918": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        791,
        866
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "919": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        859
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 9,
      "value": "0x215"
    },
    "922": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3A1"
    },
    "925": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x739"
    },
    "928": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        846,
        858
      ],
      "op": "JUMP",
      "path": "9"
    },
    "929": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        846,
        858
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "930": {
      "fn": "AdminRole.renounceAdmin",
      "offset": [
        833,
        845
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x876"
    },
    "933": {
      "fn": "AdminRole.renounceAdmin",
      "jump": "i",
      "offset": [
        833,
        859
      ],
      "op": "JUMP",
      "path": "9"
    },
    "934": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "935": {
      "fn": "token_exchange.buy",
      "offset": [
        1493,
        1497
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "937": {
      "offset": [
        800,
        808
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3B0"
    },
    "940": {
      "offset": [
        800,
        806
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x217"
    },
    "943": {
      "jump": "i",
      "offset": [
        800,
        808
      ],
      "op": "JUMP",
      "path": "13"
    },
    "944": {
      "fn": "token_exchange.buy",
      "offset": [
        800,
        808
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "945": {
      "offset": [
        792,
        829
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3F4"
    },
    "948": {
      "offset": [
        792,
        829
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "949": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "951": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "DUP1",
      "path": "13"
    },
    "952": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "offset": [
        792,
        829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "961": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "962": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "964": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "966": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "967": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "968": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "969": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "971": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "973": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "974": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "975": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "976": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "998": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "999": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1000": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1001": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1002": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1003": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1004": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1005": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1006": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "SUB",
      "path": "13"
    },
    "1007": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "1009": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1010": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1011": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1012": {
      "fn": "token_exchange.buy",
      "offset": [
        792,
        829
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1013": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1686
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x2"
    },
    "1015": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1686
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1022": {
      "op": "SHL"
    },
    "1023": {
      "op": "SUB"
    },
    "1024": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1686
      ],
      "op": "AND",
      "path": "13"
    },
    "1025": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1695
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAA271E1A"
    },
    "1030": {
      "fn": "token_exchange.buy",
      "offset": [
        1696,
        1708
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x40D"
    },
    "1033": {
      "fn": "token_exchange.buy",
      "offset": [
        1696,
        1706
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x739"
    },
    "1036": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1696,
        1708
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1037": {
      "fn": "token_exchange.buy",
      "offset": [
        1696,
        1708
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1038": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1040": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1041": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1042": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1047": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "AND",
      "path": "13"
    },
    "1048": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "1050": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "SHL",
      "path": "13"
    },
    "1051": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1052": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1053": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1055": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "ADD",
      "path": "13"
    },
    "1056": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1057": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1064": {
      "op": "SHL"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "AND",
      "path": "13"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "op": "SUB"
    },
    "1075": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "AND",
      "path": "13"
    },
    "1076": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1077": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1078": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1080": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "ADD",
      "path": "13"
    },
    "1081": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1082": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1083": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1084": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1086": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1088": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1089": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1090": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1091": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "SUB",
      "path": "13"
    },
    "1092": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1093": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1094": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1095": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1096": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "op": "ISZERO"
    },
    "1099": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1102": {
      "op": "JUMPI"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "op": "DUP1"
    },
    "1106": {
      "op": "REVERT"
    },
    "1107": {
      "op": "JUMPDEST"
    },
    "1108": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1109": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "GAS",
      "path": "13"
    },
    "1110": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1111": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1112": {
      "op": "DUP1"
    },
    "1113": {
      "op": "ISZERO"
    },
    "1114": {
      "op": "PUSH2",
      "value": "0x467"
    },
    "1117": {
      "op": "JUMPI"
    },
    "1118": {
      "op": "RETURNDATASIZE"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "DUP1"
    },
    "1122": {
      "op": "RETURNDATACOPY"
    },
    "1123": {
      "op": "RETURNDATASIZE"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1126": {
      "op": "REVERT"
    },
    "1127": {
      "op": "JUMPDEST"
    },
    "1128": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1129": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1130": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1131": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "POP",
      "path": "13"
    },
    "1132": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1134": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1135": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "LT"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "REVERT"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "token_exchange.buy",
      "offset": [
        1681,
        1709
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1152": {
      "branch": 39,
      "fn": "token_exchange.buy",
      "offset": [
        1679,
        1710
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1153": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4BB"
    },
    "1156": {
      "branch": 39,
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1157": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1159": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1168": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1169": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1171": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "ADD",
      "path": "13"
    },
    "1172": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1173": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1174": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1176": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "ADD",
      "path": "13"
    },
    "1177": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1178": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1179": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "SUB",
      "path": "13"
    },
    "1180": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1181": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1182": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x28"
    },
    "1184": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1185": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1186": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1188": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "ADD",
      "path": "13"
    },
    "1189": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1190": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC0C"
    },
    "1193": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x28"
    },
    "1195": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1196": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1197": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1199": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "ADD",
      "path": "13"
    },
    "1200": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1201": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "POP",
      "path": "13"
    },
    "1202": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "POP",
      "path": "13"
    },
    "1203": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1205": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1206": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1207": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1208": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "SUB",
      "path": "13"
    },
    "1209": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1210": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1211": {
      "fn": "token_exchange.buy",
      "offset": [
        1671,
        1755
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1212": {
      "fn": "token_exchange.buy",
      "offset": [
        1766,
        1832
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 11,
      "value": "0x550"
    },
    "1215": {
      "fn": "token_exchange.buy",
      "offset": [
        1771,
        1783
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C6"
    },
    "1218": {
      "fn": "token_exchange.buy",
      "offset": [
        1771,
        1781
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x739"
    },
    "1221": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1771,
        1783
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1222": {
      "fn": "token_exchange.buy",
      "offset": [
        1771,
        1783
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1223": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1225": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1818
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1226": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1228": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1229": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1230": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1239": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1240": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1241": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1242": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1831
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x54B"
    },
    "1245": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1831
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "op": "SUB"
    },
    "1254": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1818
      ],
      "op": "AND",
      "path": "13"
    },
    "1255": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1818
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1256": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1827
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x313CE567"
    },
    "1261": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1827
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1262": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1264": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1265": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1266": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1267": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1268": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1270": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1271": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1272": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1273": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1274": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1275": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "SUB",
      "path": "13"
    },
    "1276": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1277": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1278": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1818
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1279": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1280": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1281": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1282": {
      "op": "DUP1"
    },
    "1283": {
      "op": "ISZERO"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x50C"
    },
    "1287": {
      "op": "JUMPI"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1290": {
      "op": "DUP1"
    },
    "1291": {
      "op": "REVERT"
    },
    "1292": {
      "op": "JUMPDEST"
    },
    "1293": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "POP",
      "path": "13"
    },
    "1294": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "GAS",
      "path": "13"
    },
    "1295": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1296": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1297": {
      "op": "DUP1"
    },
    "1298": {
      "op": "ISZERO"
    },
    "1299": {
      "op": "PUSH2",
      "value": "0x520"
    },
    "1302": {
      "op": "JUMPI"
    },
    "1303": {
      "op": "RETURNDATASIZE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1306": {
      "op": "DUP1"
    },
    "1307": {
      "op": "RETURNDATACOPY"
    },
    "1308": {
      "op": "RETURNDATASIZE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1311": {
      "op": "REVERT"
    },
    "1312": {
      "op": "JUMPDEST"
    },
    "1313": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "POP",
      "path": "13"
    },
    "1314": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "POP",
      "path": "13"
    },
    "1315": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "POP",
      "path": "13"
    },
    "1316": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "POP",
      "path": "13"
    },
    "1317": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1319": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1320": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1323": {
      "op": "DUP2"
    },
    "1324": {
      "op": "LT"
    },
    "1325": {
      "op": "ISZERO"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x536"
    },
    "1329": {
      "op": "JUMPI"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1332": {
      "op": "DUP1"
    },
    "1333": {
      "op": "REVERT"
    },
    "1334": {
      "op": "JUMPDEST"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "token_exchange.buy",
      "offset": [
        1813,
        1829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1337": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1796
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1338": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1796
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1339": {
      "fn": "token_exchange.buy",
      "offset": [
        1805,
        1830
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1341": {
      "fn": "token_exchange.buy",
      "offset": [
        1805,
        1830
      ],
      "op": "AND",
      "path": "13"
    },
    "1342": {
      "fn": "token_exchange.buy",
      "offset": [
        1801,
        1803
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1344": {
      "fn": "token_exchange.buy",
      "offset": [
        1801,
        1830
      ],
      "op": "EXP",
      "path": "13"
    },
    "1345": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1831
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1350": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1800
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8BE"
    },
    "1353": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1831
      ],
      "op": "AND",
      "path": "13"
    },
    "1354": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1785,
        1831
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1355": {
      "fn": "token_exchange.buy",
      "offset": [
        1785,
        1831
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1356": {
      "fn": "token_exchange.buy",
      "offset": [
        1766,
        1770
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x917"
    },
    "1359": {
      "fn": "token_exchange.buy",
      "jump": "i",
      "offset": [
        1766,
        1832
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1360": {
      "fn": "token_exchange.buy",
      "offset": [
        1766,
        1832
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "fn": "token_exchange.buy",
      "offset": [
        1850,
        1854
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 12,
      "value": "0x1"
    },
    "1364": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1365": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1366": {
      "fn": "token_exchange.buy",
      "offset": [
        1427,
        1861
      ],
      "op": "POP",
      "path": "13"
    },
    "1367": {
      "fn": "token_exchange.buy",
      "jump": "o",
      "offset": [
        1427,
        1861
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1368": {
      "fn": "token_exchange.sell",
      "offset": [
        1867,
        2303
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1369": {
      "fn": "token_exchange.sell",
      "offset": [
        1934,
        1938
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1371": {
      "offset": [
        800,
        808
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x562"
    },
    "1374": {
      "offset": [
        800,
        806
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x217"
    },
    "1377": {
      "jump": "i",
      "offset": [
        800,
        808
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1378": {
      "branch": 40,
      "fn": "token_exchange.sell",
      "offset": [
        800,
        808
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1379": {
      "offset": [
        792,
        829
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5A6"
    },
    "1382": {
      "branch": 40,
      "offset": [
        792,
        829
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1383": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1385": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1386": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "offset": [
        792,
        829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1395": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1396": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1398": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1400": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1401": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1402": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1403": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "1405": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1407": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1408": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1409": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1410": {
      "op": "PUSH16",
      "value": "0x13585C9AD95D081A5CC818DB1BDCD959"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "1429": {
      "op": "SHL"
    },
    "1430": {
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1432": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1433": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1434": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1435": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1436": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1437": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1438": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1439": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1440": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "SUB",
      "path": "13"
    },
    "1441": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "1443": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "ADD",
      "path": "13"
    },
    "1444": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1445": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1446": {
      "fn": "token_exchange.sell",
      "offset": [
        792,
        829
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1447": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2127
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 13,
      "value": "0x2"
    },
    "1449": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2127
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2127
      ],
      "op": "AND",
      "path": "13"
    },
    "1459": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2136
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAA271E1A"
    },
    "1464": {
      "fn": "token_exchange.sell",
      "offset": [
        2137,
        2149
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5BF"
    },
    "1467": {
      "fn": "token_exchange.sell",
      "offset": [
        2137,
        2147
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x739"
    },
    "1470": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2137,
        2149
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1471": {
      "fn": "token_exchange.sell",
      "offset": [
        2137,
        2149
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1472": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1474": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1475": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1476": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1481": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "AND",
      "path": "13"
    },
    "1482": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "1484": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "SHL",
      "path": "13"
    },
    "1485": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1486": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1487": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1489": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "ADD",
      "path": "13"
    },
    "1490": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1491": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "AND",
      "path": "13"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "AND",
      "path": "13"
    },
    "1510": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1511": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1512": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1514": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "ADD",
      "path": "13"
    },
    "1515": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1516": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1517": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1518": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1520": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1522": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1523": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1524": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1525": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "SUB",
      "path": "13"
    },
    "1526": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1527": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1528": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1529": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1530": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1531": {
      "op": "DUP1"
    },
    "1532": {
      "op": "ISZERO"
    },
    "1533": {
      "op": "PUSH2",
      "value": "0x605"
    },
    "1536": {
      "op": "JUMPI"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1539": {
      "op": "DUP1"
    },
    "1540": {
      "op": "REVERT"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1543": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "GAS",
      "path": "13"
    },
    "1544": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1545": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1546": {
      "op": "DUP1"
    },
    "1547": {
      "op": "ISZERO"
    },
    "1548": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "1551": {
      "op": "JUMPI"
    },
    "1552": {
      "op": "RETURNDATASIZE"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "DUP1"
    },
    "1556": {
      "op": "RETURNDATACOPY"
    },
    "1557": {
      "op": "RETURNDATASIZE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1560": {
      "op": "REVERT"
    },
    "1561": {
      "op": "JUMPDEST"
    },
    "1562": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1563": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1564": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1565": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "POP",
      "path": "13"
    },
    "1566": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1568": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1569": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1572": {
      "op": "DUP2"
    },
    "1573": {
      "op": "LT"
    },
    "1574": {
      "op": "ISZERO"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x62F"
    },
    "1578": {
      "op": "JUMPI"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1581": {
      "op": "DUP1"
    },
    "1582": {
      "op": "REVERT"
    },
    "1583": {
      "op": "JUMPDEST"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "fn": "token_exchange.sell",
      "offset": [
        2122,
        2150
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1586": {
      "branch": 41,
      "fn": "token_exchange.sell",
      "offset": [
        2120,
        2151
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1587": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x66D"
    },
    "1590": {
      "branch": 41,
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1591": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1593": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1602": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1603": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1605": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1606": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1607": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1608": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1610": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1611": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1612": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1613": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "SUB",
      "path": "13"
    },
    "1614": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1615": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1616": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x28"
    },
    "1618": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1619": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1620": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1622": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1623": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1624": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC0C"
    },
    "1627": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x28"
    },
    "1629": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1630": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1631": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1633": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "ADD",
      "path": "13"
    },
    "1634": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1635": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "POP",
      "path": "13"
    },
    "1636": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "POP",
      "path": "13"
    },
    "1637": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1639": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1640": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1641": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1642": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "SUB",
      "path": "13"
    },
    "1643": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1644": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1645": {
      "fn": "token_exchange.sell",
      "offset": [
        2112,
        2196
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1646": {
      "fn": "token_exchange.sell",
      "offset": [
        2207,
        2274
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 14,
      "value": "0x550"
    },
    "1649": {
      "fn": "token_exchange.sell",
      "offset": [
        2213,
        2225
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x678"
    },
    "1652": {
      "fn": "token_exchange.sell",
      "offset": [
        2213,
        2223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x739"
    },
    "1655": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2213,
        2225
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1656": {
      "fn": "token_exchange.sell",
      "offset": [
        2213,
        2225
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1657": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2260
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1659": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2260
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1660": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1662": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1663": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1664": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1673": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1674": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1675": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1676": {
      "fn": "token_exchange.sell",
      "offset": [
        2227,
        2273
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6BE"
    },
    "1679": {
      "fn": "token_exchange.sell",
      "offset": [
        2227,
        2273
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "SUB"
    },
    "1688": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2260
      ],
      "op": "AND",
      "path": "13"
    },
    "1689": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2260
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1690": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2269
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x313CE567"
    },
    "1695": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2269
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1696": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1698": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1699": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1700": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "ADD",
      "path": "13"
    },
    "1701": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1702": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1704": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1705": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1706": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1707": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1708": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1709": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "SUB",
      "path": "13"
    },
    "1710": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "ADD",
      "path": "13"
    },
    "1711": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1712": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2260
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1713": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1714": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1715": {
      "fn": "token_exchange.sell",
      "offset": [
        2255,
        2271
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1716": {
      "op": "DUP1"
    },
    "1717": {
      "op": "ISZERO"
    },
    "1718": {
      "op": "PUSH2",
      "value": "0x50C"
    },
    "1721": {
      "op": "JUMPI"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1724": {
      "op": "DUP1"
    },
    "1725": {
      "fn": "token_exchange.sell",
      "offset": [
        2227,
        2273
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1726": {
      "fn": "token_exchange.sell",
      "offset": [
        2227,
        2273
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1727": {
      "fn": "token_exchange.sell",
      "offset": [
        2207,
        2212
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D6"
    },
    "1730": {
      "fn": "token_exchange.sell",
      "jump": "i",
      "offset": [
        2207,
        2274
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1731": {
      "offset": [
        262,
        283
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1732": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1734": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "offset": [
        262,
        283
      ],
      "op": "AND",
      "path": "13"
    },
    "1744": {
      "fn": "token_exchange.sell",
      "offset": [
        262,
        283
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1745": {
      "fn": "token_exchange.sell",
      "jump": "o",
      "offset": [
        262,
        283
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1746": {
      "fn": "Roles.has",
      "offset": [
        779,
        979
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1747": {
      "fn": "Roles.has",
      "offset": [
        851,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "1758": {
      "branch": 43,
      "fn": "Roles.has",
      "offset": [
        875,
        896
      ],
      "op": "AND",
      "path": "1"
    },
    "1759": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x719"
    },
    "1762": {
      "branch": 43,
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1763": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1765": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1774": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1775": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1777": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "1778": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1779": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1780": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1782": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "1783": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1784": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1785": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "1786": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1787": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1788": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "1790": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1791": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1792": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1794": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "1795": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1796": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC55"
    },
    "1799": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x22"
    },
    "1801": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1802": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "1803": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1805": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "ADD",
      "path": "1"
    },
    "1806": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1807": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "1808": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "1809": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1811": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1812": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1813": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1814": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SUB",
      "path": "1"
    },
    "1815": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1816": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1817": {
      "fn": "Roles.has",
      "offset": [
        867,
        935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "SUB"
    },
    "1827": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1",
      "statement": 16
    },
    "1828": {
      "fn": "Roles.has",
      "offset": [
        952,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1830": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1831": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1832": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1833": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1835": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1836": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1837": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1838": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1839": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1841": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1842": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1843": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1844": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1846": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "AND",
      "path": "1"
    },
    "1847": {
      "fn": "Roles.has",
      "offset": [
        952,
        972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1848": {
      "fn": "Roles.has",
      "jump": "o",
      "offset": [
        779,
        979
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1850": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 17
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1852": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1853": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1854": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x74E"
    },
    "1857": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1859": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1088,
        1095
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1860": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1865": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1087
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA92"
    },
    "1868": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "AND",
      "path": "10"
    },
    "1869": {
      "fn": "BrokerRole._removeBroker",
      "jump": "i",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1870": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1072,
        1096
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1871": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x40"
    },
    "1873": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1880": {
      "op": "SHL"
    },
    "1881": {
      "op": "SUB"
    },
    "1882": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1883": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "AND",
      "path": "10"
    },
    "1884": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1885": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE5C6F32FB04B7DE81910252A1E1D29267CD9E5FC428AFAD67442D00C7B127BD0"
    },
    "1918": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1919": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1921": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1922": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1111,
        1133
      ],
      "op": "LOG2",
      "path": "10"
    },
    "1923": {
      "fn": "BrokerRole._removeBroker",
      "offset": [
        1013,
        1140
      ],
      "op": "POP",
      "path": "10"
    },
    "1924": {
      "fn": "BrokerRole._removeBroker",
      "jump": "o",
      "offset": [
        1013,
        1140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1925": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1926": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1928": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1929": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1930": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "3"
    },
    "1931": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 20
    },
    "1932": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1933": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "3"
    },
    "1934": {
      "branch": 46,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1935": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DF"
    },
    "1938": {
      "branch": 46,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1939": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1941": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1942": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1951": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1952": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1954": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1956": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1957": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "1958": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1959": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "1961": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1963": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1964": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "1965": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1966": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1999": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2001": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2002": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2003": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2004": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2005": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2006": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2007": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2008": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2009": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "3"
    },
    "2010": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2012": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "3"
    },
    "2013": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2014": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2015": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2016": {
      "fn": "SafeMath.add",
      "offset": [
        1002,
        1003
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 21
    },
    "2017": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2018": {
      "op": "POP"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "op": "POP"
    },
    "2021": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        834,
        1010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2022": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2023": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 22,
      "value": "0x7F7"
    },
    "2026": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2028": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        939,
        946
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2029": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2034": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        938
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAF9"
    },
    "2037": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "AND",
      "path": "9"
    },
    "2038": {
      "fn": "AdminRole._addAdmin",
      "jump": "i",
      "offset": [
        927,
        947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2039": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        927,
        947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2040": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 23,
      "value": "0x40"
    },
    "2042": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2052": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "AND",
      "path": "9"
    },
    "2053": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2054": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339"
    },
    "2087": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2088": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2090": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2091": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        962,
        981
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2092": {
      "fn": "AdminRole._addAdmin",
      "offset": [
        872,
        988
      ],
      "op": "POP",
      "path": "9"
    },
    "2093": {
      "fn": "AdminRole._addAdmin",
      "jump": "o",
      "offset": [
        872,
        988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2094": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2095": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 24,
      "value": "0x83F"
    },
    "2098": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2100": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        957,
        964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2101": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2106": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF9"
    },
    "2109": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "AND",
      "path": "10"
    },
    "2110": {
      "fn": "BrokerRole._addBroker",
      "jump": "i",
      "offset": [
        944,
        965
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2111": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        944,
        965
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2112": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 25,
      "value": "0x40"
    },
    "2114": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "SUB"
    },
    "2123": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2124": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "AND",
      "path": "10"
    },
    "2125": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2126": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x40C56D2C4C08EEAD919E7228CF5B749297271698EC38E954D322EF4BCF1D58FB"
    },
    "2159": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2160": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2162": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2163": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        980,
        1000
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2164": {
      "fn": "BrokerRole._addBroker",
      "offset": [
        888,
        1007
      ],
      "op": "POP",
      "path": "10"
    },
    "2165": {
      "fn": "BrokerRole._addBroker",
      "jump": "o",
      "offset": [
        888,
        1007
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2166": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2167": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 26,
      "value": "0x887"
    },
    "2170": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1059
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2172": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1067,
        1074
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2173": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2178": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1066
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA92"
    },
    "2181": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "AND",
      "path": "9"
    },
    "2182": {
      "fn": "AdminRole._removeAdmin",
      "jump": "i",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2183": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1052,
        1075
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2184": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 27,
      "value": "0x40"
    },
    "2186": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "op": "SUB"
    },
    "2195": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2196": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "AND",
      "path": "9"
    },
    "2197": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2198": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F"
    },
    "2231": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2232": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2234": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2235": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        1090,
        1111
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2236": {
      "fn": "AdminRole._removeAdmin",
      "offset": [
        994,
        1118
      ],
      "op": "POP",
      "path": "9"
    },
    "2237": {
      "fn": "AdminRole._removeAdmin",
      "jump": "o",
      "offset": [
        994,
        1118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2238": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2239": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2241": {
      "branch": 47,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2242": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8CD"
    },
    "2245": {
      "branch": 47,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x0"
    },
    "2249": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC"
    },
    "2252": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2253": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2254": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2255": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2256": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "3"
    },
    "2257": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2258": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2259": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2260": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2261": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 29,
      "value": "0x8DA"
    },
    "2264": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2265": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2266": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2267": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "3"
    },
    "2268": {
      "branch": 48,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "3"
    },
    "2269": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DF"
    },
    "2272": {
      "branch": 48,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2273": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2275": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2284": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2285": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2287": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2288": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2289": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2290": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2292": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2293": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2294": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2295": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "2296": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2297": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2298": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2300": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2301": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2302": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2304": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2305": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2306": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC34"
    },
    "2309": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "2311": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2312": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2313": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2315": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "3"
    },
    "2316": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2317": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "2318": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "3"
    },
    "2319": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2321": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2322": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2323": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2324": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "3"
    },
    "2325": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2326": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2327": {
      "fn": "token_exchange._buy",
      "offset": [
        2309,
        2648
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2328": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 30,
      "value": "0x2"
    },
    "2330": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2331": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2333": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2334": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2335": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2344": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "op": "SUB"
    },
    "2353": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2354": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2355": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "AND",
      "path": "13"
    },
    "2356": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2358": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2359": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "ADD",
      "path": "13"
    },
    "2360": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2361": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2363": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2364": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "ADD",
      "path": "13"
    },
    "2365": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2366": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2367": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2368": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2369": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2370": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2371": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2372": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2373": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "AND",
      "path": "13"
    },
    "2374": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2375": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2574
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "2380": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2574
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2381": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2383": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2384": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2385": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "ADD",
      "path": "13"
    },
    "2386": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2387": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2389": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2390": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2391": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2392": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2393": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2394": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "SUB",
      "path": "13"
    },
    "2395": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "ADD",
      "path": "13"
    },
    "2396": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2397": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2399": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2569
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2400": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2401": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2402": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2403": {
      "op": "DUP1"
    },
    "2404": {
      "op": "ISZERO"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2408": {
      "op": "JUMPI"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2411": {
      "op": "DUP1"
    },
    "2412": {
      "op": "REVERT"
    },
    "2413": {
      "op": "JUMPDEST"
    },
    "2414": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "POP",
      "path": "13"
    },
    "2415": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "GAS",
      "path": "13"
    },
    "2416": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "CALL",
      "path": "13"
    },
    "2417": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2418": {
      "op": "DUP1"
    },
    "2419": {
      "op": "ISZERO"
    },
    "2420": {
      "op": "PUSH2",
      "value": "0x981"
    },
    "2423": {
      "op": "JUMPI"
    },
    "2424": {
      "op": "RETURNDATASIZE"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "DUP1"
    },
    "2428": {
      "op": "RETURNDATACOPY"
    },
    "2429": {
      "op": "RETURNDATASIZE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2432": {
      "op": "REVERT"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "POP",
      "path": "13"
    },
    "2435": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "POP",
      "path": "13"
    },
    "2436": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "POP",
      "path": "13"
    },
    "2437": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "POP",
      "path": "13"
    },
    "2438": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2440": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2441": {
      "fn": "token_exchange._buy",
      "offset": [
        2564,
        2593
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2444": {
      "op": "DUP2"
    },
    "2445": {
      "op": "LT"
    },
    "2446": {
      "op": "ISZERO"
    },
    "2447": {
      "op": "PUSH2",
      "value": "0x997"
    },
    "2450": {
      "op": "JUMPI"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2453": {
      "op": "DUP1"
    },
    "2454": {
      "op": "REVERT"
    },
    "2455": {
      "op": "JUMPDEST"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "fn": "token_exchange._buy",
      "offset": [
        2632,
        2640
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 31,
      "value": "0x3"
    },
    "2460": {
      "fn": "token_exchange._buy",
      "offset": [
        2632,
        2640
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2461": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2463": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2464": {
      "fn": "token_exchange._buy",
      "offset": [
        2624,
        2630
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2465": {
      "fn": "token_exchange._buy",
      "offset": [
        2624,
        2630
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "op": "SUB"
    },
    "2474": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2475": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "AND",
      "path": "13"
    },
    "2476": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2477": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
    },
    "2510": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2511": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2513": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2514": {
      "fn": "token_exchange._buy",
      "offset": [
        2609,
        2641
      ],
      "op": "LOG4",
      "path": "13"
    },
    "2515": {
      "fn": "token_exchange._buy",
      "offset": [
        2309,
        2648
      ],
      "op": "POP",
      "path": "13"
    },
    "2516": {
      "fn": "token_exchange._buy",
      "offset": [
        2309,
        2648
      ],
      "op": "POP",
      "path": "13"
    },
    "2517": {
      "fn": "token_exchange._buy",
      "jump": "o",
      "offset": [
        2309,
        2648
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2518": {
      "fn": "token_exchange._sell",
      "offset": [
        2654,
        3014
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2519": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 32,
      "value": "0x2"
    },
    "2521": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2522": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2524": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2525": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2526": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2535": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "SUB"
    },
    "2544": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2545": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2546": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "AND",
      "path": "13"
    },
    "2547": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2549": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2550": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ADD",
      "path": "13"
    },
    "2551": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2552": {
      "fn": "token_exchange._sell",
      "offset": [
        2940,
        2944
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2553": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2555": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2556": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ADD",
      "path": "13"
    },
    "2557": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2558": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "2560": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2561": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ADD",
      "path": "13"
    },
    "2562": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2563": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2564": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2565": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2566": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2567": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2568": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2569": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2570": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "AND",
      "path": "13"
    },
    "2571": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2572": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2923
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "2577": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2923
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2578": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2580": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2581": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2582": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ADD",
      "path": "13"
    },
    "2583": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2584": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2586": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2587": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2588": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2589": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2590": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2591": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "SUB",
      "path": "13"
    },
    "2592": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ADD",
      "path": "13"
    },
    "2593": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2594": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2596": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2910
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2597": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2598": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2599": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2600": {
      "op": "DUP1"
    },
    "2601": {
      "op": "ISZERO"
    },
    "2602": {
      "op": "PUSH2",
      "value": "0xA32"
    },
    "2605": {
      "op": "JUMPI"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2608": {
      "op": "DUP1"
    },
    "2609": {
      "op": "REVERT"
    },
    "2610": {
      "op": "JUMPDEST"
    },
    "2611": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "POP",
      "path": "13"
    },
    "2612": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "GAS",
      "path": "13"
    },
    "2613": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "CALL",
      "path": "13"
    },
    "2614": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2615": {
      "op": "DUP1"
    },
    "2616": {
      "op": "ISZERO"
    },
    "2617": {
      "op": "PUSH2",
      "value": "0xA46"
    },
    "2620": {
      "op": "JUMPI"
    },
    "2621": {
      "op": "RETURNDATASIZE"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2624": {
      "op": "DUP1"
    },
    "2625": {
      "op": "RETURNDATACOPY"
    },
    "2626": {
      "op": "RETURNDATASIZE"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2629": {
      "op": "REVERT"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "POP",
      "path": "13"
    },
    "2632": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "POP",
      "path": "13"
    },
    "2633": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "POP",
      "path": "13"
    },
    "2634": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "POP",
      "path": "13"
    },
    "2635": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2637": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2638": {
      "fn": "token_exchange._sell",
      "offset": [
        2905,
        2954
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "op": "DUP2"
    },
    "2642": {
      "op": "LT"
    },
    "2643": {
      "op": "ISZERO"
    },
    "2644": {
      "op": "PUSH2",
      "value": "0xA5C"
    },
    "2647": {
      "op": "JUMPI"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2650": {
      "op": "DUP1"
    },
    "2651": {
      "op": "REVERT"
    },
    "2652": {
      "op": "JUMPDEST"
    },
    "2653": {
      "op": "POP"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "fn": "token_exchange._sell",
      "offset": [
        2998,
        3006
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 33,
      "value": "0x3"
    },
    "2657": {
      "fn": "token_exchange._sell",
      "offset": [
        2998,
        3006
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2658": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2660": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2661": {
      "fn": "token_exchange._sell",
      "offset": [
        2990,
        2996
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2662": {
      "fn": "token_exchange._sell",
      "offset": [
        2990,
        2996
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2663": {
      "fn": "token_exchange._sell",
      "offset": [
        2983,
        2987
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "2664": {
      "fn": "token_exchange._sell",
      "offset": [
        2983,
        2987
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2665": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
    },
    "2698": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2699": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2701": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2702": {
      "fn": "token_exchange._sell",
      "offset": [
        2970,
        3007
      ],
      "op": "LOG4",
      "path": "13"
    },
    "2703": {
      "fn": "token_exchange._sell",
      "offset": [
        2654,
        3014
      ],
      "op": "POP",
      "path": "13"
    },
    "2704": {
      "fn": "token_exchange._sell",
      "offset": [
        2654,
        3014
      ],
      "op": "POP",
      "path": "13"
    },
    "2705": {
      "fn": "token_exchange._sell",
      "jump": "o",
      "offset": [
        2654,
        3014
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2706": {
      "fn": "Roles.remove",
      "offset": [
        510,
        690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2707": {
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 34,
      "value": "0xA9C"
    },
    "2710": {
      "fn": "Roles.remove",
      "offset": [
        593,
        597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2711": {
      "fn": "Roles.remove",
      "offset": [
        599,
        606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2712": {
      "fn": "Roles.remove",
      "offset": [
        589,
        592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D2"
    },
    "2715": {
      "fn": "Roles.remove",
      "jump": "i",
      "offset": [
        589,
        607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2716": {
      "branch": 44,
      "fn": "Roles.remove",
      "offset": [
        589,
        607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2717": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD7"
    },
    "2720": {
      "branch": 44,
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2721": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2723": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2732": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2733": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2735": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "2736": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2737": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2738": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2740": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "2741": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2742": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2743": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "2744": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2745": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2746": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "2748": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2749": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2750": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2752": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "2753": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2754": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAB"
    },
    "2757": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "2759": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2760": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2761": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2763": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "ADD",
      "path": "1"
    },
    "2764": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2765": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "2766": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "POP",
      "path": "1"
    },
    "2767": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2769": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2770": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2771": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2772": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SUB",
      "path": "1"
    },
    "2773": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2774": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2775": {
      "fn": "Roles.remove",
      "offset": [
        581,
        645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "SUB"
    },
    "2784": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "AND",
      "path": "1",
      "statement": 35
    },
    "2785": {
      "fn": "Roles.remove",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2787": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2788": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2789": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2790": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2792": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2793": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2794": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2795": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2796": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2798": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2799": {
      "fn": "Roles.remove",
      "offset": [
        655,
        675
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2800": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2801": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2804": {
      "op": "NOT"
    },
    "2805": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "AND",
      "path": "1"
    },
    "2806": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2807": {
      "fn": "Roles.remove",
      "offset": [
        655,
        683
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2808": {
      "fn": "Roles.remove",
      "jump": "o",
      "offset": [
        510,
        690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2809": {
      "fn": "Roles.add",
      "offset": [
        260,
        435
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2810": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 36,
      "value": "0xB03"
    },
    "2813": {
      "fn": "Roles.add",
      "offset": [
        341,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2814": {
      "fn": "Roles.add",
      "offset": [
        347,
        354
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2815": {
      "fn": "Roles.add",
      "offset": [
        337,
        340
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D2"
    },
    "2818": {
      "fn": "Roles.add",
      "jump": "i",
      "offset": [
        337,
        355
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2819": {
      "fn": "Roles.add",
      "offset": [
        337,
        355
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2820": {
      "branch": 45,
      "fn": "Roles.add",
      "offset": [
        336,
        355
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2821": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB55"
    },
    "2824": {
      "branch": 45,
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2825": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2827": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2828": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2837": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2838": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2840": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2842": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2843": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "2844": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2845": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2847": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2849": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2850": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "2851": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2852": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
    },
    "2885": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2887": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2888": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "2889": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2890": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2891": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2892": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2893": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2894": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2895": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SUB",
      "path": "1"
    },
    "2896": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2898": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "ADD",
      "path": "1"
    },
    "2899": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2900": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2901": {
      "fn": "Roles.add",
      "offset": [
        328,
        391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "op": "SUB"
    },
    "2910": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "AND",
      "path": "1",
      "statement": 37
    },
    "2911": {
      "fn": "Roles.add",
      "offset": [
        401,
        412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2913": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2914": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2915": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2916": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2918": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2919": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2920": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2921": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2922": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2924": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2925": {
      "fn": "Roles.add",
      "offset": [
        401,
        421
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2926": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2927": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2930": {
      "op": "NOT"
    },
    "2931": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "AND",
      "path": "1"
    },
    "2932": {
      "fn": "Roles.add",
      "offset": [
        424,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2934": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "OR",
      "path": "1"
    },
    "2935": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2936": {
      "fn": "Roles.add",
      "offset": [
        401,
        428
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2937": {
      "fn": "Roles.add",
      "jump": "o",
      "offset": [
        260,
        435
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "fcabfa55cdcc4385dbdc0469bc7e6bf0cb47e5c1",
  "source": "pragma solidity ^0.5.0;\n\n/*\nimport \"./PayCoin.sol\";\n*/\nimport \"../interfaces/IT_ERC20.sol\";\nimport \"./token_erc20.sol\";\nimport \"./BrokerRole.sol\";\nimport \"./AdminRole.sol\";\n\ncontract token_exchange is BrokerRole, AdminRole {\n    using SafeMath for uint256;\n\n    IT_ERC20 public token;\n    uint256 private tk_price;\n    uint256 private _openingtime;\n    uint256 private _closingtime;\n\n    address _frama = 0x96E7Cf89FF09659854277531FA315AFc27102E37 ;\n    address _libra = 0x2FbfB1e766E6F6244669E4794ff022a653F34eFf ;\n    address _pirot = 0x743491ab1511287491af8De4Ca25b2fbc707eB88 ;\n\n    event Buy(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n    event Sell(address indexed buyer, uint256 indexed amount, uint256 indexed price);\n\n    modifier onlyWhileOpen {\n        require(isOpen(), \"Market is closed\");\n        _;\n    }\n\n    constructor() public {\n\n        token = new token_erc20();\n        tk_price = 1 wei; //accounts for PayCoin's decimals\n        _openingtime = now ;\n        _closingtime = now + 5 minutes ;\n\n        if (!(isAdmin(_frama) && isBroker(_frama))){\n            addAdmin(_frama);\n            addBroker(_frama);\n        }\n        if (!(isAdmin(_libra) && isBroker(_libra))){\n            addAdmin(_libra);\n            addBroker(_libra);\n        }\n        if (!(isAdmin(_pirot) && isBroker(_pirot))){\n            addAdmin(_pirot);\n            addBroker(_pirot);\n        }\n\n    }\n\n    function buy(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _buy(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function sell(uint256 tokenAmount) external onlyWhileOpen returns (bool){\n        /*\n        require(msg.value > 0, \"You have to pay, my friend\");\n        require(msg.value == getFee(tokenAmount), \"That's not enough money!\");\n        */\n        require(!(token.isMinter(_msgSender())), \"You can't buy your own tokens, my friend\");\n\n        _sell(_msgSender(), tokenAmount.mul(10**uint256(token.decimals())));\n\n        return true;\n    }\n\n    function _buy(address recipient, uint256 amount) internal {\n        // TODO Implement allowances for transferFrom\n        /*\n        PayCoin pcn = PayCoin(_addressPC);\n        pcn.transferFrom(recipient, address(this), getFee(amount));\n        */\n        token.mint(recipient, amount);\n\n        emit Buy(recipient, amount, tk_price);\n    }\n\n    function _sell(address seller, uint256 amount) internal {\n        // TODO: Implement allowances for transferFrom\n        /*\n        PayCoin pcn = PayCoin(_addressPC);\n        pcn.transferFrom(address(this), seller, getFee(amount));\n        */\n        token.transferFrom(seller, address(this), amount);\n\n        emit Sell(address(this), amount, tk_price);\n    }\n\n    function getFee(uint256 amount) internal returns (uint256){\n        // TODO: Implement different fees for buying and selling\n        uint256 exp = uint256(token.decimals());\n        // amount * tk_price / 10^18 + 2*amount/1000\n        return amount.mul(tk_price).div(10**exp).add(amount.mul(2).div(1000));\n    }\n\n    function isOpen() public view returns (bool) {\n        return now >= _openingtime && now <= _closingtime;\n    }\n\n    function setOpenTime() external onlyAdmin {\n        require(_openingtime < _closingtime, \"Something's wrong, maybe you set the initial _openingtime wrong.\");\n        _openingtime = _closingtime.add(15 hours) ;\n        _closingtime = _openingtime.add(9 hours) ;\n    }\n\n\n\n\n}\n",
  "sourceMap": "174:3552:13:-;;;388:59;;;-1:-1:-1;;;;;;388:59:13;;;405:42;388:59;;;;454;;;;;471:42;454:59;;;520;;;;;;537:42;520:59;;;853:568;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;420:24:10;431:12;-1:-1:-1;;;;;431:10:10;:12;:::i;:::-;-1:-1:-1;;;;;420:10:10;:24;:::i;:::-;416:23:9;426:12;-1:-1:-1;;;;;426:10:9;:12;:::i;:::-;-1:-1:-1;;;;;416:9:9;:23;:::i;:::-;893:17:13;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;885:5:13;:25;;-1:-1:-1;;;;;;885:25:13;-1:-1:-1;;;;;885:25:13;;;;;;-1:-1:-1;920:8:13;:16;995:3;980:12;:18;;;1030:9;1024:15;1009:12;:30;1065:6;;1057:15;;1065:6;1057:7;:15::i;:::-;:35;;;;-1:-1:-1;1085:6:13;;1076:16;;-1:-1:-1;;;;;1085:6:13;-1:-1:-1;;;;;1076:8:13;:16;:::i;:::-;1051:115;;1117:6;;1108:16;;-1:-1:-1;;;;;1117:6:13;-1:-1:-1;;;;;1108:8:13;:16;:::i;:::-;1148:6;;1138:17;;-1:-1:-1;;;;;1148:6:13;-1:-1:-1;;;;;1138:9:13;:17;:::i;:::-;1189:6;;1181:15;;-1:-1:-1;;;;;1189:6:13;-1:-1:-1;;;;;1181:7:13;:15;:::i;:::-;:35;;;;-1:-1:-1;1209:6:13;;1200:16;;-1:-1:-1;;;;;1209:6:13;-1:-1:-1;;;;;1200:8:13;:16;:::i;:::-;1175:115;;1241:6;;1232:16;;-1:-1:-1;;;;;1241:6:13;-1:-1:-1;;;;;1232:8:13;:16;:::i;:::-;1272:6;;1262:17;;-1:-1:-1;;;;;1272:6:13;-1:-1:-1;;;;;1262:9:13;:17;:::i;:::-;1313:6;;1305:15;;-1:-1:-1;;;;;1313:6:13;-1:-1:-1;;;;;1305:7:13;:15;:::i;:::-;:35;;;;-1:-1:-1;1333:6:13;;1324:16;;-1:-1:-1;;;;;1333:6:13;-1:-1:-1;;;;;1324:8:13;:16;:::i;:::-;1299:115;;1365:6;;1356:16;;-1:-1:-1;;;;;1365:6:13;-1:-1:-1;;;;;1356:8:13;:16;:::i;:::-;1396:6;;1386:17;;-1:-1:-1;;;;;1396:6:13;-1:-1:-1;;;;;1386:9:13;:17;:::i;:::-;174:3552;;788:96:0;867:10;788:96;:::o;888:119:10:-;944:21;957:7;944:8;:12;;;;;;:21;;;;:::i;:::-;980:20;;-1:-1:-1;;;;;980:20:10;;;;;;;;888:119;:::o;872:116:9:-;927:20;939:7;927;:11;;;;;;:20;;;;:::i;:::-;962:19;;-1:-1:-1;;;;;962:19:9;;;;;;;;872:116;:::o;587:105::-;642:4;665:20;677:7;665;:11;;;;;;:20;;;;:::i;:::-;658:27;587:105;-1:-1:-1;;587:105:9:o;596:107:10:-;652:4;675:21;688:7;675:8;:12;;;;;;:21;;;;:::i;698:87:9:-;491:21;499:12;-1:-1:-1;;;;;499:10:9;:12;:::i;:::-;-1:-1:-1;;;;;491:7:9;:21;:::i;:::-;483:80;;;;-1:-1:-1;;;483:80:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:18;770:7;-1:-1:-1;;;;;760:9:9;:18;:::i;:::-;698:87;:::o;709:90:10:-;497:22;506:12;-1:-1:-1;;;;;506:10:10;:12;:::i;:::-;-1:-1:-1;;;;;497:8:10;:22;:::i;:::-;489:83;;;;-1:-1:-1;;;489:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:19;784:7;-1:-1:-1;;;;;773:10:10;:19;:::i;260:175:1:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:1;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;174:3552:13:-;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/token_exchange.sol",
  "type": "contract"
}